{"id": "207835", "paths": ["drivers/acpi/video_detect.c"], "predicts": ["drivers/cpufreq/acpi-cpufreq.c", "include/acpi/video.h", "include/linux/backlight.h"], "input_tokens_sum": 198802, "output_tokens_sum": 4417, "description": "On the Intel GM45/GMA 4500MHD laptop with Debian Sid/unstable and Linux 5.6.7 and GNOME Shell 3.36.2, trying to change the brightness of the internal display using the function keys, GNOME shows the OSD, which seems to have five levels (from acer_wmi?), but the actual brightness does *not* change. There is only `/sys/class/backlight/intel_backlight/brightness` though, and writing values to it seems to work.\n\nBooting the system with `acpi_backlight=vendor`, exposes `/sys/devices/platform/acer-wmi/backlight/acer-wmi/brightness`, but the behavior is the same.\n\nBooting the system with `acpi_backlight=native` or `acpi_backlight=native`, changing the brightness with the function keys works, and there now seem to be 15 (or 16) levels.\n\n```\n$ grep '.*' /sys/class/dmi/id/*_* 2> /dev/null\n/sys/class/dmi/id/bios_date:07/26/2011\n/sys/class/dmi/id/bios_vendor:Acer\n/sys/class/dmi/id/bios_version:V1.14\n/sys/class/dmi/id/board_asset_tag:Base Board Asset Tag\n/sys/class/dmi/id/board_name:BA51_MV\n/sys/cl", "title": "ACPI video backlight brightness control does not work on Acer TravelMate 5735Z by default", "Kernel Version": "5.6.7", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video driver is not properly interacting with the backlight subsystem, possibly due to inappropriate handling of backlight events, causing it to fail in updating the actual brightness.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Investigate and ensure that both the ACPI video driver and i915 driver are correctly registering with each other to manage brightness changes based on firmware support."}, {"cause": "The backlight device handlers might not be correctly updating or reflecting the changes when the brightness keys are pressed.", "code_file": "drivers/video/backlight/backlight.c", "fix_solution": "Enhance the event handlers to ensure synchronization of backlight brightness levels update and generation of appropriate uevents to notify the userspace."}, {"cause": "The backlight control might not be using the proper interface or method (native vs vendor) for setting brightness changes for this specific hardware.", "code_file": "drivers/video/backlight/backlight.c", "fix_solution": "Implement or adjust methods to fall back or adapt to vendor-specific methods if the generic ACPI methods fail to alter brightness levels."}, {"cause": "The ACPI subsystem's interaction with the DMIs might not provide accurate backlight management for this Acer model, defaulting to ineffective interfaces.", "code_file": "drivers/acpi/video.c", "fix_solution": "Review and revise any device-specific quirks or methods in the ACPI video component that support backlight adjustment to ensure compatibility."}], "reranked_files": ["drivers/acpi/video_detect.c", "drivers/video/backlight/backlight.c", "drivers/acpi/video.c"], "input_tokens": 9324, "output_tokens": 338}
{"id": "206661", "paths": ["drivers/net/wireless/intel/iwlwifi/pcie/drv.c"], "predicts": ["drivers/net/wireless/intel.c", "drivers/pci/quirks.c", "drivers/pci/pci-driver.c", "drivers/pci/pci.c", "include/linux/pci.h", "include/linux/wireless.h", "net/wireless/core.c", "net/wireless/nl80211.c", "net/wireless/rdev-ops.h", "net/wireless/util.c"], "input_tokens_sum": 208390, "output_tokens_sum": 4200, "description": "Created attachment 287603 [details]\nBoot Log of Error\n\nI am using Kernel 5.6 RC2 and I am seeing issues where firmware is not being loaded for my Intel Corporation Wireless-AC 9260 card.  Attached is the boot logging.\n\nIf I can do anything to debug, let me know,", "title": "iwlwifi:9260: missing PCI subdevice entries for 0x2526 (0x04010, 0x4018 and 0x401C)", "Kernel Version": "5.6-rc2", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "causes": [{"cause": "The PCI subdevice entries for the Intel Wireless-AC 9260 card with specific subdevice IDs are missing, causing the firmware not to load.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "fix_solution": "Add the missing PCI subdevice entries for the Intel Wireless-AC 9260 card with subdevice IDs 0x04010, 0x4018, and 0x401C to the PCI device table."}, {"cause": "The PCI device ID table does not include the necessary entries for the specific subdevice IDs of the Intel Wireless-AC 9260 card.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/iwl-config.h", "fix_solution": "Define the missing subdevice IDs for the Intel Wireless-AC 9260 card in the configuration header file to ensure they are recognized by the driver."}, {"cause": "The driver is not correctly matching the PCI device due to missing or incorrect modalias entries.", "code_file": "drivers/pci/pci-driver.c", "fix_solution": "Ensure that the modalias entries for the Intel Wireless-AC 9260 card are correctly defined to match the PCI device IDs and subdevice IDs."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "drivers/net/wireless/intel/iwlwifi/pcie/iwl-config.h", "drivers/pci/pci-driver.c"], "input_tokens": 8786, "output_tokens": 297}
{"id": "203617", "paths": ["drivers/pci/hotplug/acpiphp_glue.c"], "predicts": ["arch/x86/kernel/acpi/boot.c", "drivers/acpi-cpufreq.c", "kernel/power/suspend.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h", "kernel/irq/pm.c", "mm/init-mm.c", "arch/x86/kernel/acpi/cppc_msr.c", "arch/x86/kernel/acpi/cstate.c", "kernel/power/process.c"], "input_tokens_sum": 195880, "output_tokens_sum": 3345, "description": "Created attachment 282777 [details]\nOutput of `uname -a`\n\nAttempting to boot an LG 17Z990 with newer kernels causes an endless stream of errors. Excerpt:\n\n00:47:20 phobos kernel: [   26.235209] ACPI Error: No installed handler for fixed event - PM_Timer (0), disabling (20190215/evevent-257)\n00:47:20 phobos kernel: [   26.236062] ACPI Error: No installed handler for fixed event - SleepButton (3), disabling (20190215/evevent-257)\n00:47:20 phobos kernel: [   26.236917] ACPI Error: Could not disable RealTimeClock events (20190215/evxfevnt-245)\n00:47:20 phobos kernel: [   26.237796] ACPI Error: No handler or method for GPE 08, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.238699] ACPI Error: No handler or method for GPE 09, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.239306] ACPI Error: No handler or method for GPE 0A, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.239910] ACPI Error: No handler or method for GPE 0B, disabli", "title": "ACPI Error \"storm\" on LG Gram 17 (\"No handler or method for GPE...\")", "Kernel Version": "5.1", "Product": "ACPI", "Component": "Other", "Hardware": "Intel Linux", "causes": [{"cause": "The ACPI code is failing to register handlers for General Purpose Events (GPEs), which leads to errors when trying to handle ACPI events during boot.", "code_file": "drivers/acpi/events.c", "fix_solution": "Ensure proper initialization and registration of GPE handlers by modifying the event setup logic to correctly associate handlers with GPEs during ACPI table parsing."}, {"cause": "The kernel configuration might be missing support for specific ACPI events related to the PM_Timer, SleepButton, and RealTimeClock, causing ACPI errors due to unhandled events or methods.", "code_file": "drivers/acpi/acpi_lpat.c", "fix_solution": "Verify ACPI configuration in `drivers/acpi/` and ensure specific ACPI event handlers are registered. If missing, integrate support for these events explicitly in the code."}, {"cause": "Changes in recent kernel versions may have inadvertently disabled or misconfigured critical ACPI event handlers and methods.", "code_file": "drivers/acpi/acpi_processor.c", "fix_solution": "Review recent changes in `drivers/acpi/` and revert or adapt specific handler assignments and methods to ensure compatibility with older expectations and event handling."}], "reranked_files": ["drivers/acpi/events.c", "drivers/acpi/acpi_lpat.c", "drivers/acpi/acpi_processor.c"], "input_tokens": 9464, "output_tokens": 275}
{"id": "203475", "paths": ["drivers/ata/libata-core.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-scsi.c", "drivers/ata/ahci.c", "drivers/ata/ata_piix.c", "include/linux/libata.h", "block/blk-core.c", "block/blk-mq.c", "block/blk-settings.c", "fs/block_dev.c", "include/linux/ata.h"], "input_tokens_sum": 197893, "output_tokens_sum": 5698, "description": "Created attachment 282579 [details]\ndmesg of the errors occuring\n\nI have a Samsung SSD 860 EVO mSATA 500GB SSD connected via an ASMedia ASM1062 Serial ATA Controller. It causes has 20-30 seconds lockups on fstrim (which runs during bootup on my system), with messages such as:\n\n[  332.792044] ata14.00: exception Emask 0x0 SAct 0x3fffe SErr 0x0 action 0x6 frozen\n[  332.798271] ata14.00: failed command: SEND FPDMA QUEUED\n[  332.804499] ata14.00: cmd 64/01:08:00:00:00/00:00:00:00:00/a0 tag 1 ncq dma 512 out\n                        res 40/00:00:00:00:00/00:00:00:00:00/00 Emask 0x4 (timeout)\n[  332.817145] ata14.00: status: { DRDY }\n\nAfter disabling queued TRIM via the included patch, the issue disappears.", "title": "Samsung 860 EVO queued TRIM issues", "Kernel Version": "4.14.114", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "causes": [{"cause": "The ATA command related to queued TRIM operations is experiencing timeouts due to possible incompatibility or error in command sequence handling.", "code_file": "drivers/ata/libata-scsi.c", "fix_solution": "Modify the command handling logic to better accommodate certain SSD models and controllers, possibly by revisiting the logic around the DMA operations and ensuring correct semaphore usage for queued commands."}, {"cause": "An error in the translation logic between SCSI layer discard commands to ATA TRIM commands causing improper handling of queued TRIM operations.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Enhance the TRIM command translation logic to cater for different SSD models, by adding more checks or flags to ensure compatibility for queued TRIM commands."}, {"cause": "The function responsible for managing queued commands may be freezing due to resource collisions or unhandled exception paths in certain execution scenarios.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Improve exception handling within the error handling mechanisms to maintain system responsiveness during TRIM command operations."}, {"cause": "Inadequate support or testing for specific hardware combination involving Samsung SSDs connected via certain types of controllers leading to operation timeouts.", "code_file": "include/linux/libata.h", "fix_solution": "Add specific adaptions or configurations for Samsung SSDs in this header to cater for compatibility during queued TRIM commands."}], "reranked_files": ["drivers/ata/libata-scsi.c", "drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "include/linux/libata.h"], "input_tokens": 10704, "output_tokens": 328}
{"id": "203369", "paths": ["drivers/hid/hid-a4tech.c"], "predicts": ["drivers/input/mouse/logips2pp.c", "drivers/input/mouse/logips2pp.h", "drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/psmouse.h", "include/uapi/linux/input-event-codes.h"], "input_tokens_sum": 273291, "output_tokens_sum": 7989, "description": "I have an A4Tech WOP-49Z mouse, which has two wheels - one for vertical and one for horizontal scrolling. It has worked perfectly well with many Linux kernel versions since 2011. With the latest stable kernel version 5.0, however, the horizontal wheel acts as an inverted vertical wheel.\n\nxev reports both vertical and horizontal wheel scrolling as buttons 4/5 with kernel versions 5.0.5, 5.0.7. With kernel versions 4.19.32, 4.19.34 and 4.20.17, xev reports vertical wheel scrolling as buttons 4/5 and horizontal wheel scrolling as buttons 6/7.\n\nI'm testing different kernel versions in the same system with the same other package versions. I'm rebooting and switching between different installed kernel versions provided by Manjaro Linux distribution.\n\nCould this bug be caused by a mistake in the implementation of the new feature in kernel 5.0 - \"Logitech High Resolution Scrolling support\"?", "title": "A4Tech mouse: horizontal scrolling is recognized as vertical since kernel 5.0", "Kernel Version": "5.0", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "causes": [{"cause": "The Logitech High Resolution Scrolling support introduced in kernel 5.0 may have altered the handling of horizontal and vertical scroll events, causing horizontal scrolling to be misinterpreted as vertical scrolling.", "code_file": "drivers/hid/hid-logitech-hidpp.c", "fix_solution": "Adjust the event handling logic to correctly differentiate between horizontal and vertical scroll events for devices with multiple scroll wheels."}, {"cause": "Changes in the input subsystem related to mouse event handling might have caused the horizontal scroll wheel to be incorrectly mapped to vertical scroll events.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Modify the event mapping logic to ensure that horizontal scroll events are correctly identified and reported as such."}, {"cause": "The introduction of new protocol handling in the input subsystem could have inadvertently affected the detection and processing of multi-wheel mice.", "code_file": "drivers/input/mouse/psmouse.h", "fix_solution": "Review and update the protocol detection and handling code to ensure compatibility with multi-wheel mice, ensuring correct mapping of scroll events."}, {"cause": "A regression in the handling of mouse button events in the input subsystem might be causing the horizontal scroll wheel to be misinterpreted.", "code_file": "drivers/input/input.c", "fix_solution": "Investigate and correct any regressions in the button event handling code to ensure proper differentiation between horizontal and vertical scroll inputs."}], "reranked_files": ["drivers/hid/hid-logitech-hidpp.c", "drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/psmouse.h", "drivers/input/input.c"], "input_tokens": 10664, "output_tokens": 328}
{"id": "200989", "paths": ["drivers/acpi/acpi_lpss.c"], "predicts": ["drivers/dma/acpi-dma.c", "kernel/power/suspend.c", "drivers/thermal/intel_soc_dts_iosf.c", "drivers/thermal/intel_soc_dts_iosf.h", "arch/x86/pci/acpi.c"], "input_tokens_sum": 180143, "output_tokens_sum": 2520, "description": "Created attachment 278225 [details]\n[PATCH] ACPI / LPSS: Ensure LPIOEP is always set on resume\n\nHi there.\n\nI've got a 3rd generation Lenovo 11e that locks up on boot. The processor inside is an Intel N3150, which is family 6, model 0x4c, which is one that turns on lpss_quirks. I was able to bisect the problem commit to the merge of 12864ff8545f6b8144fdf1bb89b5663357f29ec4 which skipped over some IOSF updates when exiting D3 that wasn't matched by a call to the handler for entering D3.  \n\nWhat I've been able to see is that on boot, the acpi_lpss_resume() function gets called, but the acpi_lpss_suspend() hasn't.  Because of this, the IOSF write to LPSS_IOSF_UNIT_LPIOEP never happens, and for some reason that freezes the computer.  I've got a minimal patch that allows my system to boot normally by ensuring that write happens whether the matching acpi_lpss_suspend() call takes place or not.\n\nI don't have any other relevant systems to test this patch on so I can't say whether it introduces ", "title": "ACPI / LPSS Braswell Lenovo 11e won't boot as of LPSS commit in 4.17.12 (with patch)", "Kernel Version": "4.17.12", "Product": "ACPI", "Component": "Power-Other", "Hardware": "Intel Linux", "causes": [{"cause": "The function acpi_lpss_resume is writing to LPSS_IOSF_UNIT_LPIOEP without a prior call to acpi_lpss_suspend, potentially missing IOSF setup required during suspend.", "code_file": "drivers/acpi/acpi_lpss.c", "fix_solution": "Ensure LPSS_IOSF_UNIT_LPIOEP is written irrespective of suspend state by implementing the write in a function that executes during resume, whether suspend has occurred or not."}, {"cause": "The LPSS quirk is not properly handling the transition from D3 state due to the latest changes, leading to a system freeze.", "code_file": "drivers/acpi/acpi_lpss.c", "fix_solution": "Review and possibly revert or adjust the IOSF updates skipped in commit 12864ff that relate to Braswell platform, ensuring support for model 0x4c CPUs like Intel N3150."}, {"cause": "Incorrect handling of platform-specific LPSS quirks causing improper low-power state exit procedures.", "code_file": "drivers/acpi/acpi_lpss.c", "fix_solution": "Add a Braswell-specific quirk to reapply needed IOSF settings during boot or resume by checking CPU model identifiers more precisely."}], "reranked_files": ["drivers/acpi/acpi_lpss.c"], "input_tokens": 9440, "output_tokens": 286}
{"id": "199971", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/net/wireless/iwlwifi/core.c", "drivers/net/wireless/iwlwifi/iwl-phy-db.c", "drivers/net/wireless/iwlwifi/mvm/ops.c", "drivers/net/wireless/iwlwifi/mvm/tx.c", "drivers/net/wireless/iwlwifi/pcie/tx.c", "drivers/net/wireless/iwlwifi/queue/tx.c", "drivers/net/wireless/iwlwifi/fw/dbg.c", "drivers/net/wireless/iwlwifi/fw/dump.c", "drivers/net/wireless/iwlwifi/fw/error-dump.c", "drivers/net/wireless/iwlwifi/fw-notif-wait.c"], "input_tokens_sum": 300486, "output_tokens_sum": 25892, "description": "Created attachment 276377 [details]\ndebug info encrypted for Emmanuel Grumbach, Johannes Berg and Luciano Coelho\n\nDell Vostro 5468 laptop with Intel Corporation Wireless 3165 (rev 79) on board. Firmware crash tested on Ubuntu 18.04, Arch Linux and openSUSE Leap 15.0. Arch running latest kernel available: 4.16.13-2-ARCH and linux-firmware 20180518.2a9b2cf-1 dated 19 May 2018. All debug info (with .dump) included in the archive. Information was gathered from openSUSE (kernel: 4.12.14-lp150.12.4-default and firmware version 29.1044073957.0) just because it happened to be the last distro I tested.\n\nThe crash happens when I try to transfer files over SFTP from laptop to smartphone. Files are 200-300 MB in size, sometimes bigger. Download starts slowly at 600 KB/s and goes to 1.7 MB/s max. The crash occurs around half way through the file. If firmware crashes a couple of times download speed degrades to 800 KB/s max. I'm not sure if firmware crashes during \"regular\" internet surfing and/or i", "title": "iwlwifi: 3165: TFD queue hang", "Kernel Version": "4.12.14", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The TFD (Transmit Frame Descriptor) queue hang might be caused by improper handling of the queue state transitions, leading to a deadlock or resource starvation.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "fix_solution": "Ensure proper locking and state management in the TFD queue handling code to prevent deadlocks. Review and update the logic that manages the queue state transitions to ensure that resources are released correctly after a transmission."}, {"cause": "The firmware crash could be due to incorrect handling of large data packets, causing buffer overflows or memory corruption.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/rx.c", "fix_solution": "Implement additional checks and validations for packet sizes and buffer allocations to prevent overflows. Ensure that the firmware is correctly notified of buffer limits and that any oversized packets are handled gracefully."}, {"cause": "The issue might be related to improper synchronization between the firmware and the driver, leading to inconsistent states and eventual crashes.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c", "fix_solution": "Improve synchronization mechanisms between the driver and firmware, possibly by introducing more robust handshaking or state verification processes to ensure both components are in sync during operations."}, {"cause": "There could be a race condition in the handling of the network interface, causing the firmware to crash under high load conditions.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/tx.c", "fix_solution": "Identify and resolve potential race conditions by using appropriate locking mechanisms or atomic operations to ensure that shared resources are accessed safely under concurrent conditions."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "drivers/net/wireless/intel/iwlwifi/pcie/rx.c", "drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c", "drivers/net/wireless/intel/iwlwifi/mvm/tx.c"], "input_tokens": 665, "output_tokens": 394}
{"id": "198351", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c"], "predicts": ["net/mac80211/cfg.c", "drivers/pci/pci-driver.c", "net/wireless/core.c"], "input_tokens_sum": 229618, "output_tokens_sum": 24499, "description": "Created attachment 273399 [details]\ndmesg output\n\nI recently updated my 8260 card to 9260 in laptop.\n\nAfter that download speed from my nas connected over ethernet to router dropped significantly at 5Gz.\nWas around 40MB/s with 8260. Dropped to 4MB/s with 9260.\n\nDownload speeds from internet(google drive) fully saturate my internet channel. eg. ~15MB/s. \nSo it looks like issue exists only for local wan-lan connections.\n\nAlso download speeds at 2.4Ghz is around 10MB/b which is also faster than 5Ghz one.\n\nI'm using most recent firmware-version: 34.0.0\nand most recent kernel 4.15-rc6. (got the same behavior though on 4.14.10)", "title": "iwlwifi: 9260: very slow WAN-LAN transfers at 5Ghz", "Kernel Version": "4.15-rc6", "Product": "Drivers", "Component": "network-wireless", "Hardware": "Intel Linux", "causes": [{"cause": "The iwlwifi driver may not be properly handling the 5GHz band configuration for the 9260 card, leading to reduced performance in WAN-LAN transfers.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/fw.c", "fix_solution": "Adjust the configuration settings for the 5GHz band to ensure optimal performance for the 9260 card, possibly by updating the firmware interaction logic."}, {"cause": "The power management settings for the 9260 card might be incorrectly configured, causing the card to enter a power-saving mode that affects 5GHz performance.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/power.c", "fix_solution": "Review and modify the power management logic to ensure that the card does not enter an unnecessary power-saving state during high-speed transfers."}, {"cause": "The rate control algorithm used by the iwlwifi driver might not be optimized for the 9260 card on the 5GHz band, leading to suboptimal data rates.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/rs.c", "fix_solution": "Update the rate control algorithm to better support the 9260 card's capabilities on the 5GHz band, ensuring higher throughput."}, {"cause": "The firmware version 34.0.0 might have a regression or compatibility issue with the 9260 card on the 5GHz band.", "code_file": "drivers/net/wireless/intel/iwlwifi/fw/api/nvm-reg.h", "fix_solution": "Investigate and apply any available firmware updates or patches that address known issues with the 9260 card on the 5GHz band."}, {"cause": "The network stack might not be handling the 5GHz band traffic efficiently due to incorrect configuration or limitations in the wireless stack.", "code_file": "net/mac80211/cfg.c", "fix_solution": "Review and optimize the network stack configuration for handling 5GHz traffic, ensuring that the wireless stack is fully compatible with the 9260 card."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/mvm/fw.c", "drivers/net/wireless/intel/iwlwifi/mvm/power.c", "drivers/net/wireless/intel/iwlwifi/mvm/rs.c", "drivers/net/wireless/intel/iwlwifi/fw/api/nvm-reg.h", "net/mac80211/cfg.c"], "input_tokens": 8051, "output_tokens": 477}
{"id": "196743", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "net/core/dev_addr_lists.c", "net/ipv6/mcast.c", "net/ipv6/addrconf.c"], "input_tokens_sum": 318260, "output_tokens_sum": 5959, "description": "Adding a multicast address to a device that has at least 50 of them already present produces a warning.\nThe addresses were added using the script below:\n\n#!/bin/bash\nfor i in {0..255}\ndo\n\thex=$(printf '%02x' $i)\n\tip maddress add 33:33:ff:00:00:$hex dev wlp4s0\ndone\n\n\nCommand MCAST_FILTER_CMD (0x1d0) is too large (328 bytes)\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 3839 at drivers/net/wireless/intel/iwlwifi/pcie/tx.c:1526 iwl_pcie_enqueue_hcmd+0x8d8/0xb00 [iwlwifi]\nModules linked in: nfnetlink_queue nfnetlink_log nfnetlink bluetooth ecdh_generic fuse ctr ccm nf_conntrack_ipv6 nf_defrag_ipv6 nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack libcrc32c crc32c_generic ip6table_filter iptable_filter ip6_tables nls_iso8859_1 nls_cp437 msr vfat fat intel_rapl x86_pkg_temp_ther\n thermal wmi led_class tpm battery ac mac_hid sch_fq_codel sg ip_tables x_tables ext4 crc16 jbd2 fscrypto mbcache dm_crypt algif_skcipher af_alg dm_mod dax sr_mod cdrom sd_mod crct10dif_pclmul cr", "title": "iwlwifi: adding too many link-layer multicast addresses produces a warning - WIFILNX-1329", "Kernel Version": "4.12.8", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The iwlwifi driver is not handling the case where the number of multicast addresses exceeds a certain limit, leading to a command size that is too large.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "fix_solution": "Modify the iwl_pcie_enqueue_hcmd function to check the number of multicast addresses and prevent adding more if it exceeds the hardware limit."}, {"cause": "The command size for MCAST_FILTER_CMD is not being calculated correctly, leading to an overflow when too many multicast addresses are added.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "fix_solution": "Adjust the calculation of the command size for MCAST_FILTER_CMD to ensure it does not exceed the maximum allowed size."}, {"cause": "The iwlwifi driver does not have a mechanism to limit the number of multicast addresses that can be added, leading to excessive command sizes.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mvm.c", "fix_solution": "Implement a limit on the number of multicast addresses that can be added to the device, and return an error if the limit is exceeded."}, {"cause": "The system does not have a configurable limit for the number of multicast addresses per interface, leading to potential overflows.", "code_file": "net/core/dev.c", "fix_solution": "Introduce a sysctl parameter to limit the number of multicast addresses per interface, similar to the max_addresses parameter for IPv6."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "drivers/net/wireless/intel/iwlwifi/mvm/mvm.c", "net/core/dev.c"], "input_tokens": 9173, "output_tokens": 359}
{"id": "196741", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/bcma/core.c", "include/linux/netdevice.h", "net/core/dev.c", "include/linux/etherdevice.h", "net/ipv6/mcast.c", "net/ipv6/ndisc.c"], "input_tokens_sum": 165570, "output_tokens_sum": 1899, "description": "Only frames with link-layer address that is on the list shown by `ip -0 maddress show dev wlp4s0` are received.\nThe wireless device is set to ALLMULTI mode by: `ip link set dev wlp4s0 allmulticast on`\n\nSteps to reproduce:\n1. connect a wireless client to a wireless AP\n2. open Wireshark on the client to monitor icmpv6 traffic\n3. execute on the client: `ip link set dev wlp4s0 allmulticast on`\n4. execute on the AP: ping ff02::1 ... RECEIVED by the client (the link-layer address 33:33:00:00:00:01 is on the list)\n5. execute on the AP: ping ff02::1:ffab:cdef ...  NOT RECEIVED by the client (the link-layer address 33:33:ff:ab:cd:ef is not on the list)\n6. apply workaround\n7. go to step 5; the packets are now received by the client\n\nExpected result:\nThe client should receive packets from ff02::1:ffab:cdef because, even though the address is not in the multicast address list, the adapter is in ALLMULTI mode.\n\n\n\nThe workaround for me was to add more than MAX_MCAST_FILTERING_ADDRESSES (256) using t", "title": "iwlwifi: unsolicited multicast traffic still dropped when adapter set to allmulti - WIFILNX-1330", "Kernel Version": "4.12.8", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The iwlwifi driver does not properly handle the ALLMULTI mode, causing multicast packets not on the list to be dropped.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-mvm.c", "fix_solution": "Modify the multicast filter handling logic to ensure that when ALLMULTI mode is enabled, all multicast packets are accepted regardless of the list."}, {"cause": "The network stack does not correctly propagate the ALLMULTI setting to the wireless driver, leading to incorrect packet filtering.", "code_file": "net/core/dev.c", "fix_solution": "Ensure that the ALLMULTI flag is properly set and communicated to the wireless driver, allowing it to bypass the multicast address list."}, {"cause": "The multicast address list size limitation (MAX_MCAST_FILTERING_ADDRESSES) is causing packets to be dropped when the list is exceeded.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-mvm.c", "fix_solution": "Increase the MAX_MCAST_FILTERING_ADDRESSES limit or implement logic to bypass the list when ALLMULTI mode is active."}, {"cause": "Incorrect handling of multicast packets in the bonding code, which may affect the reception of multicast packets on wireless interfaces.", "code_file": "net/core/dev.c", "fix_solution": "Review and adjust the bonding logic to ensure it does not interfere with multicast packet reception when ALLMULTI mode is enabled."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/iwl-mvm.c", "net/core/dev.c"], "input_tokens": 8961, "output_tokens": 335}
{"id": "196375", "paths": ["drivers/scsi/sg.c"], "predicts": ["drivers/ata/libata-scsi.c", "drivers/usb/storage/transport.c", "drivers/block/scsi_ioctl.c", "include/scsi/scsi.h", "include/uapi/scsi/fc/fc_fs.h", "include/uapi/scsi/fc/fc_gs.h", "include/scsi/scsi_transport_fc.h", "drivers/block/ioctl.c", "block/blk-core.c", "drivers/ata/libata-core.c"], "input_tokens_sum": 198023, "output_tokens_sum": 5290, "description": "After upgrading to 4.12rc0 (also tested on all RC's 4.12, and 4.13 git), the following mtx commands fail on an ML6000 with LTO5 FC drive attached to a qlogic 2462 HBA.  Running Ubuntu Server 16.04\n\nmtx -f /dev/sg19 load 16 0\nLoading media from Storage Element 16 into drive 0...mtx: Request Sense: Long Report=yes\nmtx: Request Sense: Valid Residual=no\nmtx: Request Sense: Error Code=0 (Unknown?!)\nmtx: Request Sense: Sense Key=No Sense\nmtx: Request Sense: FileMark=no\nmtx: Request Sense: EOM=no\nmtx: Request Sense: ILI=no\nmtx: Request Sense: Additional Sense Code = 00\nmtx: Request Sense: Additional Sense Qualifier = 00\nmtx: Request Sense: BPV=no\nmtx: Request Sense: Error in CDB=no\nmtx: Request Sense: SKSV=no\nMOVE MEDIUM from Element Address 4111 to 256 Failed\n\nDowngrading to 4.11.10 resolves the issue.  The issue (and fix) has been replicated on a server running Fedora with an NEOs T48 with an LTO6 SAS drive attached to LSI 3008.  Commit hash from latest version that works is - v4.11-4395-g8", "title": "MTX load commands fail", "Kernel Version": "4.12", "Product": "Tools", "Component": "Other", "Hardware": "Intel Linux", "causes": [{"cause": "The SCSI command MOVE MEDIUM is failing due to incorrect handling of the command in the SCSI subsystem, possibly related to changes in the SCSI error handling or command processing in the newer kernel versions.", "code_file": "drivers/scsi/scsi_transport_fc.c", "fix_solution": "Review and update the error handling logic for SCSI commands, ensuring that the MOVE MEDIUM command is correctly processed and any errors are properly reported and handled."}, {"cause": "The SCSI generic (sg) driver may have introduced changes that affect the handling of tape drive commands, leading to failures in command execution.", "code_file": "drivers/scsi/sg.c", "fix_solution": "Investigate recent changes in the sg driver related to command processing and error reporting, and adjust the logic to ensure compatibility with tape drive operations."}, {"cause": "The kernel upgrade may have altered the handling of Fibre Channel (FC) devices, affecting the communication between the ML6000 library and the qlogic HBA.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Examine the FC transport layer for changes in command handling or device initialization that could impact the operation of tape libraries, and apply necessary corrections."}, {"cause": "Changes in the SCSI sense data interpretation may lead to incorrect error reporting, causing the MOVE MEDIUM command to fail.", "code_file": "include/scsi/scsi.h", "fix_solution": "Ensure that the sense data interpretation logic is consistent with the SCSI standards and correctly identifies and reports errors for tape drive operations."}, {"cause": "The kernel upgrade may have introduced a regression in the handling of SCSI command residuals, affecting the execution of MOVE MEDIUM commands.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Review the handling of command residuals in the SCSI library and ensure that they are correctly managed for tape drive commands."}], "reranked_files": ["drivers/scsi/scsi_transport_fc.c", "drivers/scsi/sg.c", "drivers/scsi/qla2xxx/qla_os.c", "include/scsi/scsi.h", "drivers/scsi/scsi_lib.c"], "input_tokens": 10954, "output_tokens": 439}
{"id": "195869", "paths": ["net/core/dev_ioctl.c"], "predicts": ["net/core/dev_ioctl.c", "net/wireless/wext-core.c", "include/uapi/linux/wireless.h", "include/uapi/linux/if.h", "block/ioctl.c", "fs/ioctl.c", "mm/usercopy.c", "lib/usercopy.c", "lib/net_utils.c", "fs/compat_ioctl.c"], "input_tokens_sum": 249328, "output_tokens_sum": 9544, "description": "Created attachment 256697 [details]\ncomplete reduced testcase\n\nIf you do, say\n  struct iwreq* req = ...;\n  int ret = ioctl(sockfd, SIOCGIWNAME, req);\nthe ioctl will fail with EFAULT if req points to valid memory that is exactly sizeof(struct iwreq). Full testcase attached.\n\nThe problem is that dev_ioctl() does a copy_from_user(sizeof(struct ifreq)). On x86-64 that's 40 bytes, but sizeof(struct iwreq) is only 32 bytes.\n\nThis isn't a huge deal, but it does mean that user code that stores struct iwreq on the heap can randomly fail once in a blue moon, and that's bad.\n\nAlternatively it could be documented somewhere that user code should actually pass in a struct ifreq and cast it to struct iwreq for all usage, but that's horrible.", "title": "Wireless ioctls fail if struct iwreq is at the end of a memory mapping", "Kernel Version": "4.12-rc1", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "causes": [{"cause": "The dev_ioctl() function uses copy_from_user() with sizeof(struct ifreq), which is larger than sizeof(struct iwreq), causing an EFAULT error when struct iwreq is at the end of a memory mapping.", "code_file": "net/core/dev_ioctl.c", "fix_solution": "Modify dev_ioctl() to use sizeof(struct iwreq) when handling wireless ioctls to ensure the correct size is copied from user space."}, {"cause": "The ioctl handler does not correctly differentiate between struct ifreq and struct iwreq sizes, leading to incorrect memory access.", "code_file": "include/uapi/linux/wireless.h", "fix_solution": "Add documentation and comments to clarify the expected usage of struct iwreq and struct ifreq in wireless ioctl operations."}, {"cause": "The wireless ioctl implementation assumes struct ifreq size for all operations, which is not compatible with struct iwreq.", "code_file": "net/wireless/wext-core.c", "fix_solution": "Update the wireless ioctl implementation to handle struct iwreq separately, ensuring the correct size is used for copy operations."}], "reranked_files": ["net/core/dev_ioctl.c", "include/uapi/linux/wireless.h", "net/wireless/wext-core.c"], "input_tokens": 8935, "output_tokens": 254}
{"id": "195651", "paths": ["drivers/acpi/ec.c"], "predicts": ["arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h", "include/linux/acpi.h"], "input_tokens_sum": 190295, "output_tokens_sum": 3857, "description": "Created attachment 256185 [details]\nacpidump output\n\nThe Asus laptops X550VXK/FX502VD/FX502VE have a BIOS bug where the\nECDT (correctly) states that EC events trigger GPE 0x23, but the\nDSDT _GPE method (incorrectly) says GPE 0x33.\n\nA cursory glance of the code suggests that this should work regardless\n(because it looks like Linux would treat the ECDT and DSDT as two separate\nECs supported simultaneously), but in practice it is not working since the\nECDT is ultimately ignored in favour of the DSDT EC. The sequence of\nevents is:\n\n1. acpi_ec_ecdt_probe() is called in early boot, and calls\n   acpi_config_boot_ec(is_ecdt=true) for the ECDT EC.\n\nacpi_config_boot_ec() sets boot_ec to this new EC, and\nboot_ec_is_ecdt = true.\n\n2. Later, acpi_ec_dsdt_probe() is called and creates a new ec to represent\n   the DSDT EC. Then:\n    /*\n     * When the DSDT EC is available, always re-configure boot EC to\n     * have _REG evaluated. _REG can only be evaluated after the\n     * namespace initialization.\n ", "title": "Boot EC - Asus BIOS contain broken DSDT EC but working ECDT EC", "Kernel Version": "4.11", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "causes": [{"cause": "The ECDT EC is ignored in favor of the DSDT EC due to the reconfiguration logic in acpi_ec_dsdt_probe().", "code_file": "drivers/acpi/ec.c", "fix_solution": "Modify acpi_ec_dsdt_probe() to prioritize the ECDT EC configuration when both ECDT and DSDT ECs are present."}, {"cause": "Incorrect GPE value in DSDT _GPE method leading to mismatched event handling.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Add a check to validate and correct the GPE value from DSDT against the ECDT during EC initialization."}, {"cause": "The boot EC configuration is overwritten without considering the ECDT flag.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Ensure that boot_ec_is_ecdt flag is checked before reconfiguring the boot EC in acpi_ec_dsdt_probe()."}, {"cause": "The EC event handling does not differentiate between ECDT and DSDT ECs.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Implement separate event handling logic for ECDT and DSDT ECs to ensure correct GPE triggering."}], "reranked_files": ["drivers/acpi/ec.c"], "input_tokens": 10203, "output_tokens": 294}
{"id": "187061", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/power.c", "drivers/acpi/reboot.c", "arch/x86/kernel/reboot.c", "drivers/base/power/main.c", "kernel/power/poweroff.c", "arch/x86/kernel/process.c", "drivers/platform/x86/dell-laptop.c", "drivers/char/ipmi/ipmi_poweroff.c", "kernel/reboot.c", "drivers/acpi/sleep.c"], "input_tokens_sum": 334973, "output_tokens_sum": 15416, "description": "Created attachment 243731 [details]\nScreenshot just before hanging\n\nWhen doing a poweroff or a reboot the PC stops for a few seconds, apparently at the very end of the process, then it hungs. Screen is blank but leds (disk, power and wifi) blink.\n\nI compile the vanilla kernel myself (and the attached files refers to my kernel) but the same problem affects all the kernels I tested, including the original 4.8.0 deloivered with debian SID, and kernel 4.8 delivered with Ubuntu 16.10.\n\nI am attaching a screenshot of the console during the seconds of waiting just before the screen goes blank and the leds start blinking. I am also attaching dmesg result with the last running kernel (4.7.10) and with the latest 4.9.0-rc4 kernel.\n\nAny help on how to further analyze the source of the bug is welcome.\n\nGianpaolo", "title": "Poweroff and reboot hungs the PC with screen off and leds blinking on Latitude E7250", "Kernel Version": "4.9-rc4", "Product": "ACPI", "Component": "Power-Off", "Hardware": "Intel Linux", "causes": [{"cause": "The system hangs during poweroff or reboot due to improper handling of ACPI power-off sequences.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the ACPI power-off sequence is correctly implemented by verifying the ACPI shutdown method and adding necessary delays or checks to ensure the system transitions to the correct power state."}, {"cause": "The Intel TXT hardware may be locking memory upon system restart due to the secrets-in-memory flag not being cleared.", "code_file": "arch/x86/kernel/reboot.c", "fix_solution": "Integrate a call to tboot_shutdown() in the power-off and reboot paths to ensure the secrets-in-memory flag is cleared, allowing the BIOS to handle the memory correctly."}, {"cause": "The PM core may not be correctly handling device power states during shutdown, leading to incomplete device quiescence.", "code_file": "drivers/base/power/main.c", "fix_solution": "Review and update the PM core logic to ensure all devices are properly quiesced and transitioned to the correct power state during shutdown."}, {"cause": "The system may be failing to execute the necessary shutdown callbacks for certain devices, causing them to remain active and interfere with the shutdown process.", "code_file": "include/linux/pm.h", "fix_solution": "Ensure that all necessary shutdown callbacks are defined and executed for each device, particularly focusing on the poweroff_noirq and suspend_noirq operations."}, {"cause": "The ACPI subsystem may not be correctly handling wakeup events during shutdown, causing the system to hang.", "code_file": "drivers/acpi/button.c", "fix_solution": "Verify and update the ACPI button driver to ensure wakeup events are correctly disabled during shutdown, preventing interference with the power-off sequence."}], "reranked_files": ["drivers/acpi/sleep.c", "arch/x86/kernel/reboot.c", "drivers/base/power/main.c", "include/linux/pm.h", "drivers/acpi/button.c"], "input_tokens": 9263, "output_tokens": 408}
{"id": "177311", "paths": ["drivers/i2c/busses/i2c-i801.c"], "predicts": ["drivers/hwmon/jc42.c", "drivers/i2c/busses/i2c-i801.c", "drivers/i2c/busses/i2c-ismt.c", "kernel/irq/manage.c", "include/linux/i2c-smbus.h", "kernel/irq/handle.c", "drivers/hwmon/hwmon.c"], "input_tokens_sum": 289708, "output_tokens_sum": 1987, "description": "I've noticed, when I do enable CONFIG_SENSORS_JC42 as a module or build into\nmy kernel, this causes a very high rate of interrupts on i801_smbus - about\n6000-8000 per second according to /proc/interrupts. After 20 minutes, there\nwere about 5 million interrupts generated on i801_smbus.\n\u00a0\nWhen I do unload the module jc42, the interrupts do not stop, until I do a\ncomplete reboot.\n\u00a0\nMainboard: Supermicro A1SRM-2758F\nKernel: Gentoo-Sources 4.8.1 (Happens also with Vanilla 4.8.1 and older kernel\nversions)\n\u00a0\ndmesg:\n[    8.319900] i801_smbus 0000:00:1f.3: enabling device (0140 -> 0143)\n[    8.321864] i801_smbus 0000:00:1f.3: SMBus using PCI interrupt\n[    8.326098] ismt_smbus 0000:00:13.0: enabling device (0140 -> 0142)\n\u00a0\nlspci:\n00:1f.3 SMBus: Intel Corporation Atom processor C2000 PCU SMBus (rev 02)\n\nWhen the module is loaded, I am also getting this errors:\n[   73.934901] ismt_smbus 0000:00:13.0: completion wait timed out\n[   74.974970] ismt_smbus 0000:00:13.0: completion wait timed out\n[   7", "title": "crazy interrupt rate on i801_smbus", "Kernel Version": "4.8.1", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "causes": [{"cause": "The jc42 module may be causing excessive polling or incorrect handling of SMBus interrupts, leading to a high interrupt rate.", "code_file": "drivers/hwmon/jc42.c", "fix_solution": "Modify the interrupt handling logic to ensure proper acknowledgment and handling of SMBus events, possibly adding a delay or condition to reduce polling frequency."}, {"cause": "The i801_smbus driver may not be correctly handling shared interrupts, leading to a race condition where interrupts are not properly acknowledged.", "code_file": "drivers/i2c/busses/i2c-i801.c", "fix_solution": "Implement a mechanism to repeatedly check and handle pending interrupts until the IRQ line is de-asserted, similar to the approach in shared interrupt handling patches."}, {"cause": "The SMBus controller may be stuck in a state where it continuously generates interrupts due to a timeout or error condition.", "code_file": "drivers/i2c/busses/i2c-i801.c", "fix_solution": "Add error handling and recovery logic to reset the SMBus controller state when a timeout or error is detected."}, {"cause": "The jc42 module may not be properly unloading, leaving the SMBus controller in an active state that continues to generate interrupts.", "code_file": "drivers/hwmon/jc42.c", "fix_solution": "Ensure that the module's exit function properly disables and resets the SMBus controller to stop further interrupts."}, {"cause": "The i801_smbus driver may not be correctly managing power states, leading to continuous interrupt generation after module unload.", "code_file": "drivers/i2c/busses/i2c-i801.c", "fix_solution": "Implement suspend and resume callbacks to manage the SMBus controller's power state and interrupt generation during module unload."}], "reranked_files": ["drivers/hwmon/jc42.c", "drivers/i2c/busses/i2c-i801.c"], "input_tokens": 9303, "output_tokens": 411}
{"id": "120591", "paths": ["drivers/gpu/drm/nouveau/nouveau_fbcon.c"], "predicts": ["drivers/gpu/drm/nouveau/nouveau_acpi.c", "drivers/gpu/drm/nouveau/nouveau_connector.c", "drivers/gpu/drm/nouveau/nouveau_debugfs.c", "drivers/gpu/drm/nouveau/nouveau_fbcon.c", "drivers/gpu/drm/nouveau/nouveau_hwmon.c"], "input_tokens_sum": 284345, "output_tokens_sum": 2596, "description": "Created attachment 220561 [details]\ndmesg\n\nOS: Arch Linux\nVideo adapter: GeForce GTX 780 Ti\nxf86-nouveau: 1.0.12\n\nI blacklisted nouveau module for full OS initialisation before reproducing, then issued:\n# modprobe nouveau debug=trace\n\nAfter that screen becomes black and in dmesg appears:\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000210\n\nBug is not reproducible with 4.7-rc2 or earlier mainline.", "title": "BUG() in dmesg after loading nouveau module", "Kernel Version": "4.7-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "x86-64 Linux", "causes": [{"cause": "NULL pointer dereference due to improper handling of ACPI interface in nouveau module.", "code_file": "drivers/gpu/drm/nouveau/nouveau_acpi.c", "fix_solution": "Add a NULL check for the acpi_handle before using it in nvidia_dsm function."}, {"cause": "Incorrect handling of debug information leading to unexpected behavior when debug=trace is enabled.", "code_file": "drivers/gpu/drm/nouveau/nouveau_debugfs.c", "fix_solution": "Ensure proper initialization and checks for debugfs entries before accessing them."}, {"cause": "Improper memory alignment or size calculation causing access to invalid memory regions.", "code_file": "drivers/gpu/drm/nouveau/nouveau_bo.c", "fix_solution": "Review and correct the memory alignment logic to prevent access to unallocated memory."}, {"cause": "Potential issue with GPU lockup handling leading to NULL pointer dereference.", "code_file": "drivers/gpu/drm/nouveau/nouveau_fbcon.c", "fix_solution": "Enhance the GPU lockup handling mechanism to ensure safe fallback to software rendering."}, {"cause": "Misconfiguration or missing dependencies in the KMS setup causing unexpected behavior.", "code_file": "drivers/gpu/drm/Kconfig", "fix_solution": "Update the KMS configuration to ensure all necessary dependencies are correctly set."}], "reranked_files": ["drivers/gpu/drm/nouveau/nouveau_acpi.c", "drivers/gpu/drm/nouveau/nouveau_debugfs.c", "drivers/gpu/drm/nouveau/nouveau_bo.c", "drivers/gpu/drm/nouveau/nouveau_fbcon.c", "drivers/gpu/drm/Kconfig"], "input_tokens": 10049, "output_tokens": 318}
{"id": "117651", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/inode.c", "fs/nfs/namespace.c", "fs/nfs/proc.c", "fs/nfs/super.c", "include/uapi/linux/nfs_fs.h", "include/uapi/linux/nfs_mount.h", "net/sunrpc/auth.c", "net/sunrpc/cache.c", "net/sunrpc/svc.c", "net/sunrpc/xprtsock.c"], "input_tokens_sum": 257156, "output_tokens_sum": 2576, "description": "Created attachment 215321 [details]\nlog fragment with failed getattr\n\nAfter upgrading from 3.14.12 to 4.1.15 I've got strange behaviour with autofs. \n\nIt happens on diskless machine with root on NFS. There is autofs indirect mount on /storage, where NFS volumes are mounted on demand.\n\nEverything mounts normally, but after mount expiration\n(during unmount) autofs mount disappears - that is, not only /storage/<volume>\nunmounts, but /storage is also unmounted. This happens quite often - usually on the very first expiration.\n\nautomount logs umount error in such cases.\n\nWithout autofs, mount/umount of the same NFS volume works correctly. \n\nWith NFS debug enabled, I've got following errors:\n\nNFS reply getattr: -512\nnfs_revalidate_inode: (0:15/6291480) getattr failed, error=-512\nNFS: nfs_lookup_revalidate(/storage) is invalid\n\nAfter inode revalidate failure all mounts on this inode are unmounted and so autofs mount disappears, while automount daemon itself continue to run.\n\ntcpdump shows, tha", "title": "Root NFS and autofs - mount disappears due to inode revalidate failed", "Kernel Version": "4.1.15", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "causes": [{"cause": "The NFS client is failing to revalidate the inode due to a stale file handle or incorrect attribute caching, leading to the disappearance of the autofs mount.", "code_file": "fs/nfs/inode.c", "fix_solution": "Implement a mechanism to handle ESTALE errors by re-fetching the file handle and attributes, similar to the approach in nfs_reinstantiate."}, {"cause": "The autofs mount is being incorrectly unmounted due to a failure in the NFS getattr operation, possibly due to incorrect handling of mount expiration.", "code_file": "fs/autofs4/inode.c", "fix_solution": "Ensure that the autofs mount point is not unmounted when a child mount expires by adding checks in the expiration handling logic."}, {"cause": "The NFS client is not correctly handling the revalidation of the root inode, causing the entire mount point to be considered invalid.", "code_file": "fs/nfs/super.c", "fix_solution": "Modify the nfs_get_root function to handle cases where the root inode revalidation fails, possibly by retrying or using cached values."}, {"cause": "The NFS client is not properly synchronizing inode state changes during mount and unmount operations, leading to race conditions.", "code_file": "fs/nfs/super.c", "fix_solution": "Introduce locking mechanisms around inode state changes to prevent race conditions during mount and unmount operations."}, {"cause": "The NFS client is not correctly handling network errors or timeouts during the getattr operation, leading to incorrect inode state.", "code_file": "fs/nfs/nfs3proc.c", "fix_solution": "Enhance error handling in the nfs3_proc_getattr function to retry operations or handle specific network errors gracefully."}], "reranked_files": ["fs/nfs/inode.c", "fs/autofs4/inode.c", "fs/nfs/super.c", "fs/nfs/nfs3proc.c"], "input_tokens": 10458, "output_tokens": 406}
{"id": "110831", "paths": ["drivers/net/wireless/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/sn/ioc3.c", "include/uapi/linux/nl80211.h", "net/mac80211/scan.c", "net/wireless/scan.c", "net/mac80211/util.c", "net/wireless/util.c", "drivers/bcma/scan.c", "drivers/bcma/scan.h"], "input_tokens_sum": 255221, "output_tokens_sum": 1764, "description": "Hardware: Intel edison with Intel 7260 chip.\nSoftware:Connman-1.3, Wpa_supplicant-2.5 and kernel-4.1.13\n\nThe firmware of Intel 7260 is iwlwifi-7260-13.ucode.\n\nStep:\n1. After wifi is enabled, use the connman cmd of \"connmanctl scan wifi\" to scan wifi ap.\n\n2. When use the connman cmd of \"connmanctl scan wifi\", connman will invoke the interfaces of Wpa_supplicant and Wpa_supplicant will trigger sched scan.\n\n3. After trigger sched scan, no NL80211_CMD_SCHED_SCAN_RESULTS events come from kernel with Intel 7260 chip. \n\n4. Wpa_supplicant will always wait for the events of NL80211_CMD_SCHED_SCAN_RESULTS to get the sched scan results.\n\nExpect:\nNL80211_CMD_SCHED_SCAN_RESULTS events come from kernel with Intel 7260 chip.", "title": "iwlwifi: mvm: scheduled scan doesn't report results when no matches are passed - MWG100254662", "Kernel Version": "4.1.13", "Product": "Drivers", "Component": "network-wireless", "Hardware": "Intel Linux", "causes": [{"cause": "The scheduled scan results are not being reported due to a missing or incorrect event trigger in the iwlwifi driver.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/scan.c", "fix_solution": "Ensure that the NL80211_CMD_SCHED_SCAN_RESULTS event is correctly triggered after a scheduled scan completes by adding the appropriate event notification in the scan completion handler."}, {"cause": "The cfg80211 subsystem is not properly queuing or processing the scheduled scan results due to a workqueue issue.", "code_file": "net/wireless/scan.c", "fix_solution": "Modify the workqueue handling to ensure that scheduled scan results are processed and the NL80211_CMD_SCHED_SCAN_RESULTS event is dispatched correctly."}, {"cause": "A race condition in the mac80211 layer might be preventing the scan results from being processed correctly.", "code_file": "net/mac80211/scan.c", "fix_solution": "Implement additional locking mechanisms to prevent race conditions during the scan result processing phase."}, {"cause": "The iwlwifi firmware version might not be compatible with the kernel version, leading to issues in handling scheduled scan results.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Update the driver to handle any discrepancies between the firmware and kernel version, ensuring compatibility and correct event handling."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/mvm/scan.c", "net/wireless/scan.c", "net/mac80211/scan.c", "drivers/net/wireless/intel/iwlwifi/iwl-drv.c"], "input_tokens": 9872, "output_tokens": 328}
{"id": "106571", "paths": ["drivers/gpio/gpiolib-acpi.c"], "predicts": ["arch/x86/kernel/acpi/apei.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/acpi/sleep.h", "include/acpi/acpi_bus.h", "include/acpi/acpixf.h", "kernel/power/autosleep.c", "kernel/power/main.c", "sound/aoa/core/gpio-feature.c"], "input_tokens_sum": 270695, "output_tokens_sum": 3992, "description": "Created attachment 191021 [details]\ndmesg until failure\n\nOn the Microsoft Surface 3, when you fold the type cover over the screen (or \"close the lid\"), the lid switch state does not change, and an ACPI error is thrown. The lid switch state always reports closed.\n\n[root@localhost ~]# cat /proc/acpi/button/lid/LID/state \nstate:      closed\n\n[ 1130.459896] ACPI Exception: AE_ERROR, Returned by Handler for [GeneralPurposeIo] (20150930/evregion-297)\n[ 1130.460061] ACPI Error: Method parse/execution failed [\\_SB.GPO0._E4C] (Node ffff88013f4b4438), AE_ERROR (20150930/psparse-542)\n\nFrom the DSDT, this is the GPIO event handler that toggles the lid switch state.", "title": "Surface 3 Lid Switch Method parse/execution failed", "Kernel Version": "4.3-rc6", "Product": "ACPI", "Component": "Config-Tables", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ACPI GPIO event handler for the lid switch is not correctly updating the lid state due to a failure in method execution.", "code_file": "drivers/acpi/button.c", "fix_solution": "Ensure that the GPIO event handler correctly interprets the GPIO signals and updates the lid state. Add error handling to manage AE_ERROR exceptions and ensure the lid state is updated correctly."}, {"cause": "The ACPI method _E4C is failing due to incorrect or unsupported GPIO configuration on the Surface 3.", "code_file": "drivers/acpi/acpi_gpio.c", "fix_solution": "Review and update the GPIO configuration to ensure compatibility with the Surface 3 hardware. Implement additional checks to handle unsupported configurations gracefully."}, {"cause": "The ACPI event system is not properly notifying the lid state change due to a missing or incorrect internal event handler.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Add or correct the internal event handler for lid state changes to ensure that the ACPI event system properly notifies the lid state change."}, {"cause": "The ACPI DSDT table for the Surface 3 might have incorrect or missing entries for the lid switch.", "code_file": "drivers/acpi/tables.c", "fix_solution": "Update the DSDT parsing logic to handle any quirks specific to the Surface 3, ensuring that the lid switch entries are correctly interpreted and executed."}], "reranked_files": ["drivers/acpi/button.c", "drivers/acpi/acpi_gpio.c", "drivers/acpi/bus.c", "drivers/acpi/tables.c"], "input_tokens": 8898, "output_tokens": 331}
{"id": "104121", "paths": ["drivers/acpi/acpi_video.c"], "predicts": ["drivers/acpi/acpi_video.c", "include/acpi/video.h", "include/linux/backlight.h", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/video_detect.c"], "input_tokens_sum": 278669, "output_tokens_sum": 3315, "description": "Created attachment 186931 [details]\nacpidump of Esprimo Mobile M9410\n\nUnder /sys/class/backlight there are two entries:\n[xxx@yyy ~]$ ls -l /sys/class/backlight/\nlrwxrwxrwx. 1 root root 0  6. Sep 2015  acpi_video0 -> ../../devices/pci0000:00/0000:00:02.0/backlight/acpi_video0\nlrwxrwxrwx. 1 root root 0  6. Sep 2015  acpi_video1 -> ../../devices/pci0000:00/0000:00:02.0/backlight/acpi_video1\n\nWhen writing manually a new value to acpi_video0/brightness the backlight is not changing. Do the same with acpi_video1/brightness is changing the backlight.\n\nBoth entries are of type firmware.\nAs a result, the backlight can not be changed from the gnome shell slider (gnome 3.16), gsd-backlight-helper and xbacklight. xbacklight is working, when acpi_video1 is defined as the backlight device in an xorg.conf.d file.\n\nHere the output of all files in the acpi_video* folder. In addition I attache an acpidump. If any additional information is needed, please let me know and I try to get it.\n\n[xxx@yyy ~]$ gre", "title": "Esprimo Mobile 9410: Two acpi_video* devices in sysfs, only one working", "Kernel Version": "4.2-rc5", "Product": "ACPI", "Component": "Power-Video", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ACPI video driver is registering multiple backlight devices, but only one is functional.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the ACPI video driver to ensure only one functional backlight device is registered, possibly by checking the capabilities of each device and only registering the one that can change brightness."}, {"cause": "The system is not correctly identifying which ACPI video device should control the backlight.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Implement logic to prioritize or select the correct ACPI video device for backlight control based on its capabilities or user configuration."}, {"cause": "The backlight control is being overridden by another driver or configuration.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Ensure that the ACPI video driver is the only driver controlling the backlight by checking for conflicts with other drivers and resolving them."}, {"cause": "The ACPI video driver is not correctly handling the backlight control interface.", "code_file": "drivers/video/backlight/backlight.c", "fix_solution": "Update the backlight control interface to correctly map the functional ACPI video device to the user-space controls."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c", "drivers/acpi/scan.c", "drivers/video/backlight/backlight.c"], "input_tokens": 9448, "output_tokens": 288}
{"id": "101521", "paths": ["net/mac80211/iface.c"], "predicts": ["net/mac80211/driver-ops.h", "include/linux/rfkill.h", "net/mac80211/main.c", "include/linux/ieee80211.h", "include/net/mac80211.h", "net/rfkill/core.c", "drivers/infiniband/core/netlink.c", "net/wireless/core.c", "include/uapi/linux/wireless.h", "lib/test_firmware.c"], "input_tokens_sum": 283831, "output_tokens_sum": 4043, "description": "Created attachment 182661 [details]\nlspci -vvvx\n\nI am testing vanilla linux-4.1.2 kernel on Dell Vostro 3550 laptop with A12 BIOS. During cold boot I received:\n\n[   20.114785] r8169 0000:05:00.0: Direct firmware load for rtl_nic/rtl8168e-2.fw failed with error -2\n[   20.114795] r8169 0000:05:00.0 enp5s0: unable to load firmware patch rtl_nic/rtl8168e-2.fw (-2)\n[   20.138835] r8169 0000:05:00.0 enp5s0: link down\n[   20.493918] ------------[ cut here ]------------\n[   20.493928] WARNING: CPU: 2 PID: 3162 at net/mac80211/driver-ops.h:12 ieee80211_bss_info_change_notify+0x1e2/0x1f0()\n[   20.493930] wlp9s0:  Failed check-sdata-in-driver check, flags: 0x0\n[   20.493931] Modules linked in: fuse x86_pkg_temp_thermal intel_powerclamp kvm_intel kvm ums_realtek uas iwldvm usb_storage iwlwifi dell_smo8800\n[   20.493942] CPU: 2 PID: 3162 Comm: iwconfig Not tainted 4.1.2-default-pciehp #2\n[   20.493943] Hardware name: Dell Inc. Vostro 3550/, BIOS A12 02/18/2014\n[   20.493945]  ffffffff81dadc75 ffff8", "title": "iwlwifi: WARNING when setting Tx power with WEXT while in RFKILL - MWG100249491", "Kernel Version": "4.1.2", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ieee80211_bss_info_change_notify function is being called while the device is in RFKILL state, leading to a failed check-sdata-in-driver check.", "code_file": "net/mac80211/driver-ops.h", "fix_solution": "Add a condition to check if the device is in RFKILL state before calling ieee80211_bss_info_change_notify, and skip the call if it is."}, {"cause": "The rfkill subsystem does not properly handle the transition of the device state during RFKILL, causing unexpected behavior when setting Tx power.", "code_file": "net/rfkill/core.c", "fix_solution": "Ensure that rfkill_set_sw_state and rfkill_init_sw_state properly manage the device state during RFKILL, preventing operations that should not occur while the device is blocked."}, {"cause": "The iwlwifi driver does not correctly handle RFKILL events, leading to operations being attempted while the device is blocked.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Modify the iwlwifi driver to check the RFKILL state before performing operations that require the radio to be active, such as setting Tx power."}, {"cause": "The interaction between WEXT and RFKILL is not properly synchronized, leading to race conditions when setting Tx power.", "code_file": "net/wireless/wext-core.c", "fix_solution": "Implement synchronization mechanisms to ensure that WEXT operations are aware of the RFKILL state and do not proceed when the device is blocked."}], "reranked_files": ["net/mac80211/driver-ops.h", "net/rfkill/core.c", "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "net/wireless/wext-core.c"], "input_tokens": 9583, "output_tokens": 369}
{"id": "95061", "paths": ["drivers/gpu/drm/i915/i915_drv.c"], "predicts": ["kernel/power/hibernate.c", "arch/x86/power/hibernate_32.c", "arch/x86/power/hibernate_64.c", "drivers/acpi/sleep.c", "kernel/power/poweroff.c", "drivers/power/power_supply_core.c", "include/linux/pm.h", "drivers/acpi/acpi_processor.c", "kernel/power/suspend.c", "kernel/power/user.c"], "input_tokens_sum": 251111, "output_tokens_sum": 2348, "description": "Created attachment 171081 [details]\ndmesg output\n\nHi,\n\nSince kernel 3.19 (including 3.19.1) the system (Laptop FSC S7110) will not correctly shut down when suspending to disk (echo disk > /sys/power/state). The power-LED is still on and the fan keeps whirling. However, the hibernation image is created successfully. After pulling the plug and powering the system on, it will boot into the hibernated image without problems. I didn't ran into this problem with a former kernel as far as I can remember but 4.0-rc4 has the same issue. Suspend to RAM, shutdown and reboot all work as expected.\n\ncat /sys/power/disk\n[platform] shutdown reboot suspend\n\nRegards,\nDirk", "title": "Laptop will not shutdown after suspend to disk (regression)", "Kernel Version": "3.19", "Product": "Drivers", "Component": "Video", "Hardware": "Intel Linux", "causes": [{"cause": "The suspend-to-disk mechanism does not correctly power off the system after creating the hibernation image, possibly due to changes in the handling of the shutdown method.", "code_file": "kernel/power/disk.c", "fix_solution": "Ensure that the shutdown method is correctly invoked after the hibernation image is created, possibly by reviewing the logic in the pm_suspend_disk function."}, {"cause": "The removal of the firmware disk mode may have inadvertently affected the shutdown process during suspend-to-disk.", "code_file": "include/linux/pm.h", "fix_solution": "Review the definitions and handling of suspend_disk_method_t to ensure that the shutdown method is correctly prioritized and executed."}, {"cause": "Changes in the power management callbacks may have introduced a regression affecting the shutdown sequence after hibernation.", "code_file": "drivers/base/power/main.c", "fix_solution": "Verify that the correct power management callbacks are being executed in sequence, especially the shutdown-related callbacks, and adjust the logic if necessary."}, {"cause": "The system may not be correctly transitioning to the shutdown state due to incorrect handling of the platform driver during suspend-to-disk.", "code_file": "Documentation/power/interface.txt", "fix_solution": "Update the documentation and ensure that the platform driver is correctly configured to handle the shutdown state after hibernation."}], "reranked_files": ["kernel/power/disk.c", "include/linux/pm.h", "drivers/base/power/main.c", "Documentation/power/interface.txt"], "input_tokens": 8696, "output_tokens": 310}
{"id": "94411", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "include/linux/acpi.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/acpi_processor.c", "drivers/acpi/power.c", "kernel/time/hrtimer.c", "kernel/time/timer.c", "lib/timerqueue.c", "include/linux/pm.h"], "input_tokens_sum": 247127, "output_tokens_sum": 1350, "description": "Created attachment 169541 [details]\ndmesg when function keys are pressed\n\nMy laptop (XPS13 9333) has two function keys to control the screen brightness. When pressed, two _Qxx ACPI methods are called, one to increase and one to decrease the brightness. Both the methods sleep for 200ms.\n\nThis pause of 200ms is causing some problems when I keep one of the function keys pressed. In this situation, more queries than needed are scheduled for a delayed execution, making the screen brightness change even after the function key is released. If I keep the function key pressed for X seconds, it will take roughly 2X seconds for all the queries to be executed.\n\nHere attached see some log lines that show the problem.", "title": "Unwanted delayed execution of _Qxx EC methods", "Kernel Version": "3.19", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "causes": [{"cause": "The ACPI _Qxx methods are being scheduled with a fixed delay, causing a backlog of events when the function key is held down.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Modify the scheduling logic to cancel pending _Qxx method executions when the function key is released, preventing the backlog."}, {"cause": "The ACPI event handling does not account for rapid key presses, leading to excessive scheduling of brightness change events.", "code_file": "drivers/acpi/button.c", "fix_solution": "Implement a debounce mechanism to limit the rate at which brightness change events are scheduled."}, {"cause": "The delay in the execution of ACPI methods is hardcoded, causing a fixed sleep time that does not adapt to user input.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Introduce a dynamic delay mechanism that adjusts based on the frequency of key presses, reducing unnecessary delays."}, {"cause": "The ACPI event queue is not being flushed when the function key is released, causing delayed execution of queued events.", "code_file": "drivers/acpi/acpi_event.c", "fix_solution": "Add logic to flush the ACPI event queue when the function key is released to prevent delayed execution."}], "reranked_files": ["drivers/acpi/ec.c", "drivers/acpi/button.c", "drivers/acpi/acpi_bus.c", "drivers/acpi/acpi_event.c"], "input_tokens": 8519, "output_tokens": 296}
{"id": "90521", "paths": ["drivers/gpio/gpio-crystalcove.c"], "predicts": ["kernel/irq/manage.c", "drivers/input/input.c", "kernel/irq/handle.c", "arch/x86/kernel/irq_32.c", "arch/x86/kernel/irq_64.c", "include/linux/interrupt.h", "fs/proc/interrupts.c", "drivers/acpi/event.c", "include/linux/gpio_keys.h", "arch/x86/kernel/apic/io_apic.c"], "input_tokens_sum": 252011, "output_tokens_sum": 1956, "description": "Hello the side buttons for volume on the Asust100 baytrail are not working properly they are being detected by the crystalcove-gpio \n\n  \n265:          0          0          0          0  Crystal Cove    5  gpio_crystalcove\n 266:          0          0          0          0  Crystal Cove    0  volume_up\n 267:          0          0          0          0  Crystal Cove    1  volume_down\n 273:          0          0          0          0  Crystal Cove    7  rotation_lock\n 274:          0          0          0          0  Crystal Cove    8  home\n 360:         17          0   \n\nhowever when i push the volune buttons i get the following error message\n\n 4089.639205] WARNING: CPU: 2 PID: 72 at kernel/irq/manage.c:661 irq_nested_primary_handler+0x2c/0x30()\n[ 4089.639216] Primary handler called for nested irq 267\n[ 4089.639224] Modules linked in: hci_uart joydev snd_soc_sst_baytrail_pcm asus_nb_wmi gpio_keys asus_wmi hid_generic sparse_keymap snd_soc_sst_dsp snd_soc_sst_byt_rt5640_mach intel_rapl in", "title": "Asus t100ta Buttons not working", "Kernel Version": "3.19-rc2", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "All Linux", "causes": [{"cause": "The volume buttons are not properly handled due to incorrect interrupt handling for nested IRQs.", "code_file": "kernel/irq/manage.c", "fix_solution": "Ensure that the IRQ handler for the volume buttons is correctly set up to handle nested interrupts by using the IRQF_ALLOW_NESTED flag."}, {"cause": "The GPIO interrupt for the volume buttons is not being correctly unmasked after handling, causing the interrupt to be missed.", "code_file": "drivers/input/keyboard/gpio_keys.c", "fix_solution": "Modify the GPIO interrupt handler to ensure that the interrupt is unmasked after being handled, similar to the fix in the patch for ARM platforms."}, {"cause": "The interrupt handler for the volume buttons is not correctly set up to handle both rising and falling edges, leading to missed button presses.", "code_file": "drivers/input/keyboard/gpio_keys.c", "fix_solution": "Ensure that the GPIO interrupt is configured to handle both rising and falling edges, or adjust the logic to handle one-directional interrupts if necessary."}, {"cause": "The interrupt handling logic does not account for shared interrupts, leading to potential loss of interrupts when multiple devices share the same line.", "code_file": "kernel/irq/handle.c", "fix_solution": "Implement a mechanism to repeatedly call the interrupt handlers for shared IRQs until no more handlers report activity, ensuring all interrupts are processed."}], "reranked_files": ["kernel/irq/manage.c", "drivers/input/keyboard/gpio_keys.c", "kernel/irq/handle.c"], "input_tokens": 9194, "output_tokens": 323}
{"id": "84561", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/gpu/drm/i915/intel_display.c", "drivers/acpi/video.c", "drivers/acpi/video_detect.c", "drivers/video/backlight/pwm_bl.c", "include/linux/backlight.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/pci/acpi.c", "drivers/gpu/drm/drm_modes.c", "include/acpi/video.h", "include/video/edid.h"], "input_tokens_sum": 244479, "output_tokens_sum": 2460, "description": "Hi!\n\nAfter upgrading from kernel 3.14 to 3.16 on a Samsung 880Z5E laptop (with dual Intel HD 4000 and Radeon 8770M cards), the intermediate % of backlight don't work.\n\nI.e. /sys/class/backlight/intel_backlight is there with max_brightness=4882 and type=raw, but all brightness levels > 0 result in full brightness, and brightness level = 0 results in the screen turned off. The same is on the brightness adjustment UI: 0% is \"turned off\", everything greater than 0% is full brightness.\n\n(although when the screen is turned on after being turned off, the backlight turns on smoothly)\n\nacpi_backlight=vendor and video.use_native_backlight=1 also don't work.\n\nWhat other details do you need? acpidump, dmidecode?", "title": "[ivb] Intel backlight does not adjust, but only turns on/off in kernel 3.16 on Samsung 880Z5E laptop", "Kernel Version": "3.16.2", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The brightness levels are not being correctly initialized, leading to the absence of intermediate backlight adjustments.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure correct initialization of device->brightness levels in acpi_video_init_brightness to account for all brightness levels."}, {"cause": "Device capabilities are not correctly detected or checked, resulting in the improper handling of brightness levels.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add comprehensive checks in acpi_video_device_find_cap for correct capability detection, and ensure all required ACPI methods are supported."}, {"cause": "Improper handling of ACPI backlight interfaces caused potential conflicts between ACPI drivers and vendor-specific drivers.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Enhance the discrimination logic in acpi_video_backlight_support to correctly identify and use the appropriate backlight control mechanism."}, {"cause": "Wrong default behavior or configuration in brightness control parameters, which affects the response to brightness change requests.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the default and runtime behavior of the brightness_switch_enabled parameter to ensure smooth brightness level transitions."}, {"cause": "Conflict between native and vendor-specific backlight controls which is not resolved correctly, affecting intermediate brightness levels.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Improve the logic in acpi_backlight setup by ensuring consistent enforcement of native or vendor settings based on device capabilities."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c"], "input_tokens": 9346, "output_tokens": 354}
{"id": "84111", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c", "include/acpi/video.h", "include/linux/backlight.h", "drivers/acpi/device_pm.c"], "input_tokens_sum": 231550, "output_tokens_sum": 1772, "description": "My HP Pavilion dv6-3182 laptop shows three interfaces in /sys/class/backlight: acpi_video0, acpi_video1 and radeon_bl0.\n\nradeon_bl0 only appears when the radeon driver is used (i.e. not if fglrx is used).\n\nBoth acpi_video0 and radeon_bl0 control the brightness of the screen, but acpi_video0 has 11 brightness levels whilst radeon_bl0 has 256.\n\nAs far as I know, acpi_video1 has no purpose. Writing to its brightness file doesn't do anything, but it causes problems to desktop environments that choose it over the other options.", "title": "HP Pavilion dv6-3182 shows at least one additional backlight interface", "Kernel Version": "3.13", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "Multiple ACPI video interfaces are being registered, leading to redundant and non-functional backlight interfaces.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the ACPI video driver to only register one functional backlight interface by checking for duplicates and ignoring non-functional interfaces like acpi_video1."}, {"cause": "The radeon driver is registering its own backlight interface, which conflicts with the ACPI video interfaces.", "code_file": "drivers/gpu/drm/radeon/radeon_backlight.c", "fix_solution": "Add a check in the radeon driver to prevent registering its backlight interface if an ACPI video interface is already present and functional."}, {"cause": "The ACPI video driver does not properly handle the case where multiple ACPI video devices are present, leading to unnecessary interfaces.", "code_file": "drivers/acpi/video.c", "fix_solution": "Implement logic to select the most appropriate ACPI video device for backlight control, possibly based on the number of brightness levels or other criteria."}, {"cause": "Desktop environments are selecting the non-functional acpi_video1 interface due to its presence, causing issues.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that non-functional ACPI video interfaces like acpi_video1 are not exposed to userspace by filtering them out during initialization."}], "reranked_files": ["drivers/acpi/video.c", "drivers/gpu/drm/radeon/radeon_backlight.c"], "input_tokens": 9385, "output_tokens": 317}
{"id": "83151", "paths": ["drivers/cpufreq/intel_pstate.c"], "predicts": ["drivers/cpufreq/intel_pstate.c", "arch/x86/include/asm/msr.h", "arch/x86/lib/msr.c", "arch/x86/power/cpu.c", "fs/sysfs/file.c", "tools/power/cpupower/utils/cpupower.c", "tools/power/x86/turbostat/turbostat.c"], "input_tokens_sum": 247112, "output_tokens_sum": 1960, "description": "On my laptop (Dell XPS 13 9333) MSR_IA32_MISC_ENABLE_TURBO_DISABLE is 0 when AC is present, 1 otherwise.\nBecause of this, setting turbo_disabled on init leads to some issues:\n* If I turn on the laptop while the AC is present, the sysfs interface always allows me to change the state of no_turbo. However, the changes are only effective when the AC is present.\n* If I turn on the laptop while on battery, the sysfs interface doesn't allow me to change the state of no_turbo. That means I'm not able to disable it when it's automatically enabled when I plug the AC.\n\nNote that I don't have the possibility to disable Intel Turbo from the BIOS settings.", "title": "Intel Turbo can't be disabled/enabled under certain conditions", "Kernel Version": "3.16", "Product": "Power Management", "Component": "intel_pstate", "Hardware": "Intel Linux", "causes": [{"cause": "The sysfs interface does not correctly handle changes in the power state, leading to inconsistent behavior when toggling Intel Turbo.", "code_file": "drivers/cpufreq/intel_pstate.c", "fix_solution": "Modify the sysfs attribute handling to ensure it correctly updates the turbo state based on the current power source."}, {"cause": "The MSR_IA32_MISC_ENABLE_TURBO_DISABLE register is not being correctly set or read during power state transitions.", "code_file": "arch/x86/kernel/cpu/intel.c", "fix_solution": "Ensure that the MSR register is correctly updated and read during AC/battery transitions to reflect the desired turbo state."}, {"cause": "The initialization logic for turbo settings does not account for the current power state, leading to incorrect initial values.", "code_file": "drivers/cpufreq/intel_pstate.c", "fix_solution": "Add logic to check the power state during initialization and set the turbo state accordingly."}, {"cause": "The sysfs attribute for no_turbo does not correctly reflect changes made when the power source changes.", "code_file": "fs/sysfs/file.c", "fix_solution": "Implement a mechanism to refresh or re-read the sysfs attribute when the power source changes."}, {"cause": "The power management component does not correctly handle the transition between AC and battery power, affecting turbo settings.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Ensure that power management transitions correctly update CPU settings, including turbo mode, based on the current power source."}], "reranked_files": ["drivers/cpufreq/intel_pstate.c", "arch/x86/kernel/cpu/intel.c", "fs/sysfs/file.c", "drivers/acpi/processor_idle.c"], "input_tokens": 9987, "output_tokens": 363}
{"id": "75581", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "include/linux/power/power_supply.h", "kernel/power/power.h", "include/linux/power/sbs-battery.h", "include/linux/power/bq27x00_battery.h", "include/linux/power/jz4740-battery.h", "include/linux/power/twl4030_madc_battery.h"], "input_tokens_sum": 233885, "output_tokens_sum": 1795, "description": "Created attachment 135211 [details]\noutput of dmesg (last line after rmmod battery&&modprobe battery)\n\nSometimes battery detection in module battery fails, reloading of module solves problem. I see this bug from Linux-3.7.4 until Linux-3.14.2.", "title": "Faill of battery detection on Lenovo Z480 with probability 5-10%", "Kernel Version": "3.14.2", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "causes": [{"cause": "The battery module may not be correctly handling the detection of the battery state during initialization, leading to intermittent detection failures.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the battery detection logic is robust by adding additional checks or retries during the initialization phase to handle transient errors."}, {"cause": "The battery state might not be correctly updated after system events such as suspend/resume cycles, causing detection issues.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a resume method in the ACPI battery handler to recheck and update the battery state after a resume event."}, {"cause": "The battery module might not be correctly handling asynchronous initialization, leading to race conditions and detection failures.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Remove the __init attribute from asynchronous initialization functions to ensure they are not prematurely freed."}, {"cause": "The battery detection logic might not be correctly handling cases where the battery is absent, leading to inconsistent detection results.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the 'present' attribute is always set in sysfs, even if the battery is absent, to provide consistent detection results."}], "reranked_files": ["drivers/acpi/battery.c"], "input_tokens": 9614, "output_tokens": 295}
{"id": "60583", "paths": ["drivers/acpi/acpica/evxface.c"], "predicts": ["drivers/acpi/acpica/evmisc.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/acpica/acglobal.h"], "input_tokens_sum": 209122, "output_tokens_sum": 1238, "description": "Created attachment 106942 [details]\nOutput of acpidump, hwinfo lspci syslog\n\nSometimes the kernel oops at boot, something to do with acpi.\nIt started when I installed 3.5.4 on a Panasonic CF-19 Toughbook.\nI tried 3.10.1 but the same result.\nCrash occurs in same function but different adress. (drivers/acpi/acpica/evmisc.c line 267 for 3.5.4 and line 216 for 3.1.0.1)\n\nsyslog reports :\nJul  5 10:44:36 ship1 kernel: BUG: unable to handle kernel NULL pointer dereference at   (null)\nJul  5 10:44:36 ship1 kernel: IP: [<  (null)>]   (null)\nJul  5 10:44:36 ship1 kernel: *pde = 00000000\nJul  5 10:44:36 ship1 kernel: Oops: 0010 [#1] SMP\nJul  5 10:44:36 ship1 kernel: Modules linked in: af_packet uinput nfsd exportfs nfs lockd nfs_acl sunrpc ipv6 iptable_filter iptable_nat nf_nat nf_conntrack_ipv4 nf_conntrack nf_defrag_ipv4 iptable_mangle iptable_raw ip_tables x_tables binfmt_misc loop cpufreq_ondemand cpufreq_conservative cpufreq_powersave speedstep_lib acpi_cpufreq arc4 freq_table iwlwifi mac802", "title": "Kernel oops at boot in acpi_ev_notify_dispatch", "Kernel Version": "3.5.4", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "causes": [{"cause": "The kernel oops is caused by a NULL pointer dereference in the acpi_ev_notify_dispatch function, likely due to an uninitialized or improperly handled ACPI object.", "code_file": "drivers/acpi/acpica/evmisc.c", "fix_solution": "Add a NULL check for the ACPI object before dereferencing it in the acpi_ev_notify_dispatch function."}, {"cause": "Improper handling of ACPI notifications during boot, possibly due to missing initialization of ACPI structures.", "code_file": "drivers/acpi/acpica/evhandler.c", "fix_solution": "Ensure all ACPI structures are properly initialized before use, especially in the acpi_ev_initialize function."}, {"cause": "ACPI table mapping issues during early boot, leading to invalid memory accesses.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Add additional checks and error handling in the acpi_os_map_memory function to ensure valid memory mappings."}, {"cause": "Incorrect parameter passing in ACPI-related functions, leading to unexpected behavior.", "code_file": "arch/x86/kernel/acpi/cstate.c", "fix_solution": "Review and correct parameter passing in functions like acpi_processor_ffh_cstate_probe_cpu to prevent NULL dereferences."}, {"cause": "ACPI SCI_EN bit not being set correctly, causing issues with ACPI event handling.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Introduce a kernel parameter to force setting the SCI_EN bit during resume, as a workaround for systems with broken ACPI implementations."}], "reranked_files": ["drivers/acpi/acpica/evmisc.c", "drivers/acpi/acpica/evhandler.c", "drivers/acpi/osl.c", "arch/x86/kernel/acpi/cstate.c", "drivers/acpi/sleep.c"], "input_tokens": 9871, "output_tokens": 369}
{"id": "60577", "paths": ["drivers/net/wireless/iwlwifi/pcie/drv.c"], "predicts": ["drivers/net/wireless/b43/main.c", "include/linux/wireless.h", "net/wimax/stack.c", "net/wimax/id-table.c", "include/linux/rfkill.h"], "input_tokens_sum": 274065, "output_tokens_sum": 13284, "description": "Created attachment 106926 [details]\nlspci -vv\n\nI have notebook Dell 11z with WiMAX/WiFi adapter Intel Link 5150. \nWhen I tried to list network interfaces, i didn't see any WiFi interfaces.\n\n>ifconfig\n\nenp0s29f7u5: flags=129<UP,NOARP>  mtu 1400\n        ether 00:1d:e1:1b:40:a2  txqueuelen 20  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nenp2s0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\n        ether 00:26:b9:c8:83:86  txqueuelen 1000  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 0  (Local Loopback)\n        ", "title": "WiFi doen't work on Intel WiMAX/WiFi Link 5150", "Kernel Version": "3.9.9", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The rfkill subsystem might be disabling the WiFi radio, preventing it from showing up as a network interface.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-ops.c", "fix_solution": "Ensure the rfkill state is checked and explicitly enabled if the WiFi interface is not showing up. Add code to enable the radio state during initialization."}, {"cause": "Incorrect initialization or loading of the driver module for Intel 5150 preventing detection of the device.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-init.c", "fix_solution": "Add explicit checks and initialization routines to ensure the Intel 5150 WiFi device is properly recognized and initialized on boot."}, {"cause": "Mismatch or outdated firmware version causing compatibility issues with the current kernel version.", "code_file": "drivers/net/wireless/intel/iwlwifi/fw/api/commands.h", "fix_solution": "Update the firmware loading logic to ensure the correct firmware version compatible with kernel 3.9.9 is being loaded."}, {"cause": "Firmware files may not be properly loaded unless all necessary paths and files are specified.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Verify if `request_firmware()` returns successful status and handle errors by adding meaningful logs to aid debugging if firmware fails to load."}, {"cause": "The device could be mistakenly flagged as removed or missing by udev.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-pci.c", "fix_solution": "Add verification within the PCI initialization to ensure the device is persistently listed and not removed unexpectedly."}, {"cause": "Potential race conditions or delay when loading the WiFi driver leading to incomplete initialization sequence.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-trans.c", "fix_solution": "Insert synchronization mechanisms like mutexes to ensure sequential initialization processes or include delays where necessary to allow components sufficient load time."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/iwl-ops.c", "drivers/net/wireless/intel/iwlwifi/iwl-init.c", "drivers/net/wireless/intel/iwlwifi/fw/api/commands.h", "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "drivers/net/wireless/intel/iwlwifi/iwl-pci.c", "drivers/net/wireless/intel/iwlwifi/iwl-trans.c"], "input_tokens": 9325, "output_tokens": 486}
{"id": "60519", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply_sysfs.c", "arch/x86/kernel/acpi/acpi.c", "arch/x86/kernel/acpi/sleep.c", "drivers/power/bq27x00_battery.c", "drivers/power/olpc_battery.c", "drivers/power/pmu_battery.c", "include/linux/power_supply.h", "include/acpi/acpi.h", "include/acpi/acpi_bus.h"], "input_tokens_sum": 175170, "output_tokens_sum": 2671, "description": "Created attachment 106809 [details]\nOutput of acpidump\n\nThe battery information reported in sysfs is wrong since kernel 2.6.34. In older versions the information is correct.\n\nThe affected device is a Samsung NP540U3C. The output of acpidump is attached.\nThese are the contents of /sys/class/power_supply/BAT1/uevent:\n\nCorrect information on 2.6.33:\nPOWER_SUPPLY_NAME=BAT1\nPOWER_SUPPLY_TYPE=Battery\nPOWER_SUPPLY_STATUS=Full\nPOWER_SUPPLY_PRESENT=1\nPOWER_SUPPLY_TECHNOLOGY=Li-ion\nPOWER_SUPPLY_VOLTAGE_MIN_DESIGN=7500000\nPOWER_SUPPLY_VOLTAGE_NOW=8638000\nPOWER_SUPPLY_CURRENT_NOW=0\nPOWER_SUPPLY_CHARGE_FULL_DESIGN=6890000\nPOWER_SUPPLY_CHARGE_FULL=6800000\nPOWER_SUPPLY_CHARGE_NOW=6800000\nPOWER_SUPPLY_MODEL_NAME=\nPOWER_SUPPLY_MANUFACTURER=SAMSUNG Electronics\nPOWER_SUPPLY_SERIAL_NUMBER=\n\nWrong information on 2.6.34:\nPOWER_SUPPLY_NAME=BAT1\nPOWER_SUPPLY_TYPE=Battery\nPOWER_SUPPLY_STATUS=Unknown\nPOWER_SUPPLY_PRESENT=1\nPOWER_SUPPLY_TECHNOLOGY=Unknown\nPOWER_SUPPLY_CYCLE_COUNT=204\nPOWER_SUPPLY_VOLTAGE_MIN_DES", "title": "Wrong battery information reported on Samsung NP540U3C", "Kernel Version": "2.6.34", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "causes": [{"cause": "The ACPI battery driver may not correctly interpret the battery status due to changes in the ACPI specification or implementation between kernel versions 2.6.33 and 2.6.34.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Update the battery driver to correctly interpret the ACPI status codes for battery technology and status."}, {"cause": "The power supply subsystem may have introduced changes that affect how battery properties are reported, leading to incorrect status and technology reporting.", "code_file": "drivers/power/power_supply_sysfs.c", "fix_solution": "Ensure that the power supply properties are correctly mapped and reported in sysfs, possibly by adding checks for new status codes or correcting existing mappings."}, {"cause": "The ACPI tables for the Samsung NP540U3C may not be correctly parsed, leading to incorrect battery information being reported.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Improve the parsing logic for ACPI tables to ensure that battery-related information is correctly extracted and interpreted."}, {"cause": "Changes in the ACPI device ID handling may have affected the recognition of battery devices, leading to incorrect reporting.", "code_file": "include/acpi/acpi_drivers.h", "fix_solution": "Review and update the handling of ACPI device IDs to ensure compatibility with the Samsung NP540U3C battery device."}, {"cause": "The introduction of new battery status codes, such as TRICKLE_CHARGING, may have inadvertently affected the reporting of battery status.", "code_file": "drivers/power/olpc_battery.c", "fix_solution": "Ensure that the battery status codes are correctly interpreted and reported, possibly by adding logic to handle new status codes appropriately."}], "reranked_files": ["drivers/acpi/battery.c", "drivers/power/power_supply_sysfs.c", "drivers/acpi/acpi_bus.c", "include/acpi/acpi_drivers.h", "drivers/power/olpc_battery.c"], "input_tokens": 9779, "output_tokens": 403}
{"id": "53441", "paths": ["sound/pci/hda/hda_intel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_auto_parser.c", "sound/pci/hda/hda_proc.c", "include/linux/sound.h", "include/sound/hda_hwdep.h", "drivers/acpi/sleep.c", "kernel/power/suspend.c", "lib/pci_iomap.c"], "input_tokens_sum": 214838, "output_tokens_sum": 2176, "description": "Created attachment 92591 [details]\ndmesg showing error messages\n\nOn a fresh boot the sound card works fine.\nAfter a few suspends to ram (it doesn't necessarily happen after just one) the sound card stops working well. The sound comes out chopppy, as a series of clicks separated by 2 second or so silences.\n\nI see these messages in the kernel log right after resume:\nhda-intel: azx_get_response timeout, switching to polling mode: last cmd=0x00170503\nhda-intel: No response from codec, disabling MSI: last cmd=0x00170503\nhda_intel: azx_get_response timeout, switching to single_cmd mode: last cmd=0x00170503\n\nThe only way to fix the sound seems to be a reboot.\nI don't have this problem with v3.6.11, it appeared with kernel v3.7.1 (I have not tested v3.7). Right now I'm running 3.7.6 and the problem is still there.\n\n$ lspci  | grep -i audio\n00:1b.0 Audio device: Intel Corporation 5 Series/3400 Series Chipset High Definition Audio (rev 05)\n01:00.1 Audio device: NVIDIA Corporation High Definition", "title": "hda_intel: sound stops working after suspend to ram", "Kernel Version": "3.7.6", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "causes": [{"cause": "The hda_intel driver does not properly restore the codec state after suspend, leading to timeouts and mode switches.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Implement a function to save and restore the codec state during suspend and resume operations."}, {"cause": "The MSI (Message Signaled Interrupts) is not correctly re-enabled after resume, causing communication issues with the codec.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that MSI is re-enabled during the resume process by checking and setting the appropriate flags."}, {"cause": "The polling mode is incorrectly activated due to a timeout in azx_get_response, which affects sound output.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the timeout value or improve the response handling logic to prevent unnecessary mode switches."}, {"cause": "The suspend/resume cycle does not correctly handle power state transitions for the audio codec.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Add logic to ensure the codec is set to the correct power state during resume."}, {"cause": "The control element values are not restored during resume, affecting audio output settings.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Implement a mechanism to save and restore control element values during suspend and resume."}], "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c"], "input_tokens": 9716, "output_tokens": 347}
{"id": "51141", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "include/linux/backlight.h", "include/acpi/video.h", "arch/x86/kernel/acpi/boot.c"], "input_tokens_sum": 201059, "output_tokens_sum": 2097, "description": "Created attachment 87851 [details]\ndmesg log (kernel 3.6.8)\n\nEvery time I boot-up my notebook's display stays black. Since most of the time I'm using an external display I found out that the backlight brightness in GNOME settings is set to zero \u2013 I can temporarily solve the issue by increasing the screen brightness but next time I boot this setting is lost, screen brightness is set back to zero again. Using the kernel boot parameter i915.invert_brightness=1 works fine as workaround.\n\nWhen I looked into /sys/class/backlight/acpi_video0/brightness to confirm that it's set to zero I realized that I have two entries in backlight:\n- 'acpi_video0' (with brightness set to 0, actual_brightness set to 0) and\n- 'intel_backlight' (with brightness set to 4882, actual_brightness set to 0).\n\nWhen I increase screen brightness to 100% in GNOME settings, the values change to:\n- 'acpi_video0' brightness & actual_brightness 10,\n- 'intel_backlight' brightness & actual_brightness 4882.\n\nNext time I boot, A", "title": "ACPI display backlight brightness is set to zero at every boot-up - HP Folio 13-2000", "Kernel Version": "3.6.8", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "causes": [{"cause": "Conflict between ACPI video driver and Intel backlight driver, causing incorrect brightness value initialization.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Modify logic to prioritize backlight initialization from the Intel backlight driver if it is present and the acpi_backlight=vendor option is set."}, {"cause": "Incorrect handling of ACPI video brightness events, which leads to ACPI brightness set improperly during boot-up.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the ACPI video brightness initialization logic to check for existing brightness settings and avoid overwriting them to zero."}, {"cause": "The ACPI _BQC method not yielding the correct brightness level due to improper evaluation or unavailable firmware information at boot.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the ACPI _BQC method is correctly evaluated, and if unavailable, use a default value based on other available backlight interfaces."}, {"cause": "Possible mismatch between detected ACPI video device capabilities and actual hardware configurations.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Add checks to confirm compatibility and availability of ACPI video device capabilities before setting brightness values at boot."}, {"cause": "Failure to configure multiple ACPI backlight devices correctly, leading to defaulting to zero brightness on acpi_video0.", "code_file": "drivers/acpi/video.c", "fix_solution": "Implement logic to synchronize brightness settings across multiple ACPI video devices found to ensure coherence between acpi_video0 and intel_backlight."}], "reranked_files": ["drivers/acpi/video_detect.c", "drivers/acpi/video.c", "drivers/acpi/scan.c"], "input_tokens": 9344, "output_tokens": 367}
{"id": "50491", "paths": ["drivers/edac/i7core_edac.c"], "predicts": ["drivers/edac/i7core_edac.c", "drivers/edac/edac_module.c", "drivers/edac/edac_mc.c", "drivers/edac/edac_core.h", "include/linux/edac.h", "arch/x86/include/asm/edac.h"], "input_tokens_sum": 247937, "output_tokens_sum": 7081, "description": "If I run the following on my system:\n\n# while rmmod i7core_edac ; do modprobe i7core_edac ; done\n\nI quickly get a flood of warning and error messages in the kernel logs. First I get 3 correct cycles:\n\nEDAC PCI: Removed device 0 for i7core_edac EDAC PCI controller: DEV 0000:ff:03.0\nEDAC MC: Removed device 0 for i7core_edac.c i7 core #0: DEV 0000:ff:03.0\nEDAC MC0: Giving out device to 'i7core_edac.c' 'i7 core #0': DEV 0000:ff:03.0\nEDAC PCI1: Giving out device to module 'i7core_edac' controller 'EDAC PCI controller': DEV '0000:ff:03.0' (POLLED)\nEDAC i7core: Driver loaded, 1 memory controller(s) found.\n\nbut then a first failure occurs:\n\nEDAC PCI: Removed device 3 for i7core_edac EDAC PCI controller: DEV 0000:ff:03.0\nEDAC MC: Removed device 0 for i7core_edac.c i7 core #0: DEV 0000:ff:03.0\nEDAC i7core: Device not found: dev 00.0 PCI ID 8086:2c41\n\nThis last message is repeated a hundred times or so, and finally a WARNING followed by a BUG.\n\n------------[ cut here ]------------\nWARNING: at inc", "title": "rmmod/modprobe i7core_edac leads to kernel oops", "Kernel Version": "3.0.39", "Product": "Drivers", "Component": "EDAC", "Hardware": "All Linux", "causes": [{"cause": "Improper synchronization between rmmod and modprobe operations leading to premature device removal.", "code_file": "drivers/edac/edac_pci.c", "fix_solution": "Add a mutex or appropriate locking mechanism to synchronize rmmod and modprobe operations to prevent device removal while it is still being referenced."}, {"cause": "Incorrect error handling when devices fail to initialize after rmmod/modprobe cycle.", "code_file": "drivers/edac/i7core_edac.c", "fix_solution": "Update the initialization routine to properly check the return values of device setup calls and ensure the device state is reset correctly after failed initialization attempts."}, {"cause": "Device reference counting might not be properly managed during module unload/load cycles.", "code_file": "drivers/edac/edac_core.c", "fix_solution": "Ensure that device reference counts are incremented and decremented correctly during module load and unload operations, preventing access after free situations."}, {"cause": "Lack of cleanup for memory structures associated with the EDAC PCI instances upon module removal.", "code_file": "drivers/edac/edac_pci_sysfs.c", "fix_solution": "Implement comprehensive cleanup routines to free all allocated resources during module removal to prevent resource leaks or dangling pointers."}, {"cause": "Race condition in handling sysfs entries during module unload and subsequent load.", "code_file": "drivers/edac/edac_device.c", "fix_solution": "Introduce locking around sysfs creation and deletion operations to avoid race conditions that can lead to use-after-free or other undefined behaviors."}], "reranked_files": ["drivers/edac/edac_pci.c", "drivers/edac/i7core_edac.c", "drivers/edac/edac_core.c", "drivers/edac/edac_pci_sysfs.c", "drivers/edac/edac_device.c"], "input_tokens": 10961, "output_tokens": 370}
{"id": "45921", "paths": ["drivers/acpi/sleep.c"], "predicts": ["kernel/power/hibernate.c", "drivers/gpu/drm/i915/i915_suspend.c", "drivers/gpu/drm/i915/i915_drv.c", "kernel/power/suspend.c", "include/linux/pm.h", "arch/x86/power/hibernate_64.c", "kernel/freezer.c", "include/linux/freezer.h", "drivers/gpu/drm/i915/i915_irq.c", "arch/x86/power/hibernate_32.c"], "input_tokens_sum": 202063, "output_tokens_sum": 2203, "description": "The system in question can't suspend to ram, resume results in a reset and the system hanging in a broken bios (power off required).\n\nHibernate, however, works, but only, if CONFIG_SUSPEND=y and CONFIG_SUSPEND_FREEZER=y, otherwise resume from hibernate fails with two displays full of vertical bars and an otherwise fully locked up system.\n\nThe difference, as far as I can remember, is that if both options are set these vertical bars appear twice shortly on the main display during hibernation, when the options are not set they don't seem to appear.\n\nThe system is an Ivy Bridge system using the integrated HD4000 graphics, so i915 is in use.\n\nThe behavior is the same with 3.5.0 and 3.5.1. Kernel config attached.", "title": "resume from hibernate fails when \"Suspend to RAM and standby\" is disabled", "Kernel Version": "3.5", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "causes": [{"cause": "The system fails to resume from hibernate due to missing or incorrect handling of the graphics device state during the hibernation process.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Ensure that the i915 driver properly saves and restores the graphics state during hibernation and resume operations, particularly focusing on the handling of the HD4000 integrated graphics."}, {"cause": "The resume process does not correctly handle the power state transitions for devices when CONFIG_SUSPEND and CONFIG_SUSPEND_FREEZER are not set.", "code_file": "kernel/power/main.c", "fix_solution": "Modify the power management code to ensure that device states are correctly managed during hibernation and resume, even when CONFIG_SUSPEND and CONFIG_SUSPEND_FREEZER are disabled."}, {"cause": "The system's BIOS or ACPI implementation may not correctly support hibernation without suspend-to-RAM, leading to incorrect device state restoration.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Add additional checks and handling in the ACPI sleep code to ensure compatibility with systems that do not support suspend-to-RAM, focusing on proper state restoration during resume."}, {"cause": "The PM core does not correctly differentiate between suspend and hibernate operations, leading to incorrect device state handling.", "code_file": "drivers/base/power/main.c", "fix_solution": "Refactor the PM core to better distinguish between suspend and hibernate operations, ensuring that device state transitions are handled appropriately for each scenario."}, {"cause": "The graphics driver does not correctly handle interrupts during the hibernation and resume process, causing graphical corruption.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Ensure that the i915 driver correctly manages interrupts during hibernation and resume, particularly focusing on the HD4000 graphics to prevent graphical corruption."}], "reranked_files": ["drivers/gpu/drm/i915/i915_drv.c", "kernel/power/main.c", "drivers/acpi/sleep.c", "drivers/base/power/main.c", "drivers/gpu/drm/i915/i915_irq.c"], "input_tokens": 9081, "output_tokens": 440}
{"id": "43286", "paths": ["fs/nfs/nfs4proc.c"], "predicts": ["fs/nfs/nfs4proc.c", "fs/nfs/nfs4state.c", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "fs/nfs/internal.h"], "input_tokens_sum": 205733, "output_tokens_sum": 3354, "description": "I noticed while testing against a NetApp filer that the Linux NFSv4 client currently translates NFS4ERR_SHARE_DENIED errors to EIO; it would be nice if this was translated to something more sensible like EACCES.\n\n(This was on an Ubuntu 11.10 client, but AFAICT NFS4ERR_SHARE_DENIED is not\nreferenced in the mainline kernel tree either.)\n\n# uname -a\nLinux kjamieson 3.0.0-19-generic #33-Ubuntu SMP Thu Apr 19 19:05:14 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n# strace cat /mnt/file1\nopen(\"/mnt/file1\", O_RDONLY)     = -1 EIO (Input/output error)\n\nNetwork File System\n    [Program Version: 4]\n    [V4 Procedure: COMPOUND (1)]\n    Status: NFS4ERR_SHARE_DENIED (10015)\n    Tag: <EMPTY>\n        length: 0\n        contents: <EMPTY>\n    Operations (count: 3)\n        Opcode: PUTFH (22)\n            Status: NFS4_OK (0)\n        Opcode: SAVEFH (32)\n            Status: NFS4_OK (0)\n        Opcode: OPEN (18)\n            Status: NFS4ERR_SHARE_DENIED (10015)\n\n\nAs a point of comparison, Solaris appears to map NFS4", "title": "NFS4ERR_SHARE_DENIED errors are translated to EIO", "Kernel Version": "3.0", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "causes": [{"cause": "The NFSv4 client is incorrectly mapping NFS4ERR_SHARE_DENIED to EIO instead of a more appropriate error code like EACCES.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Modify the error mapping in nfs4_map_errors to translate NFS4ERR_SHARE_DENIED to EACCES instead of EIO."}, {"cause": "The error handling logic in the NFSv4 client does not properly distinguish between different NFS4 error codes, leading to incorrect error translation.", "code_file": "fs/nfs/nfs4state.c", "fix_solution": "Update the error handling logic to include a specific case for NFS4ERR_SHARE_DENIED, mapping it to EACCES."}, {"cause": "The NFSv4 client lacks a specific error handling case for NFS4ERR_SHARE_DENIED, defaulting to a generic error code.", "code_file": "fs/nfs/nfs4xdr.c", "fix_solution": "Add a case in the error handling switch statement to map NFS4ERR_SHARE_DENIED to EACCES."}], "reranked_files": ["fs/nfs/nfs4proc.c", "fs/nfs/nfs4state.c", "fs/nfs/nfs4xdr.c"], "input_tokens": 10831, "output_tokens": 264}
{"id": "43163", "paths": ["drivers/gpu/drm/i915/intel_dp.c"], "predicts": ["drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_gem.c", "drivers/gpu/drm/i915/i915_drv.h", "include/drm/drmP.h", "include/drm/drm.h", "include/video/edid.h", "arch/x86/video/fbdev.c", "include/linux/fb.h"], "input_tokens_sum": 198996, "output_tokens_sum": 2761, "description": "On every boot under 3.3.3 the system starts to a black screen. I can login and startx at which point the screen works. \n\nWhen switching display via Xrandr the other monitor works without issue, however going back to the laptop display makes the black screen come back. Switching back and forth between display several times reactivates the laptop display.\n\nThe system was booting fine in 3.3.1 however xrandr had occasional issues. \n3.1.10 was perfect.", "title": "[ILK eDP] Black Screen on Boot for Dell Latitude E6410 Intel HD Graphics (panel power sequencing fail?)", "Kernel Version": "3.3.3", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "Panel power sequencing issues due to incorrect initialization of the display on Intel graphics.", "code_file": "drivers/gpu/drm/i915/intel_dp.c", "fix_solution": "Ensure proper initialization and power sequencing for the embedded DisplayPort (eDP) during boot, particularly for Intel HD Graphics used in Dell Latitude E6410."}, {"cause": "Race condition in applying display modes or settings leading to improper framebuffer updates at boot.", "code_file": "drivers/gpu/drm/drm_fb_helper.c", "fix_solution": "Add locks or checks to ensure that mode settings are applied after all required hardware components are ready to avoid race conditions."}, {"cause": "Timeouts or inefficiencies in the deferred IO handling leading to blank screen on initial framebuffer access.", "code_file": "drivers/video/fb_defio.c", "fix_solution": "Optimize or adjust the delay in deferred IO operations to ensure timely updates to the framebuffer on initial access."}, {"cause": "Incorrect handling of the display power management in the framebuffer or graphics driver causing blank screen after certain operations.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Modify power management code to properly reinstate display power state when switching back to the laptop display after switching displays."}], "reranked_files": ["drivers/gpu/drm/i915/intel_dp.c", "drivers/gpu/drm/drm_fb_helper.c", "drivers/video/fb_defio.c", "drivers/gpu/drm/i915/intel_display.c"], "input_tokens": 10017, "output_tokens": 300}
{"id": "43088", "paths": ["drivers/gpu/drm/i915/intel_display.c"], "predicts": ["drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_suspend.c", "drivers/gpu/drm/i915/intel_display.c", "include/drm/drm_mode.h", "include/drm/i915_drm.h", "kernel/power/hibernate.c", "kernel/power/suspend.c", "arch/x86/video/fbdev.c", "kernel/power/power.h"], "input_tokens_sum": 197159, "output_tokens_sum": 2370, "description": "Created attachment 72873 [details]\nlspci -vvnn\n\nHello,\n\nI have the Ubuntu 12.04 beta2 x86_64 with a mainline kernel 3.2.14 installed on a FUJITSU SIEMENS ESPRIMO Mobile M9400 notebook with an Intel Corporation Mobile GM965/GL960 Integrated Graphics Controller (lspci -vvnn attached), and I'm experiencing GPU hangups several times a day (dmesg output attached).\n\nEverything is well as long as I don't leave the computer for long enough for a DPMS powersaving to kick in (set to 5 minutes in Unity). If I'm away long enough, there is a good chance I'll find the GPU hanged up upon return. Unfortunately, I'm not able to reproduce this issue at will and have to wait for it to happen.\n\nIf there is anything I can do to help to resolve this, I'll gladly do so.\n\nMartin Senft", "title": "[965GM] hang at DPMS time", "Kernel Version": "3.2.14", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The GPU hang might be caused by improper handling of DPMS (Display Power Management Signaling) events, leading to the GPU not resuming correctly after power-saving mode.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Ensure that the DPMS events are correctly handled by adding checks and handling code in the interrupt handler to properly reset or reinitialize the GPU state after a DPMS event."}, {"cause": "The issue could be related to the improper initialization or cleanup of the Intel OpRegion, which is responsible for ACPI and power management interactions.", "code_file": "drivers/gpu/drm/i915/i915_opregion.c", "fix_solution": "Add additional checks and ensure that the OpRegion is correctly initialized and freed during suspend and resume operations to prevent GPU hangs."}, {"cause": "The GPU hang might be due to incorrect handling of backlight or power management interrupts, which could interfere with the GPU's ability to resume from a low-power state.", "code_file": "drivers/gpu/drm/i915/i915_dma.c", "fix_solution": "Modify the interrupt handling logic to ensure that all power management and backlight interrupts are correctly processed and do not leave the GPU in an inconsistent state."}, {"cause": "There might be a race condition or improper synchronization in the handling of ACPI events related to display power management.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Implement proper locking mechanisms around ACPI event handling to ensure that the GPU state is consistently managed during power state transitions."}], "reranked_files": ["drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_opregion.c", "drivers/gpu/drm/i915/i915_dma.c", "drivers/gpu/drm/i915/i915_drv.c"], "input_tokens": 9916, "output_tokens": 367}
{"id": "42981", "paths": ["drivers/acpi/acpi_pad.c"], "predicts": ["drivers/acpi/processor_idle.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/processor.h", "arch/x86/include/asm/idle.h", "drivers/acpi/processor_thermal.c", "drivers/acpi/bus.c", "drivers/acpi/glue.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h"], "input_tokens_sum": 162364, "output_tokens_sum": 2822, "description": "Processors' Idling, as defined in \"Processor Aggregator Device\" chapter of ACPI 4.0a spec, isn't stable, it doesn't handle big changes of the active cores well. Slow changes (e.g. 2 cores idled or activated every second) are OK, but drastic changes of the number of active cores cause whole FW-OS communication to stop (communication using ACPI defined interface). It happens especially when bigger number of cores (8 or more) is reactivated.\n\nVersion-Release number of selected component (if applicable):\nI've tested it using kernel 2.6.32 and newer, e.g. 3.1.4 with the same results.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Request OS to idle 8 or more cores as described in \"Processor Aggregator\nDevice\" chapter of ACPI 4.0a spec.\n2. Request OS to make all cores active.\n3. Repeat steps with bigger number of cores to idle if necessary.\nActual Results:  \nCores are active again but communication with the firmware using ASL code is\nstopped, no _OST response from OS. power_saving processes a", "title": "Processor Aggregator Device is not stable causing FW-OS communication to stop", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Processor", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ACPI processor idle code does not handle rapid changes in the number of active cores, leading to unstable communication with the firmware.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Implement a mechanism to stabilize the transition between idle states when a large number of cores are activated or deactivated simultaneously."}, {"cause": "The bus master activity check may not be accurately reflecting the true state of bus mastering activity, causing faulty transitions.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Enhance the bus master activity detection logic to ensure accurate status reporting and prevent unnecessary demotion of power states."}, {"cause": "The current c-state selection algorithm may not be optimal for handling sudden bursts of activity, leading to communication issues.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Refine the c-state selection algorithm to better predict and handle sudden changes in core activity, ensuring stable communication with the firmware."}, {"cause": "The processor idle code may not be properly managing the bus master arbitration during transitions to deeper c-states.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Ensure that bus master arbitration is correctly managed during transitions to deeper c-states, especially when multiple cores are involved."}, {"cause": "The latency and residency calculations for c-states may not be accurately predicting the required power state transitions.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Improve the latency and residency calculations to ensure that the processor enters the most appropriate c-state based on current system conditions."}], "reranked_files": ["drivers/acpi/processor_idle.c"], "input_tokens": 10043, "output_tokens": 379}
{"id": "41672", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "include/acpi/video.h", "drivers/acpi/button.c", "drivers/gpu/drm/i915/intel_acpi.c", "include/linux/backlight.h"], "input_tokens_sum": 194399, "output_tokens_sum": 1660, "description": "No backlight options will be available on a Lenovo V570.  I've tried it with several different kernel versions including 3.1-rc3.  In all cases dmesg has the error  ACPI Error: Current brightness invalid. \n\nIt appears the kernel believes the machine is multi-headed.  It does the right thing for the first head it sees and then gets the invalid brightness on the second head which causes it to assume acpi brightness won't work.  The laptop has the standard external D-sub connector for an external monitor, but there is nothing connected to it.  In fact, if I make the ugly hack of commenting out the multihead check in acpi_video_bus_check() then backlight control works fine.\n\nI'll attach the acpidump, dmesg, and ugly hack.", "title": "backlight control will not work on Lenovo V570", "Kernel Version": "3.1-rc3", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video driver incorrectly assumes the presence of multiple video heads, leading to invalid brightness settings.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the acpi_video_bus_check() function to correctly handle single-head configurations by checking the actual connected displays before assuming multi-head support."}, {"cause": "The ACPI video driver does not correctly handle the absence of an external monitor, leading to invalid brightness settings.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Update the acpi_is_video_device() function to ensure it accurately detects the presence of connected displays and does not assume multi-head configurations without verification."}, {"cause": "The ACPI video driver fails to correctly initialize brightness levels when multiple video outputs are detected.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that acpi_video_init_brightness() initializes brightness levels only for active and connected displays, avoiding invalid configurations."}, {"cause": "The ACPI video driver does not correctly prioritize the internal display for brightness control when no external display is connected.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the logic in acpi_video_device_find_cap() to prioritize the internal display for brightness control when no external display is detected."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c"], "input_tokens": 9294, "output_tokens": 303}
{"id": "41342", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/core/control.c", "sound/core/pcm.c"], "input_tokens_sum": 197549, "output_tokens_sum": 1907, "description": "The audio volume is much, much louder in 3.1-rc2 and -rc1 compared to kernel 3.0 and earlier for my card:\n\n00:1b.0 Audio device: Intel Corporation 6 Series Chipset Family High Definition Audio Controller (rev 05)\n\tSubsystem: Dell Device 050e\n\tFlags: bus master, fast devsel, latency 0, IRQ 53\n\tMemory at f1c00000 (64-bit, non-prefetchable) [size=16K]\n\tCapabilities: <access denied>\n\tKernel driver in use: snd_hda_intel\n\tKernel modules: snd-hda-intel\n\n\nSound blasts out deafeningly unless I use alsamixer to adjust Master to zero (alsamixer says this is -64dB) and PCM to near to zero (eg a value like 27, ie -29dB).\n\nNote that with kernel 3.0, adjusting PCM in alsamixer does not affect the sound gain, but in 3.1 it (luckily!) does. It's quite difficult to adjust the sound to a non-painful level using gnome-volume control because the gain is biased so high.", "title": "Audio gain is massively higher in kernel 3.1", "Kernel Version": "3.0-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "causes": [{"cause": "The audio gain control logic in the snd_hda_intel driver may have been altered, leading to higher default gain settings.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Adjust the default gain settings in the codec initialization function to match the previous kernel version's settings."}, {"cause": "Changes in the handling of PCM volume control in the ALSA subsystem may have affected the gain levels.", "code_file": "sound/core/control.c", "fix_solution": "Revert or modify the changes related to PCM volume control to ensure consistent gain levels across kernel versions."}, {"cause": "The AC_VERB_SET_AMP_GAIN_MUTE verb might not be correctly applied during initialization, leading to incorrect gain settings.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the AC_VERB_SET_AMP_GAIN_MUTE verb is correctly set during the codec initialization process."}, {"cause": "The handling of digital audio output settings may have been changed, affecting the gain levels.", "code_file": "sound/pci/hda/patch_nvhdmi.c", "fix_solution": "Review and adjust the digital audio output settings to ensure they do not inadvertently increase gain levels."}, {"cause": "The resume logic in the snd_hda_intel driver may not restore the correct gain settings after a suspend/resume cycle.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Add logic to restore the correct gain settings during the resume process."}], "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/core/control.c", "sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_nvhdmi.c"], "input_tokens": 10014, "output_tokens": 364}
{"id": "40042", "paths": ["drivers/net/wireless/iwlwifi/iwl-agn-rs.c"], "predicts": ["drivers/net/wireless/iwlwifi/iwl-5000.c", "net/mac80211/agg-tx.c", "net/mac80211/main.c", "include/net/mac80211.h", "include/linux/ieee80211.h"], "input_tokens_sum": 238332, "output_tokens_sum": 11247, "description": "Hi.\n\nI'm trying to get 802.11n working with followed card:\n\n   02:00.0 Network controller: Intel Corporation WiFi Link 5100\n\nIt's inside ASUS F6A laptop. I'm connecting it to another machine with:\n   \n   01:00.0 Network controller: Atheros Communications Inc. AR5008 Wireless Network Adapter (rev 01)\n\nAtheros card is in AP mode (with hostapd). And just after connecting I'm getting followed messages:\n\n[132378.252140] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132404.533559] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 3\n[132427.820093] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132445.826017] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 1\n[132448.868061] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132472.781121] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 0\n[132479.995679] iwlagn 0000:02:00.0: Aggregation not enabled", "title": "iwlagn: bad 802.11n performance and \"aggregation not enabled\" flood in dmesg", "Kernel Version": "3.0", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "causes": [{"cause": "The iwlagn driver does not properly handle the conditions required to enable aggregation, possibly due to incorrect state management or load checks.", "code_file": "drivers/net/wireless/intel/iwlegacy/iwl-agn-tx.c", "fix_solution": "Review and adjust the load checks and state transitions for enabling aggregation in iwlagn to ensure proper handling and enabling under expected conditions."}, {"cause": "The interaction between iwlagn and mac80211 is flawed, resulting in aggregation being disabled due to incorrect handling of management frames.", "code_file": "net/mac80211/agg-tx.c", "fix_solution": "Ensure proper teardown and initialization of aggregation sessions in mac80211, especially during driver state changes or resume/suspend operations."}, {"cause": "Ineffective or missing checks for AMPDU (Aggregation) capabilities on hardware, causing the system to not attempt aggregation properly.", "code_file": "drivers/net/wireless/intel/iwlegacy/iwl-agn-rx.c", "fix_solution": "Make sure that the hardware capabilities for AMPDU are properly checked and utilized in the RX path to avoid premature abandonment of aggregation attempts."}, {"cause": "The system may be initiating aggregation too late or failing to request permission from the AP in a timely manner.", "code_file": "net/mac80211/mlme.c", "fix_solution": "Adjust the timing and handling of AddBA requests to ensure they are issued promptly when connecting to compliant APs."}], "reranked_files": ["drivers/net/wireless/intel/iwlegacy/iwl-agn-tx.c", "net/mac80211/agg-tx.c", "drivers/net/wireless/intel/iwlegacy/iwl-agn-rx.c", "net/mac80211/mlme.c"], "input_tokens": 10723, "output_tokens": 343}
{"id": "36082", "paths": ["drivers/platform/x86/samsung-laptop.c"], "predicts": ["drivers/platform/x86/samsung-laptop.c", "arch/x86/include/asm/dmi.h", "include/linux/dmi.h"], "input_tokens_sum": 190760, "output_tokens_sum": 1404, "description": "The samsung-laptop driver fails to load on my laptop (N150), due to a DMI mismatch: the driver expexts N230 to be in the identifier (and product/board name), whereas my laptop only includes N150/N210/N220.\n\nFull DMI output is attached.", "title": "samsung-laptop: N150 DMI mismatch", "Kernel Version": "2.6.39", "Product": "Drivers", "Component": "Platform_x86", "Hardware": "All Linux", "causes": [{"cause": "The samsung-laptop driver has a hardcoded DMI match for N230, which does not include the N150/N210/N220 identifiers.", "code_file": "drivers/platform/x86/samsung-laptop.c", "fix_solution": "Add DMI match entries for N150, N210, and N220 in the samsung-laptop driver to ensure it loads correctly on these models."}, {"cause": "The DMI-based module autoloading mechanism does not recognize the N150/N210/N220 identifiers due to missing or incorrect MODULE_ALIAS entries.", "code_file": "drivers/firmware/dmi-id.c", "fix_solution": "Update or add MODULE_ALIAS entries to include the DMI identifiers for N150, N210, and N220 to ensure proper autoloading."}, {"cause": "The DMI information exported to userspace might be incomplete or incorrect, leading to a mismatch in expected identifiers.", "code_file": "drivers/firmware/dmi_scan.c", "fix_solution": "Ensure that the DMI information for N150, N210, and N220 is correctly parsed and exported to userspace."}], "reranked_files": ["drivers/platform/x86/samsung-laptop.c", "drivers/firmware/dmi-id.c", "drivers/firmware/dmi_scan.c"], "input_tokens": 10393, "output_tokens": 262}
{"id": "35472", "paths": ["drivers/gpu/drm/radeon/rv770.c"], "predicts": ["drivers/gpu/drm/radeon/rv770.c", "drivers/gpu/drm/radeon/r600_cp.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_cs.c", "include/drm/radeon_drm.h"], "input_tokens_sum": 192278, "output_tokens_sum": 2361, "description": "with 2.6.37 it's all OK but since 2.6.38 from very framebuffer initialization screen is filled with dense grey lines looking like ugly grid. also per every 3cm on my 1920x1080/23' screen there is a distinctive whitish vertical line.\nwhen X try to startup i can see cursor and can move it around for a while (that grey grid is there too) but kdm does not starting up and GPU locks up.\n\nit is the same with 2.6.39. here is `dmesg|grep drm` for 2.6.39:\n[    0.462282] [drm] Initialized drm 1.1.0 20060810\n[    0.462315] [drm] radeon defaulting to kernel modesetting.\n[    0.462337] [drm] radeon kernel modesetting enabled.\n[    0.462575] [drm] initializing kernel modesetting (RV770 0x1002:0x944E).\n[    0.462608] [drm] register mmio base: 0xFDFE0000\n[    0.462630] [drm] register mmio size: 65536\n[    0.463313] [drm] Detected VRAM RAM=512M, BAR=256M\n[    0.463343] [drm] RAM width 128bits DDR\n[    0.463526] [drm] radeon: 512M of VRAM memory ready\n[    0.463549] [drm] radeon: 512M of GTT memory ready", "title": "[bisected] [r600] radeondrmfb rendering is broken and running X makes GPU lock-up on RV770 CE (Radeon HD 4730)", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The GPU acceleration initialization fails, leading to rendering issues and GPU lock-up.", "code_file": "drivers/gpu/drm/radeon/r600.c", "fix_solution": "Ensure proper initialization of GPU acceleration by checking and setting the 'accel_working' flag correctly during the initialization process."}, {"cause": "Incorrect handling of AGP mode causing GPU lock-up when acceleration fails.", "code_file": "drivers/gpu/drm/radeon/radeon_device.c", "fix_solution": "Implement a fallback mechanism to switch from AGP to PCI/PCIE mode when acceleration fails, ensuring the 'accel_working' flag is checked and updated appropriately."}, {"cause": "Improper memory management during command stream parsing leading to rendering artifacts.", "code_file": "drivers/gpu/drm/radeon/radeon_cs.c", "fix_solution": "Optimize memory allocation and deallocation for command stream parsing to prevent frequent memory operations that could lead to rendering issues."}, {"cause": "Failure in initializing the blitter and IB pool, causing rendering issues.", "code_file": "drivers/gpu/drm/radeon/rv770.c", "fix_solution": "Add checks and error handling for blitter and IB pool initialization, ensuring that failures are logged and handled gracefully."}, {"cause": "Incorrect initialization order of components leading to GPU lock-up.", "code_file": "drivers/gpu/drm/radeon/radeon_drv.c", "fix_solution": "Adjust the initialization order to ensure TTM is initialized before Radeon when KMS is enabled, preventing hard kernel crashes."}], "reranked_files": ["drivers/gpu/drm/radeon/r600.c", "drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_cs.c", "drivers/gpu/drm/radeon/rv770.c", "drivers/gpu/drm/radeon/radeon_drv.c"], "input_tokens": 11522, "output_tokens": 363}
{"id": "34252", "paths": ["drivers/gpu/vga/vga_switcheroo.c"], "predicts": ["drivers/vga/vga_switcheroo.c", "include/linux/vga_switcheroo.h", "drivers/gpu/drm/radeon/radeon_atpx_handler.c"], "input_tokens_sum": 209773, "output_tokens_sum": 6472, "description": "Created attachment 56262 [details]\nKernel config\n\nTrying to setup script, that switches video cards, I ran into the situation when I left with a black screen not possible to do anything with the system.\nHere is an example:\n\n# cat /sys/kernel/debug/vgaswitcheroo/switch\n0:IGD:+:Pwr:0000:01:05.0\n1:DIS: :Pwr:0000:02:00.0\n# echo IGD > /sys/kernel/debug/vgaswitcheroo/switch\n# cat /sys/kernel/debug/vgaswitcheroo/switch\n0:IGD:+:Off:0000:01:05.0\n1:DIS: :Pwr:0000:02:00.0\n\nI think that this behaviour is buggy and this should not happen.\n\nEnvironment:\n# lspci | grep -i vga\n01:05.0 VGA compatible controller: ATI Technologies Inc RS780M/RS780MN [Radeon HD 3200 Graphics]\n02:00.0 VGA compatible controller: ATI Technologies Inc M93 [Mobility Radeon HD 4500 Series]\n# uname -a\nLinux garik-laptop 2.6.39-rc5+ #8 SMP Sat Apr 30 18:36:12 MSD 2011 x86_64 AMD Athlon(tm) Neo Processor MV-40 AuthenticAMD GNU/Linux", "title": "Unexpected behaviour when switching video cards with vga_switcheroo", "Kernel Version": "2.6.39-rc5", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "VGA switcheroo is not properly handling the power states of the integrated and discrete GPUs during the switch, leading to an improper transition and black screen.", "code_file": "drivers/gpu/vga/vga_switcheroo.c", "fix_solution": "Ensure proper handling of power states when switching GPUs, making sure both GPUs are in a correct and stable state post-switch. This might involve updating the power state management logic to include all necessary power transition commands for the hardware in use."}, {"cause": "The code is not correctly updating the display output route after switching from the integrated to the discrete graphics, resulting in no signal being sent to the screen.", "code_file": "drivers/gpu/drm/drm_crtc_helper.c", "fix_solution": "Add a sequence that properly re-initializes the display routing after a GPU switch through vga_switcheroo to ensure that the output is directed to the active adapter."}, {"cause": "The system does not have adequate delay between power-down of one GPU and power-up of another, causing the switching process to fail.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Introduce a delay or check to ensure that the GPU being powered down is completely inactive before the other one is powered up. This can be done by ensuring the ACPI callbacks complete successfully prior to the transition."}, {"cause": "Missing or incorrect handling of PCI configuration registers during the GPU switch, leading to one of the GPUs being in an unusable state.", "code_file": "drivers/pci/pci.c", "fix_solution": "Ensure that both GPUs have their PCI configuration registers properly restored and validated post-switch, using proper save and restore mechanics for the relevant registers."}], "reranked_files": ["drivers/gpu/vga/vga_switcheroo.c", "drivers/gpu/drm/drm_crtc_helper.c", "drivers/acpi/video_detect.c", "drivers/pci/pci.c"], "input_tokens": 689, "output_tokens": 387}
{"id": "33812", "paths": ["drivers/gpu/drm/radeon/radeon_atombios.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/drm_modes.c", "drivers/gpu/vga/vga_switcheroo.c", "include/drm/radeon_drm.h", "include/drm/i915_drm.h", "include/linux/vga_switcheroo.h", "include/video/radeon.h", "arch/x86/video/fbdev.c"], "input_tokens_sum": 185034, "output_tokens_sum": 1712, "description": "Created attachment 54942 [details]\nkernel log\n\nSystem: Lenovo ThinkPad T500\n00:02.0 VGA compatible controller: Intel Corporation Mobile 4 Series Chipset Integrated Graphics Controller (rev 07)\n01:00.0 VGA compatible controller: ATI Technologies Inc Mobility Radeon HD 3650\nusing vgaswitcheroo\n\nTrying to load radeon (as a module or in kernel) with modeset not explicitly disabled causes a kernel NULL pointer dereference if i915 has initialised the fb console already. \nThat behaviour did not occur in 2.6.38, only after upgrading to 2.6.38.3 (haven't had the time to bisect yet).\n\nIf I disable switching in the BIOS and move to the radeon card as exclusive adapter, everything works fine. with dual graphics stack", "title": "radeon with modeset option causes oops as secondary adapter (vgaswitcheroo)", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The radeon modeset is causing a NULL pointer dereference due to uninitialized or incorrect data structures when used as a secondary adapter with the Intel i915 driver initializing fb console first.", "code_file": "drivers/gpu/drm/radeon/radeon_device.c", "fix_solution": "Ensure proper initialization of data structures related to modesetting in radeon when configuring multiple GPUs, especially interacting with already initialized i915 structures."}, {"cause": "vgaswitcheroo's poor handling of dynamic GPU switching leading to a race condition where radeon initialization conflicts with previously initialized resources by the i915 driver.", "code_file": "drivers/gpu/vga/vgaswitcheroo.c", "fix_solution": "Implement proper locking mechanisms and checks in vgaswitcheroo to safely switch between the Intel and Radeon GPU without causing conflicts."}, {"cause": "Incorrect handling or lack of handling for VGA arbitration in a system with multiple GPUs, leading to resource conflicts such as I/O ports or IRQ lines.", "code_file": "drivers/gpu/drm/drm_ioctl.c", "fix_solution": "Add additional logic to properly manage VGA arbitration when multiple GPU drivers are loaded, ensuring one driver does not interfere with another."}, {"cause": "Potential issues with framebuffer console takeover by the i915 driver, not relinquishing resources or adequately preparing for Radeon modesetting as a secondary adapter.", "code_file": "drivers/gpu/drm/i915/intel_fb.c", "fix_solution": "Modify intel_fb.c to actively release or share framebuffer console resources when a secondary GPU like Radeon is initialized."}], "reranked_files": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/vga/vgaswitcheroo.c", "drivers/gpu/drm/drm_ioctl.c", "drivers/gpu/drm/i915/intel_fb.c"], "input_tokens": 10202, "output_tokens": 357}
{"id": "33232", "paths": ["drivers/net/wireless/zd1211rw/zd_mac.c"], "predicts": ["net/wireless/scan.c", "include/net/cfg80211.h"], "input_tokens_sum": 194648, "output_tokens_sum": 1324, "description": "Hello\nReported just to keep track, system seems to work.\n\n- latest updates installed\n- window with stop sign displayed on desktop every time after full loading re kernel developed a serious problem ....\n- os still functional in spite of above mssge (can perform updates, use mail, browse)\n\nProblemType: KernelOops\nDistroRelease: Ubuntu 11.04\nPackage: linux-image-2.6.38-8-generic 2.6.38-8.42\n\n[   52.942507] WARNING: at /build/buildd/linux-2.6.38/net/wireless/scan.c:591 cfg80211_inform_bss_frame+0x1da/0x1f0 [cfg80211]()\n[   52.942509] Hardware name: GA-MA78GM-S2HP\n[   52.942510] Modules linked in: binfmt_misc nls_iso8859_1 nls_cp437 vfat fat snd_hda_codec_hdmi arc4 snd_hda_codec_realtek snd_usb_audio snd_hda_intel snd_hda_codec zd1211rw ppdev mac80211 snd_pcm snd_hwdep snd_usbmidi_lib snd_seq_midi snd_rawmidi snd_seq_midi_event radeon snd_seq snd_timer psmouse snd_seq_device cfg80211 serio_raw uvcvideo videodev v4l2_compat_ioctl32 ttm snd k10temp edac_core drm_kms_helper edac_mce_amd parpo", "title": "WARNING: at /build/buildd/linux-2.6.38/net/wireless/scan.c:591 cfg80211_inform_bss_frame 0x1da/0x1f0 [cfg80211]()", "Kernel Version": "2.6.38", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "causes": [{"cause": "Unresolved NULL pointer dereferencing in cfg80211_inform_bss_frame when processing information elements.", "code_file": "net/wireless/scan.c", "fix_solution": "Add a check for NULL pointers near line 591 where cfg80211_inform_bss_frame processes information elements to prevent dereferencing."}, {"cause": "Incorrect regulatory flag handling for passive scan and beacon detection.", "code_file": "net/wireless/reg.c", "fix_solution": "Ensure regulatory hints correctly update flags by adding conditions to retain original channel flags, preventing improper flag lifting on beacon hints."}, {"cause": "Improper signal strength validation leading to incorrect handling of signal values.", "code_file": "net/wireless/scan.c", "fix_solution": "Improve signal validation near line 591 of cfg80211_inform_bss_frame to ensure signal values are within expected range based on the wiphy signal_type."}, {"cause": "Failed compliance with regulatory domain settings causing unintended execution paths for monitor mode injection.", "code_file": "net/mac80211/tx.c", "fix_solution": "Implement proper checks before Tx operations to ensure regulatory rules are respected, especially for injected frames in monitor mode."}], "reranked_files": ["net/wireless/scan.c", "net/wireless/reg.c", "net/mac80211/tx.c"], "input_tokens": 10125, "output_tokens": 280}
{"id": "32592", "paths": ["drivers/acpi/video_detect.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/power.c", "include/acpi/video.h", "include/acpi/acpi_drivers.h", "arch/x86/pci/acpi.c", "kernel/power/main.c", "kernel/power/suspend.c", "kernel/power/power.h"], "input_tokens_sum": 200165, "output_tokens_sum": 2530, "description": "Created attachment 53362 [details]\nAsus UL30VT Bios 211 DSDT\n\nAsus UL30VT backlight control only works with acpi_osi=\"Linux\" acpi_osi=\"!Windows 2009\".  Without these options, I get a desktop notification for the brightness when using the Fn brightness up/down keys, but no change in display brightness.  Likewise the sysfs brightness control thinks it's doing it's job when I read and write the file, but there's no change in the display state.  Either method causes the display brightness to change when the system is rebooted, as if Linux setup the change, but didn't actually flush it out to hardware.", "title": "Asus UL30VT backlight control only works with acpi_osi=\"Linux\" acpi_osi=\"!Windows 2009\"", "Kernel Version": "3.2", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video subsystem incorrectly implements the backlight control or is overridden by vendor-specific functionality.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure the ACPI video driver has exclusive control over backlight functions by adjusting the acpi_backlight parameter handling and interaction with vendor-specific drivers."}, {"cause": "ACPI method checks are incomplete or incorrectly identify video devices, resulting in missed backlight control implementations.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Modify the device capability checks within acpi_is_video_device and acpi_video_get_capabilities to better identify valid ACPI video devices with backlight control."}, {"cause": "BIOS interactions misrepresent the supported and available ACPI methods for video control, leading to inadequate configuration of the video interface.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Improve ACPI device discovery and add stricter checks by modifying acpi_video_get_capabilities to ensure availability of all necessary methods for brightness control."}, {"cause": "The sysfs backlight interface does not correctly map the ACPI reported levels to the system's brightness levels.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the sysfs interface in the acpi_video_set_brightness function to translate between ACPI method outputs and valid brightness levels via the backlight framework."}, {"cause": "There is a lack of synchronization between ACPI notifications and backlight state updates, resulting in brightness changes not taking effect immediately.", "code_file": "drivers/acpi/video.c", "fix_solution": "Implement a mechanism to immediately apply changes to hardware upon receiving a backlight brightness update event."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c", "drivers/acpi/scan.c"], "input_tokens": 9201, "output_tokens": 393}
{"id": "32402", "paths": ["drivers/gpu/drm/radeon/radeon_display.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_irq_kms.c", "drivers/gpu/drm/radeon/radeon_gem.c", "drivers/gpu/drm/radeon/radeon_drv.c", "kernel/workqueue.c", "mm/memory.c", "arch/x86/mm/fault.c", "lib/dma-debug.c", "init/main.c", "include/linux/workqueue.h"], "input_tokens_sum": 197183, "output_tokens_sum": 2125, "description": "If this system (LFS build) is left idle for several hours with xscreensaver running(don't currently know which screen saver app. I am assuming one of the Mesa 3D ones) the system will oops. The system is locked solid and there is no trace in messages.old on reboot. The attached jpg is a photo of the screen at system failure. I first noticed the problem in 2.6.38-rc8 but have waited until now to report the problem in the hope of obtaining a more repeatable scenario.\n\nVersion info:\n\nXorg server 1.10.0\nXorg ati driver 6.14.1\nlibdrm-2.4.24\nMesa-7.10.1\n\nProcessor  AMD Phenom(tm) II X4 940 Processor\n\nLinux Andromeda 2.6.38.2 #1 SMP Mon Mar 28 22:17:13 BST 2011 i686 athlon-4 i386 GNU/Linux\n \nGnu C                  4.6.0\nGnu make               3.81\nbinutils               2.21\nutil-linux             2.14.1\nmount                  support\nmodule-init-tools      3.5\ne2fsprogs              1.41.4\nLinux C Library        2.13\nDynamic linker (ldd)   2.13\nLinux C++ Library      6.0.15\nProcps           ", "title": "Oops associated with radeon_unpin_work_func", "Kernel Version": "2.6.39", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "Memory handling issue during unpin operation in radeon_unpin_work_func leading to a null pointer dereference or use-after-free.", "code_file": "drivers/gpu/drm/radeon/radeon_object.c", "fix_solution": "Ensure proper locking and reference counting around the memory unpinning operations to prevent race conditions and ensure safe access to objects."}, {"cause": "Incorrect synchronization mechanisms being used around hardware interactions in the driver's asynchronous work functions.", "code_file": "drivers/gpu/drm/radeon/radeon_fence.c", "fix_solution": "Add necessary locking to protect shared data structures that might be accessed concurrently by different parts of the driver."}, {"cause": "The screen saver is triggering a specific rendering path involving RADEON CRTC management, possibly exposing bugs in how display buffers are managed during suspend/resume.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Analyze the suspend/resume paths in the display management code and ensure that all resources are re-initialized correctly, and add checks for resource readiness before use."}, {"cause": "The memory allocator used in the graphics driver may not handle high-demand scenarios well, leading to corrupt states or unmet memory operations.", "code_file": "mm/slub.c", "fix_solution": "Review and tune the memory allocation strategy for the workload pattern and ensure that all allocations check for success and handle failures gracefully."}, {"cause": "Erroneous pointer arithmetic or mismanagement of the framebuffer in the driver leading to crashes.", "code_file": "drivers/gpu/drm/radeon/radeon_drv.c", "fix_solution": "Audit all pointer arithmetic and array indexing to ensure they remain within bounds, especially when modifying or accessing the framebuffer contents."}], "reranked_files": ["drivers/gpu/drm/radeon/radeon_object.c", "drivers/gpu/drm/radeon/radeon_fence.c", "drivers/gpu/drm/radeon/radeon_display.c", "mm/slub.c", "drivers/gpu/drm/radeon/radeon_drv.c"], "input_tokens": 7689, "output_tokens": 404}
{"id": "32052", "paths": ["drivers/platform/x86/wmi.c"], "predicts": ["drivers/platform/x86/acer-wmi.c", "drivers/platform/x86/wmi.c", "include/linux/module.h", "kernel/module.c", "net/rfkill/core.c", "include/linux/rfkill.h"], "input_tokens_sum": 226162, "output_tokens_sum": 4785, "description": "Created attachment 52302 [details]\nlspci -vvv\n\nHello.\n\nI have Acer Aspire TimelineX 1830T so I'm using acer_wmi module. Since 2.6.37 there is a regression which is causing a NULL pointer dereference and kernel oops.\n\nSteps to reproduce:\n1. Boot any kernel newer than 2.6.37 (tested on 2.6.37.1, .3, .4, .5 and 2.6.38.1) with acer_wmi built as module\n2. Run \"modprobe -r acer_wmi\"\n3. Kernel oops!\n\nOn 2.6.36, .1, .2, .4 works flawlessly.\nRunning ArchLinux x86_64.\n\nlspci -vvv and appropriate part of everything.log attached. \nCan provide any other info if needed.", "title": "Unloading wmi module causes a kernel oops.", "Kernel Version": "2.6.37", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "x86-64 Linux", "causes": [{"cause": "NULL pointer dereference when unloading the acer_wmi module due to improper cleanup of resources.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Ensure that all resources allocated by the acer_wmi module are properly freed during module unload, including any pointers that may be dereferenced."}, {"cause": "Race condition during module unloading leading to invalid memory access.", "code_file": "kernel/module.c", "fix_solution": "Add synchronization mechanisms to prevent race conditions during module unloading, ensuring that no resources are accessed after they have been freed."}, {"cause": "Improper handling of module reference counts leading to premature unloading.", "code_file": "kernel/module.c", "fix_solution": "Verify and correct the reference counting logic to ensure that the module is not unloaded while it is still in use."}, {"cause": "Missing checks for module state during unloading, leading to operations on an invalid module state.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Add checks to ensure that operations are only performed on modules that are in a valid state during unloading."}, {"cause": "Incorrect handling of module dependencies leading to unloading of dependent modules prematurely.", "code_file": "kernel/module.c", "fix_solution": "Ensure that module dependencies are correctly managed and that dependent modules are not unloaded before their dependencies."}], "reranked_files": ["drivers/platform/x86/acer-wmi.c", "kernel/module.c"], "input_tokens": 9525, "output_tokens": 321}
{"id": "32032", "paths": ["drivers/staging/brcm80211/sys/wlc_ampdu.c"], "predicts": ["drivers/staging/brcm80211/sys/wlc_rate.c", "drivers/staging/brcm80211/sys/wl_mac80211.c", "net/mac80211/rc80211_minstrel_ht.c", "net/mac80211/status.c", "include/net/mac80211.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/cpu.c", "lib/div64.c"], "input_tokens_sum": 193089, "output_tokens_sum": 2451, "description": "Created attachment 52232 [details]\nsyslog capturing crashes\n\nDebian Squeeze with updated kernels containing brcm80211 driver.\nReproduced with the following kernel packages:\n linux-image-2.6.37-trunk-686   2.6.37-1~experimental.1\n linux-image-2.6.37.2-686       2.6.37-2\n linux-image-2.6.38-1-686       2.6.38-1\nwith two different firmware versions for brcm80211, currently:\n firmware-brcm80211             0.29\n\nThe system worked reliably with the first kernel until an automated package update occurred. Wireless is now unusable. I have been unable to trace what may have changed to trigger the problem.\n\nAfter associating, the following crash occurs, followed by a second crash in acpi_idle_enter_bm, which then keeps occurring, rendering the system completely hung in a matter of seconds.\n\nMar 27 14:31:10 davin kernel: [ 1716.250150] divide error: 0000 [#1] SMP\nMar 27 14:31:10 davin kernel: [ 1716.250305] last sysfs file: /sys/module/aes_generic/initstate\nMar 27 14:31:10 davin kernel: [ 1716.2", "title": "Divide error in minstrel_ht_tx_status followed by hang", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Staging", "Hardware": "All Linux", "reranked_files": ["net/mac80211/rc80211_minstrel_ht.c", "drivers/acpi/processor_idle.c", "drivers/net/wireless/brcm80211/brcmfmac/cfg80211.c", "arch/x86/kernel/acpi/boot.c", "net/mac80211/tx.c"], "causes": [{"cause": "The divide error in minstrel_ht_tx_status is likely due to a division by zero when calculating rates or statistics.", "code_file": "net/mac80211/rc80211_minstrel_ht.c", "fix_solution": "Add a check to ensure that the divisor is not zero before performing the division in minstrel_ht_tx_status."}, {"cause": "The crash in acpi_idle_enter_bm may be related to incorrect handling of ACPI states or interrupts.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Ensure proper handling and validation of ACPI states and interrupts in acpi_idle_enter_bm to prevent system hangs."}, {"cause": "The issue may be related to changes in the brcm80211 driver affecting wireless stability.", "code_file": "drivers/net/wireless/brcm80211/brcmfmac/cfg80211.c", "fix_solution": "Review recent changes in the brcm80211 driver and ensure proper initialization and error handling in wireless configuration."}, {"cause": "The problem could be due to incorrect handling of APICs in the ACPI MADT parsing, leading to system instability.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Ensure that the ACPI MADT parsing correctly handles APIC configurations, especially in systems with non-standard APIC setups."}, {"cause": "The minstrel_ht_tx_status function might be called in an inappropriate context, leading to unexpected behavior.", "code_file": "net/mac80211/tx.c", "fix_solution": "Ensure that minstrel_ht_tx_status is only called in appropriate contexts where all required data is valid and initialized."}], "input_tokens": 9406, "output_tokens": 391}
{"id": "31872", "paths": ["drivers/acpi/scan.c"], "predicts": ["drivers/acpi/acpica/evgpeblk.c", "drivers/acpi/acpica/evxfevnt.c", "drivers/acpi/acpica/evxfgpe.c", "drivers/acpi/osl.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "kernel/panic.c"], "input_tokens_sum": 189773, "output_tokens_sum": 2620, "description": "Created attachment 51972 [details]\nlspci -vvv\n\nMy laptop cannot boot anymore with latest 2.6.38 kernel (also confirmed\nwith 2.6.38 rc6, rc7 and rc8) while ACPI support is enabled (booting with ACPI=off allows ending the boot sequence but many functionalities are lost). A kernel panic occurs early during the boot.\n\nOlder kernels until 2.6.37.2 did not trigger this bug on that laptop.\n\nIt's the official Debian kernel 2.6.38-1-686.", "title": "boot panic unless acpi=off, Thread overran stack, or stack corrupted - Toshiba Satellite/mobile P4", "Kernel Version": "2.6.38", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/osl.c", "arch/x86/kernel/acpi/boot.c", "init/main.c"], "causes": [{"cause": "ACPI initialization may be causing a stack overflow or corruption due to incorrect handling of ACPI tables.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Review and correct the handling of ACPI table addresses, ensuring proper conversion between physical and virtual addresses."}, {"cause": "Incorrect IRQ routing through the I/O APIC may be causing the boot panic.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Implement a DMI-based quirk to disable IRQ 0 routing through the I/O APIC for affected systems."}, {"cause": "Early kernel panic due to ACPI-related issues before proper initialization.", "code_file": "init/main.c", "fix_solution": "Delay panic handling until later in the boot process to allow for orderly initialization."}, {"cause": "Strict resource enforcement in ACPI may be causing conflicts with hardware monitoring support.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Switch to lax resource checking for specific hardware models using DMI-based detection."}], "input_tokens": 6191, "output_tokens": 256}
{"id": "31572", "paths": ["mm/vmalloc.c"], "predicts": ["drivers/firewire/ohci.c", "drivers/firewire/core-card.c", "drivers/firewire/core-device.c", "mm/page_alloc.c", "mm/memory.c"], "input_tokens_sum": 195976, "output_tokens_sum": 2152, "description": "Created attachment 51502 [details]\nphoto of oops\n\nComputer crash randomly at boot with one flashdisk or usb cdrom connected.\nTested with kernel 2.6.38-rc2 and 2.6.38.\n\nComputer: AMD Phenom x6, M4A88TD-V EVO/USB3 motherboard, 8GB RAM.\n\nlspci:\n\n00:00.0 Host bridge: Advanced Micro Devices [AMD] RS880 Host Bridge\n00:01.0 PCI bridge: ASUSTeK Computer Inc. RS880 PCI to PCI bridge (int gfx)\n00:09.0 PCI bridge: Advanced Micro Devices [AMD] RS780/RS880 PCI to PCI bridge (PCIE port 4)\n00:0a.0 PCI bridge: Advanced Micro Devices [AMD] RS780/RS880 PCI to PCI bridge (PCIE port 5)\n00:11.0 SATA controller: ATI Technologies Inc SB700/SB800 SATA Controller [IDE mode] (rev 40)\n00:12.0 USB Controller: ATI Technologies Inc SB700/SB800 USB OHCI0 Controller\n00:12.2 USB Controller: ATI Technologies Inc SB700/SB800 USB EHCI Controller\n00:13.0 USB Controller: ATI Technologies Inc SB700/SB800 USB OHCI0 Controller\n00:13.2 USB Controller: ATI Technologies Inc SB700/SB800 USB EHCI Controller\n00:14.0 SMBus: ATI Tech", "title": "BUG in vb_alloc() - firewire crash at boot", "Kernel Version": "2.6.38-rc2", "Product": "Memory Management", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["mm/page_alloc.c", "drivers/firewire/core-transaction.c", "drivers/usb/core/hcd.c", "arch/x86/kernel/pci-dma.c", "drivers/firewire/core-cdev.c"], "causes": [{"cause": "The vb_alloc() function may be allocating memory from the wrong zone, leading to a crash when firewire devices are connected.", "code_file": "mm/page_alloc.c", "fix_solution": "Ensure that vb_alloc() allocates memory from the correct zone by checking the zonelist order and adjusting it to prevent fallback to ZONE_DMA when not necessary."}, {"cause": "The firewire subsystem may not be handling memory allocation failures properly, leading to a crash during boot.", "code_file": "drivers/firewire/core-transaction.c", "fix_solution": "Add error handling for memory allocation failures in the firewire subsystem to prevent crashes during boot."}, {"cause": "The USB subsystem might be causing memory pressure that leads to allocation failures in the firewire subsystem.", "code_file": "drivers/usb/core/hcd.c", "fix_solution": "Optimize memory usage in the USB subsystem to reduce memory pressure and prevent allocation failures in other subsystems."}, {"cause": "The kernel may not be properly reserving memory for DMA operations, leading to allocation failures when firewire devices are connected.", "code_file": "arch/x86/kernel/pci-dma.c", "fix_solution": "Adjust the DMA memory reservation logic to ensure sufficient memory is reserved for DMA operations, especially when firewire devices are connected."}, {"cause": "The firewire driver might be using an incorrect memory allocation flag, causing it to allocate from a restricted memory zone.", "code_file": "drivers/firewire/core-cdev.c", "fix_solution": "Review and correct the memory allocation flags used in the firewire driver to ensure they are appropriate for the required memory zone."}], "input_tokens": 9197, "output_tokens": 380}
{"id": "30832", "paths": ["drivers/gpu/drm/radeon/atombios_crtc.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_fb.c", "include/drm/radeon_drm.h", "include/video/radeon.h", "arch/x86/video/fbdev.c"], "input_tokens_sum": 190932, "output_tokens_sum": 2339, "description": "The S-Video out of Radeon driver has become black and white in kernel 2.6.38.The regression happened around 2.6.37.2 as the driver worked fine in 2.6.37. I have a Radeon HD4850 card.\n\nHere is the difference in the dmesg output from the two kernels. I can hardly notice any difference, other than timestamps. In kernel 2.6.38, initialization happens very quickly - maybe a timing issue? Other than the kernels, everything else is same.\n\n2.6.38-6-generic\n\n[    9.422549] [drm] Initialized drm 1.1.0 20060810\n[   10.094022] [drm] radeon defaulting to kernel modesetting.\n[   10.094024] [drm] radeon kernel modesetting enabled.\n[   10.094105] fb: conflicting fb hw usage radeondrmfb vs VESA VGA - removing generic driver\n[   10.095453] [drm] initializing kernel modesetting (RV770 0x1002:0x9442).\n[   10.095475] [drm] register mmio base: 0xFDFE0000\n[   10.095476] [drm] register mmio size: 65536\n[   10.097903] [drm] Detected VRAM RAM=512M, BAR=256M\n[   10.097906] [drm] RAM width 256bits DDR\n[   10.0980", "title": "Radeon S-Video Out has become black and white. Works fine in 2.6.37", "Kernel Version": "2.6.38-rc6", "Product": "Drivers", "Component": "Video", "Hardware": "IA-64 Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_tv.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_clock.c", "drivers/gpu/drm/radeon/radeon_dac.c"], "causes": [{"cause": "The S-Video output might be defaulting to a PAL or NTSC mode that is not compatible with the user's display, causing the black and white output.", "code_file": "drivers/gpu/drm/radeon/radeon_tv.c", "fix_solution": "Ensure that the TV standard (PAL/NTSC) is correctly detected and set based on the user's region or provide a manual override option."}, {"cause": "A regression in the color encoding settings for the S-Video output in the Radeon driver, possibly due to changes in the initialization sequence.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Review and adjust the color encoding settings during the initialization of the S-Video output to ensure proper color output."}, {"cause": "Changes in the timing or clock settings for the S-Video output might be causing the color signal to be improperly processed.", "code_file": "drivers/gpu/drm/radeon/radeon_clock.c", "fix_solution": "Adjust the clock settings for the S-Video output to ensure they match the expected values for color output."}, {"cause": "The DAC (Digital-to-Analog Converter) settings for the S-Video output might have been altered, affecting the color signal.", "code_file": "drivers/gpu/drm/radeon/radeon_dac.c", "fix_solution": "Verify and correct the DAC settings to ensure they are configured for proper color output on the S-Video port."}], "input_tokens": 10615, "output_tokens": 342}
{"id": "29732", "paths": ["drivers/net/wireless/rndis_wlan.c"], "predicts": ["drivers/net/wireless/rndis_wlan.c", "include/linux/usb/rndis_host.h", "net/wireless/core.c", "net/wireless/mlme.c", "net/wireless/nl80211.c"], "input_tokens_sum": 240411, "output_tokens_sum": 10876, "description": "Created attachment 48752 [details]\nSyslogs for rndis_wlan with 2.6.38-rc5\n\nI've been testing the 2.6.368 kernel with my wireless adapter and it seems that something is not well once again.\n\n\nI'm attaching the logs of four test sets. All tests were performed after booting the computer with the device disconnected and only connecting it after everything is ready on the desktop. The attachments show what came up on the syslog after the moment I plugged in the device.\n\n\n- On the first test, I disabled network-manager and only used iwconfig + dhclient. I got no connection and the adapter's \"Link\" LED just kept blinking as if nothing was happening.\n\n- For all other tests I enabled network-manager. On the second test, after about an hour with the device connected, it hadn't connected yet and my ESSID didn't shown up on n-m's available connections. I used iwconfig + dhclient to configure the device. No success yet. N-m caught the SSID by then but it couldn't connect neither.\n\n- On the third te", "title": "rndis_wlan not working again for BCM4320a", "Kernel Version": "2.6.38-rc5", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/rndis_wlan.c", "drivers/net/usb/usbnet.c"], "causes": [{"cause": "The bcm4320a device does not handle configuration parameters correctly, leading to a partially zeroed MAC address and broken device.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Ensure that configuration parameters are not set for bcm4320a devices during initialization."}, {"cause": "The module parameters for bcm4320a devices are not copied correctly, causing issues with device initialization.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Implement a separate function to copy module parameters for bcm4320a devices and ensure it is called during initialization."}, {"cause": "The device firmware freezes after running usbnet_stop several times due to improper handling of URBs.", "code_file": "drivers/net/usb/usbnet.c", "fix_solution": "Add a flag to prevent URB unlinking for bcm4320a devices during usbnet_stop to avoid firmware freeze."}, {"cause": "The workaround for poor link stalls is incorrectly triggered by link speed instead of link quality, reducing performance on 802.11b networks.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Modify the stall workaround to be triggered by link quality instead of link speed."}, {"cause": "The driver does not correctly handle association information, leading to connection issues with TKIP PSK networks.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Implement handling of association information using the ASSOCIATION_INFORMATION RNDIS call and send IEs back to userspace using wireless events."}], "input_tokens": 10422, "output_tokens": 379}
{"id": "28142", "paths": ["fs/cifs/transport.c"], "predicts": ["fs/cifs/cifssmb.c", "fs/cifs/connect.c", "fs/cifs/sess.c", "fs/cifs/transport.c", "fs/cifs/file.c"], "input_tokens_sum": 195266, "output_tokens_sum": 3482, "description": "hi,\n\nafter mounting a CIFS share on a windows server 2003, r2 3790 SP2, and doing \"nothing\"/idling, after about 50-60 seconds accessing the mounted share is not possible anymore due to \"permission denied\" errors.\n\nsniffing the traffic reveals that a \"Echo Request\" message is being sent immediately followed by a \"Echo Response, Error: STATUS_ACCESS_DENIED\" message. after that one has to remount the share in order to access it again.\n\naccessing the share and copying files seems to work fine immediately after mounting, but only until the \"Echo Request\" message.\n\n2.6.37 was not affected. i've tested 2.6.38-rc2 and 2.6.38-rc3 and both suffer from the issues.\n\nmount.cifs version: 1.14-3.5.6, samba-3.5.6\n------------\nCONFIG_CIFS=y\n# CONFIG_CIFS_STATS is not set\nCONFIG_CIFS_WEAK_PW_HASH=y\nCONFIG_CIFS_UPCALL=y\nCONFIG_CIFS_XATTR=y\nCONFIG_CIFS_POSIX=y\n# CONFIG_CIFS_DEBUG2 is not set\nCONFIG_CIFS_DFS_UPCALL=y\nCONFIG_CIFS_ACL=y\nCONFIG_CIFS_EXPERIMENTAL=y\nCONFIG_SMB_FS=m  (module is not loaded)\nCONFI", "title": "CIFS: \"Echo Request\" message results in STATUS_ACCESS_DENIED", "Kernel Version": "2.6.38-rc3", "Product": "File System", "Component": "CIFS", "Hardware": "All Linux", "reranked_files": ["fs/cifs/connect.c", "fs/cifs/sess.c", "fs/cifs/transport.c", "fs/cifs/cifssmb.c", "fs/cifs/smb2pdu.c"], "causes": [{"cause": "The CIFS client is not handling the Echo Request/Response correctly, leading to a STATUS_ACCESS_DENIED error.", "code_file": "fs/cifs/connect.c", "fix_solution": "Ensure that the Echo Request is sent with the correct session credentials and handle the Echo Response properly to avoid access denial."}, {"cause": "The session re-authentication mechanism might be failing after the Echo Request, causing the server to deny access.", "code_file": "fs/cifs/sess.c", "fix_solution": "Implement a mechanism to re-authenticate the session properly after an Echo Request to maintain access permissions."}, {"cause": "The CIFS client might be incorrectly interpreting the server's response to the Echo Request.", "code_file": "fs/cifs/transport.c", "fix_solution": "Modify the response handling logic to correctly interpret the server's Echo Response and maintain the session state."}, {"cause": "The CIFS client might not be maintaining the session state correctly, leading to access denial after an Echo Request.", "code_file": "fs/cifs/cifssmb.c", "fix_solution": "Ensure that the session state is preserved correctly across Echo Requests to prevent access denial."}, {"cause": "The CIFS client might be sending the Echo Request with incorrect parameters or flags.", "code_file": "fs/cifs/smb2pdu.c", "fix_solution": "Review and correct the parameters or flags used in the Echo Request to ensure they are compatible with the server's expectations."}], "input_tokens": 10040, "output_tokens": 350}
{"id": "25922", "paths": ["drivers/platform/x86/ideapad-laptop.c"], "predicts": ["drivers/platform/x86/ideapad-laptop.c", "drivers/acpi/video.c", "include/acpi/video.h", "include/linux/backlight.h"], "input_tokens_sum": 187886, "output_tokens_sum": 3079, "description": "After increasing/decreasing brightness by \"Fn+Up/Down\" it changes by some value and after that keys are not responding (not making any change).\nModifying brighntness value by:\necho 0 > /sys/class/backlight/acpi_video0/brightness\nworks good.\n\nLatest kernel that I tried where the issue no occurs was 2.6.36.2.", "title": "IdeaPad Y530 brightness keys not functioning", "Kernel Version": "2.6.37-rc8", "Product": "Drivers", "Component": "Platform_x86", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c"], "causes": [{"cause": "The ACPI video driver may not be correctly handling brightness switch notifications, causing the brightness keys to stop functioning after an initial change.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the brightness_switch_enabled parameter is correctly set and handled in the acpi_video_device_notify function to allow brightness changes."}, {"cause": "The ACPI video driver might not be correctly updating the current brightness level, leading to the keys becoming unresponsive.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the acpi_video_device_lcd_get_level_current function to correctly update the current brightness level in the device structure."}, {"cause": "The ACPI video driver may not be correctly generating or handling events for brightness changes, causing the keys to become unresponsive.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the acpi_bus_generate_proc_event function is called appropriately in response to brightness change events."}, {"cause": "The ACPI video driver might not be correctly initializing or managing the brightness levels, leading to the keys becoming unresponsive.", "code_file": "drivers/acpi/video.c", "fix_solution": "Check and correct the initialization of brightness levels in the acpi_video_device_find_cap function to ensure proper handling."}], "input_tokens": 9159, "output_tokens": 304}
{"id": "25692", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/patch_sigmatel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c"], "input_tokens_sum": 203810, "output_tokens_sum": 3227, "description": "Created attachment 41702 [details]\nFull kernel log\n\nI am using linux-image-2.6.37-rc7-amd64 (2.6.37~rc7-1~experimental.1) from debian experimental. My motherboard is Intel D946GZIS. During boot I get this oops and sound does not work. It used to work on 2.6.36 and before.\n\nBelow is the relevant part of dmesg. I also attached the whole thing (kernel.log). I am new to submitting kernel bugs so I apologise beforehand if I am missing any info. Please let me know if you need anything else.\n\n[    6.267424] HDA Intel 0000:00:1b.0: PCI INT A -> GSI 22 (level, low) -> IRQ 22\n[    6.267479] HDA Intel 0000:00:1b.0: irq 40 for MSI/MSI-X\n[    6.267505] HDA Intel 0000:00:1b.0: setting latency timer to 64\n[    6.320950] input: HDA Digital PCBeep as /devices/pci0000:00/0000:00:1b.0/input/input6\n[    6.520042] BUG: unable to handle kernel NULL pointer dereference at           (null)\n[    6.520066] IP: [<ffffffffa072cc3b>] stac92xx_unsol_event+0x38b/0x577 [snd_hda_codec_idt]\n[    6.520087] PGD 36854067 ", "title": "Kernel oops (NULL pointer deref) during boot on stac92xx_unsol_event", "Kernel Version": "2.6.37-rc7", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/patch_sigmatel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c"], "causes": [{"cause": "The stac92xx_unsol_event function is dereferencing a NULL pointer, likely due to an uninitialized or improperly handled codec structure.", "code_file": "sound/pci/hda/patch_sigmatel.c", "fix_solution": "Add a NULL check for the codec structure before dereferencing it in the stac92xx_unsol_event function."}, {"cause": "The codec->slave_dig_outs array is being accessed without checking if it is NULL, leading to a NULL pointer dereference.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Add a NULL check for codec->slave_dig_outs before iterating over it in functions like snd_hda_spdif_out_switch_put."}, {"cause": "The unsol_event callback is being triggered for a codec that has not been fully initialized, leading to a NULL pointer dereference.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the codec is fully initialized before enabling unsolicited events by adding checks in the initialization sequence."}, {"cause": "The codec's patch_ops structure might not be properly set up, leading to a NULL pointer dereference when accessing its members.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Verify and ensure that the patch_ops structure is correctly initialized for the codec in the codec initialization function."}], "input_tokens": 12269, "output_tokens": 331}
{"id": "24562", "paths": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c"], "predicts": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "arch/x86/kernel/cpu/cpufreq/powernow-k8.h", "drivers/cpufreq/cpufreq.c", "drivers/cpufreq/cpufreq_ondemand.c", "include/linux/cpufreq.h", "kernel/smp.c", "include/linux/smp.h", "arch/x86/include/asm/cpu.h", "arch/x86/kernel/setup.c", "fs/proc/cpuinfo.c"], "input_tokens_sum": 184155, "output_tokens_sum": 2353, "description": "During boot, I get this summary on my AMD 890FX/SB850 chipset:\n\nSMP: Allowing 6 CPUs, 0 hotplug CPUs\nsetup_percpu: NR_CPUS:4096 nr_cpumask_bits:6 nr_cpu_ids:6 nr_node_ids:1\nPERCPU: Embedded 27 pages/cpu @ffff880006000000 s80704 r8192 d21696 u262144\npcpu-alloc: s80704 r8192 d21696 u262144 alloc=1*2097152\npcpu-alloc: [0] 0 1 2 3 4 5 - - \nSLUB: Genslabs=13, HWalign=64, Order=0-3, MinObjects=0, CPUs=6, Nodes=1\n        RCU-based detection of stalled CPUs is disabled.\n        Verbose stalled-CPUs detection is disabled.\nCPU: Physical Processor ID: 0\nCPU: Processor Core ID: 0\nmce: CPU supports 6 MCE banks\nCPU0: AMD Phenom(tm) II X6 1090T Processor stepping 00\nSwitch to broadcast mode on CPU1\nSwitch to broadcast mode on CPU2\nSwitch to broadcast mode on CPU3\nSwitch to broadcast mode on CPU4\nBrought up 6 CPUs\nSwitch to broadcast mode on CPU5\nSwitch to broadcast mode on CPU0\n\nAnd a bit further down cores 4 and 5 are not seen by \"powernow-k8\":\n\npowernow-k8: Found 1 AMD Phenom(tm) II X6 1090T Proces", "title": "k8-powernow does not see all cores", "Kernel Version": "2.6.36", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c"], "causes": [{"cause": "The powernow-k8 driver is not correctly detecting all CPU cores due to incorrect handling of P-state information.", "code_file": "arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "fix_solution": "Ensure that the driver correctly iterates over all available cores and retrieves P-state information for each core, possibly by fixing the logic in the function that queries current values."}, {"cause": "The driver may be incorrectly handling the ACPI _PSS objects, leading to some cores not being recognized.", "code_file": "arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "fix_solution": "Improve error handling and parsing of ACPI _PSS objects to ensure all cores are correctly initialized and recognized."}, {"cause": "The synchronization of P-states across cores might be causing some cores to be ignored if they are not properly synchronized.", "code_file": "arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "fix_solution": "Implement or fix synchronization logic for P-states across all cores to ensure consistent frequency reporting and recognition."}, {"cause": "The driver might be incorrectly handling the CPU family-specific errata, leading to some cores not being detected.", "code_file": "arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "fix_solution": "Review and apply necessary errata handling specific to the CPU family to ensure all cores are correctly detected and managed."}, {"cause": "The initialization logic for the powernow-k8 driver might be failing to set up data structures for all cores.", "code_file": "arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "fix_solution": "Ensure that the initialization function correctly sets up data structures for all cores, possibly by fixing the loop that initializes per-CPU data."}], "input_tokens": 11133, "output_tokens": 430}
{"id": "24492", "paths": ["drivers/acpi/sbs.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply_sysfs.c", "include/linux/power_supply.h", "drivers/power/power_supply.h"], "input_tokens_sum": 156404, "output_tokens_sum": 1301, "description": "On a Acer Travelmate 2301, the battery status (energy, current, etc.)  doesn't get updated, unless events are triggered (e.g. charger disconnection).\n\nExample, with charger on, an old reading is reported:\n\ntestuser@castor:~$ cat /sys/class/power_supply/BAT0/energy_now\n1120000\n\nImmediately after, having unplugged the charger in order to trigger an event,\nsysfs gets updated:\n\ntestuser@castor:~$ cat /sys/class/power_supply/BAT0/energy_now\n13600000", "title": "SBS - Battery status is updated only on AC/DC event, not every minute - Acer Travelmate 2301", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/power/power_supply_core.c", "drivers/acpi/battery.c", "drivers/power/power_supply_sysfs.c", "drivers/acpi/sbs.c", "include/linux/power_supply.h"], "causes": [{"cause": "The battery status update mechanism is only triggered by AC/DC events, not by periodic polling.", "code_file": "drivers/power/power_supply_core.c", "fix_solution": "Implement a periodic timer to trigger battery status updates every minute."}, {"cause": "The battery driver does not periodically refresh the battery status properties.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a periodic polling mechanism to refresh battery status properties in the driver."}, {"cause": "The sysfs interface for battery status does not update unless an event occurs.", "code_file": "drivers/power/power_supply_sysfs.c", "fix_solution": "Modify the sysfs update logic to include periodic refresh of battery status."}, {"cause": "The ACPI SBS driver does not handle periodic updates for smart battery systems.", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Integrate a periodic update mechanism for smart battery systems within the SBS driver."}, {"cause": "The power supply class does not support periodic updates for battery status.", "code_file": "include/linux/power_supply.h", "fix_solution": "Extend the power supply class to include support for periodic status updates."}], "input_tokens": 9634, "output_tokens": 289}
{"id": "24342", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_realtek.c", "include/sound/pcm.h", "sound/core/pcm.c"], "input_tokens_sum": 180897, "output_tokens_sum": 3633, "description": "the sound on spdif has gone between 2.6.35.6-45 and 2.6.35.9-64 -these are versions avaliable in fedora. so after booting to older kernel everything works well again.\n\nthere is nothing special in any log files. also my digital reciever shows pcm signal incoming during playback, however it wrongly shows 'pcm' input also when trying to play ac3/dts and in all cases there is no sound.\n\nI am using intel hda chipset (currently have no possibility to check analog audio now)\n\ncard 0: Intel [HDA Intel], device 0: ALC889 Analog [ALC889 Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: Intel [HDA Intel], device 1: ALC889 Digital [ALC889 Digital]\n  Subdevices: 0/1\n  Subdevice #0: subdevice #0\n\n\n00:1b.0 Audio device: Intel Corporation 5 Series/3400 Series Chipset High Definition Audio (rev 06)", "title": "no sound on spdif", "Kernel Version": "2.6.35", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/patch_realtek.c", "sound/core/pcm_native.c", "sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_nvhdmi.c"], "causes": [{"cause": "The SPDIF output configuration might have changed, causing the wrong output pin to be used.", "code_file": "sound/pci/hda/patch_realtek.c", "fix_solution": "Ensure the correct SPDIF output pin is configured for the ALC889 codec, possibly adding a slave output configuration for the correct pin."}, {"cause": "A race condition between hw_params and prepare callbacks might be causing inconsistent data to be programmed into the audio device.", "code_file": "sound/core/pcm_native.c", "fix_solution": "Add mutex locks around hw_params and prepare callbacks to ensure proper synchronization and prevent race conditions."}, {"cause": "Insufficient memory allocation for high-quality audio might be causing issues with SPDIF output.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the default and maximum memory allocation for audio buffers to ensure sufficient resources for SPDIF output."}, {"cause": "Dead code or incorrect initialization in the Realtek codec driver might be affecting SPDIF functionality.", "code_file": "sound/pci/hda/patch_realtek.c", "fix_solution": "Remove or correct any dead code and ensure proper initialization of SPDIF-related settings in the Realtek codec driver."}, {"cause": "Incorrect handling of digital audio formats or status bits might be causing SPDIF output issues.", "code_file": "sound/pci/hda/patch_nvhdmi.c", "fix_solution": "Review and correct the conversion functions for SPDIF status bits to ensure proper handling of digital audio formats."}], "input_tokens": 10326, "output_tokens": 362}
{"id": "24312", "paths": ["drivers/gpu/drm/i915/intel_sdvo.c"], "predicts": ["drivers/gpu/drm/i915/intel_i2c.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/intel_display.c", "include/linux/i2c.h", "include/drm/drmP.h", "include/drm/i915_drm.h", "arch/x86/mm/iomap_32.c", "kernel/irq/devres.c", "mm/internal.h"], "input_tokens_sum": 178709, "output_tokens_sum": 1772, "description": "The i915 module in Natty's 2.6.37-rc3-7 (and perhaps others) kernel oopses with a null pointer dereference on boot on my i915GM-based Dell Latitude D610 as seen below,\n\n[ 16.693732] i915 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16\n[ 16.693741] i915 0000:00:02.0: setting latency timer to 64\n[ 16.753618] BUG: unable to handle kernel NULL pointer dereference at (null)\n[ 16.753753] IP: [<c04ca13e>] i2c_transfer+0x1e/0xc0\n[ 16.753851] *pde = 3f032067\n[ 16.753940] Oops: 0000 [#1] SMP\n[ 16.754060] last sysfs file: /sys/module/ssb/initstate\n[ 16.754124] Modules linked in: i915(+) b43(+) snd_seq_device mac80211 drm_kms_helper drm sunrpc cfg80211 yenta_socket dell_laptop pcmcia_rsrc snd dcdbas psmouse\npcmcia_core i2c_algo_bit video shpchp soundcore serio_raw snd_page_alloc output lp parport tg3 ssb\n[ 16.755116]\n[ 16.755171] Pid: 341, comm: modprobe Not tainted 2.6.37-7-generic #19-Ubuntu 0U8082/Latitude D610\n[ 16.755267] EIP: 0060:[<c04ca13e>] EFLAGS: 00010296 CPU: 0\n[ 16.755331] EI", "title": "[i915] null pointer dereference on modprobe in intel_svdo_read_byte.clone.8", "Kernel Version": "2.6.37-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/i2c/i2c-core.c", "drivers/gpu/drm/i915/intel_i2c.c"], "causes": [{"cause": "The i2c_transfer function is being called with a null pointer, leading to a null pointer dereference.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Add a null check for the i2c_adapter pointer before dereferencing it in the i2c_transfer function."}, {"cause": "The i915 driver is attempting to perform an I2C transfer without properly initializing the I2C adapter.", "code_file": "drivers/gpu/drm/i915/intel_i2c.c", "fix_solution": "Ensure that the I2C adapter is properly initialized before any I2C operations are performed in the i915 driver."}, {"cause": "The i2c_adapter structure is not being properly allocated or initialized, leading to a null pointer dereference.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Verify that the i2c_adapter structure is correctly allocated and initialized before being used in any I2C operations."}, {"cause": "The i2c_transfer function is being called with an invalid or uninitialized i2c_msg array.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Add validation checks for the i2c_msg array to ensure it is properly initialized before use in the i2c_transfer function."}], "input_tokens": 11029, "output_tokens": 318}
{"id": "24302", "paths": ["fs/nfs/mount_clnt.c"], "predicts": ["fs/nfs/client.c", "fs/nfs/inode.c", "fs/nfs/super.c", "include/linux/nfs_mount.h", "net/sunrpc/svc.c", "net/sunrpc/svc_xprt.c", "kernel/panic.c", "arch/x86/mm/fault.c", "init/do_mounts.c"], "input_tokens_sum": 159763, "output_tokens_sum": 2358, "description": "ARCH: x86_64 (not tested on i386)\n\nTestcase:\n\nOn the server side, configure an export that will be denied to mount (used sec=krb5 as that gives a permission denied for me)\n\n--- server /etc/exports ---\n/foo *(rw,krb5)\n\nOn the client side, autofs gets configured to try to automount server:/foo\n\n--- client /etc/auto.master ---\n/auto /etc/auto.auto\n\n--- client /etc/auto.auto ---\nfoo -tcp server:/foo\n\n[optional]\nStop the autofs service and start the automounter in the foreground (automount -d -f) to see the permission denied message.\n\nCreate a symlink pointing to the autofs:\nln -s /auto/foo foo\n\nThe following is done in a loop as the crash sometimes takes longer than other times:\n\nwhile true; do ls foo/; sleep 1; done\n\nIt seems to take longer on the newest kernel, but eventually there will be a panic.", "title": "Kernel crashes when repeatedly trying to mount nfs share that is failing", "Kernel Version": "2.6.32", "Product": "File System", "Component": "NFS", "Hardware": "x86-64 Linux", "reranked_files": ["fs/nfs/super.c", "fs/autofs/init.c", "fs/nfs/inode.c", "net/sunrpc/clnt.c", "fs/nfs/mount_clnt.c"], "causes": [{"cause": "The NFS client may not handle repeated mount failures gracefully, leading to resource exhaustion or race conditions.", "code_file": "fs/nfs/super.c", "fix_solution": "Implement a mechanism to limit the number of retries or introduce a backoff strategy when mounting fails repeatedly."}, {"cause": "The automounter may not properly clean up resources or handle errors when a mount attempt fails, leading to a kernel panic.", "code_file": "fs/autofs/init.c", "fix_solution": "Ensure that the automounter properly handles mount failures by cleaning up resources and preventing further mount attempts until the issue is resolved."}, {"cause": "The NFS client may not correctly handle permission denied errors, leading to unexpected behavior or crashes.", "code_file": "fs/nfs/inode.c", "fix_solution": "Add error handling logic to gracefully handle permission denied errors and prevent further mount attempts."}, {"cause": "The NFS client may not correctly manage network resources when a mount fails, leading to resource leaks or race conditions.", "code_file": "net/sunrpc/clnt.c", "fix_solution": "Ensure that network resources are properly released and managed when a mount attempt fails."}, {"cause": "The NFS client may not correctly handle the state of the mount point when a mount fails, leading to inconsistent states and potential crashes.", "code_file": "fs/nfs/mount_clnt.c", "fix_solution": "Implement state management to ensure that the mount point is correctly reset or cleaned up when a mount fails."}], "input_tokens": 8481, "output_tokens": 353}
{"id": "23892", "paths": ["fs/nfs/file.c"], "predicts": ["fs/locks.c", "fs/nfs/delegation.c", "fs/nfs/file.c", "fs/nfsd/lockd.c", "fs/nfsd/nfsproc.c", "include/linux/nfs_fs.h", "include/linux/nfsd/state.h", "net/sunrpc/svc.c", "net/sunrpc/svcsock.c", "net/sunrpc/xprtsock.c"], "input_tokens_sum": 152861, "output_tokens_sum": 3171, "description": "Created attachment 38442 [details]\nPrograms for reproducing\n\nEnvironment:\n\nDebian Lenny with kernel 2.6.37-rc3 i686\nnfs-common         1:1.1.2-6lenny2\nnfs-kernel-server  1:1.1.2-6lenny2\n172.22.0.10 is a server\n172.22.0.11 is a client\n\n/etc/exports on a server:\n/srv/test  172.22.0.11(rw,sync,no_subtree_check)\n\n\nSteps to reproduce:\n\nclient# mount -t nfs 172.22.0.10:/srv/test /srv/test\n\nserver$ cd /srv/test\nserver$ ./linlock r file\npress Ctrl-C...\n\nclient$ cd /srv/test\nclient$ ./linlock w file\nfcntl: Resource temporary unavailable\nclient$ ./lockinfo file\nF_UNLCK SEEK_SET start 0 len 0\n\n./linlock tool set read (r) or write (w) lock on a file. ./lockinfo shows what F_GETLK returns. This test shows that a client can not set a write lock on a read lock of server but F_GETLK tells that file is not locked.\n\n\nThe bug does not occur if client with 2.6.21 kernel.\nThe bug occurs if client with 2.6.22-rc1 and higher.", "title": "fcntl(..., F_GETLK, ...) does not return correct info about a read lock which is set on server", "Kernel Version": "2.6.22-rc1", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/nfs4proc.c", "fs/locks.c", "fs/lockd/svclock.c", "fs/nfs/file.c"], "causes": [{"cause": "The NFS client code does not correctly handle the F_GETLK command, leading to incorrect lock status reporting.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Ensure that the NFS client properly interprets and returns the lock status from the server, possibly by adjusting the handling of the F_GETLK command to correctly reflect the server's lock state."}, {"cause": "The VFS layer does not correctly propagate lock information from the NFS server to the client.", "code_file": "fs/locks.c", "fix_solution": "Modify the VFS lock handling to ensure that lock information is accurately retrieved and reported for NFS filesystems, especially when using F_GETLK."}, {"cause": "The NFS server does not correctly communicate lock status to the client, leading to discrepancies in lock state reporting.", "code_file": "fs/lockd/svclock.c", "fix_solution": "Ensure that the NFS server correctly updates and communicates lock status to the client, particularly for read locks, by verifying the lock state before responding to F_GETLK requests."}, {"cause": "The asynchronous lock handling in NFS may not correctly update the lock status in certain scenarios.", "code_file": "fs/lockd/svclock.c", "fix_solution": "Review and adjust the asynchronous lock handling logic to ensure that lock status is consistently updated and communicated to the client, especially in cases where locks are set or released."}, {"cause": "The NFS client may not be correctly interpreting the lock information returned by the server due to changes in the lock handling code.", "code_file": "fs/nfs/file.c", "fix_solution": "Update the NFS client code to correctly interpret and handle the lock information returned by the server, ensuring compatibility with the server's lock status reporting."}], "input_tokens": 9680, "output_tokens": 418}
{"id": "23222", "paths": ["drivers/gpu/drm/radeon/radeon_combios.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_connectors.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_drv.c", "include/drm/drm_crtc.h", "include/video/radeon.h"], "input_tokens_sum": 178123, "output_tokens_sum": 1782, "description": "Created attachment 37562 [details]\nkernel config\n\nAfter upgrade from 2.6.35 to 2.6.36 I think I have found a regression.\n2.6.36 is booting fine until kernel tries to change resolution. Then my monitor just goes blank, but the booting process continues. Using ssh I'm able to connect to my computer and there are following messages in my dmesg:\n[    4.650041] No connectors reported connected with modes\n[    4.650046] [drm] Cannot find any crtc or sizes - going 1024x768\n\nMy configuration:\nonboard graphic card: ATI Technologies Inc RS482 [Radeon Xpress 200] with both VGA and DVI ports\nmonitor: Samsung SyncMaster 204B\n\nPlease note that this only happens when my monitor is connected with DVI.\nAfter switching to standard VGA cable everything works just fine.", "title": "2.6.36 radeon KMS: [drm] Cannot find any crtc or sizes", "Kernel Version": "2.6.36", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_connectors.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/video/aty/radeon_monitor.c", "drivers/video/aty/radeon_pm.c"], "causes": [{"cause": "The DVI connector is not being detected correctly due to a missing or invalid EDID.", "code_file": "drivers/gpu/drm/radeon/radeon_connectors.c", "fix_solution": "Modify the DVI detection logic to handle cases where DDC responds but no valid EDID is found, similar to the VGA detection logic."}, {"cause": "The monitor connected via DVI is not being recognized due to incorrect handling of digital input flags.", "code_file": "drivers/gpu/drm/radeon/radeon_connectors.c", "fix_solution": "Ensure that the digital input flag is correctly set when EDID is available, allowing the system to recognize the DVI connection."}, {"cause": "The mode setting logic fails to find a valid CRTC configuration for the DVI connection.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Add a fallback mechanism to select a default resolution when no valid CRTC configuration is found for DVI connections."}, {"cause": "The EDID parsing logic does not correctly interpret the data from the DVI-connected monitor.", "code_file": "drivers/video/aty/radeon_monitor.c", "fix_solution": "Update the EDID parsing logic to correctly handle and interpret the EDID data from DVI connections, ensuring proper mode setting."}, {"cause": "The power management code interferes with the detection of the DVI-connected monitor.", "code_file": "drivers/video/aty/radeon_pm.c", "fix_solution": "Review and adjust the power management settings to ensure they do not disrupt the detection and initialization of DVI connections."}], "input_tokens": 10395, "output_tokens": 375}
{"id": "23012", "paths": ["drivers/usb/serial/usb-serial.c"], "predicts": ["drivers/usb/serial/ftdi_sio.c", "drivers/usb/serial/ftdi_sio.h", "drivers/usb/serial/ftdi_sio_ids.h", "drivers/usb/serial/usb-serial.c", "include/linux/serial.h", "include/usb/serial.h", "include/usb.h"], "input_tokens_sum": 184484, "output_tokens_sum": 1928, "description": "I am using a ftdi USB-to-serial device, which has worked in previous kernels.  After a recent update to mainline 2.6.37, I am no longer able to access the device.  Upon plugging in the device, the ftdi_sio module loads and /dev/ttyUSB0 appears.  However, when I try to access the device, I get the error \"Resource Temporarily Unavailable\".  There is no other process trying to access the device.  After downgrading to 2.6.36, the problem is fixed.", "title": "ftdi_sio /dev/ttyUSB error:  \"Resource Temporarily Unavailable\"", "Kernel Version": "2.6.37-rc1", "Product": "Drivers", "Component": "USB", "Hardware": "All Linux", "reranked_files": ["drivers/usb/serial/ftdi_sio.c", "drivers/usb/serial/usb-serial.c", "drivers/usb/core/hcd.c"], "causes": [{"cause": "The ftdi_sio driver may not be properly handling the ASYNCB_INITIALIZED flag, leading to the 'Resource Temporarily Unavailable' error when accessing the device.", "code_file": "drivers/usb/serial/ftdi_sio.c", "fix_solution": "Ensure that the ASYNCB_INITIALIZED flag is correctly set and checked before accessing the device, similar to the fix in mail 4."}, {"cause": "The ftdi_sio driver might be incorrectly handling the device open and close operations, leading to resource conflicts.", "code_file": "drivers/usb/serial/ftdi_sio.c", "fix_solution": "Review and correct the logic in ftdi_open and ftdi_close functions to ensure proper resource allocation and release."}, {"cause": "There might be a regression in the USB serial core that affects the ftdi_sio driver, causing it to fail when accessing the device.", "code_file": "drivers/usb/serial/usb-serial.c", "fix_solution": "Investigate recent changes in the USB serial core and revert or adjust any changes that might affect the ftdi_sio driver."}, {"cause": "The ftdi_sio driver may not be correctly handling the tty port initialization, leading to the device being unavailable.", "code_file": "drivers/usb/serial/ftdi_sio.c", "fix_solution": "Ensure that the tty port is properly initialized and configured before being used, possibly by checking the initialization sequence."}, {"cause": "Changes in the USB subsystem might have introduced a race condition affecting the ftdi_sio driver.", "code_file": "drivers/usb/core/hcd.c", "fix_solution": "Review the USB subsystem changes for potential race conditions and implement synchronization mechanisms if necessary."}], "input_tokens": 8328, "output_tokens": 414}
{"id": "21092", "paths": ["fs/reiserfs/super.c"], "predicts": ["fs/reiserfs/lock.c", "fs/reiserfs/journal.c", "include/linux/reiserfs_fs.h", "fs/reiserfs/procfs.c", "fs/reiserfs/xattr.c", "include/linux/reiserfs_fs_sb.h"], "input_tokens_sum": 183788, "output_tokens_sum": 1442, "description": "I get this bug during boot at enabling usrquta for a reiser(3)fs since 2.6.36. The kernel is a x86_64 smp. The reiserfs reisdes on a dm raid level 5. The same setup worked with kernel version 2.6.35.7, of course there was no other configuratrion change between 2.6.35.7 and 2.6.36.\n\nREISERFS warning (device dm-4): reiserfs-2500 finish_unfinished: cannot turn on journaled quota: error -3\n------------[ cut here ]------------\nkernel BUG at fs/reiserfs/lock.c:43!\ninvalid opcode: 0000 [#1] SMP \nlast sysfs file: /sys/devices/virtual/vc/vcsa12/uevent\nCPU 5 \nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss quota_v2 quota_tree snd_hda_codec_atihdmi snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_pcm psmouse snd_timer evdev firewire_ohci snd pcspkr soundcore processor firewire_core thermal snd_page_alloc button crc_itu_t i5k_amb scsi_transport_iscsi tg3 libphy fuse nfs auth_rpcgss fscache lockd sunrpc dm_crypt dm_mirror dm_regi", "title": "Kernel 2.6.36 Bug during quotaon on reiserfs", "Kernel Version": "2.6.36", "Product": "File System", "Component": "ReiserFS", "Hardware": "All Linux", "reranked_files": ["fs/reiserfs/journal.c", "fs/reiserfs/super.c"], "causes": [{"cause": "The journaled quota system in reiserfs is attempting to operate with a transaction handle that has a refcount of 0, leading to an assertion failure.", "code_file": "fs/reiserfs/journal.c", "fix_solution": "Increase the transaction handle refcount temporarily during quota operations to prevent assertion failures."}, {"cause": "Quota files may have tails, which are not supported by quota_read and quota_write functions, causing failures when enabling quotas.", "code_file": "fs/reiserfs/super.c", "fix_solution": "Ensure that quota files have the NOTAIL flag set by unpacking tails in reiserfs_quota_on()."}, {"cause": "The quota system may not be reserving enough space for transactions when quotas are enabled, leading to errors during quota operations.", "code_file": "fs/reiserfs/super.c", "fix_solution": "Improve quota credit estimates and ensure space is reserved for quota operations only if quota options are specified."}], "input_tokens": 10366, "output_tokens": 231}
{"id": "19872", "paths": ["drivers/staging/phison/phison.c"], "predicts": ["drivers/staging/phison/phison.c", "fs/partitions/check.c", "fs/partitions/msdos.c"], "input_tokens_sum": 179122, "output_tokens_sum": 1678, "description": "Created attachment 32712 [details]\ndmesg log\n\nI have a Verbatim ExpressCard SSD that uses the phison driver from staging.\nOn recent kernels when loading the module I see a lot of errors and the driver is eventually unable to read the partition table off the device, rendering the device useless on those kernels. (log attached)\n\nI tested it with 2.6.35 and 2.6.36rc7, same behaviour. 2.6.32 works find. I haven't had the chance yet to test .33 and .34.", "title": "phison unable to read partition table", "Kernel Version": "2.6.36-rc7", "Product": "Drivers", "Component": "Staging", "Hardware": "All Linux", "reranked_files": ["drivers/staging/phison/phison.c", "fs/partitions/msdos.c", "fs/partitions/check.c"], "causes": [{"cause": "The phison driver in the staging area may not be correctly handling partition table reading, leading to errors when attempting to read the partition table.", "code_file": "drivers/staging/phison/phison.c", "fix_solution": "Ensure that the driver correctly initializes and reads the partition table by adding necessary checks and handling for partition table reading errors."}, {"cause": "The partition table reading logic might be attempting to read beyond the end of the disk, causing errors.", "code_file": "fs/partitions/msdos.c", "fix_solution": "Implement checks to ensure that partition table entries do not reference sectors beyond the disk's capacity, similar to the sanity checks described in the emails."}, {"cause": "The kernel's partition detection logic might be incorrectly identifying or handling the partition type, leading to misinterpretation of the partition table.", "code_file": "fs/partitions/check.c", "fix_solution": "Modify the partition detection logic to correctly identify and handle the partition type, possibly by adding more robust heuristics or user-space tools to specify partition types."}, {"cause": "The driver might not be correctly using the __init/__exit macros, leading to improper initialization or cleanup of resources.", "code_file": "drivers/staging/phison/phison.c", "fix_solution": "Ensure that the __init/__exit macros are correctly used in the module's initialization and cleanup functions to manage resources properly."}], "input_tokens": 9983, "output_tokens": 326}
{"id": "19462", "paths": ["drivers/acpi/acpica/dswexec.c"], "predicts": ["drivers/acpi/acpica/exstore.c", "drivers/acpi/processor_core.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/power.c", "drivers/acpi/acpica/acglobal.h", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "arch/x86/pci/acpi.c"], "input_tokens_sum": 162849, "output_tokens_sum": 3019, "description": "I've got reproducible kernel panics on recent stable kernels (2.6.32.8/16/23 and 2.6.35.2 specifically), but not on 2.6.30.x kernels. The panic/oops are occurring on two different hardware platforms; the Panasonic Toughbook CF-19 Mark 3 and and Toughbook CF-74 Mark 4. These are the latest revisions of these hardware models and we have seen the issue on multiple units.\n\nI'll attach the dmesg output from a few different panics / oops we've captured. There are two or three variations of kernel panics that repeat, so I'll include representatives from each type. All of the kernel panics I've seen occur during  boot (initramfs or early init boot process). Once a system is up and running fully, I've not seen a single lockup or oops of this type again. I've looked at related bugs with the acpi subsystem, but haven't seen anything quite like our issue, so I am opening a new issue here.\n\nFYI, I build mainline kernels, using the Debian config and package process, with some very minor config tweak", "title": "Reproducible Kernel panic/oops during boot and startup - Panasonic Toughbooks", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/sleep.c", "arch/x86/kernel/acpi/boot.c"], "causes": [{"cause": "The kernel panic during boot on Panasonic Toughbooks may be due to ACPI issues related to the SCI_EN bit not being set correctly on resume, as some BIOSes do not handle this properly.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Introduce a kernel parameter to force the SCI_EN bit to be set during resume, similar to the acpi_sleep=sci_force_enable parameter."}, {"cause": "The issue might be related to incorrect handling of IRQ0 overrides in the ACPI tables, which can cause problems during the boot process.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Implement a DMI-based quirk to ignore the IRQ0 override for affected Panasonic Toughbook models, similar to existing quirks for HP laptops."}, {"cause": "The ACPI tables might not be mapped correctly during early boot, leading to kernel panics.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Ensure that the __acpi_map_table function is correctly marked as __init to ensure it is only used during early boot."}, {"cause": "There could be an issue with the ACPI MCFG table parsing, especially if the base address is above 4GB, which might not be handled correctly.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Add a check to allow MCFG base addresses above 4GB for specific platforms, using a flag to disable the > 4GB check."}], "input_tokens": 9217, "output_tokens": 356}
{"id": "16351", "paths": ["drivers/media/IR/imon.c"], "predicts": [], "input_tokens_sum": 175084, "output_tokens_sum": 1257, "description": "Jarod Wilson (the imon driver maintainer) asked my to open a report here so that the issues are not forgotten.\n\n- There is no fallback timer if a release code is missed (i.e. remote pointed \naway from receiver or some other anomaly), causing a key stuck on autorepeat. \nThe driver should inject a release code itself if there is no release/repeat \ncode in 500ms after initial press or in 120ms after a repeat code.\n\n- No release code is sent for 0x02XXXXXX keys if pressing any other button \nbefore release, examples:\n\nexample 1:\nhold '5', then press 'Play' once, then release '5'\nThe 'Play' codes are relayed properly, but the release code for '5' (the 'all \n0x02XXXXXX keys released' (i.e. empty HID input report) which the hardware \ndoes send properly) is wrongly interpreted as a release code for 'Play'.\nThe driver should either release '5' when the empty report is received, or, as \nthis is just a remote control, just inject a release code for '5' when 'Play' \nis pressed.\n\nexample 2:\nhold '5'", "title": "Various issues with imon remote control driver", "Kernel Version": "2.6.35-rc4", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/media/rc/imon.c"], "causes": [{"cause": "The driver does not handle missed release codes, leading to keys getting stuck in autorepeat mode.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Implement a fallback timer that injects a release code if no release or repeat code is received within 500ms after an initial press or 120ms after a repeat code."}, {"cause": "The driver misinterprets empty HID input reports as release codes for the wrong keys.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Modify the driver to correctly interpret empty HID input reports and release the correct key, or inject a release code for the previously held key when a new key is pressed."}, {"cause": "The driver does not send release codes for 0x02XXXXXX keys when another button is pressed before release.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Ensure that the driver sends a release code for the previously held 0x02XXXXXX key when a new key is pressed, even if the hardware sends an empty report."}], "input_tokens": 646, "output_tokens": 256}
{"id": "16272", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "include/sound/core.h", "sound/core/init.c", "sound/core/sound.c"], "input_tokens_sum": 232884, "output_tokens_sum": 20808, "description": "I switched from 3.6.33 on both sabayon and archlinux distros and both suffer the same symptom of no audio.\n\nalsaconf yeilds:\nLoading driver...\n:: Saving ALSA Levels [BUSY]\n/usr/sbin/alsactl: save_state:1504: No soundcards found.. [DONE]\n:: Restoring ALSA Levels [BUSY]\n/usr/sbin/alsactl: load_state:1610: No soundcards found...... [FAIL]\nSetting default volumes...\namixer: Mixer attach default error: No such file or directory\n---------\nand if I try to force it by adding snd_hda_intel to modules I hang on boot.\nalso going to attach dmesg ........\nreinstalled 3.6.33 and problem is gone, went back to 3.6.34 and broken.\n\nafter no luck fixing it on archforum I was told to post it \"upstream\" so here it is.\n\nthanks for all of the work you do.\nlet me know if any more info is required.", "title": "switching to 2.6.34 broke audio on toshiba satellite x205-s9800 using snd_hda_intel module", "Kernel Version": "2.6.34", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/patch_nvhdmi.c"], "causes": [{"cause": "The snd_hda_intel module may not be correctly initializing the audio hardware on the Toshiba Satellite X205-S9800, leading to no soundcards being detected.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the initialization sequence for the specific hardware model is correctly implemented, possibly by adding a quirk for this model."}, {"cause": "The audio codec might not be properly resumed after a suspend, causing the soundcard to not be detected.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Implement a proper resume function that restores the codec state, including control element values, after a suspend."}, {"cause": "The module may not be allocating sufficient memory for the audio buffers, leading to initialization failures.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the preallocated buffer size to ensure sufficient memory is available for high-quality audio streams."}, {"cause": "The HDMI codec support might be interfering with the detection of the onboard audio codec.", "code_file": "sound/pci/hda/patch_nvhdmi.c", "fix_solution": "Ensure that the HDMI codec initialization does not conflict with the onboard audio codec, possibly by adding checks or conditions specific to the hardware."}], "input_tokens": 10646, "output_tokens": 311}
{"id": "16213", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/sysctl.c", "include/linux/nfs_fs.h", "fs/nfs/callback.c", "fs/nfs/client.c", "net/sunrpc/svc.c", "net/sunrpc/svc_xprt.c", "net/sunrpc/xprt.c"], "input_tokens_sum": 170243, "output_tokens_sum": 3140, "description": "Given a file \"foo\" of 50Mb on a remote machine \"remote\". The command\n<localmachine $> cp /remote_mount_point/foo bar\nnever finishes, and bar has a size lesser than foo.\nand the automounting of the local machine is hanged.\n\nThe error message in /var/log/messages is:\nkernel: Callback slot table overflowed\n\nIf foo is lesser than 10Mb, the problem does'nt occur.\nAfter several tries with the source of 50Mb,\nthe different sizes of the target file \"bar\" are random.\n\nThis incident occurs with:\nsunrpc.tcp_slot_table_entries = 16\n\nbut after tunning this parameter, all is fine with:\nsunrpc.tcp_slot_table_entries = 32", "title": "Some NFS/RPC file transfers fail and hang automounting", "Kernel Version": "2.6.33", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["net/sunrpc/xprt.c", "net/sunrpc/sched.c", "fs/nfs/write.c", "net/sunrpc/xprtsock.c"], "causes": [{"cause": "The NFS client is running out of available RPC slots due to the default sunrpc.tcp_slot_table_entries being too low, causing the callback slot table to overflow.", "code_file": "net/sunrpc/xprt.c", "fix_solution": "Increase the default value of sunrpc.tcp_slot_table_entries to a higher number, such as 32, to prevent the slot table from overflowing."}, {"cause": "The allocation of RPC slots is inefficient, leading to memory fragmentation and allocation failures.", "code_file": "net/sunrpc/sched.c", "fix_solution": "Implement a mempool for RPC slot allocations to handle memory more efficiently and reduce the likelihood of allocation failures."}, {"cause": "The NFS client does not handle large file transfers efficiently, leading to random incomplete file copies.", "code_file": "fs/nfs/write.c", "fix_solution": "Implement flow control for WRITE requests to manage the number of outstanding writes and prevent overwhelming the server."}, {"cause": "The NFS automount process hangs due to insufficient handling of slot table overflows.", "code_file": "net/sunrpc/xprtsock.c", "fix_solution": "Modify the automount handling to better manage slot table entries and prevent hanging when the table overflows."}], "input_tokens": 10134, "output_tokens": 299}
{"id": "16043", "paths": ["drivers/usb/core/driver.c"], "predicts": ["drivers/usb/core/hcd-pci.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/acpi/sleep.h", "arch/x86/kernel/pci/acpi.c", "include/acpi/acpi.h", "kernel/power/suspend.c", "kernel/power/power.h", "include/acpi/acpi_drivers.h"], "input_tokens_sum": 169284, "output_tokens_sum": 2335, "description": "Using the latest Arch Linux kernel (2.6.33.10-1), the contents of /proc/acpi/wakeup are:\n\n[scott@blargh-htpc ~]$ cat /proc/acpi/wakeup\nDevice  S-state   Status   Sysfs node\nHUB0      S5     disabled  pci:0000:00:09.0\nXVR0      S5     disabled\nXVR1      S5     disabled\nXVR2      S5     disabled\nXVR3      S5     disabled\nXVR4      S5     disabled  pci:0000:00:16.0\nXVR5      S5     disabled\nXVR6      S5     disabled\nUAR1      S5     disabled  pnp:00:08\nUSB0      S4     enabled   pci:0000:00:04.0\nUSB1      S4     disabled  pci:0000:00:06.0\nUSBB      S3     disabled  pci:0000:00:06.1\nUSB2      S3     disabled  pci:0000:00:04.1\nAZAD      S5     disabled  pci:0000:00:08.0\nMMAC      S5     disabled  pci:0000:00:0a.0\n\n[scott@blargh-htpc pkg]$ uname -a\nLinux blargh-htpc 2.6.33-ARCH #1 SMP PREEMPT Thu May 13 11:32:37 CEST 2010 x86_64 Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz GenuineIntel GNU/Linu\nx\n\nThe machine will suspend to RAM correctly, but will no longer be resumed by a USB remote power-on", "title": "Resume w/USB remote working in 2.6.33.2, no longer in 2.6.33.10", "Kernel Version": "2.6.33.5", "Product": "Drivers", "Component": "USB", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/sleep.c", "drivers/usb/core/hcd.c", "drivers/acpi/wakeup.c", "drivers/usb/core/usb.c"], "causes": [{"cause": "The SCI_EN bit is not being set correctly on resume, preventing USB devices from waking the system.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the SCI_EN bit is set directly on resume by using the acpi_sleep=sci_force_enable parameter."}, {"cause": "USB host controller is not being properly reinitialized during the resume process, affecting USB wake-up functionality.", "code_file": "drivers/usb/core/hcd.c", "fix_solution": "Add a function to reinitialize the USB host controller during the resume process to ensure it can handle wake-up events."}, {"cause": "ACPI wake-up settings are not being correctly restored from the previous state, leading to disabled USB wake-up.", "code_file": "drivers/acpi/wakeup.c", "fix_solution": "Modify the ACPI wake-up code to ensure that the wake-up settings are restored correctly during the resume process."}, {"cause": "The USB device's power management settings are not being correctly applied during resume, preventing it from waking the system.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Ensure that the USB device's power management settings are correctly applied during the resume process to allow wake-up."}], "input_tokens": 9074, "output_tokens": 294}
{"id": "16027", "paths": ["drivers/gpu/drm/i915/dvo_tfp410.c"], "predicts": ["drivers/gpu/drm/i915/dvo_tfp410.c", "drivers/gpu/drm/i915/dvo.h", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c"], "input_tokens_sum": 131601, "output_tokens_sum": 1385, "description": "Created attachment 26495 [details]\nPatch against linux-2.6.34 to use RSEN instead of HTPLG as monitor present indicator\n\nPresence detection of a digital monitor seems not to be reliable using the\nHTPLG bit, so use the RSEN bit instead.\n\nAs the original Xorg code suffers from the same problem, this \"bug\" is present in a kernels since this inclusion of the Xorg code into the Linux kernel (somewhere around 2.6.29, i think).", "title": "TFP410 driver should use RSEN bit to detect presence of a digital monitor", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_dma.c"], "causes": [{"cause": "The TFP410 driver is using the HTPLG bit for monitor presence detection, which is unreliable.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Modify the driver to use the RSEN bit instead of the HTPLG bit for detecting the presence of a digital monitor."}, {"cause": "The Xorg code, which was integrated into the Linux kernel, also uses the HTPLG bit, leading to the same issue.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Update the Xorg-related code to ensure it uses the RSEN bit for monitor detection."}, {"cause": "The integration of Xorg code into the kernel around version 2.6.29 introduced the use of the HTPLG bit.", "code_file": "drivers/gpu/drm/i915/i915_dma.c", "fix_solution": "Refactor the code to replace any instances of HTPLG bit usage with RSEN bit for monitor presence detection."}], "input_tokens": 9024, "output_tokens": 247}
{"id": "15982", "paths": ["drivers/gpu/drm/radeon/radeon_display.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_fb.c", "drivers/gpu/drm/radeon/radeon_pm.c", "drivers/gpu/drm/radeon/radeon_state.c", "sound/pci/atiixp.c", "sound/pci/hda/hda_intel.c", "include/sound/ac97_codec.h", "sound/core/pcm.c"], "input_tokens_sum": 177329, "output_tokens_sum": 3671, "description": "Playing sound via ATI IXP SB400 card does not work, qmmp player reports buffer underruns with ALSA, other (sox for example) applications just hangs, its possible to hear sound via FMOD , but its noisy and jerky\n\nLast worked: 2.6.33.4 , doesnt work for mainline 2.6.34 (tried with rc6 and rc7-git9)\n\n\nlspci -vv :\n\n00:14.5 Multimedia audio controller: ATI Technologies Inc IXP SB400 AC'97 Audio Controller (rev 02)\n        Subsystem: ASUSTeK Computer Inc. Device 1183\n        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV+ VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-\n        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=slow >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-\n        Latency: 64 (500ns min), Cache Line Size: 64 bytes\n        Interrupt: pin B routed to IRQ 10\n        Region 0: Memory at febfcc00 (32-bit, non-prefetchable) [size=256]\n        Capabilities: <access denied>\n        Kernel driver in use: ATI IXP AC97 controller\n        Kernel modules: snd-atiixp\n\n\n$ lsmod\nMo", "title": "radeon module update for 2.6.34 breaks ALSA (snd_atiixp and snd_hda_intel)", "Kernel Version": "2.6.34", "Product": "Drivers", "Component": "Video", "Hardware": "i386 Linux", "reranked_files": ["drivers/pci/msi.c", "sound/pci/hda/hda_intel.c", "sound/core/pcm_native.c", "drivers/gpu/drm/radeon/radeon_state.c"], "causes": [{"cause": "The radeon module update may have introduced changes affecting the handling of interrupts, leading to buffer underruns in ALSA.", "code_file": "drivers/pci/msi.c", "fix_solution": "Re-enable INTX in MSI mode for ATI devices to ensure proper interrupt handling."}, {"cause": "The update might have altered the memory allocation for sound buffers, causing insufficient memory for audio processing.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the default and maximum buffer size allocation to handle high-quality audio."}, {"cause": "Concurrency issues between hw_params and prepare callbacks could lead to inconsistent data being programmed into the audio device.", "code_file": "sound/core/pcm_native.c", "fix_solution": "Add mutex locks to ensure exclusion between hw_params and prepare callbacks."}, {"cause": "The radeon module update may have affected the initialization of audio codecs, leading to improper configuration.", "code_file": "drivers/gpu/drm/radeon/radeon_state.c", "fix_solution": "Ensure proper initialization of audio-related settings in the radeon module."}], "input_tokens": 10275, "output_tokens": 262}
{"id": "15979", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/platform/x86/eeepc-laptop.c", "drivers/power/power_supply_core.c", "drivers/power/max17040_battery.c", "include/linux/power_supply.h", "arch/x86/kernel/acpi/processor.c", "arch/x86/include/asm/acpi.h", "drivers/power/power_supply_sysfs.c", "kernel/power/main.c", "arch/x86/kernel/acpi/boot.c", "drivers/power/apm_power.c"], "input_tokens_sum": 158009, "output_tokens_sum": 1850, "description": "On eeepc 900 (and possibly other variants) the battery status is incorrectly reported, possibly do to a mixup of units.\n\nWith power plugged in and battery fully charged:\n$ cat /proc/acpi/battery/BAT0/info \npresent:                 yes\ndesign capacity:         5200 mAh\nlast full capacity:      100 mAh\nbattery technology:      rechargeable\ndesign voltage:          8400 mV\ndesign capacity warning: 20 mAh\ndesign capacity low:     10 mAh\ncapacity granularity 1:  52 mAh\ncapacity granularity 2:  52 mAh\nmodel number:            900\nserial number:            \nbattery type:            LION\nOEM info:                ASUS\n\n$ cat /proc/acpi/battery/BAT0/state \npresent:                 yes\ncapacity state:          ok\ncharging state:          charged\npresent rate:            unknown\nremaining capacity:      100 mAh\npresent voltage:         8326 mV\n\n\nlast full capacity remaining capacity are reported by asus in %\nthere may be a similar problem with granularity\n\nAs a result of the above ubuntu reports a", "title": "Eeepc 900 reports incorrect battery status", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/power/power_supply_sysfs.c", "drivers/acpi/sbs.c", "drivers/power/apm_power.c"], "causes": [{"cause": "Incorrect unit conversion for battery capacity values, leading to misinterpretation of percentage as mAh.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Modify the code to correctly interpret and convert battery capacity values from percentage to mAh where necessary."}, {"cause": "The battery driver might be using incorrect properties for reporting battery status, leading to confusion between charge and energy units.", "code_file": "drivers/power/power_supply_sysfs.c", "fix_solution": "Ensure the driver uses the correct properties (e.g., POWER_SUPPLY_PROP_ENERGY_NOW instead of POWER_SUPPLY_PROP_CHARGE_NOW) for batteries reporting in energy units."}, {"cause": "The battery state reporting logic might be incorrectly handling the conversion between different units (e.g., mAh and percentage).", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Adjust the logic to correctly handle unit conversion and ensure accurate reporting of battery state and capacity."}, {"cause": "The APM emulation driver might be incorrectly calculating battery life and status due to improper handling of unit conversions.", "code_file": "drivers/power/apm_power.c", "fix_solution": "Review and correct the calculations for battery life and status to ensure they accurately reflect the battery's state using the correct units."}], "input_tokens": 9927, "output_tokens": 306}
{"id": "15908", "paths": ["drivers/char/nozomi.c"], "predicts": ["drivers/char/nozomi.c", "drivers/char/tty_io.c", "drivers/char/tty_port.c", "kernel/mutex.c", "include/linux/mutex.h", "drivers/char/tty_buffer.c", "kernel/irq/handle.c", "kernel/irq/manage.c", "drivers/char/random.c", "fs/ioctl.c"], "input_tokens_sum": 172277, "output_tokens_sum": 2148, "description": "There is device in /dev/ directory:\n\nls -l /dev/noz*\ncrw-rw---- 1 root dialout 251, 0 2010-05-05 11:31 /dev/noz0\ncrw-rw---- 1 root dialout 251, 1 2010-05-05 11:31 /dev/noz1\ncrw-rw---- 1 root dialout 251, 2 2010-05-05 11:31 /dev/noz2\ncrw-rw---- 1 root dialout 251, 3 2010-05-05 11:31 /dev/noz3\n\nbut trying to use it from any probram (pppd, comgt) gives:\nCan't open device /dev/noz0\n\nand the dmesg has:\n\nWarning: dev (noz0) tty->count(0) != #fd's(1) in tty_open\nnoz: activated 0: f685b860\nBUG: unable to handle kernel NULL pointer dereference at 000000bc\nIP: [<c046b03c>] mutex_lock+0xc/0x30\n*pde = 00000000\nOops: 0002 [#1] SMP\nlast sysfs file: /sys/devices/pci0000:00/0000:00:14.4/0000:02:06.0/net/mon.wlan0                                              /flags\nModules linked in: binfmt_misc xt_state xt_tcpudp ipt_MASQUERADE iptable_nat nf_                                              nat nf_conntrack_ipv4 nf_conntrack nf_defrag_ipv4 nozomi arc4 pcmcia ecb ath5k m                                   ", "title": "Not able to use nozomi modem", "Kernel Version": "2.6.34-rc6", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/char/nozomi.c", "drivers/char/tty_io.c"], "causes": [{"cause": "The nozomi driver may not be properly initializing the card state, leading to access attempts before the card is ready.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Implement a state check in the ntty_open function to ensure the card is in NOZOMI_STATE_READY before proceeding with operations."}, {"cause": "A NULL pointer dereference occurs due to improper handling of mutex locks in the nozomi driver.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Add checks to ensure mutex_lock is only called on valid pointers and handle potential NULL pointers gracefully."}, {"cause": "The tty_open function in the tty_io subsystem may not be correctly handling the tty->count and file descriptor counts, leading to inconsistencies.", "code_file": "drivers/char/tty_io.c", "fix_solution": "Review and correct the logic in tty_open to ensure tty->count matches the number of file descriptors opened."}, {"cause": "The nozomi driver may not be correctly setting up PCI resources, leading to failures in device initialization.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Ensure pci_request_regions and ioremap are correctly called and handle errors appropriately to prevent NULL pointer dereferences."}, {"cause": "Flow control mechanisms in the nozomi driver may be accessed prematurely, causing kernel oopses.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Implement a state management system to ensure flow control is only accessed when the card is fully initialized and ready."}], "input_tokens": 10509, "output_tokens": 371}
{"id": "15903", "paths": ["drivers/pnp/resource.c"], "predicts": ["drivers/pnp/core.c", "drivers/pnp/manager.c", "drivers/pnp/pnpacpi/core.c", "arch/x86/kernel/acpi/boot.c", "include/linux/pnp.h", "arch/x86/mm/ioremap.c", "kernel/resource.c", "drivers/pnp/base.h", "arch/x86/pci/acpi.c", "sound/isa/opl3sa2.c"], "input_tokens_sum": 166918, "output_tokens_sum": 1928, "description": "Pavel wrote:\n> i am playing with old PIII computer (HP Vectra VE) and ISA soundcards.\n> Soundcards are PNP(yamaha,opti,ess,...) and no PNP (multisound).\n> Machine\n> is old, but ACPI compliant - old BIOS.\n> \n> Computer booting OK. PNP0 devices allocate resources OK, but PNP1\n> devices (one ISA slot) not. PNP soundcard driver is not correctly\n> loaded\n> - soundcard device not created.\n\n> 2.6.33 kernel working without problem.", "title": "PNP resource assignment fails", "Kernel Version": "2.6.34-rc6", "Product": "Drivers", "Component": "PNP", "Hardware": "All Linux", "reranked_files": ["include/linux/pnp.h", "drivers/pnp/resource.c", "drivers/pnp/manager.c"], "causes": [{"cause": "The PNP_MAX_PORT limit is too low, causing resource allocation failures for PNP1 devices.", "code_file": "include/linux/pnp.h", "fix_solution": "Increase the PNP_MAX_PORT value to accommodate more IO resource declarations."}, {"cause": "Resources used by active PNP devices are not being reserved, leading to conflicts.", "code_file": "drivers/pnp/resource.c", "fix_solution": "Ensure that resources for active PNP devices are requested and reserved properly."}, {"cause": "Disabled resources are not being handled correctly, causing issues with resource assignment.", "code_file": "drivers/pnp/manager.c", "fix_solution": "Implement proper handling and flagging of disabled resources to avoid conflicts."}, {"cause": "The algorithm for resolving resource conflicts is not robust enough, leading to unresolved conflicts.", "code_file": "drivers/pnp/manager.c", "fix_solution": "Enhance the conflict resolution algorithm to better handle resource conflicts by moving resources in other devices if necessary."}], "input_tokens": 10269, "output_tokens": 244}
{"id": "15789", "paths": ["fs/nfs/dir.c"], "predicts": ["fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/namespace.c", "fs/nfs/super.c", "fs/nfs/write.c", "include/linux/nfs.h", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "init/do_mounts.c", "include/linux/vfs.h"], "input_tokens_sum": 163330, "output_tokens_sum": 2556, "description": "There is some serious weirdness if you try and use bind mounts in conjunction with nfs4 mounts.\n\n $ df -T /var/tmp\nFilesystem    Type   1K-blocks      Used Available Use% Mounted on\nfs.beware.dropbear.id.au:/tmp/\n              nfs4     5160576    403968   4494464   9% /var/tmp\n $ df -T /tmp\nFilesystem    Type   1K-blocks      Used Available Use% Mounted on\n/tmp         tmpfs      921600         4    921596   1% /tmp\n $ cat /tmp/foo\nOver The Lazy Dogs Back\n $ cat /var/tmp/foo\nThe Quick Brown Fox\n#\n# So /var/tmp/foo is on an nfs4 mounted filesystem\n# /tmp/foo is on a tmpfs. Both files are different.\n#\n $ mount --bind /tmp/foo /var/tmp/foo\n $ cat /tmp/foo\nOver The Lazy Dogs Back\n $ cat /var/tmp/foo\nThe Quick Brown Fox\n#\n# Both files should be the same. ie \"Over The Lazy Dogs Back\"\n#\n# In other oddity, ls -l correctly shows both files the same size (31),\n# and ls -i correctly shows both have the same inode number, yet:\n $ cat /tmp/foo | wc -c\n31\n $ cat /var/tmp/foo | wc -c\n20\n#\n# So much f", "title": "Bind mounts broken when used with NFSv4", "Kernel Version": "2.6.32", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/super.c", "fs/nfs/inode.c", "fs/nfs/file.c", "fs/nfs/nfs4proc.c"], "causes": [{"cause": "The bind mount operation does not correctly update the file content when the source is a tmpfs and the target is an NFSv4 mount.", "code_file": "fs/nfs/super.c", "fix_solution": "Ensure that the NFSv4 mount correctly handles updates to the file content when a bind mount is performed, possibly by refreshing the file cache or invalidating stale data."}, {"cause": "Inode information is not being synchronized correctly between the tmpfs and NFSv4 filesystems during a bind mount.", "code_file": "fs/nfs/inode.c", "fix_solution": "Modify the inode handling logic to ensure that inode attributes and data are synchronized between the tmpfs and NFSv4 filesystems during bind operations."}, {"cause": "The NFSv4 client does not properly handle file content updates when a bind mount is involved, leading to stale data being read.", "code_file": "fs/nfs/file.c", "fix_solution": "Implement a mechanism to force a revalidation of file content on the NFSv4 client side when a bind mount is detected."}, {"cause": "The NFSv4 mount option parser may not be correctly setting or interpreting options that affect bind mount behavior.", "code_file": "fs/nfs/super.c", "fix_solution": "Review and correct the mount option parsing logic to ensure that all relevant options are correctly set and interpreted for NFSv4 mounts."}, {"cause": "The NFSv4 protocol handling may not be correctly managing file state changes when bind mounts are used.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Enhance the NFSv4 protocol handling to ensure that file state changes are correctly managed and propagated when bind mounts are involved."}], "input_tokens": 5564, "output_tokens": 412}
{"id": "15788", "paths": ["drivers/usb/core/driver.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/hub.c", "sound/usb/usbaudio.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "include/linux/pm.h", "sound/core/pcm_native.c", "arch/x86/kernel/acpi/sleep.c", "drivers/usb/core/hcd.c", "drivers/usb/core/hcd-pci.c"], "input_tokens_sum": 163530, "output_tokens_sum": 1659, "description": "My external usb sound card doesn't work after resume. What is strange is that it appears in lsusb output but not in aplay -l. I am using tuxonice but the problem also occurs with the suspend-to-disk functionality of the mainline kernel.", "title": "external usb sound card doesn't work after resume", "Kernel Version": "2.6.34-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["drivers/usb/core/hcd-pci.c", "sound/usb/usbaudio.c", "sound/core/pcm_native.c", "drivers/pci/msi.c"], "causes": [{"cause": "The USB sound card is not properly reinitialized after resume, causing it to appear in lsusb but not in aplay -l.", "code_file": "drivers/usb/core/hcd-pci.c", "fix_solution": "Ensure that the USB sound card is properly reinitialized during the resume process by adding a call to pci_enable_msi(dev) in the usb_hcd_pci_resume function."}, {"cause": "The sound subsystem does not correctly handle the reinitialization of the USB sound card after resume.", "code_file": "sound/usb/usbaudio.c", "fix_solution": "Add logic to reinitialize the USB sound card in the snd_usb_audio_resume function, ensuring that the device is correctly recognized by ALSA."}, {"cause": "The ALSA subsystem does not correctly update its device list after a system resume, causing the sound card to be missing from aplay -l.", "code_file": "sound/core/pcm_native.c", "fix_solution": "Implement a mechanism to refresh the ALSA device list during the resume process, possibly by adding a mutex lock around the device list update in the snd_pcm_prepare function."}, {"cause": "Interrupt handling for the USB sound card is not correctly restored after resume, leading to the device not being recognized by ALSA.", "code_file": "drivers/pci/msi.c", "fix_solution": "Ensure that INTX is correctly enabled for devices that require it during the resume process by modifying the enable_msi_mode function to conditionally enable INTX based on device requirements."}], "input_tokens": 9639, "output_tokens": 354}
{"id": "15537", "paths": ["drivers/ata/libata-sff.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "drivers/ata/ata_piix.c", "drivers/ata/libata-sff.c", "block/blk-timeout.c", "block/blk-core.c", "include/linux/libata.h", "kernel/irq/spurious.c", "arch/x86/kernel/irq.c"], "input_tokens_sum": 174636, "output_tokens_sum": 2673, "description": "The system works fine with 2.6.33 \nCompiling 2.6.34-rc1 I accepted the defaults for all the new options (except the max no of GPUs). The kernel boot Ok but when I try to use the system and access the disk it freezes for about 30 seconds with no disk activity and then I get a message like this in the system log\n\nMar 11 14:57:57 eccles kernel: ata2: clearing spurious IRQ\nMar 11 14:58:27 eccles kernel: ata2: lost interrupt (Status 0x50)\nMar 11 14:58:27 eccles kernel: ata2.01: exception Emask 0x0 SAct 0x0 SErr 0x0 action 0x0 frozen\nMar 11 14:58:27 eccles kernel: ata2.01: failed command: WRITE DMA\nMar 11 14:58:27 eccles kernel: ata2.01: cmd ca/00:08:4c:37:6f/00:00:00:00:00/fd tag 0 dma 4096 out\nMar 11 14:58:27 eccles kernel:          res 40/00:00:00:00:00/00:00:00:00:00/10 Emask 0x4 (timeout)\nMar 11 14:58:27 eccles kernel: ata2.01: status: { DRDY }\nMar 11 14:58:27 eccles kernel: ata2.00: hard resetting link\nMar 11 14:58:28 eccles kernel: ata2.01: hard resetting link\nMar 11 14:58:28 eccles k", "title": "2.6.34-rc1 hangs for 30 seconds when trying to access the disk", "Kernel Version": "2.6.34-rc1", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-sff.c", "drivers/ata/libata-eh.c", "drivers/ata/libata-core.c"], "causes": [{"cause": "The system experiences a lost interrupt during disk access, leading to a timeout and reset sequence.", "code_file": "drivers/ata/libata-sff.c", "fix_solution": "Implement a mechanism to detect and handle lost interrupts more effectively, possibly by checking the status register and completing the command if it is already done."}, {"cause": "The removal of the ata_qc_timeout function might have affected the handling of command timeouts, leading to the observed behavior.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Reintroduce a mechanism similar to ata_qc_timeout to handle command timeouts and ensure proper error handling and recovery."}, {"cause": "The system might not be properly resetting the SATA PHY, leading to a failure in handling the WRITE DMA command.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Ensure that the SATA PHY reset sequence is correctly implemented and that any necessary delays or status checks are performed."}, {"cause": "The ata2: clearing spurious IRQ message indicates that the system might be incorrectly handling or misinterpreting IRQs.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Improve the IRQ handling logic to better differentiate between valid and spurious interrupts, possibly by adding additional checks or logging."}], "input_tokens": 10402, "output_tokens": 310}
{"id": "15419", "paths": ["drivers/net/wireless/ipw2x00/ipw2200.c"], "predicts": ["drivers/net/wireless/ipw2x00/ipw2200.c", "drivers/net/wireless/ipw2x00/ipw2200.h", "net/wireless/scan.c", "drivers/net/wireless/ipw2x00/libipw_wx.c", "net/wireless/mlme.c"], "input_tokens_sum": 161866, "output_tokens_sum": 2389, "description": "Created attachment 25292 [details]\nCommented dmesg (ipw2200 debug=255)\n\nOverview:\nSince long time (at least 2.6.24), with some networks the connection gets systematically dropped when a scan is requested (i.e. by NetworkManager).\n\nSteps to reproduce:\nI could always reproduce this issue by stopping NetworkManager and manually configuring a wireless connection to an affected network in /etc/network/interfaces (ifupdown uses wpa_supplicant, like NM does): when the connection is active, a iwlist ethx scan command always causes ap disassociation and subsequent connection drop. If no scans are requested the connection is very reliable and fast and lasts hours (no disassociations happen).\n\nActual results:\nThe card gets disassociated from the ap and the connection drops.\n\nExpected results:\nThe connection shouldn't drop when scanning is requested.\n\nBuild date and platform:\nDebian Sid i386 current (kernel 2.6.32-9) on an Acer TravelMate 435LMi + Intel ProWireless 2915 (ipw2200).\n\nAdditional info", "title": "ipw2200: requesting scan causes connection drops", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ipw2x00/ipw2200.c"], "causes": [{"cause": "The firmware cancels scans without notifying the driver, leading to a watchdog timeout and disassociation.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.c", "fix_solution": "Adjust the dwell time for passive channels to be slightly smaller than the beacon interval to prevent firmware cancellation."}, {"cause": "The scan timeout is too short, causing the adapter to restart and drop the connection in environments with many access points.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.c", "fix_solution": "Increase the scan timeout from 5 seconds to 10 seconds to accommodate longer scan durations."}, {"cause": "The driver cancels scans immediately after missing a single beacon during scanning, leading to frequent disassociations.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.c", "fix_solution": "Increase the number of allowed beacon misses from one to three to improve scan completion while associated."}, {"cause": "The firmware enters an infinite loop when scanning passive channels with a dwell time longer than the beacon interval.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.c", "fix_solution": "Set the dwell time for passive channels to beacon_interval - 10 when associated to avoid infinite loops."}], "input_tokens": 9860, "output_tokens": 314}
{"id": "15407", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/power.c", "kernel/power/suspend.c", "kernel/irq/spurious.c", "arch/x86/kernel/time.c", "include/linux/irq.h", "include/linux/suspend.h", "fs/proc/interrupts.c", "arch/x86/kernel/acpi/processor.c", "kernel/irq/handle.c", "drivers/usb/host/xhci-hcd.c"], "input_tokens_sum": 164659, "output_tokens_sum": 2110, "description": "After unloading drivers that cause problems with suspend (xhci, bluetooth, etc) the system can suspend OK.  On resume however this message is displayed in dmesg:\n\n[18446744064.763411] irq 9: nobody cared (try booting with the \"irqpoll\" option)\n[18446744064.763419] Pid: 0, comm: swapper Tainted: G        W  2.6.32-14-generic #20-Ubuntu\n[18446744064.763423] Call Trace:\n[18446744064.763426]  <IRQ>  [<ffffffff810c4c1b>] __report_bad_irq+0x2b/0xa0\n[18446744064.763439]  [<ffffffff810c4e1c>] note_interrupt+0x18c/0x1d0\n[18446744064.763446]  [<ffffffff81019f09>] ? read_tsc+0x9/0x20\n[18446744064.763452]  [<ffffffff810c551d>] handle_fasteoi_irq+0xdd/0x100\n[18446744064.763457]  [<ffffffff81015d52>] handle_irq+0x22/0x30\n[18446744064.763465]  [<ffffffff81563bdc>] do_IRQ+0x6c/0xf0\n[18446744064.763472]  [<ffffffff81013b53>] ret_from_intr+0x0/0x11\n[18446744064.763475]  <EOI>  [<ffffffff813086c0>] ? acpi_idle_enter_bm+0x283/0x2b7\n[18446744064.763486]  [<ffffffff813086b9>] ? acpi_idle_enter_bm+0x27c/0x2b", "title": "All Lenovo i5/i7 notebooks do not resume properly after suspend - system resumes but will hang if resumed a second time", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "All Linux", "reranked_files": ["kernel/irq/handle.c", "drivers/acpi/sleep/main.c", "kernel/power/main.c", "kernel/irq/manage.c"], "causes": [{"cause": "The system is not properly handling shared IRQs, leading to interrupts not being processed correctly after resume.", "code_file": "kernel/irq/handle.c", "fix_solution": "Implement a mechanism to re-check and handle shared IRQs multiple times to ensure all interrupts are processed."}, {"cause": "ACPI subsystem is not correctly resetting or handling power states during the suspend/resume cycle.", "code_file": "drivers/acpi/sleep/main.c", "fix_solution": "Ensure that ACPI power state transitions are correctly managed and reset after each suspend/resume cycle."}, {"cause": "The suspend/resume callbacks are not properly managing the transition states, leading to inconsistent system states.", "code_file": "kernel/power/main.c", "fix_solution": "Introduce additional callbacks to ensure proper state management and cleanup during suspend and resume operations."}, {"cause": "The IRQ handling code does not account for edge-triggered interrupts that may be missed due to race conditions.", "code_file": "kernel/irq/manage.c", "fix_solution": "Modify the IRQ handling logic to include checks for missed edge-triggered interrupts and re-trigger them if necessary."}], "input_tokens": 9183, "output_tokens": 272}
{"id": "15366", "paths": ["kernel/time/clocksource.c"], "predicts": ["kernel/time/clocksource.c", "drivers/clocksource/acpi_pm.c", "drivers/clocksource/scx200_hrt.c", "drivers/clocksource/sh_cmt.c", "drivers/clocksource/sh_tmu.c", "drivers/clocksource/tcb_clksrc.c", "fs/sysfs/file.c", "include/linux/clocksource.h", "kernel/time/timekeeping.c", "arch/x86/kernel/time.c"], "input_tokens_sum": 162514, "output_tokens_sum": 1567, "description": "curr_clocksource is uninitialized if GENERIC_TIME=n\n\n# cat /sys/devices/system/clocksource/clocksource0/current_clocksource\n[  187.940000] Unable to handle kernel NULL pointer dereference at virtual address 00000000\n[  187.960000] pgd = df160000\n[  187.960000] [00000000] *pgd=bf11a031, *pte=00000000, *ppte=00000000\n[  187.970000] Internal error: Oops: 17 [#1] PREEMPT\n[  187.970000] last sysfs file: /sys/devices/system/clocksource/clocksource0/current_clocksource\n[  187.970000] Modules linked in:\n[  187.970000] CPU: 0    Not tainted  (2.6.32.8-iop32x #13)\n[  187.970000] PC is at sysfs_show_current_clocksources+0x2c/0x58\n[  187.970000] LR is at sysfs_show_current_clocksources+0x18/0x58\n[  187.970000] pc : [<c006b530>]    lr : [<c006b51c>]    psr: 60000013\n[  187.970000] sp : df0b9f10  ip : 00000000  fp : beff0cb0\n[  187.970000] r10: c043e3cc  r9 : df0eabd8  r8 : df0b9f80\n[  187.970000] r7 : 00000fff  r6 : df8be960  r5 : c042e0f8  r4 : df10b000\n[  187.970000] r3 : c0472980  r2 : c03b02d8 ", "title": "sysfs oops when reading current_clocksource if GENERIC_TIME=n", "Kernel Version": "2.6.32", "Product": "Timers", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["kernel/time/clocksource.c"], "causes": [{"cause": "The curr_clocksource variable is not initialized when GENERIC_TIME is set to 'n', leading to a NULL pointer dereference.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Initialize curr_clocksource to a default clocksource, such as clocksource_jiffies, when GENERIC_TIME is not enabled."}, {"cause": "The sysfs_show_current_clocksources function does not check if curr_clocksource is NULL before accessing it.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Add a NULL check for curr_clocksource in sysfs_show_current_clocksources before accessing its name."}, {"cause": "The clocksource infrastructure assumes that at least one clocksource is registered, which may not be the case if GENERIC_TIME is disabled.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Ensure that a default clocksource is always registered during initialization, even if GENERIC_TIME is disabled."}], "input_tokens": 9445, "output_tokens": 233}
{"id": "15303", "paths": ["drivers/platform/x86/sony-laptop.c"], "predicts": ["drivers/platform/x86/sony-laptop.c", "net/rfkill/core.c", "include/linux/rfkill.h", "include/linux/sony-laptop.h"], "input_tokens_sum": 161292, "output_tokens_sum": 1870, "description": "Keywords:\nWLAN, RF kill switch, iwl3945, sony-laptop\n\nKernel version:\nLinux version 2.6.32-13-generic (buildd@vernadsky) (gcc version 4.4.3 (Ubuntu 4.4.3-2ubuntu1) ) #18-Ubuntu SMP Wed Feb 10 21:24:20 UTC 2010\n(I was also able to confirm the problem with Ubuntu Karmic and Fedora 12)\n\nDescription:\nIf the RF kill switch is activated during booting my Sony Notebook (VGN-TX3HP) WLAN cannot be activated later. If WLAN is activated during boot it can be deactivated and reactivated without problems.\n\nI was able to narrow down the problem: If I unload the sony-laptop module before disabling the kill switch, WLAN becomes active without problems. Then I can load sony-laptop without it is causing problems.\n\nThis problem did not occur with Kernel versions <=2.6.28 (at least).\n\nSteps to reproduce the problem:\n- get a Sony Vaio laptop with iwl3945 hardware (my is a TX3HP)\n- enable RF kill switch (disable WLAN)\n- boot Linux\n- disable RF kill switch (enable WLAN)\n- WLAN does not become available  \n\nSt", "title": "WLAN cannot be activated if booted with activated RF kill switch on Sony notebook (iwl3945)", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "Platform", "Hardware": "i386 Linux", "reranked_files": ["drivers/platform/x86/sony-laptop.c", "net/rfkill/rfkill.c", "drivers/net/wireless/intel/iwlegacy/iwl3945.c", "include/linux/rfkill.h"], "causes": [{"cause": "The RF kill switch state is not being correctly updated when the sony-laptop module is loaded, causing the WLAN to remain disabled.", "code_file": "drivers/platform/x86/sony-laptop.c", "fix_solution": "Ensure that the RF kill switch state is correctly queried and updated when the sony-laptop module is loaded, possibly by adding a check or update function in the module initialization."}, {"cause": "The rfkill subsystem does not correctly handle the state transition when the RF kill switch is toggled after boot.", "code_file": "net/rfkill/rfkill.c", "fix_solution": "Modify the rfkill_toggle_radio function to ensure it correctly updates the radio state when the RF kill switch is toggled after boot."}, {"cause": "The iwl3945 driver does not correctly respond to changes in the RF kill switch state when the sony-laptop module is loaded.", "code_file": "drivers/net/wireless/intel/iwlegacy/iwl3945.c", "fix_solution": "Add a mechanism to re-check the RF kill switch state and reinitialize the WLAN interface when the RF kill switch is toggled."}, {"cause": "The RF kill switch state is not being propagated correctly to the WLAN hardware when the sony-laptop module is loaded.", "code_file": "include/linux/rfkill.h", "fix_solution": "Ensure that the rfkill state change notifications are correctly sent to the WLAN hardware by adding appropriate hooks or callbacks in the rfkill subsystem."}], "input_tokens": 9641, "output_tokens": 345}
{"id": "15287", "paths": ["drivers/pci/quirks.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_irq.c", "drivers/gpu/drm/radeon/radeon_fence.c"], "input_tokens_sum": 172218, "output_tokens_sum": 2357, "description": "Using the KMS option of the radeon-driver makes the kernel segfault and reboot when starting an kde session. This happens on daves radeon-testing tree using latest mesa-git and libdrm-git. Also happens on latest linus tree. The same combination works great when using the non-kms codepath.\n\nHardware is an mobility radeon x700 pcie.\n\nlspci -vn:\n02:00.0 0300: 1002:5653 (prog-if 00 [VGA controller])\n        Subsystem: 1734:1093\n        Flags: bus master, fast devsel, latency 0, IRQ 24\n        Memory at b0000000 (64-bit, prefetchable) [size=128M]\n        Memory at feaf0000 (64-bit, non-prefetchable) [size=64K]\n        I/O ports at b000 [size=256]\n        Expansion ROM at feac0000 [disabled] [size=128K]\n        Capabilities: [50] Power Management version 2\n        Capabilities: [58] Express Endpoint, MSI 00\n        Capabilities: [80] MSI: Enable- Count=1/1 Maskable- 64bit+\n        Capabilities: [100] Advanced Error Reporting", "title": "RadeonKMS segfaults kdm on mobility radeon x700 pcie", "Kernel Version": "2.6.34-rc1", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/Makefile", "drivers/gpu/drm/radeon/r300.c"], "causes": [{"cause": "The kernel segfaults due to improper handling of AGP mode for PCIe devices, causing incorrect memory access.", "code_file": "drivers/gpu/drm/radeon/radeon_device.c", "fix_solution": "Ensure AGP mode is disabled for PCIe devices by checking the device type before setting AGP flags."}, {"cause": "The initialization order of TTM and Radeon KMS is incorrect, leading to a crash when KMS is enabled.", "code_file": "drivers/gpu/drm/Makefile", "fix_solution": "Modify the Makefile to initialize TTM before Radeon when KMS is enabled."}, {"cause": "Failure to initialize GPU acceleration causes a segfault when starting a KDE session.", "code_file": "drivers/gpu/drm/radeon/radeon_device.c", "fix_solution": "Implement a fallback mechanism to disable acceleration if initialization fails, allowing the system to continue without segfaulting."}, {"cause": "Improper handling of command stream checking for r3xx-r5xx hardware, leading to memory access violations.", "code_file": "drivers/gpu/drm/radeon/r300.c", "fix_solution": "Enhance command stream checker to ensure memory accesses are within bounds and prevent illegal operations."}, {"cause": "Incorrect handling of AGP mode settings for integrated graphics processors (IGP), causing non-functioning hardware.", "code_file": "drivers/gpu/drm/radeon/radeon_device.c", "fix_solution": "Ensure AGP mode settings are only applied to AGP GPUs by adding checks for the GPU type before modifying AGP settings."}], "input_tokens": 11222, "output_tokens": 372}
{"id": "15118", "paths": ["drivers/platform/x86/thinkpad_acpi.c"], "predicts": ["drivers/platform/x86/thinkpad_acpi.c"], "input_tokens_sum": 168194, "output_tokens_sum": 1779, "description": "Reported-by: Florian Zumbiehl <florz@florz.de>\n\nThe vendor (\"ThinkPad\") key on a T20 with latest T22 BIOS only works after a S3 suspend/resume cycle.  Tested with direct (no userspace script) S3 sleep.\n\nThe T20 is running a patched kernel to fix the EC DoS problem.\n\nThe key is operating in NVRAM polling mode.\n\nIt breaks again when thinkpad-acpi is unloaded and then reloaded.\n\nDriver hotkey state dump:\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_all_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_bios_enabled:0\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_bios_mask:0x0000080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_enable:1\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_poll_freq:10\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_recommended_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_report_mode:1\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_source_mask:0x0088", "title": "\"ThinkPad\" key on T20 only works after suspend cycle", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c"], "causes": [{"cause": "The ThinkPad key functionality is dependent on the state of the ACPI hotkey mask, which is not correctly initialized until after a suspend/resume cycle.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Ensure the hotkey mask is correctly initialized during the driver initialization process, not just after a suspend/resume cycle."}, {"cause": "The NVRAM polling mode for the hotkey is not properly set up during the initial driver load, causing the key to only work after a suspend/resume cycle.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Add code to correctly set up NVRAM polling mode during the initial driver load."}, {"cause": "The unloading and reloading of the thinkpad-acpi module resets the hotkey state, which is not correctly restored.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Implement a mechanism to save and restore the hotkey state when the module is unloaded and reloaded."}, {"cause": "The hotkey BIOS mask is not correctly configured, leading to the key only functioning after a suspend/resume cycle.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Ensure the hotkey BIOS mask is correctly configured during the driver initialization."}], "input_tokens": 10180, "output_tokens": 321}
{"id": "14957", "paths": ["drivers/gpu/drm/i915/intel_lvds.c"], "predicts": ["drivers/gpu/drm/drm_crtc_helper.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "include/drm/drm_crtc_helper.h", "include/drm/i915_drm.h"], "input_tokens_sum": 169560, "output_tokens_sum": 2425, "description": "When the i915 module is loaded with modeset=1, the screen is blanked and stays that way, with the following in dmesg:\n\n[drm] DAC-6: set mode 640x480 0\n[drm] TV-14: set mode NTSC 480i 0\n------------[ cut here ]------------\nWARNING: at drivers/gpu/drm/drm_crtc_helper.c:1032 drm_helper_initial_config+0x36/0x52 [drm_kms_helper]()\nHardware name: SX20S\nNo connectors reported connected with modes\nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_intel8x0(+) firewire_ohci snd_intel8x0m(+) pcmcia snd_pcm_oss snd_ac97_codec firewire_core ac97_bus snd_mixer_oss i915(+) joydev crc_itu_t yenta_socket snd_pcm drm_kms_helper snd_timer drm rsrc_nonstatic b44 ipw2200 sdhci_pci ohci1394 snd cfbcopyarea soundcore psmouse video ssb sdhci pcmcia_core i2c_i801 libipw ieee1394 iTCO_wdt serio_raw snd_page_alloc pcspkr lib80211 iTCO_vendor_support output cfbimgblt cfbfillrect led_class mii aes_i586 aes_generic xts gf128mul\nPid: 1226, comm: modprobe Not tainted 2.6.32 #1", "title": "Blank screen with KMS enabled", "Kernel Version": "2.6.33-rc2", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/drm_crtc_helper.c", "drivers/gpu/drm/i915/i915_opregion.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c"], "causes": [{"cause": "The i915 driver may not be correctly initializing the display connectors, leading to no connected modes being reported.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Ensure that the connector initialization code properly detects and sets up connected displays."}, {"cause": "The drm_helper_initial_config function may not be handling the case where no connectors are reported correctly, leading to a blank screen.", "code_file": "drivers/gpu/drm/drm_crtc_helper.c", "fix_solution": "Add error handling in drm_helper_initial_config to manage cases where no connectors are detected."}, {"cause": "The ACPI OpRegion support might not be correctly initialized, affecting display output.", "code_file": "drivers/gpu/drm/i915/i915_opregion.c", "fix_solution": "Verify and ensure that the OpRegion initialization is correctly setting up the necessary ACPI interfaces."}, {"cause": "The modesetting parameter might not be correctly interpreted or applied, causing the i915 driver to fail in setting the display mode.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Check the handling of the modeset parameter and ensure it is correctly applied during driver initialization."}, {"cause": "The interrupt handling in the i915 driver might not be correctly configured, leading to display update issues.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Review and correct the interrupt enable and handling logic to ensure display updates are processed."}], "input_tokens": 9803, "output_tokens": 363}
{"id": "14753", "paths": ["drivers/acpi/blacklist.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/ec.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/video.h", "include/acpi/acpi.h", "drivers/acpi/power.c"], "input_tokens_sum": 202822, "output_tokens_sum": 7924, "description": "Created attachment 24058 [details]\ndmesg 2.6.32\n\nMost recent kernel where this bug did not occur: 2.6.31.6 stock from Arch Linux\nDistribution: Arch Linux\nHardware Environment: Asus Notebook X5DIJ-SX101L\nSoftware Environment: n/a\n\nProblem Description: \nSince installing the new kernel there a many ACPI Errors in dmesg:\n \nACPI Exception: AE_AML_BUFFER_LIMIT, Index (000000064) is beyond end of object (20090903/exoparg2-445)\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.STBR] (Node ffff88007d81d120), AE_AML_BUFFER_LIMIT\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.VGA_.LCDD._BCM] (Node ffff88007d8373a0), AE_AML_BUFFER_LIMIT\nACPI Error: Evaluating _BCM failed (20090903/video-528)\n\nI didn't notice any problems yet, maybe graphics in X are a bit slower but the biggest problem for me is the spam in dmesg. I found a bugreport (#9558) with ACPI errors that looks similar to mine except the part in square brackets. I have read about using a c", "title": "ACPI Errors: Index beyond end of object, parse/execution failed, _BCM failed - Asus Notebook X5DIJ-SX101L", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c"], "causes": [{"cause": "The ACPI video module is attempting to access a buffer index that exceeds the buffer's limit, causing AE_AML_BUFFER_LIMIT errors.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add boundary checks before accessing buffer indices to ensure they do not exceed the buffer's size."}, {"cause": "The ACPI method _BCM is failing due to incorrect handling of buffer sizes or indices in the ACPI video driver.", "code_file": "drivers/acpi/video.c", "fix_solution": "Review and correct the buffer handling logic in the _BCM method to ensure it respects buffer limits."}, {"cause": "The ACPI video driver is not correctly identifying or handling the capabilities of the video device, leading to method execution failures.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Enhance the capability detection logic to ensure that only supported methods are called on the video device."}, {"cause": "The ACPI video driver is not properly checking for the presence of video devices before attempting to execute methods on them.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Implement checks to verify the presence of video devices before executing ACPI methods to prevent method failures."}, {"cause": "The ACPI video driver may be attempting to execute methods on non-existent or incorrectly identified video devices.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add logic to ensure that ACPI methods are only executed on devices that are confirmed to exist and are correctly identified."}], "input_tokens": 10034, "output_tokens": 362}
{"id": "14686", "paths": ["drivers/net/wireless/ath/ath5k/eeprom.c"], "predicts": ["drivers/net/wireless/ath/ath5k/base.c"], "input_tokens_sum": 164378, "output_tokens_sum": 877, "description": "Created attachment 23926 [details]\nboot dmesg\n\nHi,\nSince 2.6.32-rc8 I observe the following in my dmesg:\n\nWARNING: at drivers/net/wireless/ath/ath5k/base.c:1142 ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]()\nHardware name: 2007WS4\ninvalid hw_rix: 1b\nModules linked in: vboxnetadp vboxnetflt vboxdrv usb_storage tun sco bridge stp llc bnep acpi_cpufreq cpufreq_powersave binfmt_misc uinput fuse hdaps tp_smapi thinkpad_ec cpufreq_stats cpufreq_ondemand freq_table loop dm_mod btusb snd_hda_codec_analog snd_hda_intel snd_hda_codec snd_pcm_oss snd_mixer_oss snd_pcm snd_seq_midi uhci_hcd snd_rawmidi snd_seq_midi_event snd_seq pcmcia snd_timer snd_seq_device ath5k snd psmouse ehci_hcd ath yenta_socket soundcore snd_page_alloc rsrc_nonstatic serio_raw usbcore evdev pcmcia_core\nPid: 14069, comm: rhythmbox Tainted: G        W  2.6.32-rc8 #1\nCall Trace:\n [<f8889d1a>] ? ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]\n [<f8889d1a>] ? ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]\n [<c1034a2c>] warn_slowpath_common+0x6c/0xc0\n [<f8", "title": "WARNING: at drivers/net/wireless/ath/ath5k/base.c:1142 ath5k_tasklet_rx+0x47a/0x5f0", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ath/ath5k/base.c", "drivers/net/wireless/ath/ath5k/reset.c"], "causes": [{"cause": "The invalid hw_rix warning is triggered due to a race condition when the channel or operating band changes while processing status descriptors in the tasklets.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Ensure that the channel and band are updated in the software state after stopping RX and TX to prevent using incorrect channel information."}, {"cause": "The warning is printed with insufficient information, making it difficult to debug the issue.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Enhance the warning message to include more context, such as the band and hardware rate index, to aid in debugging."}, {"cause": "RX buffers are not cleared when changing channels, leading to incorrect channel information being used.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Implement a function to clear RX buffers during a reset to ensure that no stale data is processed."}, {"cause": "The driver may attempt to access hardware registers while the device is in an incorrect power state, leading to invalid operations.", "code_file": "drivers/net/wireless/ath/ath5k/reset.c", "fix_solution": "Ensure that the device is properly woken up and in the correct power state before accessing hardware registers."}], "input_tokens": 11564, "output_tokens": 319}
{"id": "14597", "paths": ["drivers/platform/x86/thinkpad_acpi.c"], "predicts": ["drivers/platform/x86/thinkpad_acpi.c", "arch/x86/kernel/quirks.c", "include/linux/dmi.h"], "input_tokens_sum": 158108, "output_tokens_sum": 1047, "description": "The driver will fail to detect BIOSes that both lack the \"ThinkPad\" string in the DMI tables, and the EC version string, for ThinkPads that have the EC version string on the most up-to-date BIOSES.\n\nThis causes the driver to return -ENODEV, and the module will not load.\n\nThe problem can be worked around by giving the module the \"force_load=1\" parameter.\n\nProblem tracked down to the quirk tables used as a fallback for known-BIOS detection, they would not match if the EC version is flagged as \"unknown\".", "title": "thinkpad-acpi: driver fails to load on old BIOS for the A31, T23-T30, X30-X31", "Kernel Version": "2.6.32-rc1", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c", "include/linux/dmi.h"], "causes": [{"cause": "The DMI string matching for older ThinkPad models is incomplete, missing a wildcard character to match the full DMI string.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Add a wildcard '*' at the end of the DMI string in the IBM_BIOS_MODULE_ALIAS macro to ensure it matches the full DMI string."}, {"cause": "The fallback quirk tables do not account for EC version strings being flagged as 'unknown', leading to a failure in BIOS detection.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Update the quirk tables to handle cases where the EC version is 'unknown' by adding appropriate entries or conditions."}, {"cause": "The module aliasing mechanism does not correctly handle older BIOS versions due to missing or incorrect DMI field entries.", "code_file": "include/linux/dmi.h", "fix_solution": "Ensure that the DMI fields used in MODULE_ALIAS are correctly defined and include all necessary fields for older BIOS versions."}], "input_tokens": 10228, "output_tokens": 247}
{"id": "14538", "paths": ["drivers/net/wireless/b43/rfkill.c"], "predicts": ["drivers/net/wireless/b43/main.c", "drivers/net/wireless/b43legacy/main.c", "drivers/net/wireless/iwlwifi/iwl-core.c", "net/wireless/core.c", "net/wireless/sme.c", "net/wireless/util.c", "include/linux/netdevice.h", "include/linux/wireless.h", "kernel/irq/pm.c", "kernel/power/suspend.c"], "input_tokens_sum": 160169, "output_tokens_sum": 1855, "description": "Kernel version: 2.6.32-rc6\nLast working kernel: 2.6.32-rc5\nAthlon 64 3000 single core\n64 bits version, Bluewhite64\n\nAfter a suspend to ram/resume, the wireless interface is dead and cannot reassociate anymore. Trying to restart wpa/dhcpd gives the following errors:\n\nroot@athor:/home/christian# /etc/rc.d/rc.inet1 stop\nroot@athor:/home/christian# /etc/rc.d/rc.inet1 start\nSIOCSIFFLAGS: Erreur inconnue 132\n/etc/rc.d/rc.inet1:  eth1 information: 'Any ESSID'\nError for wireless request \"Set Nickname\" (8B1C) :\n    SET failed on device eth1 ; Operation not supported.\nSIOCSIFFLAGS: Unknown error 132\nCould not set interface 'eth1' UP\nSIOCSIFFLAGS: Erreur inconnue 132\nPolling for DHCP server on interface eth1:\nerr, eth1: ioctl SIOCSIFFLAGS: Unknown error 132\n\nThe \"Set Nickame\" always occurs and is not the problem. However, the Unknown error 132 is completly new.\n\nMoreover, iwconfig says the eth1 interface is not associated anymore.", "title": "Unable to associate with AP after resume since 2.6.32-rc6", "Kernel Version": "2.6.32-rc6", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/b43/main.c", "drivers/net/wireless/b43/xmit.c"], "causes": [{"cause": "The wireless interface fails to reinitialize properly after a suspend/resume cycle, possibly due to incorrect handling of MAC addresses.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Ensure that MAC addresses are preserved during the resume process by removing any code that overwrites them during resume."}, {"cause": "The wireless driver may not be correctly handling the power state transitions, leading to the interface being unable to come back up after resume.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Add proper power state management during suspend and resume, ensuring the device is correctly powered up and initialized."}, {"cause": "The wireless interface may not be correctly reconfigured after resume, leading to failure in setting the interface UP.", "code_file": "drivers/net/wireless/b43/xmit.c", "fix_solution": "Ensure that all necessary configurations and initializations are reapplied to the wireless interface during the resume process."}, {"cause": "The wireless driver may be incorrectly handling interrupts or error states during resume, causing the interface to fail.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Review and adjust interrupt handling logic to ensure proper operation during and after resume."}], "input_tokens": 9367, "output_tokens": 299}
{"id": "14329", "paths": ["drivers/ata/sata_nv.c"], "predicts": ["drivers/ata/sata_nv.c", "drivers/ata/libata-core.c", "drivers/ata/ahci.c", "drivers/ata/libata-eh.c", "include/linux/ata.h", "block/blk-core.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "arch/x86/power/cpu.c", "kernel/power/process.c"], "input_tokens_sum": 149792, "output_tokens_sum": 2026, "description": "Created attachment 23274 [details]\nmessages\n\nAfter suspend one of my secondary disks doesn't resume. It works ok under kernel 2.6.30.9 and previous. I have 4 disk connected to the same Nvidia sata controller: 3 identical maxtor (sda/b/c) and 1 Hitachi (sdd), and this last one doesn't wakes up.\nIn attachment the interesting lines from /var/log/messages and the output of hdparm -I.\nThank you.", "title": "Sata disk doesn't wake up after S3 suspend", "Kernel Version": "2.6.31", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/ahci.c", "drivers/ata/sata_nv.c", "drivers/ata/libata-core.c"], "causes": [{"cause": "The AHCI controller may not be properly restoring the initial configuration after a suspend/resume cycle, leading to the disk not waking up.", "code_file": "drivers/ata/ahci.c", "fix_solution": "Ensure that the initial configuration of the AHCI controller is saved and restored correctly during suspend/resume cycles by using ahci_save_initial_config() and ahci_restore_initial_config()."}, {"cause": "The Nvidia SATA controller might not be handling the power management events correctly, causing the Hitachi disk to not resume.", "code_file": "drivers/ata/sata_nv.c", "fix_solution": "Add additional checks and handling for power management events specific to the Nvidia SATA controller to ensure all connected disks resume correctly."}, {"cause": "The SATA controller might not be properly handling the resume process for certain disk models, such as the Hitachi disk.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Implement additional logic to handle specific disk models during the resume process, ensuring compatibility and proper wake-up behavior."}, {"cause": "The BIOS might not be correctly configuring the SATA controller for suspend/resume operations, leading to issues with certain disks.", "code_file": "drivers/ata/ahci.c", "fix_solution": "Add a workaround in the AHCI driver to detect and handle BIOS misconfigurations during suspend/resume operations, possibly by setting AHCI_HFLAG_NO_SUSPEND for affected systems."}], "input_tokens": 8738, "output_tokens": 336}
{"id": "14181", "paths": ["drivers/net/wireless/b43/main.c"], "predicts": ["drivers/ssb/main.c", "drivers/ssb/ssb_private.h", "net/mac80211/main.c", "include/linux/ieee80211.h", "include/net/mac80211.h", "net/rfkill/core.c", "include/linux/rfkill.h", "include/net/cfg80211.h"], "input_tokens_sum": 149344, "output_tokens_sum": 1819, "description": "This problem did not occur in 2.6.30 through 2.6.30.6\nThis problem does occur in 2.6.31-rc3 through 2.6.31\n\nWhen shutting down the system, a panic occurs.\n\nSystem: PowerMac G4\nDistribution: Ubuntu\nKernel is custom built / mainline.\n\nbacktrace is:\n\nssb_device_enable [ssb] (unreliable)\nb43_is_hw_radio_enabled [b43]\nb43_rfkill_poll [b43]\nieee80211_rfkill_poll [mac80211]\ncfg80211_rfkill_poll [cfg80211]\nrfkill_poll [rfkill]", "title": "b43 causes panic at ifconfig down / shutdown", "Kernel Version": "2.6.31", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/b43/main.c", "drivers/net/wireless/b43/rfkill.c"], "causes": [{"cause": "The rfkill subsystem may not be properly handling the shutdown sequence, leading to a race condition or improper state transition when the system is shutting down.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Ensure proper synchronization and state management during shutdown by adding checks and locks around rfkill operations in the b43 driver."}, {"cause": "The b43 driver may not be correctly disabling the hardware radio during shutdown, causing a panic when rfkill attempts to poll or change the radio state.", "code_file": "drivers/net/wireless/b43/rfkill.c", "fix_solution": "Add a shutdown handler to ensure the radio is properly disabled and rfkill operations are safely terminated during system shutdown."}, {"cause": "The rfkill polling mechanism might be accessing freed or invalid memory during shutdown, leading to a kernel panic.", "code_file": "drivers/net/wireless/b43/rfkill.c", "fix_solution": "Implement a check to ensure rfkill polling is stopped and resources are freed before the system shutdown sequence begins."}, {"cause": "Improper handling of rfkill events in the b43 driver during interface down operations, leading to unexpected behavior and system panic.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Modify the interface down sequence to correctly handle rfkill events and ensure all resources are properly released."}, {"cause": "The rfkill subsystem may not be correctly handling the transition of the radio state during shutdown, causing a panic when the state is inconsistent.", "code_file": "drivers/net/wireless/b43/rfkill.c", "fix_solution": "Add additional state checks and logging to ensure the rfkill subsystem correctly transitions the radio state during shutdown."}], "input_tokens": 9068, "output_tokens": 401}
{"id": "14143", "paths": ["block/blk-sysfs.c"], "predicts": ["drivers/md/md.c", "drivers/md/md.h", "block/blk-sysfs.c", "block/blk-core.c", "block/blk-settings.c", "include/linux/blkdev.h", "fs/block_dev.c"], "input_tokens_sum": 152143, "output_tokens_sum": 1806, "description": "Hi,\n\nEchoing any value to /sys/block/mdX/queue/nr_requests causes the kernel to OOPS and often to panic within 5-20 seconds.\n\nDoing the same for the underlaying block device works fine.\n\nReproduces easily on all the boxes I've tried.\n\nExample bt:\n[ 6336.680154] BUG: unable to handle kernel NULL pointer dereference at (null)                                                                                 \n[ 6336.680159] IP: [<ffffffff8102c8fc>] __wake_up_common+0x26/0x72                                                                                             \n[ 6336.680167] PGD 8d450067 PUD 8c91e067 PMD 0                                                                                                                 \n[ 6336.680171] Oops: 0000 [#1] PREEMPT SMP                                                                                                                     \n[ 6336.680174] last sysfs file: /sys/devices/virtual/block/md3/queue/nr_requests                                 ", "title": "OOPS when setting nr_requests for md devices", "Kernel Version": "2.6.31", "Product": "IO/Storage", "Component": "Block Layer", "Hardware": "All Linux", "reranked_files": ["drivers/md/md.c", "block/blk-sysfs.c", "fs/sysfs/file.c", "block/blk-core.c", "drivers/md/dm.c"], "causes": [{"cause": "The kernel OOPS is likely caused by a NULL pointer dereference when accessing the request queue for md devices, which may not be properly initialized or handled.", "code_file": "drivers/md/md.c", "fix_solution": "Add a NULL check for the request queue before accessing it in the code handling /sys/block/mdX/queue/nr_requests."}, {"cause": "The md device's request queue might not be properly set up to handle changes to nr_requests, leading to an invalid memory access.", "code_file": "block/blk-sysfs.c", "fix_solution": "Ensure that the request queue is properly initialized and that any changes to nr_requests are safely handled with appropriate locking and validation."}, {"cause": "The sysfs interface for md devices might not be correctly implemented, leading to unsafe operations when modifying queue parameters.", "code_file": "fs/sysfs/file.c", "fix_solution": "Implement proper error handling and validation in the sysfs interface to prevent NULL pointer dereferences when accessing queue attributes."}, {"cause": "The block layer might not correctly handle stacked block devices like md, leading to incorrect assumptions about the request queue state.", "code_file": "block/blk-core.c", "fix_solution": "Add checks and handling for stacked block devices to ensure that the request queue operations are safe and consistent."}, {"cause": "The md driver might not correctly propagate queue settings to underlying devices, causing inconsistencies when setting nr_requests.", "code_file": "drivers/md/dm.c", "fix_solution": "Ensure that any queue settings changes are correctly propagated and synchronized with underlying block devices."}], "input_tokens": 9394, "output_tokens": 374}
{"id": "14053", "paths": ["net/sunrpc/clnt.c"], "predicts": ["fs/nfs/read.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/super.c", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "net/sunrpc/xprtsock.c", "net/sunrpc/svc.c"], "input_tokens_sum": 128666, "output_tokens_sum": 2237, "description": "Created attachment 22838 [details]\nFedora 10 machine details (/proc/{cpuinfo,modules,ioports,iomem,scsi/scsi},lspci -vvv)\n\nWe have a Fedora 10 machine and a Sun OS machine. The Sun OS machine exports a ZFS filesystem (pool) to the Fedora 10 machine, which mounts it using a NFS v4 mount (/etc/fstab: \tmelon:/melon1   /melon1 nfs4    rw,rsize=8192,wsize=8192,timeo=14,intr). When a large file (3 GB) is read from the NFS-mounted directory on the Fedora 10 machine (/melon1) this kernel panic frequently occurs. Also, when performing a rsync to this directory this kernel panic also occurs, even being at one point was completely predictable by consistently crashing 3 times in each case after sending around 2 MB. However, the bug is not always so predictable. The Sun OS machine has apparently no ill effects.\n\nI don't know if this is a failure in the implementation of NFS 4 in Linux or in Sun OS.\n\n\nSun OS machine information:\n\nSunOS 5.10 Generic_137112-06 i86pc i386 i86pc\n\nFedora 10 machine infor", "title": "Kernel blocks during rsync to NFS-mounted directory exported from Sun OS machine", "Kernel Version": "2.6.27", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/write.c", "fs/nfs/inode.c", "fs/nfs/file.c"], "causes": [{"cause": "The NFS client may not be handling large file transfers efficiently, leading to congestion and eventual kernel panic during rsync operations.", "code_file": "fs/nfs/write.c", "fix_solution": "Implement flow control for WRITE requests to manage the number of outstanding writes and prevent overwhelming the server."}, {"cause": "Cache invalidation issues when handling large files over NFS, potentially leading to stale data being accessed and causing inconsistencies.", "code_file": "fs/nfs/inode.c", "fix_solution": "Ensure proper cache invalidation by checking and invalidating the cache when mmap'ed files are modified."}, {"cause": "The NFS client may not be correctly handling large filesystem sizes, leading to overflow errors during operations like rsync.", "code_file": "fs/nfs/inode.c", "fix_solution": "Implement checks to handle large filesystem sizes and prevent overflow errors by adjusting block size calculations."}, {"cause": "The NFS client might not be correctly updating file attributes, leading to incorrect handling of file operations and potential kernel panic.", "code_file": "fs/nfs/file.c", "fix_solution": "Ensure that file attributes are correctly updated and synchronized with the server to prevent inconsistencies."}], "input_tokens": 8632, "output_tokens": 285}
{"id": "14000", "paths": ["drivers/net/wireless/hostap/hostap_main.c"], "predicts": ["drivers/staging/wlan-ng/prism2mgmt.c", "drivers/staging/wlan-ng/prism2mib.c", "drivers/staging/wlan-ng/prism2sta.c", "net/wireless/core.c", "net/wireless/util.c", "include/net/wireless.h", "drivers/staging/wlan-ng/p80211netdev.c", "include/net/mac80211.h", "net/wireless/wext.c", "net/wireless/scan.c"], "input_tokens_sum": 207194, "output_tokens_sum": 10259, "description": "Prism 2.5 wireless card fails as an AP after a kernel upgrade to 2.6.30.1 and later (up to 2.6.30.5).\n\nNot tried with 2.6.30.\nNot tried as STA.\nThe card works well up to kernel 2.6.29.6\n\nTo reproduce:\n# iwconfig wlan0 mode master\n# iwconfig wlan0 chan 4\n# iwconfig wlan0 essid ea0\n# ifconfig wlan0 192.168.220.254\n>now the STA associates>\n# tcpdump -i wlan0 -n\n<now the STA pings>\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on wlan0, link-type EN10MB (Ethernet), capture size 96 bytes\n23:59:36.177209 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:36.177287 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:36.177306 ARP, Reply 192.168.220.254 is-at 00:e0:00:8d:bd:8e, length 28\n23:59:41.610114 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:41.610192 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:41.610199 ARP, Reply 192.168.220.254 is-at 00:e0:00:8", "title": "prism 2.5 broke in 2.6.30.x", "Kernel Version": "2.6.30", "Product": "Drivers", "Component": "network-wireless", "Hardware": "i386 Linux", "reranked_files": ["net/mac80211/ieee80211_ioctl.c", "include/net/mac80211.h", "net/mac80211/util.c", "net/mac80211/key.c", "net/wireless/wext.c"], "causes": [{"cause": "The Prism 2.5 wireless card fails as an AP due to changes in the mac80211 subsystem that affect the handling of wireless modes.", "code_file": "net/mac80211/ieee80211_ioctl.c", "fix_solution": "Review and potentially revert changes related to AP mode handling in the mac80211 subsystem, ensuring compatibility with Prism 2.5 hardware."}, {"cause": "Removal of unused driver operations such as set_privacy_invoked() might have inadvertently affected the functionality required by the Prism 2.5 card.", "code_file": "include/net/mac80211.h", "fix_solution": "Reintroduce or simulate the removed operations if they are necessary for the Prism 2.5 card to function correctly as an AP."}, {"cause": "Changes in the handling of interface iteration and locking mechanisms might have introduced race conditions affecting the Prism 2.5 card.", "code_file": "net/mac80211/util.c", "fix_solution": "Ensure proper locking and context handling when iterating over active interfaces, especially in AP mode."}, {"cause": "Modifications in the key management and encryption handling might have disrupted the operation of the Prism 2.5 card.", "code_file": "net/mac80211/key.c", "fix_solution": "Verify and adjust key management operations to ensure they are compatible with the requirements of the Prism 2.5 card."}, {"cause": "Changes in the wireless extension (WEXT) handling might have affected the configuration of the Prism 2.5 card.", "code_file": "net/wireless/wext.c", "fix_solution": "Review the WEXT handling code to ensure that the Prism 2.5 card can be configured correctly as an AP."}], "input_tokens": 8265, "output_tokens": 397}
{"id": "13823", "paths": ["drivers/scsi/qla2xxx/qla_gs.c"], "predicts": ["drivers/scsi/qla2xxx/qla_gs.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_isr.c", "drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_sup.c"], "input_tokens_sum": 185907, "output_tokens_sum": 13568, "description": "Whenever I insert the qla2xxx module, the kernel always oopses.  Sometimes, the driver will work and detect the drives, but it will oops again later.  I have tried this on multiple machines with different qla2200 cards and they both experience the same oopsing, sometimes resulting in a hard lock.\n\nHere is one of the oops on loading the module:\n[27287.119929] QLogic Fibre Channel HBA Driver: 8.03.00-k4\n[27287.120016] qla2xxx 0000:06:01.0: PCI INT A -> GSI 74 (level, low) -> IRQ 74\n[27287.120070] qla2xxx 0000:06:01.0: Found an ISP2200, irq 74, iobase 0xffffc20000c5c000\n[27287.120281] IRQ 74/qla2xxx: IRQF_DISABLED is not guaranteed on shared IRQs\n[27287.120309] qla2xxx 0000:06:01.0: Configuring PCI space...\n[27287.120510] qla2xxx 0000:06:01.0: Configure NVRAM parameters...\n[27287.205932] qla2xxx 0000:06:01.0: Verifying loaded RISC code...\n[27287.216038] qla2xxx 0000:06:01.0: firmware: requesting ql2200_fw.bin\n[27294.548077] qla2xxx 0000:06:01.0: Allocated (252 KB) for firmware dump...\n[27", "title": "QLA2XXX driver causes kernel oops with a qla2200", "Kernel Version": "2.6.29", "Product": "SCSI Drivers", "Component": "QLOGIC QLA2XXX", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_isr.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_def.h"], "causes": [{"cause": "The qla2xxx driver may not be handling shared IRQs correctly, leading to race conditions and kernel oops.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Ensure proper locking mechanisms are in place when handling shared IRQs to prevent race conditions."}, {"cause": "Dynamic queue depth adjustment may be causing instability when the driver attempts to modify queue depths concurrently.", "code_file": "drivers/scsi/qla2xxx/qla_isr.c", "fix_solution": "Introduce a module parameter to disable dynamic queue depth adjustment and ensure it is respected throughout the driver."}, {"cause": "The firmware loading process may not be synchronized properly, leading to incomplete or corrupted firmware loads.", "code_file": "drivers/scsi/qla2xxx/qla_init.c", "fix_solution": "Add checks and synchronization mechanisms to ensure firmware is fully loaded before proceeding with initialization."}, {"cause": "The fcports list in the qla2xxx driver is unprotected, leading to potential race conditions when accessed concurrently.", "code_file": "drivers/scsi/qla2xxx/qla_def.h", "fix_solution": "Use RCU (Read-Copy-Update) mechanisms to protect access to the fcports list, ensuring safe concurrent access."}, {"cause": "The driver may not be correctly handling the completion of asynchronous scans, leading to incomplete device initialization.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Implement proper completion handling for asynchronous scans to ensure all devices are initialized before use."}], "input_tokens": 10416, "output_tokens": 369}
{"id": "13793", "paths": ["fs/jfs/acl.c"], "predicts": ["kernel/rcupreempt.c", "kernel/rcutree.c", "include/linux/rcupreempt.h", "include/linux/rcutree.h", "kernel/rcuclassic.c", "kernel/rcupdate.c", "kernel/time/tick-oneshot.c", "arch/x86/kernel/smp.c", "lib/irq_regs.c", "mm/page_alloc.c"], "input_tokens_sum": 156588, "output_tokens_sum": 2842, "description": "Created attachment 22393 [details]\nPhoto of the screen after the crash\n\nKernel 2.6.31 does not boot on my laptop (a DELL XPS M1330). I have tried rc1, rc2, rc3 and today's daily build but none of those will boot on my laptop.\n\nI get the following call trace with today's daily build:\nrcu_do_batch+0x27/0x90\n__rcu_process_callbacks+0xc8/0x100\ntick_handle_oneshot_broadcast+0xdd/0x100\nrcu_process_callbacks+0x20/0x40\ntimer_interrupt+0x21/0x70\nhandle_IRQ_event+0x56/0x120\ndo_softirq+0x3c/0x40\nirq_exit+0x5c/0x70\ndo_IRQ+0x4f/0xc0\ncommon_interrupt+0x29/0x30\nsys_getresuid+0x3b/0x70\nacpi_idle_enter_bm+0x19a/0x1c9\ncpuidle_idle_call+0x6f/0xc0\ncpu_idle+0x42/0x80\nstart_secondary+0xae/0cd0", "title": "2.6.31 regression - boot crash in rcu_process_callbacks - DELL XPS M1330", "Kernel Version": "2.6.31-rc3", "Product": "File System", "Component": "VFS", "Hardware": "All Linux", "reranked_files": ["kernel/rcupdate.c", "include/linux/rcupdate.h"], "causes": [{"cause": "The crash during boot in rcu_process_callbacks may be due to improper handling of RCU callbacks, possibly related to remote RCU callback processing on NUMA systems.", "code_file": "kernel/rcupdate.c", "fix_solution": "Ensure proper locking and handling of RCU callback lists, especially in NUMA configurations, to prevent race conditions and ensure callbacks are processed correctly."}, {"cause": "A potential issue with RCU callback list corruption, possibly due to missing or incorrect CRC checks, leading to crashes during callback processing.", "code_file": "include/linux/rcupdate.h", "fix_solution": "Implement or enable CRC checks for RCU callback lists to detect and prevent corruption, ensuring integrity before processing."}, {"cause": "Long-running softirqs or improper handling of grace periods causing stalls in RCU processing, leading to system instability.", "code_file": "kernel/rcupdate.c", "fix_solution": "Introduce monitoring and handling of RCU grace periods to detect and mitigate long-running softirqs, ensuring timely processing of RCU callbacks."}], "input_tokens": 8994, "output_tokens": 247}
{"id": "13780", "paths": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c"], "predicts": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "arch/x86/kernel/cpu/cpufreq/powernow-k8.h", "drivers/cpufreq/cpufreq.c", "include/linux/cpufreq.h", "arch/x86/include/asm/cpu.h"], "input_tokens_sum": 138193, "output_tokens_sum": 1544, "description": "Created attachment 22358 [details]\nkernel log\n\nHi,\n\nWhen the \"loadcpufreq\" init script loads the kernel module (powernow_k8?), I get the following error:\nkernel: [   39.822807] BUG: unable to handle kernel NULL pointer dereference at\n0000000000000024\nkernel: [   39.824035] IP: [<ffffffffa034b094>] powernowk8_cpu_init+0x30d/0xa07\n[powernow_k8]\n\nI'm using debian's kernel linux-image-2.6.30-1-amd64 2.6.30-2\n\nIf I don't start that script, I do not get the error.", "title": "NULL pointer dereference loading powernowk8", "Kernel Version": "2.6.29", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/powernow-k8.c", "drivers/cpufreq/cpufreq.c"], "causes": [{"cause": "The powernowk8_cpu_init function is dereferencing a NULL pointer, likely due to an uninitialized or improperly initialized data structure.", "code_file": "drivers/cpufreq/powernow-k8.c", "fix_solution": "Add a check to ensure that the pointer is not NULL before dereferencing it, and initialize the data structure if necessary."}, {"cause": "The cpufreq driver might not be properly registered or initialized before being used, leading to a NULL pointer dereference.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the cpufreq driver is properly registered and initialized before any operations are performed on it."}, {"cause": "A race condition in the cpufreq initialization process could lead to accessing uninitialized data.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Implement proper locking mechanisms to prevent race conditions during the initialization and registration of cpufreq drivers."}, {"cause": "The cpufreq policy structure might not be allocated or assigned correctly, leading to a NULL pointer dereference.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the cpufreq policy structure is allocated and assigned correctly before being used."}], "input_tokens": 9867, "output_tokens": 307}
{"id": "13776", "paths": ["drivers/gpu/drm/drm_gem.c"], "predicts": ["drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_mem.c", "drivers/gpu/drm/drm_irq.c", "arch/x86/pci/irq.c", "include/drm/i915_drm.h", "include/linux/interrupt.h", "arch/x86/pci/acpi.c", "arch/x86/mm/fault.c", "kernel/irq/manage.c"], "input_tokens_sum": 145925, "output_tokens_sum": 1948, "description": "i am trying kms with a intel chipset, linux-2.6.31-rc3, recent mesa-master and libdrm-master from 13.07.2009 and i am become follow error when i am inserting i915.ko:\n\n[    2.105376] i915 0000:00:02.0: power state changed by ACPI to D0\n[    2.105489] i915 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16\n[    2.105598] i915 0000:00:02.0: setting latency timer to 64\n[    2.108792] BUG: unable to handle kernel NULL pointer dereference at (null)\n[    2.109046] IP: [<(null)>] (null)\n[    2.109224] *pde = 00000000\n[    2.109397] Oops: 0000 [#1] PREEMPT SMP\n[    2.109716] last sysfs file: /sys/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/type\n[    2.109856] Modules linked in: led_class ieee1394 snd_hda_intel(+) snd_hda_codec snd_pcm snd_timer snd soundcore snd_page_alloc i2c_i801 i915(+) drm ehci_hcd(+) uhci_hcd(+) i2c_algo_bit video backlight output e1000e usbcore\n[    2.111508]\n[    2.111612] Pid: 1018, comm: modprobe Not tainted (2.6.31-rc3 #1) 7667V4E\n[    2.111723] E", "title": "KMS with Intel Graphic fails", "Kernel Version": "2.6.31-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "i386 Linux", "reranked_files": ["drivers/gpu/drm/i915/i915_dma.c", "drivers/gpu/drm/i915/i915_opregion.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_drv.c", "kernel/irq/manage.c"], "causes": [{"cause": "The NULL pointer dereference indicates that a pointer used in the i915 driver is not initialized properly before use.", "code_file": "drivers/gpu/drm/i915/i915_dma.c", "fix_solution": "Ensure that all pointers, especially those related to ACPI and opregion, are properly initialized before use in the i915_driver_load function."}, {"cause": "The ACPI OpRegion initialization might be failing, leading to uninitialized pointers being used.", "code_file": "drivers/gpu/drm/i915/i915_opregion.c", "fix_solution": "Add checks to ensure that the OpRegion is correctly mapped and initialized, and handle errors gracefully if initialization fails."}, {"cause": "The ASLE interrupt handling might be accessing uninitialized data structures, causing a NULL pointer dereference.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Add checks in the opregion_asle_intr function to ensure that the opregion and its substructures are initialized before accessing them."}, {"cause": "The integration of ACPI video driver with the i915 driver might be causing issues during module load/unload.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Ensure proper registration and unregistration of the ACPI video driver during i915 module load and unload to prevent backtraces."}, {"cause": "The IRQ handling might be incorrectly set up, leading to unexpected behavior during module insertion.", "code_file": "kernel/irq/manage.c", "fix_solution": "Review the IRQ setup process to ensure that all necessary IRQs are correctly initialized and handled, especially for the i915 driver."}], "input_tokens": 10550, "output_tokens": 392}
{"id": "13761", "paths": ["mm/kmemleak.c"], "predicts": ["mm/kmemleak.c", "mm/kmemleak-test.c", "include/linux/kmemleak.h", "fs/debugfs/file.c", "arch/x86/mm/fault.c"], "input_tokens_sum": 157137, "output_tokens_sum": 2219, "description": "First I mounted debugfs with \"mount -t debugfs nodev /sys/kernel/debug/\". Then I executed \"echo scan >/sys/kernel/debug/kmemleak\" and \"cat /sys/kernel/debug/kmemleak\" a few times. I get the following message:\n\n\n[ 1649.863693] BUG: unable to handle kernel paging request at 6b6b6b6b\n[ 1649.863706] IP: [<c01b2f95>] kmemleak_seq_next+0x75/0x120\n[ 1649.863718] *pde = 00000000 \n[ 1649.863723] Oops: 0000 [#1] PREEMPT \n[ 1649.863728] last sysfs file: /sys/devices/system/cpu/cpu0/cpuidle/state2/time\n[ 1649.863733] Modules linked in: gspca_sunplus gspca_main videodev v4l1_compat via drm agpgart ppdev lp ipv6 powernow_k8 cpufreq_powersave cpufreq_ondemand cpufreq_userspace cpufreq_conservative leds_clevo_mail led_class snd_via82xx snd_via82xx_modem snd_ac97_codec ac97_bus snd_pcm_oss snd_mixer_oss usbhid snd_pcm snd_mpu401_uart mousedev snd_seq_oss snd_seq_midi pcmcia snd_rawmidi firmware_class snd_seq_midi_event snd_seq snd_timer snd_seq_device serio_raw snd i2c_viapro ide_cd_mod ehci_hcd pcspkr", "title": "kmemleak + BUG: unable to handle kernel paging request", "Kernel Version": "2.6.31-rc2", "Product": "Other", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["mm/kmemleak.c"], "causes": [{"cause": "The kmemleak_seq_next function is attempting to access an invalid memory address, leading to a kernel paging request error.", "code_file": "mm/kmemleak.c", "fix_solution": "Add a check in kmemleak_seq_next to ensure the pointer is valid before dereferencing it."}, {"cause": "A potential race condition in the kmemleak scanning process could lead to accessing freed memory.", "code_file": "mm/kmemleak.c", "fix_solution": "Introduce proper locking mechanisms around memory accesses in the kmemleak scanning process to prevent race conditions."}, {"cause": "Improper handling of memory allocation failures in kmemleak, leading to dereferencing a NULL pointer.", "code_file": "mm/kmemleak.c", "fix_solution": "Add error handling for memory allocation failures in kmemleak functions to prevent NULL pointer dereferences."}, {"cause": "The kmemleak_seq_next function might be iterating over a corrupted list, leading to invalid memory access.", "code_file": "mm/kmemleak.c", "fix_solution": "Validate the integrity of the list being iterated over in kmemleak_seq_next to ensure it is not corrupted."}], "input_tokens": 10589, "output_tokens": 292}
{"id": "13710", "paths": ["arch/x86/kernel/setup.c"], "predicts": ["arch/x86/kernel/check.c", "drivers/acpi/sleep.c", "drivers/acpi/power.c", "drivers/acpi/sleep.h", "arch/x86/mm/init.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "mm/memory.c", "include/linux/memory.h", "include/linux/suspend.h"], "input_tokens_sum": 156592, "output_tokens_sum": 1965, "description": "Created attachment 22215 [details]\ndmesg\n\nIt was tested with latest linux-2.6 git and drm-linux. To make clean test i used test_suspend=mem with acpi_sleep options (s3_bios and/or s3_mode) and without acpi_sleep. Any acpi_sleep option will make my PC freeze. Without acpi_sleep it will resume but with black screen and i can access it with ssh. Disabling kms will resume with black console but Xorg will enable video. \n\nAfter resume dmesg has two traces, memory corruption and warn_slowpath_common:\n\n\n\n[   60.816159] Corrupted low memory at ffff880000004200 (4200 phys) = 00420301\n[   60.816163] ------------[ cut here ]------------\n[   60.816169] WARNING: at arch/x86/kernel/check.c:134 check_for_bios_corruption+0xe4/0xf0()\n[   60.816171] Hardware name:         \n[   60.816172] Memory corruption detected in low memory\n[   60.816173] Modules linked in: binfmt_misc kvm_intel kvm snd_hda_codec_intelhdmi snd_hda_codec_idt snd_hda_intel snd_hda_codec snd_pcm_oss snd_mixer_oss snd_pcm snd_seq_dummy s", "title": "Corrupted low memory after resume", "Kernel Version": "2.6.31-rc1", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/check.c", "drivers/acpi/sleep/main.c", "kernel/power/disk.c", "kernel/power/swsusp.c"], "causes": [{"cause": "Memory corruption detected in low memory after resume, possibly due to improper handling of ACPI states during suspend/resume cycles.", "code_file": "arch/x86/kernel/check.c", "fix_solution": "Ensure that ACPI is properly re-enabled and configured during the resume process to prevent memory corruption."}, {"cause": "ACPI not being enabled correctly after resume, leading to BIOS corruption warnings.", "code_file": "drivers/acpi/sleep/main.c", "fix_solution": "Add checks and ensure ACPI is enabled immediately after control is transferred from the boot kernel to the image kernel."}, {"cause": "Improper handling of device power states during suspend/resume, causing desynchronization with hardware state.", "code_file": "kernel/power/disk.c", "fix_solution": "Ensure device_power_down() and device_power_up() are called at the correct stages of the suspend/resume process."}, {"cause": "Potential issues with the handling of kernel memory during the suspend/resume process, leading to corruption.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Review and correct the memory handling logic during the suspend and resume phases to prevent corruption."}], "input_tokens": 9046, "output_tokens": 280}
{"id": "13621", "paths": ["fs/xfs/xfs_log.c"], "predicts": ["fs/xfs/linux-2.6/kmem.c", "fs/xfs/xfs_log.c", "fs/xfs/xfs_mount.c", "fs/xfs/xfs_trans.c", "fs/xfs/xfs_trans_ail.c"], "input_tokens_sum": 142471, "output_tokens_sum": 1949, "description": "Mounting external HD is fine, but extensive r/w (rsync) or attempting to unmount the device makes the kernel hang in the following sense: The device keeps mounted, no operations possible, every process accessing the device becomes unkillable. Apparently no major damage to the fs is caused. Log is attached.", "title": "xfs hangs with assertion failed", "Kernel Version": "2.6.30", "Product": "File System", "Component": "XFS", "Hardware": "All Linux", "reranked_files": ["fs/xfs/linux-2.6/xfs_buf.c", "fs/xfs/xfs_mount.c", "fs/xfs/xfs_iget.c"], "causes": [{"cause": "XFS barriers are being incorrectly disabled due to a misinterpretation of the XBF_ORDERED flag, leading to potential hangs during extensive read/write operations.", "code_file": "fs/xfs/linux-2.6/xfs_buf.c", "fix_solution": "Implement a new buffer flag _XFS_BARRIER_FAILED to correctly detect and handle barrier failures, ensuring barriers are not disabled incorrectly."}, {"cause": "Potential NULL pointer dereference in xfs_unmountfs_close() when m_logdev_targp is NULL, causing system instability during unmount operations.", "code_file": "fs/xfs/xfs_mount.c", "fix_solution": "Add a check for NULL on m_logdev_targp before calling xfs_free_buftarg() to prevent dereferencing a NULL pointer."}, {"cause": "Inefficient handling of inode cache locking leading to potential deadlocks or hangs during inode operations.", "code_file": "fs/xfs/xfs_iget.c", "fix_solution": "Convert inode cache locking to use RCU, which allows for more efficient and deadlock-free inode lookups and reclamation."}], "input_tokens": 10424, "output_tokens": 261}
{"id": "13581", "paths": ["arch/x86/kernel/e820.c"], "predicts": ["drivers/net/wireless/ath9k/main.c", "drivers/net/wireless/ath9k/hw.c", "drivers/net/wireless/ath9k/mac.c", "drivers/net/wireless/ath9k/recv.c", "net/mac80211/scan.c", "include/linux/wireless.h", "include/linux/ath9k_platform.h", "include/net/cfg80211.h", "net/wireless/core.c", "net/wireless/wext.c"], "input_tokens_sum": 145865, "output_tokens_sum": 2341, "description": "Upgrading from 2.6.29 to 2.6.30 the wireless stop working.\nsome infos:\n\n# wpa_supplicant -i wlan0 -D wext -c /etc/wpa_supplicant/wpa_supplicant.conf\nCTRL-EVENT-SCAN-RESULTS                                                     \nTrying to associate with 00:18:84:81:00:fd (SSID='OpenWrt' freq=2452 MHz)   \nAssociation request to the driver failed                                    \nAssociated with 00:18:84:81:00:fd                                           \nCTRL-EVENT-DISCONNECTED - Disconnect event - remove keys                    \nioctl[SIOCSIWENCODEEXT]: No such file or directory                          \nioctl[SIOCSIWSCAN]: Device or resource busy                                 \nFailed to initiate AP scan.                                                 \nAuthentication with 00:00:00:00:00:00 timed out.                            \nCTRL-EVENT-SCAN-RESULTS                                                     \nTrying to associate with 00:18:84:81:00:fd (SSID='OpenWrt' freq=2452 MHz)   \nAsso", "title": "ath9k doesn't work with newer kernels", "Kernel Version": "2.6.30", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ath/ath9k/main.c", "net/wireless/wext-core.c", "net/core/wireless.c", "drivers/net/wireless/ath/ath9k/hw.c", "net/wireless/scan.c"], "causes": [{"cause": "The ath9k driver may not be handling the new WPA/WPA2 related ioctls introduced in Wireless Extensions version 18.", "code_file": "drivers/net/wireless/ath/ath9k/main.c", "fix_solution": "Ensure that the ath9k driver properly implements and handles the new WPA/WPA2 ioctls such as SIOCSIWENCODEEXT and SIOCSIWAUTH."}, {"cause": "The wireless stack may not be correctly processing the new WPA/WPA2 events and ioctls, leading to failed associations.", "code_file": "net/wireless/wext-core.c", "fix_solution": "Update the wireless stack to correctly handle the new WPA/WPA2 events and ioctls, ensuring compatibility with drivers like ath9k."}, {"cause": "The ioctl handling in the wireless extensions may not be fully compatible with the ath9k driver, causing association failures.", "code_file": "net/core/wireless.c", "fix_solution": "Review and update the ioctl handling logic to ensure it is compatible with the ath9k driver's expectations and requirements."}, {"cause": "The ath9k driver might not be correctly updating or using the new encoding and authentication parameters introduced in WE-18.", "code_file": "drivers/net/wireless/ath/ath9k/hw.c", "fix_solution": "Modify the driver to correctly utilize the new encoding and authentication parameters, ensuring proper communication with the wireless stack."}, {"cause": "The wireless extensions may not be correctly reporting or handling scan results, leading to association issues.", "code_file": "net/wireless/scan.c", "fix_solution": "Ensure that the scan results are correctly processed and reported by the wireless extensions, particularly for WPA/WPA2 networks."}], "input_tokens": 10316, "output_tokens": 412}
{"id": "13498", "paths": ["drivers/pci/pcie/aspm.c"], "predicts": ["drivers/pci/hotplug/acpi_pcihp.c", "drivers/pci/hotplug/acpiphp_core.c", "arch/x86/pci/acpi.c", "drivers/pci/probe.c", "drivers/pci/bus.c", "drivers/pci/pci.c", "arch/x86/pci/common.c", "arch/x86/pci/init.c", "include/linux/pci.h", "arch/x86/pci/pci.h"], "input_tokens_sum": 133323, "output_tokens_sum": 2474, "description": "Created attachment 21839 [details]\nPanic screen photo\n\nCannot boot Fedora 10 using this and newer kernel versions. Last kernel version working is 2.6.27.5. I have no idea what should I try to make it work....\n\nThis is transcription of the panic screen (see attached photo of CRT):\n\n[<ffffffff811f57df>] driver_register+0xa8/0x113\n[<ffffffff815c5ada>] ? acpi_pci_root_init+0x0/0x28\n[<ffffffff8159f140>] ? early_idt_handler+0x0/0x71\n[<ffffffff811b6195>] acpi_bus_register_driver+0x3e/0x41\n[<ffffffff815c5af3>] acpi_pci_root_init+0x19/0x28\n[<ffffffff8100a047>] do_one_initcall+0x47/0x12e\n[<ffffffff8159f140>] ? early_idt_handler+0x0/0x71\n[<ffffffff81100000>] ? task_statm+0x4e/0x5b\n[<ffffffff8159f70f>] kernel_init+0x1c0/0x214\n[<ffffffff81333489>] ? trace_hardirqs_on_thunk+0x3a/0x3c\n[<ffffffff81011719>] child_rip+0xa/0x11\n[<ffffffff81010a37>] ? restore_args+0x0/0x30\n[<ffffffff8159f54f>] ? kernel_init+0x0/0x214\n[<ffffffff8101170f>] ? child_rip+0x0/0x11\n\nCode: 49 8d 7e 38 49 8d 46 28 49 89 7e 38 49 8", "title": "Kernel panic - not syncing: Attepmted to kill init! (Fedora 10)", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/pci/probe.c", "drivers/acpi/pci_root.c", "drivers/pci/pci.c", "drivers/base/power/sysfs.c"], "causes": [{"cause": "The kernel panic is likely due to a mishandling of PCI device initialization, particularly related to ACPI and PCI root initialization.", "code_file": "drivers/pci/probe.c", "fix_solution": "Ensure that device_initialize() is called before pci_setup_device() to properly initialize the device structure before any PCI-specific setup is done."}, {"cause": "There might be an issue with the ACPI PCI root initialization not being properly synchronized with the driver model initialization.", "code_file": "drivers/acpi/pci_root.c", "fix_solution": "Add checks to ensure that ACPI PCI root initialization is completed before any PCI device registration is attempted."}, {"cause": "The panic could be caused by improper handling of power management capabilities during PCI device setup.", "code_file": "drivers/pci/pci.c", "fix_solution": "Modify pci_setup_device() to correctly handle power management capabilities, ensuring that PME# capabilities are properly initialized and checked."}, {"cause": "A potential race condition during the initialization of PCI devices, particularly with ACPI and PCI power management.", "code_file": "drivers/pci/pci.c", "fix_solution": "Introduce locking mechanisms to ensure that PCI device initialization is atomic and not interrupted by other processes."}, {"cause": "The kernel panic might be due to incorrect handling of device wakeup capabilities in the PCI subsystem.", "code_file": "drivers/base/power/sysfs.c", "fix_solution": "Ensure that the wakeup attribute is only created for devices that support wakeup, and handle the wakeup enable/disable logic correctly."}], "input_tokens": 8702, "output_tokens": 367}
{"id": "13449", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/battery.c", "drivers/power/power_supply_core.c", "kernel/power/main.c", "arch/x86/kernel/acpi/sleep.c", "include/linux/power_supply.h", "arch/x86/power/hibernate_64.c", "arch/x86/kernel/pci/acpi.c"], "input_tokens_sum": 142250, "output_tokens_sum": 2472, "description": "Created attachment 21740 [details]\ndmesg after suspend/resume\n\nMy HP Pavilion dv4-1125br suspends and resumes correctly. However, the battery information provided by ACPI disappears.  Before suspend I can get battery information in /proc/acpi/battery/BAT0/state. After the suspend/resume, BAT0/state shows not present.\n\nThis is a fairly recent laptop, and this problem is present in Fedora kernels as early as 2.6.27. I've found bug reports of this issue for Ubunto and Arch Linux, so I don't believe it is Fedora specific.", "title": "Battery disappears after suspend/resume on HP laptop.", "Kernel Version": "2.6.30", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "x86-64 Linux", "reranked_files": ["drivers/acpi/battery.c"], "causes": [{"cause": "The ACPI battery driver does not update the battery state after a suspend/resume cycle, leading to the battery information disappearing.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a resume method in the ACPI battery driver to check and update the battery state after resume."}, {"cause": "The battery state is not being re-queried or refreshed after the system resumes from suspend, causing the battery to appear as not present.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a call to acpi_battery_check() in the resume method to refresh the battery state upon resume."}, {"cause": "The ACPI subsystem does not handle changes in battery state during suspend, leading to incorrect battery status after resume.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the battery's presence status is re-evaluated in the resume method to handle any changes during suspend."}], "input_tokens": 8999, "output_tokens": 231}
{"id": "13394", "paths": ["drivers/acpi/processor_core.c"], "predicts": ["arch/x86/mm/ioremap.c", "arch/x86/mm/init.c", "include/linux/init.h", "mm/bootmem.c"], "input_tokens_sum": 160027, "output_tokens_sum": 2156, "description": "Created attachment 21588 [details]\ndmesg containing the warning for some context\n\n------------[ cut here ]------------\nWARNING: at arch/x86/mm/ioremap.c:603 check_early_ioremap_leak+0x48/0x5e()\nHardware name:         \nDebug warning: early ioremap leak of 1 areas detected.\nModules linked in:\nPid: 1, comm: swapper Not tainted 2.6.30-rc6-next-20090521 #3\nCall Trace:\n [<c0120648>] warn_slowpath_common+0x60/0x90\n [<c01206ac>] warn_slowpath_fmt+0x24/0x27\n [<c05d6703>] check_early_ioremap_leak+0x48/0x5e\n [<c0101137>] do_one_initcall+0x4a/0x10c\n [<c05d66bb>] ? check_early_ioremap_leak+0x0/0x5e\n [<c01427d5>] ? register_irq_proc+0x7f/0x9b\n [<c0142844>] ? init_irq_proc+0x53/0x60\n [<c05ca296>] kernel_init+0x102/0x153\n [<c05ca194>] ? kernel_init+0x0/0x153\n [<c01033df>] kernel_thread_helper+0x7/0x10\n---[ end trace 697c170438591ef6 ]---\nplease boot with early_ioremap_debug and report the dmesg.\n\nAnyone know where I'm supposed to put the \"early_ioremap_debug\"?\n\nIf you need more info, lemme know.\n\nThan", "title": "check_early_ioremap_leak warning", "Kernel Version": "2.6.30", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["arch/x86/mm/ioremap.c"], "causes": [{"cause": "The early ioremap implementation has a slot management issue, leading to a leak warning when slots are not properly freed.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Ensure that all early ioremap slots are properly freed by checking and clearing the prev_map array in early_iounmap."}, {"cause": "The early ioremap function has an off-by-one error in the size calculation, causing incorrect mapping and potential leaks.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Adjust the size calculation in early_ioremap to correctly account for the last address by using PAGE_ALIGN(last_addr + 1)."}, {"cause": "The early ioremap debug setup is not properly initialized, leading to incorrect warnings about ioremap leaks.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Initialize the early_ioremap_debug variable correctly and ensure it is used to provide detailed debug information."}, {"cause": "The early ioremap function does not handle the nesting of ioremap and iounmap calls correctly, leading to mismatched mappings.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Implement a stack or similar structure to track nested ioremap calls and ensure they are unmapped in the correct order."}], "input_tokens": 10145, "output_tokens": 321}
{"id": "13348", "paths": ["drivers/net/macvlan.c"], "predicts": ["net/8021q/vlan_dev.c", "include/linux/if_vlan.h", "include/linux/netdevice.h"], "input_tokens_sum": 143496, "output_tokens_sum": 945, "description": "It is not possible to make clone of tagged VLAN interface to be used as\nmac-based vlan interfave.\n\nHow reproducible:\nUse any 802.1q tagged vlan interface, e.g. eth2.700 and clone it:\n\n  ip link add link eth2.700 address 00:04:75:cb:38:09 macvlan0 type macvlan\n  ip link set dev macvlan0 up\n  ip addr add 10.195.1.1/24 dev macvlan0\n\nSo far, so good. Now try to ping anything via macvlan0:\n\n  ping 10.195.1.2\n\n\nActual results:\nFor every attempted packet tx kernel writes to console:\n\n------------[ cut here ]------------\nWARNING: at net/8021q/vlan_dev.c:254 vlan_dev_hard_header+0x36/0x126 [8021q]()\nHardware name: M22ES\nModules linked in: arptable_filter arp_tables bridge veth macvlan arc4 ecb ppp_mppe ppp_async crc_ccitt ppp_generic slhc autofs4 sunrpc 8021q garp stp ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 xt_state nf_conntrack xt_tcpudp x_tables dm_mirror dm_region_hash dm_log dm_multipath dm_mod sbs sbshc lp floppy snd_intel8x0 joydev snd_seq_dummy snd_intel8x0m snd_ac97_codec ide_cd_mod", "title": "[PATCH]Unable to clone tagged VLAN interface for use with macvlan driver", "Kernel Version": "2.6.29", "Product": "Networking", "Component": "IPV4", "Hardware": "All Linux", "reranked_files": ["net/8021q/vlan_dev.c", "drivers/net/macvlan.c", "net/8021q/vlan.c"], "causes": [{"cause": "The VLAN interface does not properly handle the encapsulation of packets when used with the macvlan driver, leading to incorrect packet headers.", "code_file": "net/8021q/vlan_dev.c", "fix_solution": "Ensure that the VLAN header is correctly set and encapsulated when the macvlan driver is used, possibly by modifying the vlan_dev_hard_header function to handle macvlan-specific encapsulation."}, {"cause": "The macvlan driver does not correctly interpret the VLAN tags, causing issues with packet transmission.", "code_file": "drivers/net/macvlan.c", "fix_solution": "Update the macvlan driver to correctly parse and handle VLAN tags, ensuring compatibility with VLAN interfaces."}, {"cause": "The VLAN device does not support certain operations required by the macvlan driver, such as specific header operations.", "code_file": "net/8021q/vlan.c", "fix_solution": "Add support for the necessary operations in the VLAN device, such as implementing missing header operations that are required by the macvlan driver."}, {"cause": "The VLAN interface does not correctly propagate the MAC address changes to the macvlan interface, leading to transmission errors.", "code_file": "net/8021q/vlan_dev.c", "fix_solution": "Ensure that MAC address changes on the VLAN interface are correctly propagated to the macvlan interface, possibly by updating the relevant notification handlers."}, {"cause": "The VLAN interface does not correctly handle netpoll operations, which may interfere with macvlan operations.", "code_file": "net/8021q/vlan_dev.c", "fix_solution": "Implement or fix netpoll support in the VLAN interface to ensure it does not interfere with macvlan operations, especially during packet transmission."}], "input_tokens": 10063, "output_tokens": 409}
{"id": "13313", "paths": ["arch/x86/kernel/vm86_32.c"], "predicts": ["kernel/lockdep.c", "include/linux/lockdep.h", "lib/debug_locks.c", "kernel/sys.c", "arch/x86/kernel/process_32.c", "include/linux/debug_locks.h", "arch/x86/mm/fault.c", "include/asm-generic/bug.h", "lib/spinlock_debug.c", "kernel/lockdep_internals.h"], "input_tokens_sum": 166606, "output_tokens_sum": 6246, "description": "Created attachment 21359 [details]\n.config\n\nHello,\nhardware: ASUS f3jc\nkernel: 2.6.30-rc5-git5\n\nKernel built with\nCONFIG_DEBUG_LOCK_ALLOC=y\nCONFIG_LOCKDEP=y\n\nleads to:\n[   14.816002] general protection fault: 0000 [#1] PREEMPT SMP \n[   14.816073] last sysfs file: /sys/devices/platform/coretemp.1/temp1_input\n[   14.816110] Modules linked in: fuse sbp2 snd_hda_codec_si3054 snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_pcm serio_raw snd_seq_midi psmouse snd_rawmidi snd_seq_midi_event i2c_i801 snd_seq pcspkr snd_timer snd_seq_device rng_core snd evdev asus_laptop soundcore led_class snd_page_alloc usbhid hid sg sr_mod cdrom sd_mod ata_generic pata_acpi ata_piix ohci1394 libata ehci_hcd uhci_hcd r8169 mii ieee1394 scsi_mod ide_pci_generic usbcore\n[   14.816636] \n[   14.816659] Pid: 2379, comm: vbetool Not tainted (2.6.30-rc5-git5-fb #3) F3JC                \n[   14.816701] EIP: 0060:[<c018c967>] EFLAGS: 00013286 CPU: 0\n[   14.816738] EIP is at lockdep_sys_exit+0x7/0xa0\n[   14.816769]", "title": "vm86old oops", "Kernel Version": "2.6.30", "Product": "Platform Specific/Hardware", "Component": "i386", "Hardware": "All Linux", "reranked_files": ["kernel/lockdep.c", "arch/x86/kernel/vm86_32.c", "arch/x86/mm/fault.c"], "causes": [{"cause": "The lockdep_sys_exit function is causing a general protection fault due to incorrect handling of lockdep data structures.", "code_file": "kernel/lockdep.c", "fix_solution": "Ensure that the curr_chain_key is updated only after the chain is validated to prevent inconsistencies."}, {"cause": "The vm86old system call is not properly handling the transition from vm86 mode, leading to an oops.", "code_file": "arch/x86/kernel/vm86_32.c", "fix_solution": "Add additional checks and handling for the transition from vm86 mode to ensure proper state management."}, {"cause": "A mismatch in lockdep_depth and curr_chain_hash is causing lockdep to malfunction, leading to system instability.", "code_file": "kernel/lockdep.c", "fix_solution": "Apply the patch to fix mismatched lockdep_depth/curr_chain_hash by ensuring curr_chain_key is updated after validation."}, {"cause": "The page fault handler is not correctly handling faults in the vmalloc area, leading to a kernel oops.", "code_file": "arch/x86/mm/fault.c", "fix_solution": "Improve the vmalloc_fault function to correctly synchronize page tables and handle faults in the vmalloc area."}], "input_tokens": 10308, "output_tokens": 292}
{"id": "13250", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_proc.c", "sound/pci/hda/patch_realtek.c", "include/sound/driver.h", "include/sound/hda_hwdep.h", "include/sound/core.h"], "input_tokens_sum": 145639, "output_tokens_sum": 2014, "description": "The ALSA mixer is now missing the side channel, which was present and did work with the previous kernel. I also have a ATI graphics card with HDA chip which I don't use for audio in that machine.\n\nlspci:\n\n00:1b.0 Audio device: Intel Corporation 82801H (ICH8 Family) HD Audio Controller (rev 02)\n\tSubsystem: Intel Corporation Device 2504\n\tFlags: bus master, fast devsel, latency 0, IRQ 22\n\tMemory at d0220000 (64-bit, non-prefetchable) [size=16K]\n\tCapabilities: <access denied>\n\tKernel driver in use: HDA Intel\n\tKernel modules: snd-hda-intel", "title": "Side channel of Intel HDA chip doesn't work anymore, did work with 2.6.29", "Kernel Version": "2.6.30-rc3", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_intelhdmi.c", "sound/pci/hda/hda_mixer.c"], "causes": [{"cause": "The side channel functionality might have been inadvertently disabled or removed in the transition from kernel version 2.6.29 to 2.6.30-rc3.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Review and restore any missing configurations or initializations related to the side channel in the codec setup functions."}, {"cause": "Changes in the handling of HDA codec streams might have led to the side channel being unrecognized or improperly configured.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the side channel is properly enumerated and configured during the codec initialization and stream setup."}, {"cause": "The introduction of new HDMI audio support might have affected the existing side channel configurations.", "code_file": "sound/pci/hda/patch_intelhdmi.c", "fix_solution": "Check for conflicts or overrides in the HDMI patch that might disable or interfere with the side channel functionality."}, {"cause": "The ALSA mixer controls might not be correctly exposing the side channel due to changes in the mixer setup.", "code_file": "sound/pci/hda/hda_mixer.c", "fix_solution": "Verify and adjust the mixer control setup to ensure the side channel is correctly exposed and controllable."}], "input_tokens": 11436, "output_tokens": 308}
{"id": "13232", "paths": ["fs/inode.c"], "predicts": ["fs/ext3/fsync.c", "fs/ext3/super.c", "fs/ext4/fsync.c", "fs/ext4/super.c", "include/linux/ext3_fs.h", "include/linux/fs.h", "include/linux/jbd.h", "include/linux/jbd2.h", "mm/filemap.c", "mm/page-writeback.c"], "input_tokens_sum": 142089, "output_tokens_sum": 2545, "description": "Latest working kernel version: 2.6.28.9\nEarliest failing kernel version: 2.6.29\nDistribution: Ubuntu 8.04 LTS\nHardware Environment: Intel 875p chipset (ICH5), P4 with HT\nSoftware Environment: Postfix 2.5.1-2ubuntu1.2\n\nProblem Description:\n\nWith its queue directory on an ext3 or journalled ext4 file\nsystem, mounted with the 'sync' option (or with the 'S' attribute\non the individual queue directories, which is a config option for\nthe Ubuntu package), sending more than a few messages in quick\nsuccession through Postfix causes Postfix and any other process\nattempting to modify the file system afterwards (e.g. by updating\nthe atime when listing a directory) to hang in uninterruptible\nsleep.  sync(1) will also hang afterwards.  If the FS is mounted\nnoatime, it is still possible to read from it, although trying to\nlist the affected queue directories still causes ls to hang (the\nlist of affected directories seems to vary, but may include at\nleast \"active\" and \"maildrop\").\n\nThis happens whether", "title": "ext3/4 with synchronous writes gets wedged by Postfix", "Kernel Version": "2.6.29", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/jbd2/commit.c", "fs/ext3/inode.c", "fs/ext3/super.c", "fs/ext4/super.c", "fs/read_write.c"], "causes": [{"cause": "The synchronous write operations in ext3/ext4 with the 'sync' mount option or 'S' attribute are causing processes to hang due to contention or deadlock in the journal commit path.", "code_file": "fs/jbd2/commit.c", "fix_solution": "Review and optimize the journal commit path to ensure that synchronous writes do not cause deadlocks or excessive contention, possibly by adjusting lock acquisition order or introducing finer-grained locking."}, {"cause": "The inode semaphore (i_sem) might be causing contention when multiple processes are accessing the same file, leading to uninterruptible sleep states.", "code_file": "fs/ext3/inode.c", "fix_solution": "Investigate and potentially reduce the scope of i_sem locking in the ext3/ext4 code paths, especially around synchronous operations, to minimize contention."}, {"cause": "The error handling behavior in ext3/ext4 might not be correctly set, leading to unexpected behavior under error conditions.", "code_file": "fs/ext3/super.c", "fix_solution": "Ensure that the error handling options are correctly read from the superblock and set during mount, as per the patch suggestions in the emails."}, {"cause": "The 'sync' mount option might be causing excessive journal writes, leading to performance degradation and process hangs.", "code_file": "fs/ext4/super.c", "fix_solution": "Optimize the handling of the 'sync' mount option to reduce the frequency of journal writes, possibly by batching writes more effectively."}, {"cause": "The generic_file_llseek function might be causing unnecessary contention due to i_sem locking, affecting performance under high load.", "code_file": "fs/read_write.c", "fix_solution": "Consider using a lighter version of llseek that reduces or eliminates i_sem locking for file operations, as suggested in the email patch."}], "input_tokens": 9582, "output_tokens": 420}
{"id": "13134", "paths": ["drivers/input/mouse/alps.c"], "predicts": ["drivers/input/mouse/alps.c", "drivers/input/mouse/alps.h", "drivers/input/serio/i8042.c", "drivers/input/mouse/psmouse.h", "include/linux/i8042.h", "include/linux/input.h", "include/linux/libps2.h", "include/linux/serio.h"], "input_tokens_sum": 165666, "output_tokens_sum": 7813, "description": "Created attachment 21037 [details]\ndmesg with i8042.debug kernel option\n\nI'm using an ALPS Touchpad in my Toshiba Satellite Pro M10.\n\"Advanced features\" in X like vertical/horizontal scrolling don't work\nbecause kernel doesn't recognize the mouse as a touchpad but as a \"PS/2\nGeneric Mouse\". I've looked in launchpad/google/debian bugtrack systems\nand this problem affects a lot of distros/hardware. All points it's a\nproblem with the input subsystem. I've seen reports of people that say\nadding i8042.nomux=1 on boot fixes it for them. It doesn't for me. It's\nnot a hardware error (at least in my case) because touchpad works\nflawless in windows.", "title": "ALPS Touchpad not getting recognized anymore", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/input/mouse/alps.c", "drivers/input/mouse/psmouse-base.c"], "causes": [{"cause": "The ALPS touchpad is being incorrectly identified as a generic PS/2 mouse due to a failure in the detection logic.", "code_file": "drivers/input/mouse/alps.c", "fix_solution": "Ensure the detection logic correctly identifies ALPS touchpads by updating the signature matching in the alps_get_model function."}, {"cause": "The ALPS touchpad driver is not properly initializing the device in absolute mode, leading to incorrect device recognition.", "code_file": "drivers/input/mouse/alps.c", "fix_solution": "Modify the alps_absolute_mode function to ensure the touchpad is correctly initialized in absolute mode."}, {"cause": "The protocol validation rules in the ALPS driver may be causing the touchpad to lose sync, leading to incorrect identification.", "code_file": "drivers/input/mouse/alps.c", "fix_solution": "Adjust the protocol validation logic in the alps_process_byte function to handle packet synchronization correctly."}, {"cause": "The ALPS touchpad driver may not be correctly handling the passthrough mode for dualpoint devices, affecting device recognition.", "code_file": "drivers/input/mouse/alps.c", "fix_solution": "Review and update the alps_passthrough_mode function to ensure proper handling of dualpoint devices."}, {"cause": "The psmouse-base.c file may not be correctly setting the protocol for ALPS touchpads, leading to misidentification.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Ensure that the psmouse-base.c file correctly sets the protocol to PSMOUSE_ALPS when an ALPS touchpad is detected."}], "input_tokens": 11368, "output_tokens": 384}
{"id": "12971", "paths": ["drivers/net/tg3.c"], "predicts": ["drivers/net/tg3.c", "net/sched/sch_generic.c", "net/core/dev.c", "drivers/net/phy/broadcom.c"], "input_tokens_sum": 142249, "output_tokens_sum": 1590, "description": "I have laptop - HP compaq 6715s with broadcom lan card (from lspci):\n10:00.0 Ethernet controller: Broadcom Corporation NetLink BCM5906M Fast Ethernet PCI Express (rev 02). I am using slackware 12.2. I compiled kernel 2.6.29 from kernel.org. \n\nWhen I try to copy a file trough the LAN from this laptop with a command like this:\nscp test.bin 192.168.0.1:/tmp\n\nSome MBytes are copied and the transmit stops and there is some messages in dmesg:\n\nWARNING: at net/sched/sch_generic.c:226 dev_watchdog+0x1c2/0x1d0()\nHardware name: HP Compaq 6715s (GR897ES#ABB)\nNETDEV WATCHDOG: eth0 (tg3): transmit timed out\nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_devic\ne snd_pcm_oss snd_mixer_oss ipv6 cpufreq_stats powernow_k8 freq_table ppdev lp parpor\nt_pc parport fuse snd_hda_codec_analog pcmcia snd_hda_intel snd_hda_codec tg3 fan yen\nta_socket snd_hwdep video rsrc_nonstatic rtc_cmos snd_pcm thermal output rtc_core pcm\ncia_core ati_agp processor libphy rtc_lib psmouse i2c_", "title": "\"tg3 transmit timed out\" when transmitting at high bitrate", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/broadcom/tg3.c", "net/sched/sch_generic.c", "net/core/dev.c"], "causes": [{"cause": "The tg3 driver may not be handling transmit timeouts correctly, leading to the 'transmit timed out' error.", "code_file": "drivers/net/ethernet/broadcom/tg3.c", "fix_solution": "Ensure that the driver properly resets the hardware and clears the transmit queue when a timeout occurs."}, {"cause": "The network stack may not be handling high bitrate traffic efficiently, causing packet loss and timeouts.", "code_file": "net/sched/sch_generic.c", "fix_solution": "Optimize the handling of high bitrate traffic by adjusting the netdev_max_backlog and other related parameters to better handle bursts of traffic."}, {"cause": "The softirq handling for network packets may not be efficient enough under high load, leading to timeouts.", "code_file": "net/core/dev.c", "fix_solution": "Improve the softirq handling by allowing more concurrency in packet processing, especially on SMP systems."}, {"cause": "The watchdog timer for the network device may be too aggressive, causing premature timeouts.", "code_file": "net/sched/sch_generic.c", "fix_solution": "Increase the watchdog timeout value to allow more time for packet transmission under high load conditions."}, {"cause": "The network device may not be properly configured to handle the specific hardware of the Broadcom BCM5906M.", "code_file": "drivers/net/ethernet/broadcom/tg3.c", "fix_solution": "Ensure that the driver includes specific configurations and optimizations for the BCM5906M hardware."}], "input_tokens": 9489, "output_tokens": 359}
{"id": "12969", "paths": ["drivers/net/b44.c"], "predicts": ["lib/scatterlist.c", "include/linux/dma-mapping.h", "kernel/dma.c", "kernel/dma-coherent.c", "drivers/dma/dmaengine.c", "include/linux/dma-attrs.h", "drivers/dma/ioat.c", "drivers/dma/fsldma.c", "drivers/dma/mv_xor.c", "drivers/dma/dw_dmac.c"], "input_tokens_sum": 148069, "output_tokens_sum": 2424, "description": "------------[ cut here ]------------                                                                                                          \nWARNING: at lib/dma-debug.c:539 check_sync+0xe9/0x341() (Not tainted)                                                                         \nHardware name: HP Compaq nx6110 (PY501EA#AB9)                                                                                                 \nb44 0000:02:0e.0: DMA-API: device driver tries to sync DMA memory it has not allocated [device address=0x0000000075941040] [size=1566 bytes]  \nModules linked in: llc bnep l2cap bluetooth autofs4 lm90 hwmon i2c_i801 sunrpc ipv6 cpufreq_ondemand acpi_cpufreq uinput snd_intel8x0m snd_intel8x0 snd_ac97_codec snd_seq_dummy ac97_bus snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss snd_pcm b44 ssb firewire_ohci snd_timer ipw2200 iTCO_wdt mii firewire_core snd iTCO_vendor_support libipw yenta_socket crc_itu_t lib80211 rsrc_nonstatic soundcore", "title": "WARNING: at lib/dma-debug.c:539 check_sync+0xe9/0x341() (Not tainted)", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/broadcom/b44.c", "lib/dma-debug.c"], "causes": [{"cause": "The device driver is attempting to sync DMA memory that it has not allocated, which can occur if the driver is using an incorrect or uninitialized DMA address.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Ensure that the DMA address being used for synchronization is correctly allocated and initialized by the driver before any DMA operations are performed."}, {"cause": "The DMA API usage in the driver might be incorrect, leading to attempts to sync memory that was not allocated for DMA.", "code_file": "lib/dma-debug.c", "fix_solution": "Add additional checks in the DMA API to verify that the memory being synced was indeed allocated for DMA, and provide detailed error messages to help identify the source of the issue."}, {"cause": "The driver might be using a stale or invalid DMA address due to improper handling of DMA mappings.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Review and correct the DMA mapping and unmapping logic to ensure that all DMA addresses are valid and current before use."}, {"cause": "There might be a race condition in the driver that causes the DMA address to be used before it is properly initialized.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Implement proper synchronization mechanisms to ensure that DMA addresses are fully initialized before they are used in any DMA operations."}], "input_tokens": 10500, "output_tokens": 332}
{"id": "12961", "paths": ["arch/x86/kernel/hpet.c"], "predicts": ["arch/x86/kernel/io_apic.c", "arch/x86/kernel/apic.c", "arch/x86/kernel/mpparse.c", "drivers/acpi/pci_irq.c", "kernel/irq/chip.c", "kernel/irq/manage.c", "kernel/time/timer_list.c", "kernel/timer.c", "init/calibrate.c", "init/main.c"], "input_tokens_sum": 157457, "output_tokens_sum": 5272, "description": "Created attachment 20718 [details]\ndmesg with acpi=debug\n\nLast working kernel version: 2.6.29-rc8-gitsomething\n\nHardware:\n\nTyan K8W Motherboard with 2 1.8GHz Dual Core Opterons with 2GB Ram for each node. The Motherboard uses the AMD 8xxx chipsets for AGP, PCI-X and Southbridge.\n\nSoftware: Debian unstable, 64bit.\n\nThe kernel crashes with the following message (and a backtrace afterwards):\n\n[    0.008000] ENABLING IO-APIC IRQs\n[    0.008000] ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=0 pin2=0\n[    0.008000] ..MP-BIOS bug: 8254 timer not connected to IO-APIC\n[    0.008000] ...trying to set up timer (IRQ0) through the 8259A ...\n[    0.008000] ..... (found apic 0 pin 0) ...\n[    0.008000] ....... failed.\n[    0.008000] ...trying to set up timer as Virtual Wire IRQ...\n[    0.008000] ..... failed.\n[    0.008000] ...trying to set up timer as ExtINT IRQ...\n[    0.008000] ..... failed :(.\n[    0.008000] Kernel panic - not syncing: IO-APIC + timer doesn't work!  Boot with apic=debug and send a r.", "title": "Kernel panics in early boot: IO-APIC + timer doesn't work", "Kernel Version": "2.6.29", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/io_apic.c", "arch/x86/kernel/mpparse.c", "drivers/pci/quirks.c", "drivers/acpi/pci_irq.c"], "causes": [{"cause": "The 8254 timer is not properly connected to the IO-APIC, causing the kernel to fail in setting up the timer through various methods.", "code_file": "arch/x86/kernel/io_apic.c", "fix_solution": "Modify the setup_timer_IRQ0_pin function to ensure the correct routing of the 8254 timer to the IO-APIC, possibly by adding a quirk for the specific chipset."}, {"cause": "The MP-BIOS is not correctly reporting the timer's connection to the IO-APIC, leading to incorrect initialization.", "code_file": "arch/x86/kernel/mpparse.c", "fix_solution": "Add a workaround in the mpparse.c file to handle the MP-BIOS bug by manually setting the correct timer routing."}, {"cause": "The kernel is not handling the edge and level trigger settings correctly for the timer IRQ, causing the setup to fail.", "code_file": "arch/x86/kernel/io_apic.c", "fix_solution": "Ensure that the check_timer function correctly configures the edge and level trigger settings for the timer IRQ."}, {"cause": "The IO-APIC initialization code does not account for specific quirks of the AMD 8xxx chipset, leading to incorrect timer setup.", "code_file": "drivers/pci/quirks.c", "fix_solution": "Implement a chipset-specific quirk in the pci_quirks.c file to correctly initialize the IO-APIC for the AMD 8xxx chipset."}, {"cause": "The kernel's ACPI implementation is not correctly setting up the IRQ routing for the timer, possibly due to incorrect ACPI table parsing.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Enhance the ACPI IRQ routing setup to correctly parse and apply the IRQ settings from the ACPI tables, ensuring the timer is routed correctly."}], "input_tokens": 10484, "output_tokens": 428}
{"id": "12914", "paths": ["drivers/serial/pmac_zilog.c"], "predicts": ["drivers/serial/pmac_zilog.c", "drivers/serial/pmac_zilog.h", "arch/powerpc/kernel/irq.c", "arch/powerpc/platforms/powermac/pmac.h", "arch/powerpc/kernel/setup-common.c", "include/linux/serial.h"], "input_tokens_sum": 133228, "output_tokens_sum": 1928, "description": "Latest working kernel version: 2.6.11\nEarliest failing kernel version: 2.6.27\nDistribution: OpenSUSE 11.1\nHardware Environment: powerpc ( macintosh Powerbook G3 \"wallstreet\")\nSoftware Environment: gcc 4.3.2\nProblem Description: \n\nAfter upgrade to 2.6.28.8, the internal serial modem\nis no longer configured and /dev/ttyPZ2 does not respond.\n\nThe following is the truncated output of dmesg:\n\nUsing PowerMac machine description\nTotal memory = 160MB; using 512kB for hash table (at c9f80000)\nLinux version 2.6.28.8 (sadd@corinth) (gcc version 4.3.2 [gcc-4_3-branch revisio\nn 141291] (SUSE Linux) ) #1 Thu Mar 19 03:25:12 CDT 2009\nFound a Gatwick mac-io controller, rev: 1, mapped at 0xff780000\nFound a Heathrow mac-io controller, rev: 1, mapped at 0xff700000\nPowerMac motherboard: PowerBook Wallstreet\nPMU driver v2 initialized for PowerBook G3 Series, firmware: 0a\nconsole [udbg0] enabled\nFound Grackle (MPC106) PCI host bridge at 0x0000000080000000. Firmware bus numbe\nr: 0->0\n[...]\npmac_zilog: serial", "title": "pmac_zilog fails to find IRQ for internal serial modem", "Kernel Version": "2.6.28", "Product": "Platform Specific/Hardware", "Component": "PPC-32", "Hardware": "All Linux", "reranked_files": ["drivers/serial/pmac_zilog.c"], "causes": [{"cause": "The pmac_zilog driver fails to register the IRQ for the internal serial modem due to a missing check for successful registration.", "code_file": "drivers/serial/pmac_zilog.c", "fix_solution": "Add a check for the return value of uart_add_one_port() in pmz_register() and handle the failure case by unregistering the driver and cleaning up resources."}, {"cause": "The pmac_zilog driver does not properly handle the case where another serial driver has already claimed the necessary device numbers.", "code_file": "drivers/serial/pmac_zilog.c", "fix_solution": "Modify init_pmz() to check if pmz_register() fails due to device numbers being taken and log an appropriate error message."}, {"cause": "The pmac_zilog driver may not be correctly initializing the hardware for the internal modem, leading to IRQ issues.", "code_file": "drivers/serial/pmac_zilog.c", "fix_solution": "Ensure that pmz_set_scc_power() is correctly enabling the modem hardware and that the initialization sequence in __pmz_startup() is complete and correct."}, {"cause": "The IRQ handler in pmac_zilog may not be correctly set up or enabled, leading to the modem not responding.", "code_file": "drivers/serial/pmac_zilog.c", "fix_solution": "Verify that request_irq() in pmz_startup() is successful and that the interrupt handler pmz_interrupt() is correctly processing interrupts."}], "input_tokens": 11575, "output_tokens": 345}
{"id": "12646", "paths": ["drivers/w1/slaves/w1_therm.c"], "predicts": ["drivers/w1/slaves/w1_therm.c", "drivers/w1/w1.c", "drivers/w1/w1_family.c", "drivers/w1/w1_io.c", "drivers/w1/w1_int.c"], "input_tokens_sum": 136404, "output_tokens_sum": 1181, "description": "Latest working kernel version:Unknown\nEarliest failing kernel version:2.6.29-rc3\nDistribution:FC-8\nHardware Environment:i386, DS18B20 slave, DS9490R master.\nSoftware Environment:\nProblem Description:When the temperature exceeds 32767 milli-degrees the temperature overflows to -32768 millidegrees. These are bothe well within the -55 - +125 degree range for the sensor.\n\nSteps to reproduce: Put your thumb on the sensor while periodically inspecting /sys/devices/w1\\ bus\\ master/*/w1_slave", "title": "w1_therm overflows for temperatures greater that 32.767 Celsius", "Kernel Version": "2.6.29-rc3", "Product": "Drivers", "Component": "W1", "Hardware": "All Linux", "reranked_files": ["drivers/w1/slaves/w1_therm.c"], "causes": [{"cause": "The temperature value is being stored in a signed 16-bit integer, which causes overflow when the temperature exceeds 32767 milli-degrees.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Change the data type used to store temperature values from a signed 16-bit integer to a signed 32-bit integer to accommodate larger values without overflow."}, {"cause": "Incorrect handling of temperature conversion results from the DS18B20 sensor, leading to overflow when converting to milli-degrees.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Ensure that the conversion logic correctly handles the full range of temperature values supported by the DS18B20 sensor, including values above 32767 milli-degrees."}, {"cause": "The temperature reading logic does not account for the sensor's full range, causing incorrect interpretation of high temperature values.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Update the temperature reading logic to correctly interpret and convert the sensor's output for temperatures above 32.767 degrees Celsius."}], "input_tokens": 9365, "output_tokens": 266}
{"id": "12632", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply.h", "include/linux/power_supply.h"], "input_tokens_sum": 147114, "output_tokens_sum": 2093, "description": "Latest working kernel version: None\nEarliest failing kernel version: Everything since ACPI moved to using the power_supply class\nDistribution: Fedora rawhide\nHardware Environment: Lenovo T61\nSoftware Environment: Fedora rawhide\nProblem Description:\n\nOn hardware like the T61 it can take a couple of seconds for the battery\nto start charging after the power is connected, and we incorrectly tell\nuserspace that we are fully charged, and then go back to charging.\n\nOnly mark a battery as fully charged when the preset charge matches either\nthe last full charge, or the design charge.\n\nSteps to reproduce:\n\nCharge battery to 50%. Watch /sys/class/power_supply/BAT*/status, and observe that when the power is disconnected, the status goes from charging->fully_charged->discharging. This also happens when going from battery to AC. This greatly confuses userspace.", "title": "don't assume we are fully charged when not charging or discharging", "Kernel Version": "2.6.29-rc3", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/power/power_supply_core.c", "drivers/acpi/sbs.c", "drivers/power/power_supply_sysfs.c"], "causes": [{"cause": "The battery status transitions incorrectly due to a delay in detecting the charging state, leading to a false 'fully charged' status.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Modify the logic in acpi_battery_get_property to ensure the battery status is only set to 'fully charged' when the current charge matches the last full charge or design charge."}, {"cause": "The power_supply class does not correctly handle the transition between charging states, causing confusion in userspace.", "code_file": "drivers/power/power_supply_core.c", "fix_solution": "Implement a check in power_supply_changed to verify the actual charge level before updating the status to 'fully charged'."}, {"cause": "The ACPI battery driver incorrectly reports the battery status due to a misinterpretation of the power_now property.", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Adjust the logic in acpi_sbs_battery_get_property to ensure the power_now property accurately reflects the battery's charging state."}, {"cause": "The sysfs interface for power supply properties does not correctly represent the battery's charging status, leading to incorrect status reporting.", "code_file": "drivers/power/power_supply_sysfs.c", "fix_solution": "Enhance the power_supply_show_property function to include additional checks for the battery's actual charge level before reporting the status."}], "input_tokens": 9873, "output_tokens": 324}
{"id": "12592", "paths": ["drivers/firewire/fw-card.c"], "predicts": ["drivers/firewire/fw-card.c", "drivers/firewire/fw-ohci.c", "drivers/firewire/fw-ohci.h"], "input_tokens_sum": 137728, "output_tokens_sum": 1221, "description": "Latest working kernel version:  never\nEarliest failing kernel version:  always\nDistribution:  Debian\nHardware Environment:  Two \"FireWire (IEEE 1394): Texas Instruments TSB43AB23 IEEE-1394a-2000 Controller (PHY/Link)\" devices in one box, with on-board device ill...\nSoftware Environment:  New FW stack\nProblem Description:\n\nWhen Vista boots on the hardware, it does something bad to the on-board firewire adapter, so it starts failing to enable card:\n\nfirewire_ohci 0000:01:09.0: PCI INT A -> Link[APC4] -> GSI 19 (level, low) -> IRQ 19\nfirewire_ohci 0000:01:09.0: setting latency timer to 64\nfirewire_ohci: failed to set phy reg bits.\nfirewire_ohci 0000:01:09.0: PCI INT A disabled\nfirewire_ohci: probe of 0000:01:09.0 failed with error -5\n\nWhen that happens, fw_add_card adds card to the list of all devices, but then returns an error.  Caller then thinks that things went wrong, and releases card structure.  Then when fw_add_card is invoked for second device, kernel reports linked list corruptio", "title": "fw_card_add adds card to the list even on enable failure", "Kernel Version": "2.6.29-rc3", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "All Linux", "reranked_files": ["drivers/firewire/fw-card.c", "drivers/firewire/fw-ohci.c"], "causes": [{"cause": "The function fw_card_add adds the card to the list before checking if the card enable operation was successful, leading to a linked list corruption when the card is released after a failure.", "code_file": "drivers/firewire/fw-card.c", "fix_solution": "Modify fw_card_add to check the result of the card enable operation before adding the card to the list."}, {"cause": "The error handling in fw_card_add does not properly remove the card from the list when an error occurs during the card enable operation.", "code_file": "drivers/firewire/fw-card.c", "fix_solution": "Ensure that the card is removed from the list if the enable operation fails, before returning an error."}, {"cause": "The function ohci_enable in fw-ohci.c does not return an error code when the card enable operation fails, leading to incorrect assumptions in fw_card_add.", "code_file": "drivers/firewire/fw-ohci.c", "fix_solution": "Ensure ohci_enable returns a proper error code when the card enable operation fails, allowing fw_card_add to handle the error correctly."}, {"cause": "The irq_handler function does not properly handle the case where the card enable operation fails, potentially leaving the card in an inconsistent state.", "code_file": "drivers/firewire/fw-ohci.c", "fix_solution": "Add error handling in irq_handler to ensure the card is properly disabled and cleaned up if the enable operation fails."}], "input_tokens": 10067, "output_tokens": 330}
{"id": "12567", "paths": ["drivers/net/wireless/rtl8187_dev.c"], "predicts": ["drivers/net/wireless/rtl8187_dev.c"], "input_tokens_sum": 129047, "output_tokens_sum": 2243, "description": "The rtl8187 module driver doesn't work properly on hight traffic. When foe example I am downloading torrents the card doesn't respond an the connection is lost. I have to unload and load the module again. I only happens with me when the torrents are on.", "title": "The rtl-8187b card stops responding and connection is lost on hight trafic (torrent protocol).", "Kernel Version": "2.6.28", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/rtl8187_dev.c"], "causes": [{"cause": "High traffic causes sequence number mismanagement leading to connection loss.", "code_file": "drivers/net/wireless/rtl8187_dev.c", "fix_solution": "Ensure proper sequence number assignment and management during high traffic conditions."}, {"cause": "Concurrent access to configuration routines causing device lockup.", "code_file": "drivers/net/wireless/rtl8187_dev.c", "fix_solution": "Implement mutex locks to protect device state during configuration changes."}, {"cause": "Resource leaks during error handling in transmission.", "code_file": "drivers/net/wireless/rtl8187_dev.c", "fix_solution": "Add error handling to free resources when USB transmission fails."}, {"cause": "Improper handling of USB transmission status leading to incorrect ACK reporting.", "code_file": "drivers/net/wireless/rtl8187_dev.c", "fix_solution": "Modify transmission callback to correctly handle USB status and ACK reporting."}], "input_tokens": 9093, "output_tokens": 228}
{"id": "12360", "paths": ["drivers/acpi/dock.c"], "predicts": ["drivers/acpi/dock.c", "drivers/acpi/button.c", "drivers/acpi/glue.c", "include/linux/acpi.h", "arch/x86/pci/acpi.c", "include/linux/pci_hotplug.h", "drivers/acpi/video.c", "drivers/acpi/pci_bind.c", "arch/x86/pci/fixup.c", "mm/memory_hotplug.c"], "input_tokens_sum": 130914, "output_tokens_sum": 2343, "description": "Latest working kernel version:2.6.26.2\nEarliest failing kernel version:2.6.28\nDistribution:Debian SID\nHardware Environment: Dell D43\nSoftware Environment: only kernel\nProblem Description: after upgrade kernel and undocking kernel prints info about undock but after while docking  again.See atached dmesg. After this I lost keyboard and mouse. Sometime I get it back.\n\nSteps to reproduce:\ncompile 2.6.28 and undock", "title": "with 2.6.28 undock/dock work bad or freeze computer - Dell D430", "Kernel Version": "2.6.28", "Product": "ACPI", "Component": "Config-Hotplug", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/dock.c", "drivers/ata/libata-acpi.c", "drivers/pci/hotplug/acpiphp_glue.c", "include/acpi/acpi_drivers.h"], "causes": [{"cause": "The docking and undocking events are not being handled correctly, leading to repeated docking events and loss of input devices.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Ensure that the dock and undock events are properly synchronized and that the state is correctly updated to prevent repeated events."}, {"cause": "The ACPI dock driver might not be correctly registering or handling the hotplug events for devices on the dock.", "code_file": "drivers/ata/libata-acpi.c", "fix_solution": "Review and correct the registration of hotplug events to ensure that devices are correctly recognized and managed during dock/undock operations."}, {"cause": "The ACPI dock driver may not be correctly managing the state of the dock station, leading to incorrect event handling.", "code_file": "drivers/pci/hotplug/acpiphp_glue.c", "fix_solution": "Implement additional checks and state management to ensure that the dock station's state is accurately tracked and updated."}, {"cause": "The ACPI dock driver might not be correctly notifying the system of dock state changes, leading to input device issues.", "code_file": "include/acpi/acpi_drivers.h", "fix_solution": "Ensure that the notification handlers are correctly set up and that the system is properly informed of dock state changes."}], "input_tokens": 9259, "output_tokens": 310}
{"id": "12310", "paths": ["drivers/cpufreq/cpufreq_ondemand.c"], "predicts": ["drivers/cpufreq/cpufreq_ondemand.c", "kernel/time/tick-sched.c", "include/cpufreq.h"], "input_tokens_sum": 132378, "output_tokens_sum": 1483, "description": "Latest working kernel version: Don't think it ever worked well with NOHZ, but got worse after 2.6.26\nEarliest failing kernel version:\nDistribution:\nHardware Environment: Everex notebook, AMD 64 dual-core\nSoftware Environment: \nProblem Description:\n\n  [this bug is a tickless+ondemand interaction: the problem may be in the cpufreq_ondemand code]\n\n  I'm running boinc, which will cheerfully keep both cores loaded with niced processes if I let it. In the past, meaning for the last six months or more, I managed to stop the niced processes from upping the frequency by setting up_threshhold to 50 or more and letting boinc use only 80% CPU, but with 2.6.28 nothing I did mattered.\n\n I got to looking around the ondemand code and noticed that it would try to call\nget_cpu_idle_time_us() and then calculate idle time differently if that failed, which would happen if NOHZ is turned off. I rebooted with 'nohz=off' and the ondemand code behaves completely to spec according to how I set ignore_nice_load ", "title": "NOHZ appears to cause ondemand to effectively ignore 'ignore_nice_load'", "Kernel Version": "2.6.28", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq_ondemand.c", "kernel/time/tick-sched.c", "kernel/sched/cpufreq_schedutil.c"], "causes": [{"cause": "The ondemand governor does not correctly account for idle time when NOHZ is enabled, leading to incorrect frequency scaling decisions.", "code_file": "drivers/cpufreq/cpufreq_ondemand.c", "fix_solution": "Ensure that get_cpu_idle_time_us() is correctly used to calculate idle time even when NOHZ is enabled, and adjust the logic to handle the idle time calculation properly."}, {"cause": "The NOHZ mode interferes with the accurate tracking of CPU idle time, causing the ondemand governor to misinterpret CPU load.", "code_file": "kernel/time/tick-sched.c", "fix_solution": "Modify the tick_nohz_stop_sched_tick() function to ensure that idle time is accurately tracked and updated even when NOHZ is active."}, {"cause": "The ondemand governor's logic for ignoring nice load is not functioning correctly with NOHZ, leading to frequency scaling based on niced processes.", "code_file": "drivers/cpufreq/cpufreq_ondemand.c", "fix_solution": "Review and correct the logic that handles the ignore_nice_load parameter to ensure it works as expected with NOHZ enabled."}, {"cause": "The interaction between NOHZ and the ondemand governor's idle time calculation is flawed, causing the governor to not respect the ignore_nice_load setting.", "code_file": "kernel/sched/cpufreq_schedutil.c", "fix_solution": "Implement a mechanism to ensure that the idle time calculation respects the ignore_nice_load setting when NOHZ is enabled."}], "input_tokens": 9659, "output_tokens": 354}
{"id": "12302", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/power.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/pci/acpi.c", "arch/x86/video/fbdev.c", "include/acpi/acpi_bus.h", "include/acpi/acpi_drivers.h", "kernel/power/power.h", "fs/sysfs/file.c", "lib/kobject.c"], "input_tokens_sum": 133762, "output_tokens_sum": 2048, "description": "Latest working kernel version: 2.6.27.10\nEarliest failing kernel version: 2.6.28\nDistribution: all\nHardware Environment: Notebook asus X51L\nSoftware Environment: all\nProblem Description:backward brigthess level\n\nSteps to reproduce: start Kpowersave and select brigthess level \n\nAsus X51L backward brigthess trouble.\n\n/proc/acpi/video/VGA/LCDD/brightness - work fine 0-min 15-max\n/sys/class/backlight/acpi_video0/brightness - trouble 0-max 15-min\n\nKpowersave work bad - 100%-min 1%-max\n\nIn dmesg:\n\nDec 25 23:47:08 sfstudio kernel: \nACPI: Please implement acpi_video_bus_ROM_seq_show\nDec 26 01:34:14 sfstudio kernel: asus-laptop: Asus Laptop Support version 0.42\nDec 26 01:34:14 sfstudio kernel: asus-laptop:   X51L model detected\nDec 26 01:34:14 sfstudio kernel: asus-laptop: Brightness ignored, must be\ncontrolled by ACPI video driver\nDec 26 01:34:14 sfstudio kernel: Registered led device: asus::mail\nDec 26 01:37:29 sfstudio kernel: asus-laptop: Asus Laptop Support version 0.42\nDec 26 01:37:29 sfs", "title": "Backward brigthess level", "Kernel Version": "2.6.28", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c"], "causes": [{"cause": "The ACPI video driver is incorrectly mapping brightness levels, causing the maximum brightness to be interpreted as the minimum and vice versa.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the logic in acpi_video_get_brightness and acpi_video_set_brightness functions to correctly map the brightness levels from the ACPI firmware."}, {"cause": "The sysfs backlight class does not correctly interpret the brightness levels provided by the ACPI firmware, leading to reversed brightness values.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the acpi_video_device_find_cap function to ensure the brightness levels are correctly initialized and mapped to the sysfs backlight class."}, {"cause": "The ACPI video driver does not correctly handle the initialization of brightness levels, leading to incorrect mappings.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the acpi_video_init_brightness function correctly allocates and initializes the brightness levels, and verify the logic for mapping these levels to the sysfs interface."}, {"cause": "The ACPI video driver fails to correctly interpret the brightness levels due to incorrect handling of ACPI methods.", "code_file": "drivers/acpi/video.c", "fix_solution": "Review and correct the handling of ACPI methods such as _BCL, _BCM, and _BQC in the acpi_video_device_find_cap function to ensure proper brightness level interpretation."}], "input_tokens": 9850, "output_tokens": 336}
{"id": "12286", "paths": ["drivers/misc/tc1100-wmi.c"], "predicts": ["drivers/misc/tc1100-wmi.c", "include/linux/acpi.h"], "input_tokens_sum": 118727, "output_tokens_sum": 773, "description": "Latest working kernel version: 2.6.22\nEarliest failing kernel version: 2.6.25\nDistribution: Ubuntu\n\nProblem Description:\nThe tc1100-wmi driver should print the current states of wireless LAN and jogdial brightness control when \"cat /sys/devices/platform/tc1100-wmi/wireless\" and \"cat /sys/devices/platform/tc1100-wmi/jogdial\" are executed, respectively. What actually happens is that both of those commands print 0 regardless of the hardware state. The cause is that wmi_query_block returns an ACPI_TYPE_INTEGER rather than ACPI_TYPE_BUFFER as the driver assumes. Additionally, the driver intends to return a jogdial state that is inverted with respect to the commands required to set it (e.g. it intends to return 1 after the jogdial file was written with 0).", "title": "[Patch] tc1100-wmi: sysfs entries always 0", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/misc/tc1100-wmi.c"], "causes": [{"cause": "The tc1100-wmi driver incorrectly assumes that wmi_query_block returns an ACPI_TYPE_BUFFER, but it actually returns an ACPI_TYPE_INTEGER.", "code_file": "drivers/misc/tc1100-wmi.c", "fix_solution": "Modify the driver to correctly handle the ACPI_TYPE_INTEGER returned by wmi_query_block."}, {"cause": "The jogdial state is inverted with respect to the commands required to set it, causing incorrect state reporting.", "code_file": "drivers/misc/tc1100-wmi.c", "fix_solution": "Adjust the logic in the driver to correctly invert the jogdial state when reading from sysfs."}, {"cause": "The sysfs entries for wireless and jogdial are not correctly initialized or updated due to incorrect handling of platform device registration.", "code_file": "drivers/misc/tc1100-wmi.c", "fix_solution": "Ensure that the platform device is correctly registered and initialized before creating sysfs entries."}, {"cause": "Potential lack of error handling in the module initialization and exit paths, which could lead to improper setup or cleanup of sysfs entries.", "code_file": "drivers/misc/tc1100-wmi.c", "fix_solution": "Add proper error handling and cleanup in the module initialization and exit functions to ensure sysfs entries are correctly managed."}], "input_tokens": 9351, "output_tokens": 312}
{"id": "12270", "paths": ["drivers/acpi/resources/rscreate.c"], "predicts": ["drivers/acpi/pci_irq.c", "drivers/acpi/pci_link.c", "drivers/acpi/pci_root.c", "drivers/acpi/power.c", "drivers/acpi/processor_core.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/sleep.c", "include/acpi/acpi.h"], "input_tokens_sum": 127525, "output_tokens_sum": 2483, "description": "Latest working kernel version:kernel 2.6.24\n\nEarliest failing kernel version: kernel 2.6.27\n\nDistribution: Mandriva\nHardware Environment: Atlon AMD 1800+,\n\nSoftware Environment: KDE\n\nProblem Description: As said in the summary, with kernel 2-6-27 and 2-6-28 (thos ones are availables in mandriva repositories), all my devices are not recognized by the kernel. So, I have no printers, no internet, no webcam.....\nWith kernel 2-6-24, everything is fine. The bug is not due to patched  mandriva kernel since I used a pure linux version kernel.\n\nSteps to reproduce:Just boot the kernel", "title": "Almost all my devices are not recongnized by  kernel-2.6.27, 2.6-28", "Kernel Version": "2.6.27", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/pci_link.c", "arch/x86/kernel/io_apic.c", "arch/x86/kernel/mpparse.c", "drivers/acpi/pci_irq.c"], "causes": [{"cause": "Incorrect IRQ allocation due to changes in ACPI IRQ routing logic.", "code_file": "drivers/acpi/pci_link.c", "fix_solution": "Ensure that IRQs are correctly allocated by validating the current IRQ (_CRS) against possible IRQs (_PRS) and adjusting the logic to handle both PIC and APIC mode link devices appropriately."}, {"cause": "Buggy ACPI code affecting IRQ routing, leading to unrecognized devices.", "code_file": "arch/x86/kernel/io_apic.c", "fix_solution": "Implement a fallback mechanism to non-ACPI configuration when buggy ACPI code is detected during IRQ routing setup."}, {"cause": "Incorrect polarity and mode settings for IO-APIC from ACPI.", "code_file": "arch/x86/kernel/mpparse.c", "fix_solution": "Modify the code to correctly use polarity and mode settings from ACPI when setting up IO-APIC routing."}, {"cause": "Failure to set IRQs for boot-enabled link devices.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Force every link device IRQ to be set at least once, ensuring that boot-enabled IRQs are correctly configured."}, {"cause": "Inadequate handling of IRQ penalties affecting IRQ balancing.", "code_file": "drivers/acpi/pci_link.c", "fix_solution": "Update the penalties to facilitate IRQ balancing and ensure that link devices are enabled at the best possible IRQ."}], "input_tokens": 10624, "output_tokens": 343}
{"id": "12239", "paths": ["mm/swapfile.c"], "predicts": ["kernel/power/swap.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "mm/swap.c", "mm/swapfile.c", "drivers/base/power/main.c", "arch/x86/power/hibernate_64.c", "arch/x86/power/hibernate_32.c", "include/linux/swap.h", "include/linux/pm.h"], "input_tokens_sum": 129363, "output_tokens_sum": 2293, "description": "Distribution: Ubuntu 8.10\nHardware Environment: x86-64\nProblem Description:\n\nIf there is not enough swap to hibernate sucessfuly, and you try to hibernate twice in a row, the status of swap partitions is corrupted.\n\nSteps to reproduce:\n\n1) Conspire to ensure insufficient swap space for hibernation\n2) Attempt to hibernate, and fail\n3) Attempt to hibernate *again*, and fail\n4) try swapoff\n\nOutcome:\n\n# swapoff /dev/sda6\nswapoff: /dev/sda6: Invalid argument\n# cat /proc/swaps\nFilename                                Type            Size    Used   \nPriority\n/dev/sda6                               partition       1494004 1350564 -1\n\nMore details about the resulting behaviour:\n\nIncidentally \"swapoff -a\" fails silently, which I think is a bug in\nswapoff (i.e. it should report the error).\n\nI don't see any backtraces in dmesg; the only errors it shows is the\nfailure to hibernate\n\nIf I free up some memory and try to hibernate again, I get a different\nerror - \"Cannot find swap device, try swapon -a.", "title": "Swap breaks after 2x hibernation failure due to lack of swap", "Kernel Version": "2.6.27", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["mm/swapfile.c", "mm/page_io.c", "mm/swap_state.c", "include/linux/swap.h"], "causes": [{"cause": "Swap partition status is not properly reset after a failed hibernation attempt, leading to corruption when hibernation fails twice.", "code_file": "mm/swapfile.c", "fix_solution": "Implement a mechanism to reset the swap partition status after a failed hibernation attempt to ensure it is ready for subsequent operations."}, {"cause": "The swapoff command fails due to invalid swap partition state after multiple hibernation failures.", "code_file": "mm/page_io.c", "fix_solution": "Add error handling to ensure swap partition state is correctly managed and reset after write failures during hibernation."}, {"cause": "Swap partition is marked as bad after write failures, preventing swapoff from functioning correctly.", "code_file": "mm/swap_state.c", "fix_solution": "Modify the logic to handle swap partition errors more gracefully, allowing swapoff to proceed even if previous write attempts failed."}, {"cause": "The swap partition is not properly cleaned up after a failed hibernation attempt, leading to persistent errors.", "code_file": "include/linux/swap.h", "fix_solution": "Introduce a function to clean up and reset swap partition state after a failed hibernation attempt."}], "input_tokens": 9167, "output_tokens": 283}
{"id": "12216", "paths": ["drivers/gpu/drm/radeon/radeon_irq.c"], "predicts": ["drivers/gpu/drm/drm_irq.c", "drivers/gpu/drm/radeon/radeon_irq.c", "arch/x86/kernel/irq.c", "kernel/irq/handle.c", "kernel/irq/spurious.c", "kernel/irq/manage.c", "include/linux/irq.h", "include/linux/irqreturn.h", "include/drm/drm.h", "include/drm/drmP.h"], "input_tokens_sum": 164513, "output_tokens_sum": 4847, "description": "Latest working kernel version: maybe 2.6.28-rc6\nEarliest failing kernel version: 2.6.28-rc8\nDistribution: Gentoo\nHardware Environment: Acer Travelmate 4001 Lmi, ATI Radeon Mobility 9700\nSoftware Environment:\nProblem Description:\n\nSteps to reproduce:\n\nWhen the drm module is loaded during X startup, I get the following error:\n\n[   55.642188] [drm] Initialized drm 1.1.0 20060810\n[   55.757559] [drm] Initialized radeon 1.29.0 20080528 on minor 0\n[   56.920297] agpgart-intel 0000:00:00.0: AGP 2.0 bridge\n[   56.920314] agpgart-intel 0000:00:00.0: putting AGP V2 device into 4x mode\n[   56.920347] pci 0000:01:00.0: putting AGP V2 device into 4x mode\n[   57.686654] irq 6: nobody cared (try booting with the \"irqpoll\" option)\n[   57.686660] Pid: 7472, comm: X Not tainted 2.6.28-rc8-git #22\n[   57.686663] Call Trace:\n[   57.686671]  [<c0453414>] __report_bad_irq+0x24/0x90\n[   57.686675]  [<c04535e9>] note_interrupt+0x169/0x1b0\n[   57.686679]  [<c0452575>] handle_IRQ_event+0x25/0x60\n[   57.686683] ", "title": "Error when drm is loaded", "Kernel Version": "2.6.28-rc8", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["kernel/irq/spurious.c", "drivers/gpu/drm/radeon/radeon_irq_kms.c", "drivers/char/agp/intel-agp.c", "kernel/irq/handle.c"], "causes": [{"cause": "The 'irq 6: nobody cared' message indicates that an interrupt was not handled by any driver, which can occur if the interrupt handler is not properly registered or if the interrupt is shared and not acknowledged by all handlers.", "code_file": "kernel/irq/spurious.c", "fix_solution": "Implement a mechanism to re-enable the interrupt line if it remains asserted after all handlers have been called, possibly by adding a second pass over disabled IRQ lines as suggested in the emails."}, {"cause": "The DRM module may be attempting to access hardware resources without proper locking, leading to race conditions and unhandled interrupts.", "code_file": "drivers/gpu/drm/radeon/radeon_irq_kms.c", "fix_solution": "Ensure that all access to shared resources in the DRM module is properly synchronized using locks to prevent race conditions."}, {"cause": "The AGP bridge configuration might be incorrect, causing the graphics card to not properly handle interrupts.", "code_file": "drivers/char/agp/intel-agp.c", "fix_solution": "Verify and correct the AGP mode settings to ensure compatibility with the graphics card and proper interrupt handling."}, {"cause": "The interrupt handler for the Radeon driver might not be correctly acknowledging or masking the interrupt, leading to repeated unhandled interrupts.", "code_file": "drivers/gpu/drm/radeon/radeon_irq_kms.c", "fix_solution": "Modify the interrupt handler to ensure it properly acknowledges and masks the interrupt to prevent it from being repeatedly triggered without handling."}, {"cause": "The system might be incorrectly handling shared interrupts, leading to some devices not being serviced properly.", "code_file": "kernel/irq/handle.c", "fix_solution": "Implement a loop in the interrupt handling code to ensure all handlers for a shared interrupt are called until no more interrupts are pending."}], "input_tokens": 9617, "output_tokens": 419}
{"id": "12061", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_local.h", "include/sound/driver.h", "include/sound/hda_hwdep.h"], "input_tokens_sum": 129492, "output_tokens_sum": 1642, "description": "Latest working kernel version: 2.6.27.6\nEarliest failing kernel version: 2.6.28-rc? (I'm thinking that it works sometime ago with 2.6.28)\nDistribution: Gentoo\nHardware Environment: Dell Latitude D830\nProblem Description:\nIf power_save is greater 0 the speakers make a cracking noise on powerdown after the specified timeout\n\nSteps to reproduce:\nload snd_hda_intel with power_save=5\nPlay a sound and wait 5 secs.\n\n\n---------------------------\n# cat /proc/asound/cards\n 0 [Intel          ]: HDA-Intel - HDA Intel\n                      HDA Intel at 0xf6adc000 irq 21\n\n# cat /proc/asound/pcm\n00-00: STAC92xx Analog : STAC92xx Analog : playback 1 : capture 2", "title": "snd_hda_intel: power_save: sound cracks on powerdown", "Kernel Version": "2.6.28-rc5", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c"], "causes": [{"cause": "The power_save feature in snd_hda_intel driver is not properly handling the power state transitions, leading to a cracking noise when the codec powers down.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Introduce a delay or smooth transition in the power state change to avoid abrupt power down that causes the cracking noise."}, {"cause": "The codec's amplifier gain or mute settings are not being properly restored or set during power down, causing noise.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Ensure that the amplifier gain and mute settings are correctly set to a safe state before powering down the codec."}, {"cause": "The power management logic does not account for the specific hardware quirks of the Dell Latitude D830, leading to improper handling of power transitions.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Add a hardware-specific quirk to handle power transitions more gracefully for the Dell Latitude D830."}, {"cause": "The power_save feature does not properly synchronize with the audio stream state, causing noise when the stream is inactive.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Implement a check to ensure that the power down only occurs when the audio stream is completely inactive."}], "input_tokens": 11567, "output_tokens": 317}
{"id": "11957", "paths": ["drivers/isdn/hardware/avm/b1isa.c"], "predicts": ["drivers/isdn/capi/kcapi_proc.c", "drivers/isdn/hardware/avm/b1isa.c", "drivers/isdn/capi/kcapi.c", "drivers/isdn/capi/capidrv.c", "drivers/isdn/capi/capilib.c"], "input_tokens_sum": 140570, "output_tokens_sum": 5531, "description": "Latest working kernel version: unknown\nEarliest failing kernel version: unknown\nDistribution: debian, kernel self-built\nHardware Environment: x86 system with B1 ISA ISDN controller\nSoftware Environment: debian unstable\nProblem Description: oops on reading /proc/capi/controller after rmmod b1isa\n\nSteps to reproduce:\n- verify a B1 ISA is shown in /proc/capi/controller\n- rmmod b1isa\n- cat /proc/capi/controller", "title": "oops on reading /proc/capi/controller after removing b1isa", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "ISDN", "Hardware": "All Linux", "reranked_files": ["drivers/isdn/hardware/avm/b1isa.c", "drivers/isdn/capi/kcapi.c", "drivers/isdn/capi/capidrv.c"], "causes": [{"cause": "The b1isa_exit() function does not properly unregister the CAPI controllers, leading to a dangling pointer when accessing /proc/capi/controller after the module is removed.", "code_file": "drivers/isdn/hardware/avm/b1isa.c", "fix_solution": "Modify b1isa_exit() to ensure all registered controllers are properly removed by checking the resource start value instead of the io array."}, {"cause": "The procinfo function pointer for the controller is not cleared upon module unload, causing an invalid memory access when reading /proc/capi/controller.", "code_file": "drivers/isdn/capi/kcapi.c", "fix_solution": "Ensure that the procinfo function pointer is set to NULL or properly handled during module unload to prevent access to freed memory."}, {"cause": "A race condition may exist where the controller is not properly removed from the global list, leading to access of invalid memory.", "code_file": "drivers/isdn/capi/capidrv.c", "fix_solution": "Add proper locking mechanisms to ensure the controller is safely removed from the global list during module unload."}, {"cause": "The controller removal logic does not account for controllers added after initial module load, leading to incomplete cleanup.", "code_file": "drivers/isdn/hardware/avm/b1isa.c", "fix_solution": "Update the removal logic to iterate over all controllers in isa_dev[] to ensure complete cleanup during module unload."}], "input_tokens": 9628, "output_tokens": 333}
{"id": "11926", "paths": ["drivers/net/sis190.c"], "predicts": ["drivers/net/sis190.c", "include/linux/phy.h", "include/linux/netdevice.h"], "input_tokens_sum": 146622, "output_tokens_sum": 1282, "description": "Latest working kernel version: unknown\nEarliest failing kernel version: tested with 2.6.27.2 (vanilla), it fails, also other version tested was now old 2.6.24, same issue\nDistribution: Mandriva\nHardware Environment: Clevo M540SS\nSoftware Environment:\n\nProblem Description:\nFor the sis190 I have here it doesn't report link change inside interrupt handler after removing ethernet cable. This makes ethernet cable detection to not work correctly. Network works fine, if you don't remove ethernet cable after first connection, keep it removed for some time, and reconnect.\n\nSteps to reproduce:\n- Remove ethernet cable (after booting with it plugged, or after plugging it after boot). Driver doesn't detect link change.\n\nThis is shown on kernel log after sis190 module is loaded with cable connected:\nsis190 Gigabit Ethernet driver 1.2 loaded.\nsis190 0000:00:04.0: PCI INT A -> GSI 19 (level, low) -> IRQ 19\nsis190 0000:00:04.0: setting latency timer to 64\n0000:00:04.0: Read MAC address from EEPROM\n0000", "title": "[PATCH]sis190 doesn't detect ethernet cable removal (Realtek PHY)", "Kernel Version": "2.6.30.1", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/sis/sis190.c", "drivers/net/phy/phy_device.c", "drivers/net/phy/realtek.c"], "causes": [{"cause": "The sis190 driver does not handle link status changes correctly in the interrupt handler, leading to failure in detecting cable removal.", "code_file": "drivers/net/ethernet/sis/sis190.c", "fix_solution": "Modify the interrupt handler to correctly update the link status when the cable is removed by checking the PHY status register."}, {"cause": "The PHY layer does not correctly propagate link status changes to the sis190 driver, possibly due to incorrect configuration or missing interface type.", "code_file": "drivers/net/phy/phy_device.c", "fix_solution": "Ensure that the PHY interface type is correctly set and that link status changes are propagated to the network driver."}, {"cause": "The PHY library might not be correctly configured to handle link status changes for Realtek PHYs, leading to incorrect link detection.", "code_file": "drivers/net/phy/realtek.c", "fix_solution": "Add or update the Realtek PHY driver to ensure it correctly handles link status changes and updates the network driver."}, {"cause": "The sis190 driver might not be correctly initializing the PHY device, leading to failure in detecting link status changes.", "code_file": "drivers/net/ethernet/sis/sis190.c", "fix_solution": "Ensure that the PHY device is correctly initialized with the appropriate flags and interface type during driver setup."}], "input_tokens": 9716, "output_tokens": 314}
{"id": "11879", "paths": ["drivers/ata/ata_piix.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/libata-sff.c", "drivers/ata/libata-scsi.c", "drivers/ata/libata.h", "kernel/power/disk.c", "kernel/power/swsusp.c", "arch/x86/power/hibernate_32.c", "arch/x86/power/hibernate_64.c", "arch/x86/pci/acpi.c"], "input_tokens_sum": 128913, "output_tokens_sum": 2129, "description": "Latest working kernel version:\nEarliest failing kernel version:\nDistribution: Ubuntu 8.10rc\nHardware Environment: Acer One A110L (Intel 945GSE / ICH7-M), SSD (Samsung P-SSD1800), BIOS v0.3109\nSoftware Environment: Ubuntu 8.10rc, Linux 2.6.27-7-generic\nProblem Description:\n\nBootup machine, no problem with ATA interfacing, full speed connection (leading to\n~40MB/s with hdparm):\n\n[    5.631156] ata1: SATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x60a0 irq 14\n[    5.631168] ata2: PATA max UDMA/100 cmd 0x170 ctl 0x376 bmdma 0x60a8 irq 15\n[    5.852225] usb 5-5: new high speed USB device using ehci_hcd and address 2\n[    5.961673] ata2.00: ATA-5: P-SSD1800, Ver2.Y0C, max UDMA/66\n[    5.961683] ata2.00: 15761088 sectors, multi 0: LBA \n[    5.969597] ata2.00: configured for UDMA/66\n[    5.969915] scsi 1:0:0:0: Direct-Access     ATA      P-SSD1800        Ver2 PQ: 0 ANSI: 5\n\n\nSuspend to RAM, then resume, witness:\n[  968.980271] ata2.00: ACPI cmd ef/03:0c:00:00:00:a0 filtered out\n[  968.980278] at", "title": "Improper ATA cable detection after S2R _only_:  \"limited to UDMA/33 due to 40-wire cable\"", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-acpi.c", "drivers/base/power/main.c", "drivers/ata/libata-eh.c"], "causes": [{"cause": "The ATA cable detection logic does not correctly handle the transition from suspend to RAM (S2R), leading to incorrect cable type detection.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Modify the resume logic to re-evaluate the cable type after a suspend to RAM operation, ensuring the correct cable type is detected."}, {"cause": "ACPI commands are filtered incorrectly during resume, causing the ATA device to be misconfigured.", "code_file": "drivers/ata/libata-acpi.c", "fix_solution": "Adjust the ACPI command filtering logic to ensure necessary commands are not filtered out during resume from suspend to RAM."}, {"cause": "The power management callbacks do not properly restore the ATA device state after suspend to RAM.", "code_file": "drivers/base/power/main.c", "fix_solution": "Ensure that the power management callbacks for ATA devices correctly restore the device state, including cable detection, after resume."}, {"cause": "The ATA device initialization sequence does not account for changes in device state after suspend to RAM.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Update the error handling and initialization sequence to reinitialize the ATA device state, including cable detection, after resume."}], "input_tokens": 8945, "output_tokens": 292}
{"id": "11865", "paths": ["drivers/net/e100.c"], "predicts": ["drivers/net/e100.c", "drivers/net/phy/phy.c", "drivers/net/phy/phy_device.c", "include/linux/pm.h", "kernel/power/main.c"], "input_tokens_sum": 128726, "output_tokens_sum": 1603, "description": "Latest working kernel version: 2.6.27\nEarliest failing kernel version: 2.6.27\nDistribution: Gentoo\nHardware Environment: 2x750P3 1G RAM w/ \n\n00:14.0 Ethernet controller: Intel Corporation 82557/8/9 [Ethernet Pro 100] (rev 08)\n\nProblem Description:\nAs of kernel version 2.6.27, WOL has stopped working.  The box no longer powers on after the magic packet has been sent.  Rebooting using kernel-2.6.26*, WOL *does* work!\n\nSteps to reproduce:\n(Not needed.  Self Explanatory.)\n\n\nI noticed 3 lines of code in e100.c added/modified since 2.6.26*, however, I reversed 2 lines of code to 2.6.26 and the other line was just added an additional pointer, for which I left alone.  Recompiled, rebooted and WOL still didn't work using 2.6.27.  I'm guessing, the source of this bug lies elsewhere.", "title": "WOL for E100 Doesn't Work Anymore", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/intel/e100.c", "drivers/pci/pci.c", "drivers/base/power/sysfs.c"], "causes": [{"cause": "The Wake-on-LAN (WOL) functionality might be disabled due to changes in the power management settings for the network device.", "code_file": "drivers/net/ethernet/intel/e100.c", "fix_solution": "Ensure that the WOL settings are correctly initialized and enabled during the device setup and suspend operations."}, {"cause": "The device's ability to generate wakeup events might not be properly configured due to changes in the PCI power management capabilities.", "code_file": "drivers/pci/pci.c", "fix_solution": "Verify and ensure that the PCI device's PME (Power Management Event) capabilities are correctly set and that the device is allowed to wake up the system."}, {"cause": "The ethtool command might not be updating the 'may_wakeup' bit correctly, affecting the WOL functionality.", "code_file": "drivers/net/ethernet/intel/e100.c", "fix_solution": "Modify the ethtool operations to ensure that the 'may_wakeup' bit is set correctly when WOL is enabled."}, {"cause": "The system's power management settings might not be allowing the network device to wake up the system due to incorrect policy settings.", "code_file": "drivers/base/power/sysfs.c", "fix_solution": "Ensure that the sysfs 'wakeup' attribute is correctly reflecting the device's ability to wake up the system and is set to 'enabled' when WOL is configured."}], "input_tokens": 9134, "output_tokens": 335}
{"id": "11742", "paths": ["drivers/ide/ide-cd.c"], "predicts": ["drivers/ide/ide-dma.c", "drivers/ide/ide.c", "block/blk-core.c", "drivers/ata/ata_piix.c", "drivers/ata/libata-core.c", "drivers/ata/libata-sff.c", "kernel/dma.c"], "input_tokens_sum": 128015, "output_tokens_sum": 2170, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version:2.6.27\nDistribution: Debian Unstable\nHardware Environment: Laptop Acer 5920G with a Samsung CDDVDW TS-L632H connected through IDE \nSoftware Environment: KDE 3.5.9; k3b 1.0.5; Brasero\nProblem Description: I have compiled the 2.6.27 kernel using make oldconf, thus almost copying the passed 2.6.26.5 configuration. Since then, when I burn a CD the internal buffer in my DVD burner reaches 0% obliging k3b and brasero to slow down the writing speed. It happens even if I don't run any other application. I have noticed that the device buffer runs out even if the software buffer is full, like there was not a fast transfer from the software buffer to the device buffer. In the end, k3b reports a big amount of buffer under-runs (> 100).Everything works as expected with an older 2.6.26.5 kernel. What I need to do to help solving this bug? See you\n\nValerio\n\nSteps to reproduce: Using 2.6.27 kernel and k3b or brasero to burn a CD. It", "title": "Device buffer on a DVD multi standard writer runs out burning a CD", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "IDE", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-acpi.c"], "causes": [{"cause": "The introduction of bounce buffer handling in libata might be causing inefficient data transfer to the DVD writer, leading to buffer underruns.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Review and optimize the bounce buffer handling logic in ata_bounce_pio_xfer to ensure efficient data transfer rates, possibly by adjusting buffer sizes or transfer methods."}, {"cause": "Changes in PIO data transfer methods might have introduced inefficiencies or bugs affecting the data transfer speed to the DVD writer.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Investigate the ata_pio_sector function for any changes that might have affected data transfer efficiency and revert or optimize those changes."}, {"cause": "ACPI support changes in libata might be interfering with the IDE device's performance, causing buffer underruns.", "code_file": "drivers/ata/libata-acpi.c", "fix_solution": "Ensure that ACPI settings are correctly configured and do not interfere with IDE operations, possibly by adding a kernel parameter to disable ACPI for affected devices."}, {"cause": "The introduction of new ACPI-related functions might be causing unexpected behavior in IDE devices during data transfer.", "code_file": "drivers/ata/libata-acpi.c", "fix_solution": "Review the implementation of ACPI functions like ata_acpi_exec_tfs to ensure they do not negatively impact IDE device performance, and consider adding checks or fallbacks for non-ACPI compliant devices."}], "input_tokens": 10755, "output_tokens": 344}
{"id": "11735", "paths": ["drivers/ide/pci/delkin_cb.c"], "predicts": ["drivers/ide/pci/delkin_cb.c", "drivers/ide/ide.c", "kernel/power/disk.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "mm/page_io.c", "arch/x86/mm/ioremap.c"], "input_tokens_sum": 129024, "output_tokens_sum": 2111, "description": "Distribution:\ngentoo\nHardware Environment:\nx86 (Dell laptop, yenta cardbus), \"02:00.0 Mass storage controller [0180]: Workbit Corporation Device [1145:f021] (rev 01)\"\nProblem Description:\nThe delkin_cb driver works with ~3 mb/s performance, top shows the CPU in 98% wait state with heavy I/O. If you suspend to ram or disk, the system comes up but any further I/O to a CF card in the adapter will not complete, top shows ~100% wait state but commands to read from the card do not complete. pata_ninja32 not tested because it performs much worse than delkin_cb (~1 mb/s).\nSteps to reproduce: \n1. boot, mount a CF card through the adapter (or have root on the CF card, as I do)\n2. echo mem > /sys/power/state\n3. resume from sleep\n4. do I/O from the card, say \"ls /mnt/card\"\n5. <crickets chirp> ... top shows 100% wait state", "title": "delkin_cb fails after resume", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "IDE", "Hardware": "All Linux", "reranked_files": ["drivers/ide/delkin_cb.c", "drivers/base/power/main.c", "include/linux/pm.h"], "causes": [{"cause": "The delkin_cb driver does not properly handle the resume operation, leading to incomplete I/O operations after resuming from suspend.", "code_file": "drivers/ide/delkin_cb.c", "fix_solution": "Implement or correct the resume callback function to ensure the device is properly reinitialized after resume."}, {"cause": "The power management callbacks for the delkin_cb driver are not correctly implemented, causing the device to remain in a low-power state after resume.", "code_file": "drivers/base/power/main.c", "fix_solution": "Ensure that the resume_device function correctly restores the device state for delkin_cb, possibly by adding or fixing the resume callback in the driver's PM operations."}, {"cause": "The device's power state is not correctly updated during the resume process, leading to the system being stuck in a wait state.", "code_file": "drivers/base/power/main.c", "fix_solution": "Verify and update the device's power state transition logic in the dpm_resume and dpm_complete functions to ensure proper state restoration."}, {"cause": "The delkin_cb driver may not be handling interrupts correctly during the resume process, causing I/O operations to hang.", "code_file": "drivers/ide/delkin_cb.c", "fix_solution": "Review and correct the interrupt handling logic in the resume path to ensure that interrupts are properly re-enabled and handled."}, {"cause": "The system's power management framework may not be correctly invoking the delkin_cb driver's resume operations.", "code_file": "include/linux/pm.h", "fix_solution": "Ensure that the PM framework correctly associates and invokes the delkin_cb driver's resume operations by verifying the pm_ops structure and its usage."}], "input_tokens": 9132, "output_tokens": 392}
{"id": "11568", "paths": ["arch/x86/kernel/acpi/sleep.c"], "predicts": ["arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/reboot.c", "drivers/acpi/sleep/main.c", "kernel/power/main.c", "kernel/power/swsusp.c", "arch/x86/power/hibernate_64.c", "drivers/acpi/reboot.c", "kernel/power/poweroff.c"], "input_tokens_sum": 124366, "output_tokens_sum": 1980, "description": "Latest working kernel version: 2.6.26.5\nEarliest failing kernel version: 2.6.27-rc2 (haven't tested earlier versions)\nDistribution: Debian unstable\nHardware Environment: MSI AMD Socket 754 with VIA K8T800 and AMI BIOS\nSoftware Environment:\nProblem Description: Resume from S3 causes machine to reset itself.  \n\nSteps to reproduce:\nEnter S3 with \"echo mem > /sys/power/state\"\nTry to resume.", "title": "spontaneous reboot on resume with 2.6.27", "Kernel Version": "2.6.27-rc2", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "All Linux", "reranked_files": ["kernel/power/swsusp.c", "drivers/acpi/sleep/main.c", "arch/x86/kernel/acpi/processor.c", "drivers/base/power.c"], "causes": [{"cause": "The resume process from S3 state is not properly handling device states, leading to a reset.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Ensure devices are properly reset during resume by implementing a shutdown/reset mechanism similar to kexec."}, {"cause": "ACPI is not correctly setting the target sleep state, causing a mismatch during resume.", "code_file": "drivers/acpi/sleep/main.c", "fix_solution": "Introduce a set_target method in pm_ops to correctly pass the target sleep state to the ACPI core."}, {"cause": "The system is not correctly restoring processor state after waking up from S3.", "code_file": "arch/x86/kernel/acpi/processor.c", "fix_solution": "Ensure processor state is fully restored during the resume process by verifying the restoration logic."}, {"cause": "Device drivers are not properly handling suspend and resume callbacks, leading to inconsistent states.", "code_file": "drivers/base/power.c", "fix_solution": "Enhance the verbosity and error handling in device_suspend to identify drivers missing suspend/resume handlers."}], "input_tokens": 8992, "output_tokens": 264}
{"id": "11520", "paths": ["drivers/misc/eeepc-laptop.c"], "predicts": ["drivers/misc/eeepc-laptop.c"], "input_tokens_sum": 132962, "output_tokens_sum": 1983, "description": "Hardware Environment: EeePC\nProblem Description:\n\nThe hwmon sysfs-interface of the eeepc_laptop module doesn't provide the mandatory attribute \"name\", causing lm-sensors to ignore it.", "title": "eeepc_laptop hwmon missing name", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/misc/eeepc-laptop.c"], "causes": [{"cause": "The hwmon sysfs interface of the eeepc_laptop module is missing the 'name' attribute, which is required for the libsensors library to recognize the device.", "code_file": "drivers/misc/eeepc-laptop.c", "fix_solution": "Add a 'name' attribute to the hwmon sysfs interface by defining a show function for the name and adding it to the hwmon attributes."}, {"cause": "The hwmon device is not properly registered with the necessary attributes, leading to incomplete sysfs entries.", "code_file": "drivers/misc/eeepc-laptop.c", "fix_solution": "Ensure that the hwmon device registration includes all mandatory attributes, including 'name', by modifying the hwmon attribute group to include the 'name' attribute."}, {"cause": "The order of operations during module initialization or cleanup might be incorrect, leading to missing sysfs attributes.", "code_file": "drivers/misc/eeepc-laptop.c", "fix_solution": "Review and adjust the order of sysfs group creation and hwmon device registration to ensure all attributes are correctly initialized and available."}], "input_tokens": 6370, "output_tokens": 264}
{"id": "11399", "paths": ["drivers/watchdog/ib700wdt.c"], "predicts": ["drivers/watchdog/ib700wdt.c"], "input_tokens_sum": 127179, "output_tokens_sum": 955, "description": "Problem Description:\n\nSteps to a possible buffer_underflow bug in ib700wdt.c, function ibwdt_ioctl:\n\n1. new margin is loaded using get_user(new_margin, p) in case WDIOC_SETTIMEOUT in the function ibwdt_ioctl. Important: assume that new_margin == 30\n2. ibwdt_set_heartbeat(new_margin) is called\n3. the check \"if ((t < 0) || (t > 30))\" in ibwdt_set_heartbeat is not going to fail because t == 30 (t is new_margin)\n4. in the loop, the check wd_times[i] > t is never going to be true because none of the wd_times are greater than the value of t (i.e. 30)\n5. we are exiting the loop with i == -1 and therefore setting wd_margin to -1 in the line wd_margin = i;\n6. we are returning from ibwdt_set_heartbeat and wd_margin is -1\n7. we fall through to case WDIOC_GETTIMEOUT\n8. we access the wd_times array with wd_margin == -1 on line \"return put_user(wd_times[wd_margin], p);\"\n\nI found this bug using my own static checker for low-level systems software whose codename is Smack, which I am developing as a pa", "title": "(patch queued)possible buffer underflow in ib700wdt.c", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Watchdog", "Hardware": "All Linux", "reranked_files": ["drivers/watchdog/ib700wdt.c"], "causes": [{"cause": "The function ibwdt_set_heartbeat does not correctly handle the case where the calculated index i becomes -1, leading to an invalid access of the wd_times array.", "code_file": "drivers/watchdog/ib700wdt.c", "fix_solution": "Add a check after the loop in ibwdt_set_heartbeat to ensure i is not -1 before assigning it to wd_margin. If i is -1, set wd_margin to a valid default value or return an error."}, {"cause": "The logic in the loop within ibwdt_set_heartbeat does not account for the scenario where all elements in wd_times are less than or equal to the new_margin, resulting in an invalid index.", "code_file": "drivers/watchdog/ib700wdt.c", "fix_solution": "Modify the loop condition or add a fallback mechanism to ensure that wd_margin is set to a valid index even if no elements in wd_times are greater than new_margin."}, {"cause": "The function ibwdt_ioctl does not validate the result of ibwdt_set_heartbeat, allowing wd_margin to be set to an invalid value without error handling.", "code_file": "drivers/watchdog/ib700wdt.c", "fix_solution": "Add error handling in ibwdt_ioctl after calling ibwdt_set_heartbeat to check if wd_margin is valid before proceeding to WDIOC_GETTIMEOUT."}], "input_tokens": 677, "output_tokens": 314}
{"id": "11391", "paths": ["kernel/nsproxy.c"], "predicts": ["arch/x86/kernel/process.c", "arch/x86/kernel/signal_64.c", "arch/x86/kernel/signal_32.c", "kernel/signal.c", "kernel/exit.c"], "input_tokens_sum": 129977, "output_tokens_sum": 2004, "description": "Latest working kernel version: 2.6.26.3\n\nEarliest failing kernel version: 2.6.25.4 (didn't test with former kernels)\n\nDistribution: CentOS 5.1 (with Vanilla kernel from kernel.org)\n\nHardware Environment: several x86_64 plattforms (AMD Opteron, Intel Xeon)\n\nProblem Description:\n-------------------------------------\nBUG: unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\nIP: [<ffffffff8023d5d0>] do_notify_parent+0x66/0x194\nPGD 0\nOops: 0000 [1] SMP\nCPU 1\nModules linked in: ipv6 autofs4 hidp rfcomm l2cap bluetooth sunrpc dm_mirror dm_\nlog dm_multipath dm_mod video output sbs sbshc battery acpi_memhotplug ac lp sg\nfloppy button tg3 serio_raw parport_pc parport k8temp hwmon i2c_amd756 i2c_amd81\n11 i2c_core amd_rng shpchp pcspkr usb_storage 3w_9xxx sata_sil libata sd_mod scs\ni_mod raid456 async_xor async_memcpy async_tx xor ext3 jbd ehci_hcd ohci_hcd uhc\ni_hcd\nPid: 3800, comm: sshd Not tainted 2.6.26.3 #1\nRIP: 0010 [<ffffffff8023d5d0>]  [<ffffffff8023d5d0>] d", "title": "Kernel NULL pointer dereference in do_notify_parent()", "Kernel Version": "2.6.26", "Product": "Process Management", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["kernel/exit.c", "kernel/signal.c", "kernel/nsproxy.c", "kernel/cpuset.c"], "causes": [{"cause": "NULL pointer dereference in do_notify_parent() due to improper handling of task struct during process exit.", "code_file": "kernel/exit.c", "fix_solution": "Ensure the task struct is properly initialized and checked before accessing its members in do_notify_parent()."}, {"cause": "Race condition in signal handling leading to NULL pointer dereference when accessing task's signal structures.", "code_file": "kernel/signal.c", "fix_solution": "Add proper locking mechanisms around signal handling code to prevent race conditions."}, {"cause": "Improper handling of task namespaces during process exit, leading to NULL pointer dereference.", "code_file": "kernel/nsproxy.c", "fix_solution": "Ensure task namespaces are properly checked and handled during process exit to avoid dereferencing NULL pointers."}, {"cause": "Incorrect setting of task's mm->owner to NULL before calling cgroup_mm_owner_callbacks, leading to NULL dereference.", "code_file": "kernel/exit.c", "fix_solution": "Set mm->owner to NULL after calling cgroup_mm_owner_callbacks to prevent passing NULL pointers."}, {"cause": "Cpuset handling during process exit leading to NULL pointer dereference when accessing cpuset structures.", "code_file": "kernel/cpuset.c", "fix_solution": "Set exiting task's cpuset to a valid root cpuset instead of NULL to prevent dereferencing NULL pointers."}], "input_tokens": 8414, "output_tokens": 326}
{"id": "11331", "paths": ["drivers/misc/thinkpad_acpi.c"], "predicts": ["drivers/misc/thinkpad_acpi.c", "drivers/acpi/fan.c", "arch/x86/kernel/acpi/sleep.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "drivers/acpi/processor_idle.c", "drivers/acpi/power.c", "kernel/power/main.c", "kernel/power/process.c", "arch/x86/power/hibernate_32.c"], "input_tokens_sum": 126982, "output_tokens_sum": 1473, "description": "Distribution: Debian unstable\nHardware Environment: Thinkpad X31\nSoftware Environment: Debian unstable\nProblem Description:\nAfter waking the system from suspend to disk/ram, the fan speed is reset to the default value. As I understand things, the value should be cached and re-set to what I last set it to.\n\nSteps to reproduce:\n\n# echo \"options thinkpad_acpi fan_control=1\" >> /etc/modprobe.d/options\n# shutdown -r now\n\n# echo level 7 >! /proc/acpi/ibm/fan #fan will spin on fastest level, you will hear this\n# cat /proc/acpi/ibm/fan\nstatus:         enabled\nspeed:          4107\nlevel:          7\ncommands:       level <level> (<level> is 0-7, auto, disengaged, full-speed)\ncommands:       enable, disable\ncommands:       watchdog <timeout> (<timeout> is 0 (off), 1-120 (seconds))\ncommands:       speed <speed> (<speed> is 0-65535)\n# s2ram || s2disk\npress Fn-F4 or power button to wake system\n\n# cat /proc/acpi/ibm/fan\nstatus:         enabled\nspeed:          0\nlevel:          auto\ncommands:       le", "title": "Fan speed setting reset after suspend to disk/ram on Thinkpad X31", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c", "drivers/acpi/sleep.c"], "causes": [{"cause": "The fan speed setting is not being saved and restored correctly during the suspend and resume cycle.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Implement a mechanism to save the current fan speed setting before suspend and restore it after resume."}, {"cause": "The ACPI subsystem is not correctly handling the fan control state across suspend and resume transitions.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the ACPI subsystem saves and restores the fan control state during suspend and resume operations."}, {"cause": "The device power management callbacks for the ThinkPad fan are not correctly implemented to handle suspend and resume.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Add proper suspend and resume callbacks in the thinkpad_acpi driver to handle fan speed settings."}, {"cause": "The fan control settings are being reset to default due to missing or incorrect initialization after resume.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Initialize the fan control settings with the previously saved values during the resume process."}], "input_tokens": 9381, "output_tokens": 276}
{"id": "11329", "paths": ["drivers/hwmon/hwmon-vid.c"], "predicts": ["drivers/hwmon/w83627ehf.c", "drivers/hwmon/w83781d.c", "drivers/hwmon/w83791d.c", "include/linux/hwmon-sysfs.h", "drivers/watchdog/w83627hf_wdt.c"], "input_tokens_sum": 124382, "output_tokens_sum": 1485, "description": "Latest working kernel version: 2.6.27-rc2-git1\nEarliest failing kernel version: 2.6.27-rc2-git2\nDistribution: Debian Sid\nHardware Environment: Athlon 64 x2 4200+\nSoftware Environment: X86_64\nProblem Description: in git1 and previous, cpu0_vid is reported as 1475 (which is correct). Since git2, it is reported as 725\n\nSteps to reproduce: see in /sys/devices/platform/w83627hf.656/cpu0_vid\n\nAccording to this value, the sensors command reports ccpu0_vid as +0.725V\n\nThis problem occurs in rc2-git2 and was not present in rc2-git1, it is still present in rc3-git1\n\nRegards\n\nJean-Luc", "title": "Incorrect value in /sys/devices/platform/w83627hf.656/cpu0_vid", "Kernel Version": "2.6.27-rc3", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/hwmon/w83627hf.c", "drivers/hwmon/w83781d.c", "drivers/hwmon/lm78.c"], "causes": [{"cause": "The change in reported cpu0_vid value suggests a possible miscalculation or incorrect register read in the driver code for the w83627hf hardware monitoring chip.", "code_file": "drivers/hwmon/w83627hf.c", "fix_solution": "Review and correct the register read or conversion logic for the cpu0_vid value to ensure it matches the expected voltage representation."}, {"cause": "A potential regression introduced in the update from 2.6.27-rc2-git1 to 2.6.27-rc2-git2 might have altered the way VID values are interpreted or scaled.", "code_file": "drivers/hwmon/w83781d.c", "fix_solution": "Check for any changes in the VID handling logic between the two versions and revert or adjust them to restore correct functionality."}, {"cause": "The incorrect value could be due to an off-by-one error in the I/O region declaration affecting the VID register access.", "code_file": "drivers/hwmon/lm78.c", "fix_solution": "Ensure that the I/O region is correctly defined without any off-by-one errors that could affect register access."}, {"cause": "The issue might be related to a change in the initialization sequence or reset behavior of the chip, affecting the VID register state.", "code_file": "drivers/hwmon/w83781d.c", "fix_solution": "Review the initialization and reset logic to ensure that the VID register is correctly initialized and not inadvertently reset."}], "input_tokens": 5762, "output_tokens": 344}
{"id": "11323", "paths": ["block/genhd.c"], "predicts": ["block/genhd.c", "fs/proc/base.c", "fs/proc/proc_misc.c", "block/blk-core.c", "crypto/proc.c", "block/blk-sysfs.c", "include/linux/genhd.h", "include/linux/blkdev.h", "fs/block_dev.c", "kernel/power/disk.c"], "input_tokens_sum": 124543, "output_tokens_sum": 1741, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version: 2.6.27-rc1\nDistribution: Debian\nHardware Environment: Dell\nSoftware Environment:\nProblem Description: /proc/diskstats does not contain all the block devices it should. /sys/block has all the devices, but /proc/diskstats does not.\n\nSteps to reproduce: boot a system with >9 (10?) disk devices (24 block devices?)", "title": "/proc/diskstats does not contain all disk devices", "Kernel Version": "2.6.27-rc1", "Product": "File System", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["fs/proc/proc_misc.c", "block/genhd.c", "include/linux/blkdev.h", "fs/proc/diskstats.c"], "causes": [{"cause": "The /proc/diskstats file is not correctly iterating over all block devices, possibly due to a change in the way block devices are registered or iterated.", "code_file": "fs/proc/proc_misc.c", "fix_solution": "Ensure that the iteration over block devices in the devinfo_show function correctly includes all devices by checking the logic that determines the end of the list."}, {"cause": "Changes in the block device registration process might have affected the visibility of devices in /proc/diskstats.", "code_file": "block/genhd.c", "fix_solution": "Review and update the logic in the blkdev_show function to ensure all registered block devices are included in the output."}, {"cause": "A regression in the way block devices are added to the list that /proc/diskstats reads from, possibly due to changes in the block layer.", "code_file": "include/linux/blkdev.h", "fix_solution": "Verify and correct the data structures and methods used to maintain the list of block devices, ensuring they are correctly populated and accessed."}, {"cause": "The logic for displaying block devices in /proc/diskstats may have been inadvertently altered, leading to incomplete output.", "code_file": "fs/proc/diskstats.c", "fix_solution": "Check the logic responsible for outputting block device statistics and ensure it iterates over all devices correctly."}], "input_tokens": 8876, "output_tokens": 323}
{"id": "11242", "paths": ["drivers/accessibility/braille/braille_console.c"], "predicts": ["drivers/char/keyboard.c", "drivers/input/keyboard/atkbd.c", "drivers/video/console/fbcon.c", "drivers/input/input.c", "drivers/input/serio/i8042.c"], "input_tokens_sum": 127445, "output_tokens_sum": 1982, "description": "Latest working kernel version: 2.6.25.10\nEarliest failing kernel version: 2.6.26\nDistribution: Debian unstable\nHardware Environment: IBM Thinkpad X31\nSoftware Environment: Debian unstable\nProblem Description:\n\nI'm running my system without X11 in a fbcon console. Since the update to 2.6.26 the INSERT key is no longer working properly. It seems to lead to a very strange internal \"lock\": If INSERT is pressed, the arrow keys are no longer accepted. If I press INSERT again, the arrow keys work again. This bug is fairly annoying.\nIn X11 the INSERT key is handled properly. 2.6.25 works just fine. \n\nSteps to reproduce:\nRun elinks with an arbitary web site; scroll a few lines up with the INSERT key.", "title": "Regression with handling the DEL key on Thinkpad X31", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Console/Framebuffers", "Hardware": "All Linux", "reranked_files": ["drivers/input/keyboard/atkbd.c", "drivers/char/keyboard.c", "drivers/char/sysrq.c"], "causes": [{"cause": "The keyboard driver may not be correctly handling the state changes for the INSERT key, causing it to interfere with other key inputs.", "code_file": "drivers/input/keyboard/atkbd.c", "fix_solution": "Ensure that the state of the INSERT key is properly reset after it is pressed, preventing it from affecting other keys like the arrow keys."}, {"cause": "The keyboard input handling might be incorrectly interpreting the INSERT key as a modifier key, leading to unexpected behavior.", "code_file": "drivers/char/keyboard.c", "fix_solution": "Modify the key handling logic to ensure that the INSERT key is not treated as a modifier and does not alter the behavior of other keys."}, {"cause": "Changes in the sysrq handling might be affecting the keyboard input processing, causing the INSERT key to lock other keys.", "code_file": "drivers/char/sysrq.c", "fix_solution": "Review and adjust the sysrq key handling to ensure it does not interfere with normal keyboard input processing, especially for non-sysrq keys."}, {"cause": "The keyboard driver might not be correctly handling keys without hardware release events, causing the INSERT key to lock other keys.", "code_file": "drivers/input/keyboard/atkbd.c", "fix_solution": "Implement proper handling for keys that do not generate hardware release events to ensure they do not affect the state of other keys."}], "input_tokens": 10063, "output_tokens": 321}
{"id": "11212", "paths": ["drivers/hwmon/abituguru3.c"], "predicts": ["drivers/hwmon/abituguru3.c", "include/linux/hwmon.h"], "input_tokens_sum": 178738, "output_tokens_sum": 4962, "description": "Latest working kernel version: 2.6.25\nEarliest failing kernel version: 2.6.26\nDistribution: Debian lenny\nHardware Environment: ABit IP35-pro Bios rev 16 (2008-march-18)\nSoftware Environment: Linux 2.6.26 #2 SMP i686\nabituguru3 is the first module loaded on boot (added in /etc/modules)\n\nProblem Description:\nuguru3 is not recognized on boot since i upgraded to kernel 2.6.26\nbut it works after force.\n\nSteps to reproduce:\n$ modprobe abituguru3 ; dmesg | tail -1\nabituguru3: no Abit uGuru3 found, data = 0x00, cmd = 0x4C\n$ modprobe abituguru3 ; dmesg | tail -2\nabituguru3: Assuming Abit uGuru3 is present because of \"force\" parameter\nabituguru3: found Abit uGuru3, motherboard ID: 001A (Abit IP35 Pro)\n$ rmmod abituguru3\n$ modprobe abituguru3 ; dmesg | tail -1\nabituguru3: found Abit uGuru3, motherboard ID: 001A (Abit IP35 Pro)", "title": "PROBLEM: abituguru3 module does not recognize my ip35 pro since 2.6.26", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/hwmon/abituguru3.c", "drivers/hwmon/hwmon.c"], "causes": [{"cause": "The abituguru3 module's detection logic may have been altered or broken in the update from kernel version 2.6.25 to 2.6.26, causing it to fail to recognize the Abit IP35 Pro motherboard on boot.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Review and update the detection logic in the abituguru3 module to ensure it correctly identifies the Abit IP35 Pro motherboard without needing the 'force' parameter."}, {"cause": "Changes in the initialization sequence or timing in the kernel 2.6.26 might be affecting the abituguru3 module's ability to detect the hardware during boot.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Adjust the initialization sequence or add delays if necessary to ensure the hardware is ready for detection when the module is loaded."}, {"cause": "The module parameters or configuration for abituguru3 might have been altered or not properly set in the new kernel version, affecting its operation.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Ensure that the module parameters are correctly set and documented, and verify that any changes in configuration handling are properly implemented."}, {"cause": "A regression in the hardware monitoring subsystem or related dependencies might be causing the abituguru3 module to fail in detecting the hardware.", "code_file": "drivers/hwmon/hwmon.c", "fix_solution": "Investigate and address any regressions or changes in the hardware monitoring subsystem that could affect the abituguru3 module's operation."}], "input_tokens": 5948, "output_tokens": 377}
{"id": "11178", "paths": ["drivers/pci/msi.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "kernel/power/disk.c", "kernel/power/swsusp.c", "drivers/ata/ata_piix.c", "arch/x86/power/hibernate_64.c", "arch/x86/pci/acpi.c", "block/blk-core.c", "kernel/power/snapshot.c"], "input_tokens_sum": 128493, "output_tokens_sum": 2403, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version: 2.6.27-rc1\nDistribution: Ubuntu Hardy (8.04)\nHardware Environment:Intel C2D.  Two hard drives.\nSoftware Environment:64 bit kernel & userspace.\nProblem Description:\n\nDuring hibernation I get errors on the second hard drive, including\n\nata3 revalidation failed errno=-5\n\nHibernation continues anyway (the swap partition is on the first hard drive).  I think these messages don't show up in dmesg afterwards because they happen too late in the hibernation process.\n\nI get much the same errors on resume as well, which do show up in dmesg.\n\nSteps to reproduce:\nBoot in \"rescue mode\" (didn't try init=/bin/bash) and use \"echo disk > /sys/power/state\"", "title": "Secondary hard drive fails during both hibernation and resume.", "Kernel Version": "2.6.27-rc1", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/base/power/main.c", "drivers/pci/pci.c", "include/linux/pm.h", "kernel/power/main.c"], "causes": [{"cause": "The introduction of new PM operations in the kernel may have led to incorrect handling of device states during hibernation and resume, particularly affecting secondary hard drives.", "code_file": "drivers/base/power/main.c", "fix_solution": "Ensure that the PM operations for hibernation and resume correctly handle secondary hard drives by verifying the implementation of the freeze and thaw callbacks."}, {"cause": "Changes in the PCI subsystem related to power management may have affected the initialization or revalidation of secondary hard drives during hibernation and resume.", "code_file": "drivers/pci/pci.c", "fix_solution": "Review and adjust the PCI power management callbacks to ensure proper handling of secondary hard drives during hibernation and resume."}, {"cause": "The new PM framework may not correctly handle interrupts during hibernation and resume, leading to revalidation errors for secondary hard drives.", "code_file": "include/linux/pm.h", "fix_solution": "Verify and correct the implementation of the pm_noirq_ops structure to ensure that interrupts are properly managed during hibernation and resume."}, {"cause": "The device power management state transitions may not be correctly implemented for secondary hard drives, causing revalidation errors during hibernation and resume.", "code_file": "kernel/power/main.c", "fix_solution": "Ensure that the device power management state transitions are correctly implemented for secondary hard drives, particularly focusing on the DPM_OFF and DPM_ON states."}], "input_tokens": 9095, "output_tokens": 334}
{"id": "11154", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/delegation.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "fs/nfs/super.c", "net/sunrpc/clnt.c", "net/sunrpc/socklib.c", "net/sunrpc/svc.c", "net/sunrpc/svcsock.c", "net/sunrpc/xprt.c"], "input_tokens_sum": 121272, "output_tokens_sum": 2107, "description": "Latest working kernel version: 2.6.24\nEarliest failing kernel version: 2.6.25\nDistribution: debian etch\nProblem Description:\n\nI'm getting frequent NFS hangs when running 2.6.25 or 2.6.26 on my NFS clients, while 2.6.24 seems to work fine. The hangs most commonly (but not always) happen after a suspend/resume cycle on the client. The client is pingable from the server during the hangs, but the clients can't access their NFS mounted rootfs. 2.6.25 based clients always recover after some time (varies from just seconds to 5 or 10 minutes). 2.6.26 based clients apparently never recover.\n\nHere are a few more details about my setup:\n\n* The NFS server is a linux host (x86-64) running 2.6.22.19;\n\n* I have two diskless clients using different hardware, one is an old\n  AMD K7 with intel pro/100 adapter, the other is x86-64 with on-board\n  intel e1000e networking.\n\n* The clients boot from a small initrd and mount their rootfs using\n  NFS3 over TCP. The initial mounting is done with \"nfsmount -o ro", "title": "NFS hangs with 2.6.25/2.6.26 despite server being reachable", "Kernel Version": "2.6.25", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["net/sunrpc/xprt.c", "net/sunrpc/svcsock.c", "fs/nfs/nfs3proc.c", "fs/nfs/inode.c"], "causes": [{"cause": "NFS client may be experiencing collisions in the server's reply cache due to insufficient entropy in selecting port and xid.", "code_file": "net/sunrpc/xprt.c", "fix_solution": "Ensure that more entropy is added when selecting port and xid for NFS client by using get_random_bytes and combining it with net_random."}, {"cause": "Temporary sockets on the NFS client may not be closing properly, leading to resource exhaustion and hangs.", "code_file": "net/sunrpc/svcsock.c", "fix_solution": "Modify the condition in svc_age_temp_sockets to ensure that unused sockets are closed properly by checking if sk_inuse is less than or equal to zero."}, {"cause": "NFS client may not be handling the suspend/resume cycle properly, leading to stale connections or state.", "code_file": "fs/nfs/nfs3proc.c", "fix_solution": "Implement logic to reinitialize or refresh NFS client state after a suspend/resume cycle to ensure connections are valid."}, {"cause": "NFS client may not be updating the mtime attribute correctly, leading to stale cache and hangs.", "code_file": "fs/nfs/inode.c", "fix_solution": "Move the mtime comparison outside the data_unstable check in nfs_refresh_inode to ensure mtime is updated correctly."}], "input_tokens": 9897, "output_tokens": 314}
{"id": "11141", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "drivers/power/power_supply_core.c", "include/linux/power_supply.h", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/pci_root.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "init/main.c"], "input_tokens_sum": 162758, "output_tokens_sum": 6832, "description": "Latest working kernel version:2.6.26-git8\nEarliest failing kernel version:2.6.26-git1\nDistribution:Slackware\nHardware Environment:Dell i1501\nSoftware Environment:\nProblem Description:\nhere is my full dmesg:\n[    0.000000] Linux version 2.6.26-g6-+-05253-g14b395e (grissiom@grissiom_slackware) (gcc version 4.2.3) #35 SMP PREEMPT Mon Jul 21 22:04:52 CST 2008\n[    0.000000] BIOS-provided physical RAM map:\n[    0.000000]  BIOS-e820: 0000000000000000 - 000000000009dc00 (usable)\n[    0.000000]  BIOS-e820: 000000000009dc00 - 00000000000a0000 (reserved)\n[    0.000000]  BIOS-e820: 00000000000ce000 - 0000000000100000 (reserved)\n[    0.000000]  BIOS-e820: 0000000000100000 - 0000000037e70000 (usable)\n[    0.000000]  BIOS-e820: 0000000037e70000 - 0000000037e80000 (ACPI data)\n[    0.000000]  BIOS-e820: 0000000037e80000 - 0000000037f00000 (ACPI NVS)\n[    0.000000]  BIOS-e820: 0000000037f00000 - 0000000040000000 (reserved)\n[    0.000000]  BIOS-e820: 00000000e0000000 - 00000000f0000000 (reserved)\n[    0", "title": "no battery or DC status - Dell i1501", "Kernel Version": "2.6.26", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "drivers/acpi/glue.c"], "causes": [{"cause": "The ACPI battery driver does not correctly update the battery status after a suspend/resume cycle, leading to incorrect battery state reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a resume method in the ACPI battery driver to check and update the battery status after a resume from suspend."}, {"cause": "The ACPI subsystem may not be correctly handling changes in power state, such as battery removal or insertion during suspend, leading to incorrect status reporting.", "code_file": "drivers/acpi/power.c", "fix_solution": "Ensure that the ACPI power management code correctly updates the power state information during suspend/resume cycles."}, {"cause": "The ACPI driver model flags may not be correctly set, causing the system to ignore changes in battery status during runtime.", "code_file": "drivers/acpi/glue.c", "fix_solution": "Ensure that the ACPI driver model flags are correctly initialized and updated to reflect the current hardware state."}, {"cause": "The ACPI battery technology reporting may be incorrect due to trailing spaces in the reported strings, leading to misinterpretation of battery type.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Use strncasecmp to compare battery technology strings, ignoring trailing spaces."}], "input_tokens": 9939, "output_tokens": 302}
{"id": "11139", "paths": ["arch/sparc64/kernel/time.c"], "predicts": ["drivers/cpufreq/cpufreq.c", "include/linux/cpufreq.h", "arch/sparc64/kernel/us2e_cpufreq.c", "arch/sparc64/kernel/power.c", "kernel/notifier.c", "init/main.c"], "input_tokens_sum": 128144, "output_tokens_sum": 1827, "description": "Latest working kernel version: 2.6.24.2\nEarliest failing kernel version: 2.6.26\nDistribution: Debian Sid\nHardware Environment: Sun E450/2x CPU 400Mhz/1GB Ram\nSoftware Environment: Sid\nProblem Description:\nAfter I compile 2.6.26 an boots I get this:\n------------[ cut here ]------------                                            \nWARNING: at drivers/cpufreq/cpufreq.c:1391 cpufreq_register_notifier+0x50/0x60()\nModules linked in:                                                              \nCall Trace:                                                                     \n [0000000000605270] cpufreq_register_notifier+0x58/0x60                         \n [00000000007708e0] start_kernel+0x1f0/0x324                                    \n [0000000000680e08] auxio_probe+0x0/0xe8                                        \n [0000000000000000] 0x8                                                         \n---[ end trace 139ce121c98e96c9 ]---\n\nSteps to reproduce:\nCompile kernel with cpufreq enabled and boot.", "title": "warning in cpufreq.c on E450", "Kernel Version": "2.6.26", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq.c"], "causes": [{"cause": "The warning is likely due to improper initialization or registration of notifier chains in cpufreq.c, possibly related to the transition from using notifier_chain_register to blocking_notifier_chain_register.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the notifier chains are properly initialized using BLOCKING_NOTIFIER_HEAD and that all registrations use blocking_notifier_chain_register."}, {"cause": "The warning might be caused by a missing or incorrect locking mechanism around the notifier chain registration, leading to race conditions.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Add appropriate locking mechanisms, such as mutexes, around the notifier chain registration and unregistration to prevent race conditions."}, {"cause": "The issue could be due to a mismatch in the expected and actual notifier block structures, possibly due to changes in the notifier chain API.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Verify that the notifier block structures are correctly defined and match the expected format for the blocking notifier chain API."}, {"cause": "The warning may be triggered by an incorrect or missing return value check after notifier chain registration, leading to unexpected behavior.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the return values of blocking_notifier_chain_register calls are checked and handled appropriately to catch any errors during registration."}], "input_tokens": 9386, "output_tokens": 337}
{"id": "11104", "paths": ["net/mac80211/mlme.c"], "predicts": ["drivers/net/wireless/iwlwifi/iwl3945-base.c", "drivers/net/wireless/iwlwifi/iwl-3945.c", "drivers/net/wireless/iwlwifi/iwl-debugfs.c", "drivers/net/wireless/iwlwifi/iwl-core.h", "drivers/net/wireless/iwlwifi/iwl-helpers.h", "net/ieee80211/ieee80211_crypt_wep.c", "net/mac80211/wep.c", "kernel/printk.c", "lib/ratelimit.c", "net/wireless/wext.c"], "input_tokens_sum": 129494, "output_tokens_sum": 2790, "description": "Latest working kernel version: 2.6.25.4\nEarliest failing kernel version: 2.6.26\nDistribution: Debian Sid\nHardware Environment: Fujitsu-Siemens Lifebook E8110, T2400, IWL3945\nSoftware Environment: Gnome 2.22\nProblem Description:\n\nAfter configuring the interface to Ad-hoc mode and WEP, when the remote station tries to connect, the dmesg gets flooded by iwlwifi, and shortly afterwards the remote client disconnects.\n\nSteps to reproduce:\n\n/sbin/iwconfig $WIFI mode ad-hoc \n/sbin/iwconfig $WIFI essid $SSID channel 3\n/sbin/iwconfig $WIFI key s:$PASS", "title": "iwlwifi: printk flood in ad-hoc mode + WEP", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/iwlwifi/iwl3945-base.c", "drivers/net/wireless/iwlwifi/iwl-3945-commands.h"], "causes": [{"cause": "The association ID check is incorrectly applied in ad-hoc mode, causing unnecessary packet drops.", "code_file": "drivers/net/wireless/iwlwifi/iwl3945-base.c", "fix_solution": "Modify the condition to skip the association ID check in ad-hoc mode by ensuring the check is only applied in station mode."}, {"cause": "Excessive logging in the iwlwifi driver when operating in ad-hoc mode with WEP, leading to a printk flood.", "code_file": "drivers/net/wireless/iwlwifi/iwl3945-base.c", "fix_solution": "Reduce the logging level or frequency of the debug messages related to association status in ad-hoc mode."}, {"cause": "Incorrect handling of WEP encryption status in ad-hoc mode, potentially causing connection issues.", "code_file": "drivers/net/wireless/iwlwifi/iwl-3945-commands.h", "fix_solution": "Ensure that the WEP encryption status is correctly checked and handled in the ad-hoc mode logic."}, {"cause": "Race condition in the initialization of the wireless interface in ad-hoc mode, leading to unstable connections.", "code_file": "drivers/net/wireless/iwlwifi/iwl3945-base.c", "fix_solution": "Implement proper synchronization mechanisms to ensure that the initialization process is completed before handling connections."}], "input_tokens": 11152, "output_tokens": 325}
{"id": "10976", "paths": ["fs/jbd/checkpoint.c"], "predicts": ["fs/ext3/ext3_jbd.c", "fs/jbd/commit.c", "fs/ext3/balloc.c", "fs/ext3/inode.c", "fs/ext3/super.c", "kernel/softlockup.c"], "input_tokens_sum": 125498, "output_tokens_sum": 2284, "description": "Distribution: Debian sid (unstable)\nHardware Environment: qemu x86\nSoftware Environment: Minimal Debian sid\nProblem Description:\n\nMounting one of the attached intentionally corrupted ext3 filesystems and accessing it causes a soft lockup. I believe they probably are the same bug (both happen in __log_wait_for_space()), but the backtraces vary quite a bit so I attach two test cases.\n\nMy kernel is 2.6.25.8 + three patches posted by Duane Griffin for #10882, namely (I hope I understand the git terminology right, at least you can grep lkml archives for these):\n  - 6ae4ecf..8019bf2\n  - 7712682..bc030f4\n  - 0b8cf80..ea0236b\n\n\n\nSteps to reproduce:\n\n1. bunzip2 one of the filesystem images\n2. mount fs.img /mnt\n3. ls /mnt", "title": "Soft lockup on (intentionally) corrupted filesystem", "Kernel Version": "2.6.25", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/jbd/transaction.c", "fs/ext3/super.c", "fs/ext3/inode.c"], "causes": [{"cause": "The function __log_wait_for_space() in the ext3 journaling code may not handle corrupted filesystem images properly, leading to a soft lockup.", "code_file": "fs/jbd/transaction.c", "fix_solution": "Add checks to handle corrupted filesystem images gracefully by adding timeout or error handling in __log_wait_for_space()."}, {"cause": "The ext3_check_descriptors function may not correctly handle corrupted group descriptors, leading to a soft lockup when accessing the filesystem.", "code_file": "fs/ext3/super.c", "fix_solution": "Improve the error handling in ext3_check_descriptors to ensure it can handle corrupted descriptors without causing a lockup."}, {"cause": "The inode table check in ext3_check_descriptors might be off by one, causing incorrect handling of corrupted filesystems.", "code_file": "fs/ext3/super.c", "fix_solution": "Adjust the inode table check to correctly account for the last block in the group, as suggested in the patch by Eric Sandeen."}, {"cause": "The ext3 error handling mechanism might not be robust enough to prevent repeated errors from causing a soft lockup.", "code_file": "fs/ext3/super.c", "fix_solution": "Implement a mechanism to suppress repeated error messages after the initial error has been reported, as suggested by Stephen Tweedie."}, {"cause": "The ext3 filesystem may not handle large or corrupted inode block counts properly, leading to transaction issues.", "code_file": "fs/ext3/inode.c", "fix_solution": "Ensure that the blocks_for_truncate function correctly calculates the number of blocks needed, even for corrupted inodes."}], "input_tokens": 10030, "output_tokens": 387}
{"id": "10860", "paths": ["drivers/ata/sata_uli.c"], "predicts": ["drivers/ata/sata_uli.c", "drivers/ata/libata-core.c", "drivers/ata/libata-sff.c", "block/blk-core.c", "block/genhd.c", "drivers/ata/libata-eh.c", "kernel/irq/handle.c", "kernel/softirq.c", "arch/x86/kernel/pci-dma.c", "arch/x86/pci/legacy.c"], "input_tokens_sum": 129020, "output_tokens_sum": 2054, "description": "Latest working kernel version:2.6.25.4\nEarliest failing kernel version:2.6.24-rc4\nalso fails with -rc5 I was wating for, previous rcs not tested\nDistribution: Bluewhite64 (64 bits slackware)\nHardware Environment: Athlon64 X2 / Ali 1689 north 1563 south\n+ bt848 v4l + PATA and SATA disk (SATA on sata_uli)\nSeems to be related to sata disk detection (see below).\n\nSoftware Environment:\nnone\n\nProblem Description:\nthe computer freeze totally at boot after SATA disk detection.\nI append 2.6.25.4 dmesg, lspci and lsusb.\nThe CPU is not 100% (otherwise I could hear the fan going crazy), the keayboard is dead (unable to scroll the console up or down). Nothings happen.\n\nThe console shows somethings similar to the 2.6.25.4 logs, but hangs after those lines:\nhda: cache flushes not supported\n hda: hda1 hda2\nhdd: ATAPI 40X DVD-ROM DVD-R-RAM CD-R/RW drive, 2048kB Cache\nUniform CD-ROM driver Revision: 3.20\nDriver 'sd' needs updating - please use bus_type methods\nsata_uli 0000:00:0e.1: version 1.3\nACPI: PC", "title": "total system freeze at boot with 2.6.26-rc", "Kernel Version": "2.6.26-rc2", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/sata_uli.c", "drivers/ata/libata-eh.c", "drivers/acpi/power.c"], "causes": [{"cause": "The system freeze is likely due to improper handling of SATA cable detection, which may cause the system to hang during the initialization of the SATA devices.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Ensure that the cable detection logic is correctly implemented and that the identify sequence is handled properly to avoid hangs. This may involve revisiting the cable_detect method and ensuring it is correctly invoked and handled."}, {"cause": "The freeze could be caused by a regression in the SATA ULI driver, which may not be handling the initialization sequence correctly for the specific hardware configuration.", "code_file": "drivers/ata/sata_uli.c", "fix_solution": "Review and update the initialization sequence in the sata_uli driver to ensure compatibility with the hardware and proper handling of the SATA devices during boot."}, {"cause": "The issue might be related to the changes in the error handling mechanism for ATA devices, which could lead to a deadlock or hang if not managed correctly.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Examine the error handling paths and ensure that all potential error conditions are handled gracefully without causing a system hang."}, {"cause": "The problem may stem from the changes in the hotplug polling mechanism, which could interfere with the normal boot process if not correctly synchronized.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Ensure that the hotplug polling mechanism is correctly synchronized with the boot process and does not interfere with the initialization of the SATA devices."}, {"cause": "The freeze could be due to incorrect handling of the ACPI power management events during the initialization of the SATA devices.", "code_file": "drivers/acpi/power.c", "fix_solution": "Review the ACPI power management code to ensure that it correctly handles power events during the initialization of the SATA devices, preventing any potential hangs."}], "input_tokens": 10008, "output_tokens": 437}
{"id": "10836", "paths": ["drivers/input/serio/serio.c"], "predicts": ["drivers/input/touchscreen/elo.c", "kernel/module.c", "include/linux/module.h", "lib/kobject.c", "lib/klist.c"], "input_tokens_sum": 120503, "output_tokens_sum": 1301, "description": "Latest working kernel version: n/a\nEarliest failing kernel version:  2.6.26-rc4-git2\nDistribution: opensuse 10.1\nHardware Environment: x86 / p4 /gigabyte mobo\nSoftware Environment:\nProblem Description:\n\nelo driver seems to have issues when unloading - at least on system without elo touchscreen attached\n\n[  119.319962] BUG: unable to handle kernel paging request at f8cabfcc\n[  119.319962] IP: [<c0269171>] driver_attach+0x3/0x16\n[  119.319962] *pde = 37e08067 *pte = 00000000\n[  119.319962] Oops: 0000 [#1] SMP\n[  119.319962] Modules linked in: psmouse vboxdrv ipv6 button battery ac loop dm _mod md_mod mousedev evdev rtc_cmos rtc_core rtc_lib 8250_pnp e100 mii ehci_hcd uhci_hcd intel_agp usbcore agpgart i2c_i801 rng_core i2c_core iTCO_wdt iTCO_vend or_support parport_pc lp parport 8250 serial_core edd fan thermal processor ther mal_sys hwmon sg megaraid_mbox sr_mod cdrom megaraid_mm ata_piix libata dock sd_ mod scsi_mod [last unloaded: elo]\n[  119.319962]\n[  119.319962] Pid: 121, comm: kse", "title": "ELO serial touchscreen driver unload issue", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Serial", "Hardware": "All Linux", "reranked_files": ["drivers/input/touchscreen/elo.c"], "causes": [{"cause": "The elo driver does not properly handle the case where no touchscreen is attached, leading to a null pointer dereference during driver unload.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Add a check in the driver unload function to ensure that resources are only freed if they were successfully allocated during initialization."}, {"cause": "The elo driver might not be correctly decrementing its usage count, leading to an attempt to unload while still in use.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Ensure that the module usage count is properly decremented in the driver detach function to prevent unloading while the driver is still in use."}, {"cause": "The elo driver may not be properly unregistering its device or input handlers, causing a dangling pointer when the module is unloaded.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Ensure that all registered devices and input handlers are properly unregistered in the driver unload function."}, {"cause": "The elo driver might be accessing hardware resources that are not present, leading to an invalid memory access.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Add checks to ensure that hardware resources are only accessed if they are present and initialized."}], "input_tokens": 10049, "output_tokens": 306}
{"id": "10695", "paths": ["drivers/acpi/ac.c"], "predicts": ["drivers/acpi/ac.c", "drivers/acpi/battery.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "arch/x86/kernel/acpi/processor.c"], "input_tokens_sum": 118287, "output_tokens_sum": 1668, "description": "Latest working kernel version:2.6.22\nEarliest failing kernel version:\nDistribution: Mandriva\nHardware Environment: Sony vaio fz315s\nProblem Description:\nWhen the ac_adapter is disconnected, acpi in theory should generate 2 events, \n\nac_adapter AC 00000080 00000000\nbattery BAT0 00000080 00000001\n\nbut in my case it only generates the BAT0 event.\n\nSteps to reproduce:\nInstall a 2.6.24 kernel, execute acpi_listen and plug/unplug the ac_adapter.", "title": "no AC status notification", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/ac.c"], "causes": [{"cause": "The ACPI AC adapter driver is not generating the AC adapter event when the adapter is unplugged.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Ensure that the acpi_ac_notify function correctly handles the ACPI_AC_NOTIFY_STATUS event and generates the appropriate AC adapter event."}, {"cause": "The ACPI event handler is not properly registered or invoked for AC adapter status changes.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Verify that the acpi_install_notify_handler function is correctly set up to handle AC adapter events and that the handler is properly invoked."}, {"cause": "The AC adapter state is not being updated correctly in the ACPI subsystem.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Check the acpi_ac_get_state function to ensure it correctly updates the AC adapter state and triggers the necessary events."}, {"cause": "The ACPI event generation logic is not triggering the AC adapter event due to a missing or incorrect condition.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Review the logic in acpi_ac_notify to ensure that all conditions for generating an AC adapter event are met and correctly implemented."}, {"cause": "The ACPI subsystem is not properly notifying user-space of AC adapter status changes.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Ensure that the acpi_bus_generate_event function is called with the correct parameters to notify user-space of AC adapter status changes."}], "input_tokens": 9352, "output_tokens": 355}
{"id": "10590", "paths": ["drivers/net/usb/rndis_host.c"], "predicts": ["include/linux/usb/rndis_host.h", "drivers/usb/core/usb.c", "drivers/usb/core/hcd.c", "drivers/usb/class/cdc-acm.c", "drivers/usb/core/hub.c", "include/linux/netdevice.h"], "input_tokens_sum": 125768, "output_tokens_sum": 1845, "description": "Latest working kernel version: ???\nEarliest failing kernel version: ???, but fails with 2.6.24 too\nDistribution: Debian unstable\nHardware Environment: AMD64 Sempron on a VIA board, HTC P3600 \"phone\" with Samsung SC32442B processor\nSoftware Environment: SynCE 0.11 (host), Microsoft\u00ae Windows Mobile\u00ae 5.0 (phone)\n\nProblem Description: When I connect my hype phone thingy to my computer, the rdnis_host driver is loaded, but registration of the device fails, with the following logs:\n\n[17069.106611] usb 2-1: new full speed USB device using uhci_hcd and address 7\n[17069.228636] usb 2-1: configuration #1 chosen from 1 choice\n[17069.232878] usb 2-1: New USB device found, idVendor=0bb4, idProduct=0b05\n[17069.232884] usb 2-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[17069.232887] usb 2-1: Product: Generic RNDIS\n[17069.232890] usb 2-1: Manufacturer: HTC\n[17069.232892] usb 2-1: SerialNumber: ********-****-****-****-************\n[17069.367902] usbcore: registered new interface driver ", "title": "rndis_host fails to register HTC P3600 device", "Kernel Version": "2.6.25", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/usb/rndis_host.c", "drivers/usb/core/usb.c", "net/core/dev.c", "drivers/usb/core/message.c"], "causes": [{"cause": "The rndis_host driver may not be correctly handling the USB device registration process for the HTC P3600, possibly due to a missing or incorrect device ID in the driver.", "code_file": "drivers/net/usb/rndis_host.c", "fix_solution": "Add the specific device ID for the HTC P3600 to the list of supported devices in the rndis_host driver."}, {"cause": "The USB core might not be correctly initializing the device due to a misconfiguration or missing support for the specific USB interface used by the HTC P3600.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Ensure that the USB core properly recognizes and initializes the HTC P3600 by adding necessary configurations or handling for its USB interface."}, {"cause": "The network interface registration might be failing due to incorrect handling of the network device structure during the initialization process.", "code_file": "net/core/dev.c", "fix_solution": "Review and correct the network device registration process to ensure that all necessary fields are properly initialized and registered."}, {"cause": "The USB device might not be correctly recognized due to a missing or incorrect USB descriptor parsing in the USB subsystem.", "code_file": "drivers/usb/core/message.c", "fix_solution": "Update the USB descriptor parsing logic to correctly handle the descriptors provided by the HTC P3600."}], "input_tokens": 7983, "output_tokens": 318}
{"id": "10507", "paths": ["drivers/ata/ahci.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "drivers/ata/ata_generic.c", "drivers/ata/ata_piix.c", "include/linux/libata.h", "include/linux/ata.h"], "input_tokens_sum": 121060, "output_tokens_sum": 2168, "description": "Latest working kernel version: 2.6.22.9 and 2.6.23.17\n\nEarliest failing kernel version: 2.6.24\n\nDistribution: Ubuntu x86_64\n\nHardware Environment: Asus M2R32-MVP 580X SB600 (AM2)\n                      AMD X2 4000+\n                      4GB DDR2\n                      SATAII HDD\n                      SATA DVD R/W\n\nSoftware Environment: Ubuntu Gutsy w/ distribution kernel (2.6.22-14)\n\nProblem Description: All 2.6.24 and 2.6.25 kernels fail to boot properly, with the following error looping indefinitely:\n\nata1.00: failed to IDENTIFY (I/O error, err_mask=0x4)\nata2.00: failed to IDENTIFY (I/O error, err_mask=0x4)\n\nThe above correspond to my two SATA physical drives.  All 2.6.22 and 2.6.23 kernels work perfectly on this same machine.  Was there some type of change starting with the 2.6.24 kernels that is rendering my PC inoperable?  \nI have tried looking for similar reports on this, and so far I have only found one entry on the mailing list that deals with the same issue.  The problem was app", "title": "Kernel fails to properly identify SATA drives", "Kernel Version": "2.6.24", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-eh.c", "drivers/ata/libata-core.c", "drivers/ata/pata_it821x.c"], "causes": [{"cause": "The reset sequencing changes in libata might be causing the SATA drives to fail identification due to timing issues.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Revert the reset sequencing changes to the previous behavior or adjust the reset timeouts to better accommodate the affected hardware."}, {"cause": "The diagnostic failure handling in libata might be incorrectly flagging the drives as failed during identification.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Modify the diagnostic failure handling to be more lenient or add specific quirks for the affected hardware to bypass the diagnostic check."}, {"cause": "The changes in handling of poorly compatible emulations might be affecting the identification of SATA drives.", "code_file": "drivers/ata/pata_it821x.c", "fix_solution": "Ensure that the diagnostic flags are correctly cleared for the affected hardware, similar to the handling for IT821x controllers."}], "input_tokens": 9962, "output_tokens": 226}
{"id": "10486", "paths": ["drivers/scsi/qla2xxx/qla_os.c"], "predicts": ["drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_attr.c", "drivers/scsi/qla2xxx/qla_def.h", "drivers/scsi/qla2xxx/qla_gbl.h", "drivers/scsi/qla2xxx/qla_settings.h", "include/scsi/scsi_host.h", "include/scsi/scsi_transport_fc.h", "block/scsi_ioctl.c", "block/ioctl.c", "block/ll_rw_blk.c"], "input_tokens_sum": 123041, "output_tokens_sum": 1977, "description": "Latest working kernel version: 2.6.23\nEarliest failing kernel version: 2.6.24\nDistribution: gentoo\nHardware Environment: opteron\nSoftware Environment: x86_64\nProblem Description:\n\nWith 2.6.24 and 25 there are troubles with qla2xxx module. 4G FC\narrays (Infortrend) are not working properly, while 2G FC are OK. \n\nDetecting 4G array gives:\n sd 8:0:0:0: [sdc] Very big device. Trying to use READ CAPACITY(16).\n sd 8:0:0:0: [sdc] 44918798336 512-byte hardware sectors (22998425 MB)\n sd 8:0:0:0: [sdc] Write Protect is off\n sd 8:0:0:0: [sdc] Mode Sense: 8f 00 00 08\n sd 8:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn't support\nDPO or FUA\n sd 8:0:0:0: [sdc] Very big device. Trying to use READ CAPACITY(16).\n sd 8:0:0:0: [sdc] 44918798336 512-byte hardware sectors (22998425 MB)\n sd 8:0:0:0: [sdc] Write Protect is off\n sd 8:0:0:0: [sdc] Mode Sense: 8f 00 00 08\n sd 8:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn't support\nDPO or FUA\n sdc: sdc1\n sd 8:0:0:0: [sdc] Attache", "title": "kernel 2.6.24  4G FC arrays don't work properly with qla2xxx driver", "Kernel Version": "2.6.24", "Product": "SCSI Drivers", "Component": "QLOGIC QLA2XXX", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_target.c", "drivers/scsi/scsi_lib.c"], "causes": [{"cause": "The qla2xxx driver may not properly handle 4G FC arrays due to changes in the SCSI command handling or device initialization between kernel versions 2.6.23 and 2.6.24.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Review and update the SCSI command handling logic to ensure compatibility with 4G FC arrays, possibly by adjusting the handling of READ CAPACITY(16) commands."}, {"cause": "There might be an issue with the way the qla2xxx driver initializes or configures 4G FC arrays, leading to incorrect device detection or configuration.", "code_file": "drivers/scsi/qla2xxx/qla_init.c", "fix_solution": "Ensure that the initialization routines correctly identify and configure 4G FC arrays, possibly by updating the device detection logic or configuration parameters."}, {"cause": "The qla2xxx driver may not correctly manage the memory allocation or resource limits for 4G FC arrays, leading to operational issues.", "code_file": "drivers/scsi/qla2xxx/qla_target.c", "fix_solution": "Implement or adjust memory allocation and resource management strategies to handle larger devices, ensuring that the driver can manage the increased resource demands of 4G FC arrays."}, {"cause": "Changes in the SCSI mid-layer or block layer between kernel versions may have introduced compatibility issues with the qla2xxx driver for 4G FC arrays.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Review and update the interaction between the qla2xxx driver and the SCSI mid-layer to ensure proper handling of large capacity devices, possibly by adjusting the block layer interactions."}], "input_tokens": 8495, "output_tokens": 396}
{"id": "10403", "paths": ["fs/ext3/super.c"], "predicts": ["fs/ext3/ext3_jbd.c", "fs/ext3/inode.c", "fs/ext3/super.c", "fs/dquot.c", "fs/quota_v2.c", "include/linux/ext3_fs.h", "include/linux/ext3_fs_i.h"], "input_tokens_sum": 125918, "output_tokens_sum": 1524, "description": "Latest working kernel version: none\nEarliest failing kernel version: 2.6.25-rc8\nDistribution: Gentoo\nHardware Environment: x86 (both 32 and 64 bits)\nSoftware Environment: GNU\nProblem Description:\n\nNew quota data is not read (from aquota.user file) after quota enabling\non ext3 FS mounted with \"data=journal\".\nNOTE: data=ordered (default) and data=writeback - are OK.\nThe problem is with quota v2 (old format is not tested).\n\n\nSteps to reproduce:\n\nThe problem is always recreatable.\nJust create an ext3 FS and mount it with \"data=journal\".\nHere is the howto:\n\n# dd if=/dev/zero of=TEST.ext3.fs bs=1M count=1 seek=99\n# mkfs.ext3 TEST.ext3.fs\n# mkdir -p /mnt/1\n# modprobe loop\n# mount TEST.ext3.fs /mnt/1 -ousrquota,data=journal,loop\n# quotacheck /dev/loop0\n# quotaon -a\n\n//  Set quotas for some user (john) both soft and hard (to something like 80000)\n# edquota john\n\n// Put some data into the FS\n# cp -a /usr/src/linux/kernel /mnt/1\n\n// Owned by user john\n# chown -R john:john /mnt/1/kernel\n\n# quota j", "title": "Quotas problem on ext3 FS mounted with data=journal", "Kernel Version": "2.6.25", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/ext3/super.c", "fs/ext3/quota.c", "fs/quota/dquot.c", "fs/jbd/journal.c"], "causes": [{"cause": "Quota data is not being properly read from the aquota.user file when the ext3 filesystem is mounted with data=journal mode.", "code_file": "fs/ext3/super.c", "fix_solution": "Ensure that the quota initialization and reading logic is correctly handling the data=journal mode by adding necessary checks and operations to read the quota file after the journal is replayed."}, {"cause": "The journal mode in ext3 might be interfering with the quota operations, causing the quota data to not be updated or read correctly.", "code_file": "fs/ext3/quota.c", "fix_solution": "Modify the quota handling code to ensure that it properly interacts with the journal, possibly by adding hooks or callbacks to update quota information after journal transactions."}, {"cause": "The quota system might not be correctly initialized or enabled when the filesystem is mounted with data=journal, leading to the quota data not being read.", "code_file": "fs/quota/dquot.c", "fix_solution": "Add additional initialization steps or checks in the quota system to ensure it is correctly set up when the filesystem is mounted with data=journal."}, {"cause": "There might be a missing or incorrect synchronization point between the journal replay and quota initialization, causing the quota data to be outdated or incorrect.", "code_file": "fs/jbd/journal.c", "fix_solution": "Introduce synchronization mechanisms to ensure that quota data is read and updated after the journal has been replayed and before the filesystem is fully operational."}], "input_tokens": 9886, "output_tokens": 344}
{"id": "10389", "paths": ["drivers/acpi/asus_acpi.c"], "predicts": ["drivers/acpi/asus_acpi.c", "drivers/acpi/bus.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/cstate.c", "drivers/acpi/events/evevent.c", "drivers/acpi/events/evxfevnt.c", "drivers/acpi/glue.c", "include/acpi/acpi.h", "include/acpi/acinterp.h"], "input_tokens_sum": 121702, "output_tokens_sum": 2025, "description": "Latest working kernel version: 2.6.22-3\nEarliest failing kernel version: 2.6.24-1\nDistribution: debian testing (lenny)\nHardware Environment: Toshiba Satellite L40-17R laptop\nSoftware Environment: gnome\nProblem Description:\nAfter upgading to kernel 2.6.24-1 I noticed, that my system started to dump the same lines to /var/log/acpid, slowing down overall performance. Here is beginning of log:\n\n[Thu Apr  3 19:36:36 2008] starting up\n[Thu Apr  3 19:36:36 2008] 75 rules loaded\n[Thu Apr  3 19:36:40 2008] client connected from 3185[107:110]\n[Thu Apr  3 19:36:40 2008] 1 client rule loaded\n[Thu Apr  3 19:36:43 2008] received event \"hotkey ATKD 0000005f 00000000\"\n[Thu Apr  3 19:36:43 2008] notifying client 3185[107:110]\n[Thu Apr  3 19:36:43 2008] executing action \"/etc/acpi/asus-wireless.sh on\"\n[Thu Apr  3 19:36:43 2008] BEGIN HANDLER MESSAGES\n[Thu Apr  3 19:36:43 2008] END HANDLER MESSAGES\n[Thu Apr  3 19:36:43 2008] action exited with status 0\n[Thu Apr  3 19:36:43 2008] completed event \"hotkey A", "title": "kernel 2.6.24-1 doesn't detect my laptop correctly", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/asus_acpi.c", "drivers/acpi/bus.c", "drivers/acpi/events/evgpe.c", "drivers/acpi/osl.c"], "causes": [{"cause": "The ACPI event handling mechanism may be generating excessive hotkey events, causing performance issues.", "code_file": "drivers/acpi/asus_acpi.c", "fix_solution": "Implement a debounce mechanism to filter out duplicate or spurious hotkey events."}, {"cause": "The internal event mechanism introduced in the ACPI subsystem might be causing unnecessary event notifications.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Optimize the event notification logic to ensure only relevant events are propagated."}, {"cause": "The ACPI event listener registration might be incorrectly handling or duplicating events.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Review and correct the logic for event listener registration and event dispatching to prevent duplicate notifications."}, {"cause": "The ACPI GPE (General Purpose Event) handling might be incorrectly configured, leading to excessive event generation.", "code_file": "drivers/acpi/events/evgpe.c", "fix_solution": "Adjust the GPE configuration to ensure only necessary events are generated and processed."}, {"cause": "The ACPI subsystem might be incorrectly interpreting or handling the DSDT (Differentiated System Description Table) for the specific laptop model.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Update the DSDT parsing logic to correctly handle the specific quirks of the Toshiba Satellite L40-17R laptop."}], "input_tokens": 9773, "output_tokens": 338}
{"id": "10246", "paths": ["arch/x86/kvm/vmx.c"], "predicts": ["arch/x86/kernel/ioport.c", "arch/x86/kvm/x86.c", "arch/x86/kvm/mmu.c", "arch/x86/kvm/irq.c", "include/asm-x86/io.h", "include/asm-x86/kvm.h", "include/linux/kvm.h", "virt/kvm/kvm_main.c", "virt/kvm/ioapic.c", "virt/kvm/ioapic.h"], "input_tokens_sum": 126382, "output_tokens_sum": 1637, "description": "Latest working kernel version: N/A\nEarliest failing kernel version: 2.6.24\nDistribution: Ubuntu, but tested with mainline\nHardware Environment: intel mobo, Intel(R) Core(TM)2 Quad CPU Q6600@2.40GHz\nSoftware Environment: kvm 62 (x86_64)\nProblem Description:\n\nAfter a successful ioperm() call, otherwise valid \"in\" instructions will segv if a kvm VM has started.\n\nSteps to reproduce:\n\n1) run attached reproducer prior to starting a kvm VM, results are:\n# ./ioperm\ngetting 0x3b4-0x3df permission...\nfetching 0x3cc...\nok: 1\n\n2) start a kvm VM (bug exists only after actually starting a guest VM)\n\n3) run reproducer, which now fails:\n# ./ioperm\ngetting 0x3b4-0x3df permission...\nfetching 0x3cc...\nSegmentation fault (core dumped)\n\nNote that it does not always fail.  Running within gdb seems to reduce the chances that it will fail.  But when it does, it is clearly the \"in\" that is failing:\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004006e4 in inb ()\n(gdb) x/1i $pc\n0x4006e4 <inb+1", "title": "\"in\" after successful ioperm() results in SEGV after kvm use", "Kernel Version": "2.6.25-rc5", "Product": "Virtualization", "Component": "kvm", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/ioport.c", "drivers/kvm/kvm_main.c"], "causes": [{"cause": "The io-permission bitmap is not correctly updated or synchronized between the host and guest environments, leading to segmentation faults when accessing I/O ports after starting a KVM VM.", "code_file": "arch/x86/kernel/ioport.c", "fix_solution": "Ensure that the io_bitmap is correctly updated and synchronized between the host and guest environments, possibly by adding checks or synchronization mechanisms when a KVM VM is started."}, {"cause": "The TSS (Task State Segment) is not properly reinitialized or updated after a KVM VM starts, causing incorrect I/O permissions and resulting in segmentation faults.", "code_file": "arch/x86/kernel/ioport.c", "fix_solution": "Reinitialize or update the TSS structure to ensure that the I/O permissions are correctly set after a KVM VM starts."}, {"cause": "The lazy I/O bitmap update mechanism may not trigger correctly after a KVM VM starts, leading to incorrect I/O permissions and segmentation faults.", "code_file": "arch/x86/kernel/ioport.c", "fix_solution": "Modify the lazy I/O bitmap update mechanism to ensure it triggers correctly after a KVM VM starts, possibly by forcing an update or adding additional checks."}, {"cause": "The KVM module may not correctly handle I/O permission changes when a VM is started, leading to segmentation faults during I/O operations.", "code_file": "drivers/kvm/kvm_main.c", "fix_solution": "Add handling in the KVM module to ensure I/O permissions are correctly managed and updated when a VM is started."}], "input_tokens": 10402, "output_tokens": 351}
{"id": "10201", "paths": ["drivers/net/sis900.c"], "predicts": ["drivers/net/sis900.c", "include/linux/netdevice.h", "include/linux/pci.h", "drivers/net/mii.c"], "input_tokens_sum": 120502, "output_tokens_sum": 1455, "description": "Latest working kernel version:  2.6.23.15-137.fc8.i686\nEarliest failing kernel version: 2.6.24.3-12.fc8.i686\nDistribution:  Fedora Core 8\nHardware Environment:  PC\nSoftware Environment:  Following YUM update\nProblem Description:  After reboot following YUM update to new kernel - SiS 900 PCI Fast Ethernet (driver sis900) can not ifconfig eth0.  Configuration fails with  message \"SIOCSIFFLAGS: Invalid argument\".  System does boot.  SO  To recover, insert FC8 DVD and copy original kernel RPM's to the hard drive.  Then install the old Kernel with \"rpm -ivh --force --hash *.rpm\" and reboot.  System comes up and configures the sis900 eth0 correctly at startup.\n\nSteps to reproduce:  A machine with a SiS 900 PCI Fast Ethernet installed.  INstall RC8 and apply the updates.  After 2.6.24.3, reboot and notice the trouble.\n\n\nDan", "title": "Yum update of Kernel broke sis900 ethernet driver", "Kernel Version": "2.6.24", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/sis/sis900.c", "drivers/pci/msi.c", "net/core/dev.c"], "causes": [{"cause": "The sis900 driver may not be properly handling changes in the network stack or PCI subsystem introduced in the 2.6.24 kernel, leading to the 'SIOCSIFFLAGS: Invalid argument' error.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Review and update the sis900 driver to ensure compatibility with the changes in the network stack or PCI subsystem, particularly focusing on the handling of network interface flags and PCI configuration."}, {"cause": "Changes in the PCI subsystem related to MSI/MSI-X handling might be affecting the sis900 driver, causing it to fail during initialization.", "code_file": "drivers/pci/msi.c", "fix_solution": "Ensure that the sis900 driver correctly handles MSI/MSI-X capabilities, possibly by disabling MSI/MSI-X if the hardware does not support it or if it is not needed."}, {"cause": "The network interface initialization sequence might have changed, causing the sis900 driver to fail when setting interface flags.", "code_file": "net/core/dev.c", "fix_solution": "Investigate changes in the network interface initialization sequence and adjust the sis900 driver's initialization code to align with the new sequence."}, {"cause": "The error handling in the sis900 driver might not be robust enough to handle new error codes or conditions introduced in the updated kernel.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Enhance error handling in the sis900 driver to properly manage new error codes or conditions, ensuring that it can gracefully handle unexpected situations."}], "input_tokens": 8155, "output_tokens": 365}
{"id": "10077", "paths": ["drivers/char/nozomi.c"], "predicts": ["arch/x86/mm/ioremap.c", "drivers/char/nozomi.c", "include/asm-x86/pci.h", "include/linux/pci.h", "kernel/irq/chip.c", "mm/memory.c"], "input_tokens_sum": 128064, "output_tokens_sum": 2168, "description": "Earliest failing kernel version: 2.6.23 with gregkh patches\nDistribution: Gentoo Linux\nHardware Environment: Option N.V. Qualcomm MSM6275 UMTS chip [1931:000c]\n\nProblem Description:\n\nWhen I boot my system with the Option card inserted I get the following in my syslog:\n\npccard: CardBus card inserted into slot 0\nInitializing Nozomi driver 2.1d (build date: Feb 22 2008 21:34:48)\nnozomi 0000:03:00.0: Init, new card found\nnozomi 0000:03:00.0: Card type is: 2048\nPCI: Enabling device 0000:03:00.0 (0000 -> 0002)\nACPI: PCI Interrupt 0000:03:00.0[A] -> GSI 18 (level, low) -> IRQ 18\n------------[ cut here ]------------\nWARNING: at arch/x86/mm/ioremap.c:137 __ioremap+0x1c2/0x1e3()\nModules linked in: nozomi(+) evdev isofs zlib_inflate loop yenta_socket rsrc_nonstatic pcmcia pcmcia_core firewire_ohci firewire_core crc_itu_t arc4 ecb ohci1394 ieee1394 snd_hda_intel snd_pcm snd_timer snd soundcore sdhci snd_page_alloc mmc_core tifm_7xx1 hci_usb tifm_core iwl3945 mac80211 bluetooth cfg80211 tpm_infineo", "title": "nozomi (driver for Qualcomm 3G PCMCIA adapter) crashes", "Kernel Version": "2.6.25", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "All Linux", "reranked_files": ["drivers/char/nozomi.c", "drivers/pci/msi.c", "drivers/pci/pci.c"], "causes": [{"cause": "The Nozomi driver is attempting to access an invalid memory region during initialization, possibly due to incorrect handling of PCI resources.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Ensure that the memory region requested by the Nozomi driver is valid and properly mapped using ioremap, and add error handling to gracefully fail if the mapping is unsuccessful."}, {"cause": "The Nozomi driver may not be correctly handling MSI-X interrupts, leading to a crash when the device is initialized.", "code_file": "drivers/pci/msi.c", "fix_solution": "Review and update the MSI-X handling logic in the Nozomi driver to ensure it correctly requests and releases MSI-X vectors, and verify that the interrupt setup is properly synchronized."}, {"cause": "The PCI subsystem might not be correctly enabling the device, leading to an invalid state when the Nozomi driver attempts to initialize.", "code_file": "drivers/pci/pci.c", "fix_solution": "Add additional checks and logging in the PCI device enablement code to ensure that the device is fully enabled and ready before the Nozomi driver attempts to initialize it."}, {"cause": "The Nozomi driver might be using an outdated or incorrect method to register its interrupt handler, causing a crash when the interrupt is triggered.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Update the interrupt registration code to use the latest kernel APIs and ensure that the handler is correctly registered and unregistered during driver load and unload."}], "input_tokens": 8273, "output_tokens": 355}
{"id": "10042", "paths": ["drivers/acpi/namespace/nsxfeval.c"], "predicts": ["drivers/acpi/video.c", "include/acpi/acpi_drivers.h", "drivers/acpi/power.c", "arch/x86/video/fbdev.c", "arch/x86/pci/acpi.c", "arch/x86/kernel/quirks.c", "arch/x86/kernel/irq_64.c", "kernel/power/pm.c", "kernel/power/main.c", "include/acpi/acpi.h"], "input_tokens_sum": 121484, "output_tokens_sum": 2193, "description": "Distribution:Gentoo\nHardware Environment:Fujitsu-Siemens Amilo Pi 2515\n\nProblem Description:When video module is loaded, /sys/class/backlight/acpi_video0/ entries are created. Dmesg output is ACPI: Video Device [GFX0] (multi-head: yes  rom: no  post: no) \nThe values, however, are strange. actual_brightness is always a big integer like e.g. 2102324320 (changes every time module is loaded, remains unchanged afterwards regardless of brightness level).\nInitial value of acpi_video0/brightness is 0 (although the display is at maximum brightness). max_brightness is set to 100. \nI am able to change the brightness if I echo 25,50 or 75. Any other value makes my display return to maximum brightness. \nActually, the display is supposed to have brightness levels from 1 to 7, AFAIK.\nIf I load with ACPI_DEBUG, initial value of brightness is also a great number such as 2099887552.\n\nSteps to reproduce:always", "title": "Unreal actual_brightness and other strange behavior of video module on FSC Amilo Pi 2515", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c"], "causes": [{"cause": "The actual_brightness value is not being correctly mapped from the ACPI brightness levels, leading to incorrect large integer values.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the mapping logic in acpi_video_get_brightness to correctly interpret the ACPI brightness levels and return the appropriate index."}, {"cause": "The initial brightness value is not being set correctly due to incorrect handling of the _BQC method.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the acpi_video_device_lcd_get_level_current function correctly initializes the brightness value using the _BQC method if available."}, {"cause": "The brightness levels are not being correctly validated against the available levels, causing unexpected behavior when setting brightness.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the acpi_video_set_brightness function to validate the requested brightness level against the available levels before setting it."}, {"cause": "The max_brightness property is incorrectly set, leading to a mismatch with the actual available brightness levels.", "code_file": "drivers/acpi/video.c", "fix_solution": "Correct the initialization of max_brightness in acpi_video_device_find_cap to reflect the actual number of brightness levels minus any special entries."}, {"cause": "The brightness level indices are not being correctly adjusted for the special entries in the ACPI brightness levels array.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the indices used in acpi_video_get_brightness and acpi_video_set_brightness account for any special entries as per the ACPI specification."}], "input_tokens": 9595, "output_tokens": 380}
{"id": "9843", "paths": ["kernel/sched_fair.c"], "predicts": ["kernel/sched_fair.c", "fs/cifs/file.c", "fs/cifs/connect.c", "kernel/sched.c", "include/linux/sched.h", "kernel/cgroup.c", "include/linux/cgroup.h", "kernel/cpuset.c", "fs/cifs/ioctl.c", "fs/cifs/dir.c"], "input_tokens_sum": 123986, "output_tokens_sum": 2084, "description": "Latest working kernel version: 2.6.23.14\nEarliest failing kernel version: 2.6.24\nDistribution: Debian/Sid\nHardware Environment: AMD K7 (x86_32)\nSoftware Environment:\nProblem Description:\n\nWith 2.6.23.14, uploading 'linux-2.6.24.tar.bz2' to a CIFS mount takes 5 s. (~ 9.5 MB/s), which is ok for a 100Mbps network:\n\nuser1@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n\nreal    0m4.784s\nuser    0m0.000s\nsys     0m0.090s\n\n\nWith 2.6.24 and CONFIG_FAIR_GROUP_SCHED=y, the same test can take up to 28 s :\n\n* Test #1\n\n# idle CPU (no process running other than 'cp')\n=> 5 s.\n\n* Test #2\n\n(same user)\nuser1@client$ while do :; do :; done # priority: 0\nuser1@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n=> 5 s.\n\n* Test #3\n\n(different user)\nuser1@client$ while do :; do :; done # priority: 19\nuser2@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n=> 28 s.\n\nI consider it's a bug because one process only wants network bandwidth (and very few CPU cycles) and the other one only wants the remaining CPU resource", "title": "CIFS doesn't like the new fair group CPU scheduler", "Kernel Version": "2.6.24", "Product": "File System", "Component": "CIFS", "Hardware": "All Linux", "reranked_files": ["kernel/sched_fair.c", "kernel/sched.c"], "causes": [{"cause": "The fair group CPU scheduler introduced in 2.6.24 may not properly prioritize network-bound tasks over CPU-bound tasks, leading to increased latency for network operations.", "code_file": "kernel/sched_fair.c", "fix_solution": "Adjust the scheduler to better recognize and prioritize network-bound tasks by modifying the weight calculation for tasks with low CPU usage but high I/O activity."}, {"cause": "The new scheduler may not handle priority inversion correctly when tasks of different users are involved, causing network operations to be delayed.", "code_file": "kernel/sched.c", "fix_solution": "Implement a mechanism to detect and resolve priority inversion scenarios, ensuring that I/O-bound tasks are not starved by CPU-bound tasks."}, {"cause": "The scheduler's handling of nice values might be causing unintended side effects, particularly when tasks with different nice values are competing for CPU time.", "code_file": "kernel/sched_fair.c", "fix_solution": "Re-evaluate the impact of nice values on task prioritization and adjust the scheduler's algorithm to ensure fair distribution of CPU time among tasks with varying nice values."}, {"cause": "The scheduler's load balancing might not be effectively distributing tasks across CPUs, leading to suboptimal performance for network operations.", "code_file": "kernel/sched.c", "fix_solution": "Enhance the load balancing logic to ensure that network-bound tasks are not unfairly penalized by CPU-bound tasks, possibly by introducing a separate queue for I/O-bound tasks."}], "input_tokens": 9987, "output_tokens": 343}
{"id": "9779", "paths": ["kernel/sched.c"], "predicts": ["kernel/sched.c", "kernel/sched_fair.c", "kernel/cpuset.c", "kernel/sysctl.c", "arch/x86/mach-generic/probe.c", "fs/proc/base.c", "init/main.c", "include/linux/sched.h", "include/asm-x86/signal.h", "include/linux/cpumask.h"], "input_tokens_sum": 120601, "output_tokens_sum": 2224, "description": "Distribution: Ubuntu\nHardware Environment: amd64, x86 kernel\nProblem Description:\n\nThe following command locks up my system:\necho 1 | sudo tee /sys/kernel/uids/`id -u`/cpu_share\n\nWhile I have not reproduced it for this command, it locked up my system twice when trying it with the uid of my system user \"boinc\".\n\nOthers on the IRC channel ##kernel could not confirm it (using virtual machines on 64bit and 32bit), but I think it's grave enough to report it anyway.\n\nI'm using the 2.6.24 kernel from Ubuntu (but someone on ##kernel could not confirm it using the ubuntu-server kernel).\n\nMy CPU is AMD64 3000+.\n\nPlease ask for any details you need to understand the problem.\n\n\nSteps to reproduce:\necho 1 | sudo tee /sys/kernel/uids/`id -u`/cpu_share", "title": "Setting cpu_share to 1 freezes system", "Kernel Version": "2.6.24", "Product": "Process Management", "Component": "Scheduler", "Hardware": "All Linux", "reranked_files": ["kernel/sched.c", "kernel/sched_fair.c", "include/linux/sched.h", "kernel/cpuset.c"], "causes": [{"cause": "The cpu_share value of 1 might be causing an overflow or underflow in the scheduler calculations, leading to a system freeze.", "code_file": "kernel/sched.c", "fix_solution": "Add a check to ensure that cpu_share values are within a safe range before applying them to scheduler calculations."}, {"cause": "The scheduler might not be handling the case where cpu_share is set to 1 correctly, causing an infinite loop or deadlock.", "code_file": "kernel/sched_fair.c", "fix_solution": "Implement a safeguard to prevent infinite loops or deadlocks when cpu_share is set to 1 by adding a condition to break out of loops if the system becomes unresponsive."}, {"cause": "The CONFIG_FAIR_USER_SCHED feature might be improperly scaling user weights when cpu_share is set to 1, leading to incorrect scheduling behavior.", "code_file": "include/linux/sched.h", "fix_solution": "Adjust the scaling logic in CONFIG_FAIR_USER_SCHED to handle edge cases like cpu_share being set to 1, ensuring weights are calculated correctly."}, {"cause": "The system might be attempting to balance load across CPUs in a way that is incompatible with a cpu_share value of 1, causing a freeze.", "code_file": "kernel/cpuset.c", "fix_solution": "Modify the load balancing logic to account for cpu_share values of 1, ensuring that load balancing does not lead to system instability."}], "input_tokens": 9257, "output_tokens": 332}
{"id": "9761", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/utilities/utglobal.c", "drivers/acpi/video.c", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/bus.c", "include/acpi/aclocal.h", "include/acpi/acpi.h", "include/acpi/actypes.h"], "input_tokens_sum": 152057, "output_tokens_sum": 5404, "description": "Latest working kernel version: unknown\nEarliest failing kernel version:unknown\nDistribution: Mandriva 2008.1 Alpha 2\nHardware Environment: Samsung R70 (BIOS UE6)\nSoftware Environment: 64Bit\nProblem Description:\nWhen booting up my system, I can see this error in my dmesg.\nAs requested on the linux-acpi mailing list, I'm opening that bug.\n\nHere come the dmesg :\n\nACPI Error (utglobal-0126): Unknown exception code: 0xFFFFFFFE [20070126]\nPid: 1952, comm: modprobe Not tainted 2.6.24-laptop-0.rc7.2mdv #1\n\nCall Trace:\n [<ffffffff8038bd2e>] acpi_ut_update_ref_count+0x50/0x9d\n [<ffffffff8038c1d9>] acpi_format_exception+0x2c/0x35\n [<ffffffff8038af73>] acpi_ut_exception+0x25/0x8c\n [<ffffffff803765cc>] acpi_evaluate_integer+0xb6/0xc7\n [<ffffffff881dcd0a>] :video:acpi_video_bus_add+0xcc9/0xce2\n [<ffffffff802c46a8>] ifind+0x58/0xd0\n [<ffffffff8038f2e8>] acpi_device_probe+0x43/0x91\n [<ffffffff803c321c>] driver_probe_device+0x9c/0x1b0\n [<ffffffff803c34e9>] __driver_attach+0xc9/0xd0\n [<ffffffff803c3420>", "title": "unsupported ACPI video device - Samsung R70", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/bus.c"], "causes": [{"cause": "The ACPI video module is attempting to evaluate an ACPI method that does not exist on the Samsung R70, leading to an unknown exception code.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add a check to ensure the ACPI method exists before attempting to evaluate it, and handle the absence gracefully."}, {"cause": "The ACPI video module is trying to add a video device that is not present in the hardware, causing an error during device creation.", "code_file": "drivers/acpi/video.c", "fix_solution": "Implement a mechanism to verify the presence of the video device in the hardware before proceeding with device creation."}, {"cause": "Memory leakages in the ACPI video module when handling errors or removing devices, which could lead to unexpected behavior.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure proper cleanup of allocated resources in error paths and during device removal."}, {"cause": "The ACPI video module is not correctly handling internal events, leading to potential miscommunication between ACPI drivers.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Review and improve the internal event mechanism to ensure reliable communication between ACPI drivers."}], "input_tokens": 9786, "output_tokens": 286}
{"id": "9751", "paths": ["arch/alpha/math-emu/math.c"], "predicts": ["arch/alpha/math-emu/math.c", "include/asm-alpha/fpu.h"], "input_tokens_sum": 109657, "output_tokens_sum": 1686, "description": "Latest working kernel version: none\nEarliest failing kernel version: tested on 2.6.18, but should not work anywhere\nDistribution: Debian\nHardware Environment: alphaev56, alphaev68\nSoftware Environment: mathemu=y\nProblem Description: conversion from denormal float to double is wrong\n\nSteps to reproduce:\n\nCompile with -O0 -mieee or -O2 -mieee:\n\n#include <stdio.h>\nfloat x = 1.0;\ndouble y;\n\nint g(float z)\n{\n  printf (\"%g\\n\", z);\n}\n\nint main()\n{\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 32.0f);\n  g(x);\n  y = x;\n  g(y);\n}\n\nCorrect value should be:\n\n1.4013e-45\n1.4013e-45\n\nActual value is:\n\n2.65249e-315\n2.65249e-315\n\nor\n\n2.65249e-315\n0\n\nThe right value is 2-149, that is 1.4013e-45, but the alpha does not do it.  The architecture handbook says \"A trap handler can convert an S_ floating denor", "title": "conversion of denormal floats to double is wrong", "Kernel Version": "2.6.18", "Product": "Platform Specific/Hardware", "Component": "Alpha", "Hardware": "All Linux", "reranked_files": ["arch/alpha/kernel/traps.c", "arch/alpha/math-emu/fp_emulate.c", "arch/alpha/math-emu/ieee754.c"], "causes": [{"cause": "The Alpha architecture does not handle denormalized floating-point numbers correctly due to missing or incorrect trap handler implementation for denormal floats.", "code_file": "arch/alpha/kernel/traps.c", "fix_solution": "Implement a trap handler for denormalized floating-point numbers that correctly converts them to double precision."}, {"cause": "The floating-point emulation code does not properly handle denormalized numbers, leading to incorrect conversion results.", "code_file": "arch/alpha/math-emu/fp_emulate.c", "fix_solution": "Modify the floating-point emulation logic to correctly handle denormalized numbers during conversion from float to double."}, {"cause": "The floating-point conversion routines do not account for the special case of denormalized numbers, resulting in incorrect output.", "code_file": "arch/alpha/math-emu/ieee754.c", "fix_solution": "Add specific handling for denormalized numbers in the conversion routines to ensure they are processed correctly."}], "input_tokens": 785, "output_tokens": 231}
{"id": "9747", "paths": ["drivers/acpi/processor_throttling.c"], "predicts": ["drivers/acpi/processor_throttling.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/processor.h", "drivers/acpi/processor_core.c", "fs/proc/base.c", "kernel/cpu.c"], "input_tokens_sum": 124059, "output_tokens_sum": 2127, "description": "Latest working kernel version: Unsure.  Later than 2.6.24-rc2\nEarliest failing kernel version: 2.6.24-rc6 (possibly earlier)\nDistribution: Debian\nHardware Environment: Toshiba Portege r500\nSoftware Environment:\nProblem Description:\n\nWhen I boot laptop-mode fires up and tries to write to /proc/acpi/processor/CPU0/throttling which contains <not supported>\n\nI don't quite know what I've done to get it to contain <not supported> but anyway that'll be more fun to track down I'm sure.\n\nIn any case, in this configuration I get this oops even if all I do is\necho stuff >/proc/acpi/processor/CPU0/throttling\n\n[   32.378673] Unable to handle kernel NULL pointer dereference at 0000000000000\n000 RIP: \n[   32.378761]  [<0000000000000000>] _stext+0x7fdf7000/0x1a\n[   32.378965] PGD 37bb3067 PUD 37b2a067 PMD 0 \n[   32.379182] Oops: 0010 [1] SMP \n[   32.379350] CPU 0 \n[   32.379466] Modules linked in: rfcomm l2cap bluetooth acpi_cpufreq cpufreq_st\nats cpufreq_userspace cpufreq_powersave cpufreq_ondemand f", "title": "Oops on boot from laptop mode writing to /proc/acpi/processor/CPU0/throttling", "Kernel Version": "2.6.24-rc7", "Product": "ACPI", "Component": "Config-Processors", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/processor_throttling.c", "drivers/acpi/processor_core.c"], "causes": [{"cause": "The ACPI processor throttling code does not handle the case where throttling is not supported, leading to a NULL pointer dereference when accessing unsupported throttling states.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Add a check to ensure that the processor supports throttling before attempting to access or modify throttling states."}, {"cause": "The ACPI processor driver attempts to write to the throttling control register without verifying if the register is valid or supported, causing an invalid memory access.", "code_file": "drivers/acpi/processor_core.c", "fix_solution": "Implement a validation step to check if the throttling control register is supported before writing to it."}, {"cause": "The ACPI processor driver does not correctly handle the case where the _TPC, _TSS, or _PTC methods are not found, leading to incorrect assumptions about throttling capabilities.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Modify the code to handle the AE_NOT_FOUND status from ACPI method evaluations and set appropriate flags indicating unsupported throttling."}, {"cause": "The ACPI processor driver incorrectly assumes that the throttling state count is non-zero, leading to out-of-bounds access when the state count is zero.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Add a check to ensure the throttling state count is greater than zero before accessing throttling states."}], "input_tokens": 9904, "output_tokens": 345}
{"id": "9704", "paths": ["drivers/acpi/processor_throttling.c"], "predicts": ["drivers/acpi/processor_throttling.c", "drivers/acpi/processor_core.c", "include/acpi/processor.h"], "input_tokens_sum": 135791, "output_tokens_sum": 3026, "description": "Most recent kernel where this bug did not occur: None\nDistribution: FC8\nHardware Environment: All\nSoftware Environment: All\nProblem Description: \nWhen echo some invalid values to /proc/acpi/processor/*/throttling,\nthere isn't any error info returned, on the contray, it sets\nthrottling value to some T* successfully, obviously, this is incorrect,\na correct way should be to let it fail and return error info.\n\nSteps to reproduce:\n\n[root@localhost /]# echo \"2xxxx\" > /proc/acpi/processor/CPU0/throttling\n[root@localhost /]# cat /proc/acpi/processor/CPU0/throttling\nstate count:             8\nactive state:            T2\nstate available: T0 to T7\nstates:\n    T0:                  100%\n    T1:                  87%\n   *T2:                  75%\n    T3:                  62%\n    T4:                  50%\n    T5:                  37%\n    T6:                  25%\n    T7:                  12%\n[root@localhost /]# echo \"\" > /proc/acpi/processor/CPU0/throttling\n[root@localhost /]# cat /proc/acpi/processor/CP", "title": "ACPI: processor throttling set error", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Config-Processors", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/processor_throttling.c"], "causes": [{"cause": "The ACPI processor throttling code does not validate the input value before setting the throttling state, allowing invalid values to be accepted.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Add input validation to ensure that the value being written to the throttling file is within the valid range of throttling states before setting it."}, {"cause": "The function responsible for setting the throttling state does not return an error when an invalid state is provided.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Modify the acpi_processor_set_throttling function to return an error code if the input state is invalid or out of range."}, {"cause": "The lack of error handling in the write operation to the throttling file allows invalid inputs to be processed without feedback.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Implement error handling in the write operation to provide feedback when an invalid input is detected."}], "input_tokens": 9838, "output_tokens": 242}
{"id": "9699", "paths": ["drivers/media/radio/radio-sf16fmr2.c"], "predicts": ["drivers/media/radio/radio-sf16fmr2.c", "kernel/resource.c", "arch/x86/kernel/ioport_32.c", "kernel/module.c", "drivers/media/radio/radio-sf16fmi.c", "arch/x86/mach-generic/probe.c", "drivers/media/radio/radio-aimslab.c", "drivers/media/radio/radio-aztech.c", "drivers/media/radio/radio-maestro.c", "kernel/irq/autoprobe.c"], "input_tokens_sum": 123350, "output_tokens_sum": 1887, "description": "Most recent kernel where this bug did not occur: not known\n\nDistribution: OpenSuSE 10.3 with suse kernel & vanilla 2.6.24rc6,  grml (live-cd) daily build\n\nHardware Environment: running inside VMware Workstation 6.x on FSC Lifebook e-series, running native on older FSC Lifebook\n\nSoftware Environment: ???\n\nProblem Description:\nloading radio-sf16fmr2 on a system without that hardware leaves the system in an inconsistent state after probe, leading to weird behaviour or even system crash\n\nSteps to reproduce:\n\neither:\nopensuse103:~ # modprobe radio-sf16fmr2\nFATAL: Error inserting radio_sf16fmr2 (/lib/modules/2.6.24-rc6/kernel/drivers/media/radio/radio-sf16fmr2.ko): Device or resource busy\nopensuse103:~ # cat /proc/ioports\nSegmentation fault\n\nor:\nopensuse103:~ # modprobe radio-sf16fmr2\nFATAL: Error inserting radio_sf16fmr2 (/lib/modules/2.6.24-rc6/kernel/drivers/media/radio/radio-sf16fmr2.ko): Device or resource busy\n\nopensuse103:~ # modprobe esp\n<system freeze>\n\n\ndmesg after cat /proc/ioport", "title": "radio-sf16fmr2 probably buggy - system inconsistent after probe", "Kernel Version": "2.6.24", "Product": "v4l-dvb", "Component": "radio", "Hardware": "All Linux", "reranked_files": ["drivers/media/radio/radio-sf16fmr2.c"], "causes": [{"cause": "The radio-sf16fmr2 driver does not handle the absence of hardware gracefully, leading to system instability.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Add checks to ensure that the hardware is present before proceeding with initialization and return an appropriate error if not."}, {"cause": "Improper handling of resource allocation or release in the radio-sf16fmr2 driver, causing resource conflicts.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Ensure that all allocated resources are properly released if the hardware is not found or if initialization fails."}, {"cause": "The driver may be attempting to access I/O ports that are not available, leading to segmentation faults.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Add validation to check if the required I/O ports are available before accessing them."}, {"cause": "The driver might not be correctly unregistering itself upon failure, leaving the system in an inconsistent state.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Ensure that the driver unregisters itself and cleans up properly if initialization fails."}, {"cause": "The driver may be improperly handling the probe function, leading to system crashes when other modules are loaded.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Review and correct the probe function to ensure it handles errors and resource cleanup correctly."}], "input_tokens": 9479, "output_tokens": 375}
{"id": "9643", "paths": ["drivers/acpi/sleep/proc.c"], "predicts": ["drivers/acpi/utils.c", "drivers/acpi/power.c", "drivers/acpi/bus.c", "drivers/acpi/glue.c", "drivers/acpi/scan.c", "fs/proc/base.c", "include/linux/acpi.h", "include/acpi/acpi.h", "crypto/proc.c", "mm/util.c"], "input_tokens_sum": 121296, "output_tokens_sum": 1362, "description": "Most recent kernel where this bug did not occur: none\nDistribution: FC8\nHardware Environment: All\nSoftware Environment: All\nProblem Description: after echo \"2007 12\" > /proc/acpi/alarm, you'll get 2007-12-12 12:12:12 by cat /proc/acpi/alarm, obviously it is wrong, it should consider \"2007 12\" as an invalid input.\n\nSteps to reproduce:\n\n[root@localhost /]# echo \"2006 09\" > /proc/acpi/alarm\n[root@localhost /]# cat /proc/acpi/alarm\n2007-12-09 09:09:09\n[root@localhost /]# echo \"2006 04\" > /proc/acpi/alarm\n[root@localhost /]# cat /proc/acpi/alarm\n2007-12-04 04:04:04", "title": "/proc/acpi/alarm set error", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/alarm.c"], "causes": [{"cause": "The ACPI alarm interface does not validate the input format correctly, allowing invalid dates to be set.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Add input validation to ensure the date format is correct before setting the alarm."}, {"cause": "The parsing logic for the date input in the ACPI alarm interface is incorrect, leading to default or incorrect values being set.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Correct the parsing logic to handle incomplete or malformed date inputs properly."}, {"cause": "The default values for time fields are being used when the input is incomplete, leading to unexpected results.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Ensure that all time fields are explicitly set or return an error if the input is incomplete."}, {"cause": "The ACPI alarm interface does not handle errors gracefully when invalid input is provided.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Implement error handling to provide feedback when invalid input is detected."}], "input_tokens": 9951, "output_tokens": 258}
{"id": "9385", "paths": ["drivers/hid/hid-input.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/quirks.c", "drivers/input/mouse/sermouse.c", "include/linux/hid.h", "include/linux/input.h", "include/linux/hid-debug.h", "drivers/usb/class/usblp.c", "arch/i386/kernel/setup.c", "arch/i386/kernel/irq.c", "sound/usb/usbquirks.h"], "input_tokens_sum": 118598, "output_tokens_sum": 1560, "description": "Scroll wheel on BTC 8193 keyboard is not working in Linux. On another keyboard (Genius SlimStar Pro) and the scroll wheel works there.\n\nWhen I rotate or click the wheel, nothing happens, nothing is appearing in the relevant /dev/input/eventNN file, nothing bad in dmesg.\n\nHere's the hardware info I was able to collect:\n\n# dmesg | tail -n 6 \nusb 1-6.1.2: new low speed USB device using ehci_hcd and address 16\nusb 1-6.1.2: configuration #1 chosen from 1 choice\ninput: USB-compliant keyboard as /class/input/input18\ninput: USB HID v1.10 Keyboard [USB-compliant keyboard] on usb-0000:00:1a.7-6.1.2\ninput: USB-compliant keyboard as /class/input/input19\ninput: USB HID v1.10 Device [USB-compliant keyboard] on usb-0000:00:1a.7-6.1.2\n\n# /sbin/lsusb | grep KEY\nBus 001 Device 016: ID 0518:0002 EzKEY Corp. \n\n# /sbin/lsusb -d 0518:0002 -v\nBus 001 Device 016: ID 0518:0002 EzKEY Corp. \nDevice Descriptor:\n  bLength                18\n  bDescriptorType         1\n  bcdUSB               1.10\n  bDeviceClass     ", "title": "scroll wheel on BTC 8193 doesn't work", "Kernel Version": "2.6.23", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/usb/input/hid-input.c", "drivers/input/evdev.c", "drivers/input/keyboard/atkbd.c", "drivers/usb/core/hid.c"], "causes": [{"cause": "The BTC 8193 keyboard may not be correctly recognized as a device with a scroll wheel due to missing or incorrect HID usage definitions.", "code_file": "drivers/usb/input/hid-input.c", "fix_solution": "Add a case for the specific HID usage of the BTC 8193 scroll wheel in the hidinput_init_usages function to ensure the scroll wheel is recognized and events are generated."}, {"cause": "The input event handling for the BTC 8193 keyboard may not be correctly configured to report scroll wheel events.", "code_file": "drivers/input/evdev.c", "fix_solution": "Ensure that the evdev_ioctl_handler function correctly maps the scroll wheel events for the BTC 8193 keyboard by adding the necessary event bits."}, {"cause": "The BTC 8193 keyboard may not be correctly initialized with the appropriate input device attributes for the scroll wheel.", "code_file": "drivers/input/keyboard/atkbd.c", "fix_solution": "Modify the atkbd_set_device_attrs function to include the scroll wheel usage bit for the BTC 8193 keyboard."}, {"cause": "The USB HID driver may not be correctly handling the report descriptor for the BTC 8193 keyboard, leading to missing scroll wheel events.", "code_file": "drivers/usb/core/hid.c", "fix_solution": "Update the HID report descriptor parsing logic to correctly interpret the scroll wheel usage for the BTC 8193 keyboard."}], "input_tokens": 10428, "output_tokens": 327}
{"id": "9374", "paths": ["sound/pci/hda/hda_codec.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/core/control.c", "sound/core/pcm.c"], "input_tokens_sum": 130368, "output_tokens_sum": 3424, "description": "Most recent kernel where this bug did not occur: 2.6.23\nDistribution: Debian\n\nHardware Environment:\nx86_64 Pentium D system; ICH7 chipset\n00:1b.0 Audio device [0403]: Intel Corporation 82801G (ICH7 Family) High Definition Audio Controller [8086:27d8] (rev 01)\n\nSoftware Environment: Debian Unstable, KDE Desktop\n\nProblem Description:\nIf I change the volume using the master control slider in KDE, the sound will first go down to a very low volume (almost muted with slider at 2/3 _up_) and then, in about 10 seconds, come slowly back up to its \"normal\" volume for the position of the slider. The volume does vary while I move the slider, but even at the very top it is very low at first.\nThis only happens with the master slider, the PCM and front sliders behave normally.\n\nThere were some changes from 2.6.23 to 2.6.24. During first boot of .24 I get:\nSetting up ALSA...warning: 'alsactl restore' failed with error message '\nalsactl: set_control:989: warning: name mismatch (Capture Volume/Input Sou", "title": "[ICH7 snd_hda_intel] Volume control broken", "Kernel Version": "2.6.24-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/core/control.c", "sound/pci/hda/hda_intel.c"], "causes": [{"cause": "The master volume control is not correctly restoring its state after a system resume, leading to incorrect volume levels.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Ensure that the master volume control state is properly saved and restored during suspend and resume cycles by adding code to handle AC_VERB_SET_AMP_GAIN_MUTE for the master control."}, {"cause": "The ALSA control element values are not being correctly initialized or restored, causing the master volume to behave unexpectedly.", "code_file": "sound/core/control.c", "fix_solution": "Modify the initialization and restoration logic for control elements to ensure that the master volume control is correctly set up during boot and resume."}, {"cause": "The master volume control is not correctly mapped to the hardware control, leading to incorrect volume adjustments.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Review and correct the mapping of the master volume control to the appropriate hardware control registers to ensure accurate volume adjustments."}, {"cause": "The ALSA control interface is not correctly handling the master volume control changes, causing delayed volume adjustments.", "code_file": "sound/core/control.c", "fix_solution": "Investigate and fix any issues in the control interface that may be causing delays in applying volume changes to the hardware."}], "input_tokens": 7025, "output_tokens": 310}
{"id": "9327", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "drivers/acpi/acpi_memhotplug.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "drivers/acpi/ac.c", "drivers/acpi/processor_idle.c", "drivers/acpi/utils.c", "arch/x86/pci/irq.c", "kernel/irq/manage.c"], "input_tokens_sum": 122147, "output_tokens_sum": 1885, "description": "Most recent kernel where this bug did not occur: 2.6.24-rc1\nDistribution: Ubuntu Feisty\nHardware Environment: Laptop Toshiba Satellite U305-S5077\nProblem Description:\n\nAfter the ACPI changes between 2.6.24-rc1 and -rc2 I have my logs\n\"spammed\" (every 2-3 seconds) by: \n\n[  423.112903] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  423.113020] ACPI: EC: non-query interrupt received, switching to interrupt mode\n[  426.078972] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  426.079645] ACPI: EC: non-query interrupt received, switching to interrupt mode\n[  426.622773] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  426.622889] ACPI: EC: non-query interrupt received, switching to interrupt mode\n\nIt seems that no harm is done, apart (but it could be another thing)\nthat gnome-panel is much slower on startup.", "title": "2.6.24-rc2 (esthetic?) regression: auto select interrupt bouncing", "Kernel Version": "2.6.24-rc2", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/ec.c", "drivers/acpi/processor_idle.c"], "causes": [{"cause": "The ACPI Embedded Controller (EC) is not correctly handling interrupts, leading to frequent switching between interrupt modes.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Review and adjust the logic for handling IBF (Input Buffer Full) confirmations and non-query interrupts to ensure proper interrupt mode handling."}, {"cause": "The ACPI EC driver may be incorrectly configured to handle bus master activity, causing unnecessary transitions between interrupt modes.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Ensure that the bus master status is correctly checked and handled to prevent unnecessary mode switches."}, {"cause": "The ACPI EC driver may have introduced a regression in interrupt handling due to changes in locking mechanisms.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Revert or adjust changes related to spinlock and semaphore usage to ensure proper synchronization during interrupt handling."}, {"cause": "The ACPI EC driver may be incorrectly handling the global lock, leading to frequent mode switches.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Review and correct the usage of the global lock to ensure it is properly acquired and released during EC operations."}], "input_tokens": 9599, "output_tokens": 280}
{"id": "9272", "paths": ["drivers/md/raid5.c"], "predicts": ["drivers/md/raid5.c", "include/linux/raid/raid5.h", "drivers/md/md.c", "kernel/panic.c", "lib/bug.c", "drivers/md/raid6algos.c", "drivers/md/raid6recov.c", "init/do_mounts_md.c", "kernel/printk.c", "drivers/md/dm-raid1.c"], "input_tokens_sum": 123203, "output_tokens_sum": 916, "description": "Most recent kernel where this bug did not occur:\n2.6.23.1\n\nDistribution: Debian Etch 4.0\n\nHardware Environment:\nIntel P-III-800 EB (x86_32)\n512 MB RAM\nAIC7xxx SCSI Controller for RAID-1 RootFS\nsata_sil Controller (3114) with 4x 300GB SATA Disks as RAID-5\n\nSoftware Environment:\nmdadm version 2.5.6\n\nProblem Description:\nshortly after the raid5 array is initialized the kernel stops with\nkernel BUG at drivers/md/raid5.c:143!\ninvalid opcode: 0000 [#1]\nModules linked in: xfs tcp_cubic raid456 async_xor async_memcpy async_tx xor deadline_iosched w83781d hwmon_vid hwmon eeprom netconsole configfs e1000 3c59x mii sata_sil button ata_piix uhci_hcd parport_pc i2c_i801 8250_pnp 8250 serial_core parport evdev usbcore libata i2c_core rng_core intel_agp agpgart pcspkr rtc sg st sr_mod cdrom ch dm_mirror dm_snapshot thermal processor fan unix ext3 jbd mbcache raid1 md_mod sd_mod dm_mod aic7xxx scsi_transport_spi scsi_mod\n\nPid: 1666, comm: md2_raid5 Not tainted (2.6.24-rc1-git10 #1)\nEIP: 0060:[<e0b019e", "title": "kernel BUG at drivers/md/raid5.c:143", "Kernel Version": "2.6.24-rc1", "Product": "IO/Storage", "Component": "MD", "Hardware": "All Linux", "reranked_files": ["drivers/md/raid5.c"], "causes": [{"cause": "The bug is likely caused by incorrect handling of stripe operations, particularly the transition between different operation states, leading to an invalid state.", "code_file": "drivers/md/raid5.c", "fix_solution": "Ensure proper state transitions by adding checks and handling for unexpected states in the handle_write_operations function."}, {"cause": "The bug may be due to race conditions when accessing and modifying stripe states outside the spin lock, causing inconsistent state transitions.", "code_file": "drivers/md/raid5.c", "fix_solution": "Introduce additional locking mechanisms or atomic operations to ensure consistent state transitions in the raid5_do_soft_block_ops function."}, {"cause": "The bug could be caused by incorrect assumptions about the number of disks or the configuration of the RAID array, leading to miscalculations in stripe operations.", "code_file": "drivers/md/raid5.c", "fix_solution": "Review and correct the logic for determining the number of data disks and ensure it is consistent with the RAID configuration in the handle_stripe function."}, {"cause": "The bug might be due to improper initialization or cleanup of work queues, leading to unexpected behavior during stripe operations.", "code_file": "drivers/md/raid5.c", "fix_solution": "Ensure proper creation and destruction of work queues, and verify that all operations are correctly enqueued and dequeued in the run and stop functions."}, {"cause": "The bug may be related to incorrect handling of overlapping requests, causing conflicts and invalid states during stripe operations.", "code_file": "drivers/md/raid5.c", "fix_solution": "Add checks and handling for overlapping requests to prevent conflicts and ensure proper synchronization in the handle_stripe function."}], "input_tokens": 10810, "output_tokens": 384}
{"id": "9206", "paths": ["drivers/md/bitmap.c"], "predicts": ["drivers/md/bitmap.c", "drivers/md/md.c", "drivers/md/raid5.c", "include/linux/raid/bitmap.h", "include/linux/raid/md.h"], "input_tokens_sum": 119394, "output_tokens_sum": 1658, "description": "Most recent kernel where this bug did not occur: 2.6.22\nDistribution: gentoo (vanilla k.o kernel)\nHardware Environment: pentium4\nSoftware Environment: gentoo stable\nProblem Description: \nI believe is directly related to \"[PATCH 007 of 7] md: Change bitmap_unplug and others to void functions.\"\n\nI have confirmed that this problem occurs during initial creation of the MD device with mdadm 2.6.4.\n\nThe specific error I am getting is \nmd3: bitmap initialized from disk: read 28/28 pages, set 0 bits\ncreated bitmap (442 pages) for device md3\nmd3: disabling internal bitmap due to errors\nmd3: failed to create bitmap (-5)\nmd: pers->run() failed ...\n\nsuperblock information from mdstat\nmdadm -E /dev/sx8/0p5\n/dev/sx8/0p5:\n          Magic : a92b4efc\n        Version : 01\n    Feature Map : 0x1\n     Array UUID : b772776b:e2810279:bf64284e:65700530\n           Name : data2\n  Creation Time : Wed Jul 18 11:21:56 2007\n     Raid Level : raid6\n   Raid Devices : 12\n\n  Used Dev Size : 462671664 (220.62 GiB 236.89", "title": "Negative internal write-intent bitmap offset with metadata 1.0 REDUX in raid 6: kernel refuses to start the array", "Kernel Version": "2.6.23", "Product": "IO/Storage", "Component": "MD", "Hardware": "All Linux", "reranked_files": ["drivers/md/bitmap.c"], "causes": [{"cause": "The bitmap initialization process fails due to incorrect handling of negative offsets in the bitmap metadata.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Ensure that the offset calculations in the bitmap initialization process are correctly handled to prevent negative values, possibly by adding checks and adjustments in the bitmap_init_from_disk function."}, {"cause": "The bitmap daemon work function does not correctly handle errors during bitmap page writes, leading to initialization failures.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Modify the bitmap_daemon_work function to properly handle and log errors from write_page calls, ensuring that any errors are addressed before proceeding."}, {"cause": "The bitmap superblock is not being updated correctly, leading to inconsistencies during the array start process.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Ensure that the bitmap_update_sb function correctly updates the superblock and handles any potential errors during the update process."}, {"cause": "The bitmap filemap allocation does not account for all necessary pages, leading to incomplete initialization.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Review and correct the logic in the bitmap_init_from_disk function to ensure that the filemap is allocated with the correct number of pages."}, {"cause": "The bitmap write-back mechanism is not properly synchronized, causing race conditions during initialization.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Implement proper synchronization mechanisms in the bitmap_unplug and bitmap_daemon_work functions to ensure that write-backs are completed before proceeding with initialization."}], "input_tokens": 10295, "output_tokens": 369}
{"id": "9133", "paths": ["drivers/scsi/aacraid/aachba.c"], "predicts": ["drivers/scsi/aacraid/aachba.c", "drivers/scsi/aacraid/commctrl.c", "drivers/scsi/aacraid/comminit.c", "drivers/scsi/aacraid/rx.c", "drivers/scsi/aacraid/sa.c", "include/scsi/scsi.h", "include/scsi/scsi_eh.h", "include/scsi/scsi_host.h", "include/scsi/scsi_transport.h", "include/scsi/scsi_transport_spi.h"], "input_tokens_sum": 118931, "output_tokens_sum": 2036, "description": "Most recent kernel where this bug did not occur: 2.6.20.4 (see description)\nDistribution: PLD Linux Distribution 2.0 (Ac)\n\nHardware Environment:\nDell PowerEdge 1650 with Dell PowerEdge Expandable RAID Controller 3/Di (rev 01), 2 disks, mirror, PCI ID 1028:000a\n\nProblem Description:\n\nSystem does not boot at all using aacraid SCSI driver with Dell PERC 3/Di controller. Machine is currently running kernel 2.6.20.4 and it works perfectly. Few days ago I was trying upgrade to 2.6.22.9 and system failed to boot.\n\nDriver correctly detects controller and then following messages are displayed on console:\n\nscsi 0:0:0:0 Direct-Access DELL mirror V1.0 PQ: 0 ANSI: 2\nAAC:AAC received an unrecognized command [601]\naacraid: Host adapter abort request (0,1,0,0)\naacraid: Host adapter abort request (0,1,0,0)\naacraid: Host adapter reset request. SCSI hang ?\nscsi 0:1:0:0 scsi: Device offlined - not ready after error recovery\n\n... and so on for every scsi id and scsi host (0:1:1:0, 0:1:2:0, ... , 0:2:15:0).", "title": "aacraid driver fails with Dell PowerEdge Expandable RAID Controller 3/Di", "Kernel Version": "2.6.22", "Product": "SCSI Drivers", "Component": "AACRAID", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/aacraid/aachba.c", "drivers/scsi/aacraid/commsup.c", "drivers/scsi/scsi_lib.c", "drivers/scsi/aacraid/init.c", "drivers/scsi/aacraid/linit.c"], "causes": [{"cause": "The aacraid driver may not handle unrecognized commands properly, leading to a failure in communication with the RAID controller.", "code_file": "drivers/scsi/aacraid/aachba.c", "fix_solution": "Implement a handler for unrecognized commands to log the error and safely ignore or handle the command without causing a system hang."}, {"cause": "The error handling mechanism in the aacraid driver might not be robust enough to recover from command failures, leading to repeated abort and reset requests.", "code_file": "drivers/scsi/aacraid/commsup.c", "fix_solution": "Enhance the error recovery logic to better handle command failures and prevent repeated abort/reset cycles."}, {"cause": "Changes in the SCSI mid-layer between kernel versions might have introduced incompatibilities with the aacraid driver's command handling.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Review and update the aacraid driver's command handling to align with the updated SCSI mid-layer interfaces and expectations."}, {"cause": "The aacraid driver may not correctly initialize or configure the RAID controller, leading to device offline errors.", "code_file": "drivers/scsi/aacraid/init.c", "fix_solution": "Ensure that the driver properly initializes the RAID controller and configures all necessary parameters before starting operations."}, {"cause": "The aacraid driver might not be correctly handling device states, leading to devices being marked offline after error recovery attempts.", "code_file": "drivers/scsi/aacraid/linit.c", "fix_solution": "Improve the state management logic in the driver to ensure devices are correctly brought back online after error recovery."}], "input_tokens": 8674, "output_tokens": 387}
{"id": "8995", "paths": ["kernel/power/disk.c"], "predicts": ["drivers/acpi/glue.c", "drivers/acpi/power.c", "drivers/acpi/sleep/proc.c", "kernel/power/pm.c", "kernel/power/swsusp.c", "kernel/time/timekeeping.c", "arch/x86_64/kernel/time.c", "include/asm-x86_64/mc146818rtc.h"], "input_tokens_sum": 118897, "output_tokens_sum": 2183, "description": "Most recent kernel where this bug did not occur:2.6.20\nDistribution: FC6\nHardware Environment: ASUS A8N-SLI mobo, Athlon 64 3200+, PATA Disk\nSoftware Environment: FC6, MythTV 0.20.2-164\nProblem Description:\nChange in kernel code from support for /proc/acpi/alarm to /sys/class/rtc/rtc0/wakealarm and supporting code borked working system.  Will no longer wake at set time.\nTime set <> time reported by cat /sys.../wakealarm.  Return value off by large constant.  Note: Mobo doesn't support month, day, or year in alarm setting.\n\nSteps to reproduce:\nBefore upgrade from 2.6.20 to 2.6.22.2, suspend-to-disk with powerdown to standby would wake at time echoed into /proc/acpi/alarm.  Change of wakeup time setting code to echo 0 to /sys/class/rtc/rtc0/wakealarm followed by echo of seconds since epoch of desired wakeup time under 2.6.22.2 does not work.  System will not wake up at specified time.  Will wake by keyboard keystroke, such as Ctrl+Esc.  Tried enabling APM (BIOS) alarm setting and all ent", "title": "/proc/acpi/alarm worked; update to 2.6.22.2 and /sys/class/rtc/rtc0/wakealarm don't", "Kernel Version": "2.6.22", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["drivers/rtc/rtc-acpi.c", "drivers/acpi/sleep/proc.c"], "causes": [{"cause": "The transition from /proc/acpi/alarm to /sys/class/rtc/rtc0/wakealarm may not handle systems that do not support month, day, or year in alarm settings correctly.", "code_file": "drivers/rtc/rtc-acpi.c", "fix_solution": "Modify the cmos_set_alarm function to handle systems that do not support month, day, or year by setting these fields to a default value or ignoring them."}, {"cause": "The RTC driver may not correctly convert the time set by the user into the format expected by the hardware, leading to incorrect wakeup times.", "code_file": "drivers/rtc/rtc-acpi.c", "fix_solution": "Ensure that the conversion from user input time to RTC hardware time format is correctly implemented, especially handling BCD to binary conversions."}, {"cause": "The ACPI RTC wakeup event may not be correctly enabled or configured, preventing the system from waking up at the specified time.", "code_file": "drivers/acpi/sleep/proc.c", "fix_solution": "Verify and correct the logic in acpi_system_write_alarm to ensure that the RTC wakeup event is properly enabled and configured."}, {"cause": "The RTC alarm interrupt may not be correctly set or enabled, causing the system to miss the wakeup event.", "code_file": "drivers/rtc/rtc-acpi.c", "fix_solution": "Check the cmos_set_alarm function to ensure that the RTC_AIE (Alarm Interrupt Enable) bit is correctly set after configuring the alarm."}, {"cause": "The system may not correctly handle the RTC alarm when transitioning from suspend-to-disk, leading to missed wakeup events.", "code_file": "drivers/acpi/sleep/proc.c", "fix_solution": "Ensure that the ACPI RTC event handler is correctly installed and enabled during the suspend-to-disk process."}], "input_tokens": 10622, "output_tokens": 428}
{"id": "8848", "paths": ["drivers/ata/pata_hpt37x.c"], "predicts": ["drivers/ata/pata_hpt37x.c", "drivers/ata/libata-core.c", "drivers/ata/libata.h", "include/linux/libata.h", "include/linux/ata.h"], "input_tokens_sum": 113271, "output_tokens_sum": 1314, "description": "Most recent kernel where this bug did not occur: 2.6.17\n\nDistribution: Linux Debian 3.1 Sarge\n\nHardware Environment: \nm/b ABIT BE6-II ( HPT BIOS updated for LBA48), HDD Seagate ST3160212A 160GB PATA firmware version 3AAJ\n\nSoftware Environment: GRUB boot loader\n\nProblem Description:\nHPT370 max UDMA mode is UDMA66 with the IDE (non-experimantal) driver, and UDMA44 with the LibATA (experimantal) one.\n\nSteps to reproduce:\n\njust boot with kernel newer than 2.6.17. The drive is bootable.\n\nThe GIT versions of kernel ( containing some HPT patches ) don't fix the problem.", "title": "(pata HPT370) UDMA100 mode isn't available since LibATA has been incorporated to the kernel", "Kernel Version": "2.6.22", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/pata_hpt37x.c"], "causes": [{"cause": "The UDMA mode settings for HPT370 are not correctly configured in the libata driver, leading to a fallback to lower UDMA modes.", "code_file": "drivers/ata/pata_hpt37x.c", "fix_solution": "Ensure that the UDMA mask for HPT370 is set to support UDMA100 by modifying the udma_mask in the ata_port_info structure for HPT370."}, {"cause": "The clock settings for the HPT370 controller might not be correctly initialized, causing incorrect UDMA mode detection.", "code_file": "drivers/ata/pata_hpt37x.c", "fix_solution": "Review and adjust the clock settings and timing tables for HPT370 to ensure they support UDMA100, particularly in the hpt37x_timings_66 structure."}, {"cause": "The DPLL mode might not be correctly configured for HPT370, affecting the UDMA mode capabilities.", "code_file": "drivers/ata/pata_hpt37x.c", "fix_solution": "Ensure that the DPLL mode is correctly initialized and used for HPT370 by checking the prefer_dpll flag and related logic."}, {"cause": "Incorrect handling of PCI configuration space for HPT370, leading to improper initialization of UDMA settings.", "code_file": "drivers/ata/pata_hpt37x.c", "fix_solution": "Verify and correct the PCI configuration space accesses, especially around the registers used for UDMA mode settings."}, {"cause": "The transition from the old IDE driver to libata might have missed specific configurations required for HPT370 to achieve UDMA100.", "code_file": "drivers/ata/pata_hpt37x.c", "fix_solution": "Compare the old IDE driver settings with the current libata settings and ensure all necessary configurations are ported over."}], "input_tokens": 13209, "output_tokens": 421}
{"id": "8838", "paths": ["fs/ocfs2/file.c"], "predicts": ["fs/nfs/write.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "fs/nfsd/nfssvc.c", "include/linux/nfs_fs.h", "include/linux/nfs4.h", "include/linux/nfs_fs_sb.h", "net/sunrpc/clnt.c", "net/sunrpc/svc.c"], "input_tokens_sum": 116917, "output_tokens_sum": 1948, "description": "Most recent kernel where this bug did not occur: 2.6.21.6\nDistribution: very custom based on slackware (quite old glibc 2.3 gcc 3.4)\nHardware Environment:\nMB: 2 opteron X64  raid controler 3com series 95XX\nSoftware Environment:\nOCFS2 over DRBD 8.0.4 (active/active) over hardware raid volume\nNFS servers (version 1.1 from source)\nProblem Description:\nNFS shares ocfs2 file systems. \nProblem appears on NFS3 and NFS4 (both over tcp )\n\nWhen I write to file over NFS - content of the file is destroyed and contains random bytes. Size of file is preserved. Kernel report no errors.  Read works correctly. \nFile written directly on nfs server is OK (I can read it on server and client station). \nOn the same server NFS over reiserfs works correctly.\n\n\nSteps to reproduce:\ntry to mount nfs share on client workstation, and execute echo \"test\" >> mytestfile", "title": "Random data in files created on NFS (over OCFS2 over DRBD)", "Kernel Version": "2.6.22", "Product": "File System", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["fs/nfs/inode.c", "fs/nfs/write.c"], "causes": [{"cause": "NFS does not update the mtime and ctime when a file is opened with O_TRUNC, leading to cache inconsistencies.", "code_file": "fs/nfs/inode.c", "fix_solution": "Ensure that the mtime and ctime are updated by setting the ATTR_MTIME and ATTR_CTIME flags in the ia_valid field when ATTR_SIZE is set."}, {"cause": "NFS cache invalidation issues when using mmap, leading to stale data being read.", "code_file": "fs/nfs/inode.c", "fix_solution": "Implement a mechanism to check if the clean_pages list is empty after invalidate_inode_pages is called, and set a flag to invalidate the cache if necessary."}, {"cause": "NFS write operations not being flushed in a timely manner, causing data corruption when files are truncated.", "code_file": "fs/nfs/write.c", "fix_solution": "Synchronously flush dirty mmap pages when a file is about to be truncated down to prevent data corruption."}, {"cause": "NFS client-side optimizations that skip over-the-wire calls when file size does not change, leading to stale metadata.", "code_file": "fs/nfs/inode.c", "fix_solution": "Remove the optimization that skips the over-the-wire call when the file size does not change, ensuring metadata is always updated."}], "input_tokens": 10200, "output_tokens": 312}
{"id": "8721", "paths": ["sound/sound_core.c"], "predicts": ["lib/kobject.c", "sound/core/device.c", "include/linux/errno.h", "drivers/base/core.c", "drivers/base/class.c", "drivers/base/dd.c", "drivers/base/driver.c", "drivers/base/sys.c", "sound/core/sound.c", "include/sound/core.h"], "input_tokens_sum": 113438, "output_tokens_sum": 1524, "description": "Most recent kernel where this bug did not occur: dunno - jumped from 2.4.34.5 to 2.6.21.5\nDistribution: Debian 3.1\nHardware Environment: pc\nSoftware Environment: Linux 2.6.21.5 + patch suspend2-2.2.10\nProblem Description: trace dump loading module snd-pcm-oss\n\nSteps to reproduce: load the module\n\nhere's the dmesg dump:\n\nSoftware Watchdog Timer: 0.07 initialized. soft_noboot=0 soft_margin=60 sec (nowayout= 0)\nDevice driver i2c-9191 lacks bus and class support for being resumed.\nPCI driver via686a lacks driver specific resume support.\ninput: Power Button (FF) as /class/input/input3\nACPI: Power Button (FF) [PWRF]\ninput: Power Button (CM) as /class/input/input4\nACPI: Power Button (CM) [PWRB]\ni2c /dev entries driver\nDevice driver i2c-0 lacks bus and class support for being resumed.\nPCI driver vt596_smbus lacks driver specific resume support.\nit87: Found IT8712F chip at 0x290, revision 5\nCapability LSM initialized\nkobject_add failed for audio with -EEXIST, don't try to register things with t", "title": "trace dump: \"kobject_add failed for audio with -EEXIST, ...\"", "Kernel Version": "2.6.21", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["lib/kobject.c", "sound/core/init.c"], "causes": [{"cause": "The kobject_add function is failing due to an attempt to register a kobject with a name that already exists in the same directory.", "code_file": "lib/kobject.c", "fix_solution": "Modify the kobject_add function to check for existing names before attempting to register a new kobject, and handle the -EEXIST error more gracefully by either renaming the kobject or preventing duplicate registrations."}, {"cause": "The snd-pcm-oss module is trying to register a kobject with a name that conflicts with an existing kobject, possibly due to incorrect naming conventions or lack of unique identifiers.", "code_file": "sound/core/init.c", "fix_solution": "Ensure that the kobject names used in the snd-pcm-oss module are unique by appending a unique identifier or using a different naming scheme."}, {"cause": "The error message is being printed due to the CONFIG_KOBJECT_DEBUG being enabled, which causes the kernel to log errors more verbosely.", "code_file": "lib/kobject.c", "fix_solution": "Change the printk statements to pr_debug in the kobject_add function to suppress error messages unless debugging is explicitly enabled."}, {"cause": "The kobject registration process is not handling the cleanup of failed registrations properly, leading to conflicts when retrying the registration.", "code_file": "lib/kobject.c", "fix_solution": "Implement a cleanup mechanism in the kobject_add function to properly remove partially registered kobjects when an error occurs, preventing conflicts on subsequent registration attempts."}], "input_tokens": 9108, "output_tokens": 347}
{"id": "8709", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "drivers/acpi/battery.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/processor.c", "drivers/acpi/power.c", "include/acpi/acpi.h", "include/acpi/acglobal.h", "drivers/acpi/system.c", "arch/i386/pci/acpi.c", "include/acpi/acpi_bus.h"], "input_tokens_sum": 123152, "output_tokens_sum": 2523, "description": "Most recent kernel where this bug did not occur:\nBattery and other ACPI-related features used to work in 2.6.20\n\nDistribution: Ubuntu (7.04 with 2.6.20 - works, alpha 7.10 with 2.6.22-rc - does not work)\n\nHardware Environment:\nASUS M6r\n\nProblem Description:\n2.6.22-rc kernels are unable to check battery status. \nThe following errors show up in dmesg at boot:\n\nACPI: EC: acpi_ec_wait timeout, status = 255, expect_event = 2\nACPI: EC: input buffer is not empty, aborting transaction\nACPI Exception (evregion-0420): AE_TIME, Returned by Handler for [EmbeddedControl] [20070126]\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.RDC3] (Node ddf07f04), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\ECIO] (Node ddf0975c), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.ACPS] (Node ddf07f68), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\ACPS] (Node ddf04c70), AE_TIME\nACPI Error (psparse-0537", "title": "regression: EmbeddedControl AE_TIME errors, /proc/acpi/battery/* not present", "Kernel Version": "2.6.23-rc3", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/ec.c", "drivers/acpi/battery.c"], "causes": [{"cause": "The ACPI EC (Embedded Controller) is timing out due to the use of spinlocks which prevent sleeping, causing the system to miss interrupts.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Convert spinlocks to semaphores in the EC driver to allow sleeping and prevent timeouts during EC transactions."}, {"cause": "The EC subsystem defaults to interrupt mode, which may not be supported by all hardware, leading to timeouts.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Introduce a mechanism to force EC polling mode for specific hardware that does not support interrupt mode properly."}, {"cause": "The battery state is not being updated correctly after suspend/resume cycles, leading to incorrect battery status reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a resume method in the ACPI battery driver to refresh the battery state after suspend/resume cycles."}], "input_tokens": 10373, "output_tokens": 223}
{"id": "8671", "paths": ["drivers/cpufreq/cpufreq.c"], "predicts": ["drivers/cpufreq/cpufreq_conservative.c", "arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c", "kernel/power/swsusp.c", "drivers/acpi/sleep/main.c", "kernel/power/pm.c"], "input_tokens_sum": 114854, "output_tokens_sum": 1901, "description": "Most recent kernel where this bug did not occur: unkown\nDistribution: Gentoo Linux\nHardware Environment: IBM Thinkpad T43\nSoftware Environment:\nProblem Description: cpufreq_conservative doesn't scale CPU frequency anymore after wakeup from suspend to disk, instead CPU runs always with the highest available frequency. Scaling driver is acpi-cpufreq.\n\nSteps to reproduce: Choose cpufreq_conservative as scaling driver and execute \"echo disk > /sys/power/state\".", "title": "CPU frequency always on highest frequency after wakeup from suspend to disk", "Kernel Version": "2.6.22", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq_conservative.c", "arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c", "kernel/power/swsusp.c", "drivers/cpufreq/cpufreq.c"], "causes": [{"cause": "The cpufreq_conservative governor does not properly reinitialize or reset its state after waking up from suspend to disk, causing it to fail to scale the CPU frequency.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Ensure that the governor's state is reinitialized after waking up from suspend by resetting the requested frequency and other relevant variables."}, {"cause": "The acpi-cpufreq driver may not correctly handle the transition states after resuming from suspend, leading to incorrect frequency settings.", "code_file": "arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c", "fix_solution": "Modify the resume function to ensure that the CPU frequency is set according to the policy and not left at the maximum frequency."}, {"cause": "The suspend and resume process might not be correctly restoring the CPU frequency settings, causing the system to default to the highest frequency.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Ensure that the CPU frequency settings are saved before suspend and restored correctly after resume."}, {"cause": "The cpufreq framework might not be correctly notifying the cpufreq_conservative governor of state changes after a resume from suspend.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Add proper notifications or hooks in the cpufreq framework to inform governors of state changes post-resume."}], "input_tokens": 9657, "output_tokens": 338}
{"id": "8667", "paths": ["drivers/net/sky2.c"], "predicts": ["drivers/net/sky2.c", "drivers/net/sky2.h", "drivers/base/power/resume.c", "drivers/base/power/suspend.c", "arch/i386/kernel/acpi/sleep.c", "arch/x86_64/kernel/suspend.c", "kernel/power/pm.c", "kernel/power/swsusp.c"], "input_tokens_sum": 175004, "output_tokens_sum": 7174, "description": "Distribution: Debian Etch\nHardware Environment: Laptop Toshiba M45-S355\n\nProblem Description:\nSuspend to ram work fine in my Toshiba M45-S355, but when laptop return (from RAM), my network connection crash, and I need unload and load again my sky2 module.\n\nMy NIC is:\nMarvell Technology Group Ltd. 88E8036 PCI-E Fast Ethernet Controller (rev 10)\n\nRafael J. Wysocki (from LKML) recommend open this issue on this category (Power Management).\n\nkernel: sky2 eth1: disabling interface\nkernel: sky2 eth1: enabling interface\nkernel: sky2 eth1: ram buffer 4K\nkernel: ADDRCONF(NETDEV_UP): eth1: link is not ready\nkernel: uhci_hcd 0000:00:1d.3: remove, state 4\nkernel: usb usb4: USB disconnect, address 1\nkernel: uhci_hcd 0000:00:1d.3: USB bus 4 deregistered\nkernel: ACPI: PCI interrupt for device 0000:00:1d.3 disabled\nkernel: uhci_hcd 0000:00:1d.2: remove, state 4\nkernel: usb usb3: USB disconnect, address 1\nkernel: uhci_hcd 0000:00:1d.2: USB bus 3 deregistered\nkernel: ACPI: PCI interrupt for device 0000:0", "title": "sky2 crash when return from resume to ram", "Kernel Version": "2.6.21", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["drivers/net/sky2.c"], "causes": [{"cause": "The sky2 network driver does not properly handle the resume from suspend-to-RAM, leading to network interface issues.", "code_file": "drivers/net/sky2.c", "fix_solution": "Implement a proper resume function in the sky2 driver to reinitialize the network interface correctly after a suspend-to-RAM."}, {"cause": "The network interface is not correctly re-enabled after a resume, possibly due to improper handling of power management states.", "code_file": "drivers/net/sky2.c", "fix_solution": "Ensure that the resume function in the sky2 driver correctly restores the network interface state and re-enables the link."}, {"cause": "The PCI device state is not correctly restored after resume, causing the network interface to fail.", "code_file": "drivers/net/sky2.c", "fix_solution": "Add code to the resume function to properly restore the PCI device state, including reinitializing the hardware registers."}, {"cause": "The sky2 driver does not handle the ACPI power management events correctly, leading to network interface issues after resume.", "code_file": "drivers/net/sky2.c", "fix_solution": "Modify the sky2 driver to correctly handle ACPI power management events and ensure the network interface is properly reinitialized."}, {"cause": "The network interface is not correctly reconfigured after resume due to missing or incorrect device suspend/resume callbacks.", "code_file": "drivers/net/sky2.c", "fix_solution": "Implement or correct the device suspend/resume callbacks in the sky2 driver to ensure proper reconfiguration of the network interface."}], "input_tokens": 4618, "output_tokens": 370}
{"id": "8569", "paths": ["drivers/input/serio/i8042-x86ia64io.h"], "predicts": ["drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/synaptics.c", "drivers/input/input.c", "include/linux/input.h"], "input_tokens_sum": 111246, "output_tokens_sum": 1695, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18\nDistribution: gentoo\nHardware Environment: amd64\nProblem Description: \ni can't find a touchpad in /proc/bus/input/devices since kernel 2.6.18 anymore.\ni've tried kernel 2.6.19 to 2.6.22-rc3 (suspend2, gentoo & vanilla).\nevdev and psmouse modules are loaded. i don't think it's a configuration issue,\nsince recent livecd distros work neither. a clue?\n\noutput of /proc/bus/input/devices on kernel 2.6.18:\nI: Bus=0011 Vendor=0001 Product=0001 Version=ab41\nN: Name=\"AT Translated Set 2 keyboard\"\nP: Phys=isa0060/serio0/input0\nS: Sysfs=/class/input/input0\nH: Handlers=kbd\nB: EV=120013\nB: KEY=402000000 3802078f840d001 feffffdfffefffff fffffffffffffffe\nB: MSC=10\nB: LED=7\n\nI: Bus=0011 Vendor=0002 Product=0007 Version=0000\nN: Name=\"SynPS/2 Synaptics TouchPad\"\nP: Phys=isa0060/serio1/input0\nS: Sysfs=/class/input/input1\nH: Handlers=mouse0\nB: EV=b\nB: KEY=6420 70000 0 0 0 0\nB: ABS=11000003\n\n\noutput of /proc/bus/input/devices on kernel 2.6.21:\nI: Bus", "title": "no touchpad since kernel 2.6.18", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/synaptics.c", "drivers/input/input.c", "Documentation/kernel-parameters.txt"], "causes": [{"cause": "The Synaptics touchpad detection logic may have been altered or removed in newer kernel versions, causing the touchpad to not be recognized.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Reintroduce or correct the Synaptics touchpad detection logic to ensure the touchpad is properly identified and initialized."}, {"cause": "A configuration parameter or module option might be disabling the Synaptics protocol extension, preventing the touchpad from being detected.", "code_file": "drivers/input/mouse/synaptics.c", "fix_solution": "Ensure that the Synaptics protocol extension is enabled by default or provide a clear configuration option to enable it."}, {"cause": "Changes in the input subsystem might have affected how input devices are registered, causing the touchpad to not appear in /proc/bus/input/devices.", "code_file": "drivers/input/input.c", "fix_solution": "Review and update the input device registration process to ensure all devices, including touchpads, are correctly registered and visible."}, {"cause": "The kernel might be incorrectly identifying the touchpad as a different type of device due to changes in the detection logic.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Adjust the detection logic to correctly identify Synaptics touchpads and prevent misidentification as other device types."}, {"cause": "The touchpad might be disabled due to a kernel parameter or module option that limits protocol extensions.", "code_file": "Documentation/kernel-parameters.txt", "fix_solution": "Update documentation to ensure users are aware of necessary parameters to enable touchpad functionality and remove any restrictive defaults."}], "input_tokens": 10557, "output_tokens": 385}
{"id": "8559", "paths": ["drivers/acpi/sbs.c"], "predicts": ["drivers/acpi/sbs.c", "drivers/acpi/battery.c", "drivers/acpi/i2c_ec.c", "drivers/acpi/ec.c", "include/acpi/acpi.h", "include/linux/i2c-dev.h"], "input_tokens_sum": 111003, "output_tokens_sum": 1617, "description": "Most recent kernel where this bug did *NOT* occur: none\nDistribution: Fedora 6\nHardware Environment: Kontron Revolution Weatherproof Laptop\nSoftware Environment: Stock standard environment.  All modules are Fedora\ndistribution. Updated to latest.\nProblem Description: No samrtbattery entry in /proc/acpi/battery\n\nHave a specialised weatherproof laptop with a smartbattery running FC6\nlatest kernel. I cannot get battey monitoring going. Have loaded\nmodules i2c_ec and sbs with out any errors.\n\nlog/messages indicate that the EC driver loads with\nACPI: EC HC smbus [SMB1]\n\nThere is nothing from the sbs module though it is loaded and\nthe /proc/acpi/battery directory is empty.\n\nThe smartbattery can be recognized. If I run the following command ...\n\n   smartbattery 1             (1 is to specify the i2c dev,\n                            needs i2c-dev module loaded)\n\nthen I get battery status, which behaves properly (changes if I unplug\nAC etc). It shows Battery name, status , charge or discharge c", "title": "no smartbattery status on Laptop", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/sbs.c", "drivers/acpi/ec.c", "drivers/acpi/battery.c", "drivers/i2c/i2c-dev.c"], "causes": [{"cause": "The sbs module is not properly initializing or registering the smart battery interface, leading to no entries in /proc/acpi/battery.", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Ensure that the sbs module correctly initializes and registers the smart battery interface by adding appropriate initialization and registration calls in the module's init function."}, {"cause": "The i2c_ec module might not be correctly interfacing with the smart battery subsystem, preventing communication with the battery.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Verify and correct the i2c_ec module's initialization and communication setup to ensure it properly interfaces with the smart battery subsystem."}, {"cause": "The ACPI subsystem might not be correctly creating the battery entries in /proc/acpi/battery due to missing or incorrect ACPI table parsing.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Review and update the ACPI table parsing logic to ensure that battery entries are correctly created in /proc/acpi/battery."}, {"cause": "The i2c-dev module might not be correctly handling the smart battery communication, leading to missing battery status.", "code_file": "drivers/i2c/i2c-dev.c", "fix_solution": "Ensure that the i2c-dev module correctly handles smart battery communication by verifying the ioctl and read/write operations for smart battery data."}], "input_tokens": 8609, "output_tokens": 327}
{"id": "8535", "paths": ["drivers/usb/host/ehci-sched.c"], "predicts": ["drivers/hid/usbhid/hid-core.c", "drivers/usb/core/hub.c", "drivers/usb/core/hcd.c", "arch/i386/kernel/irq.c", "include/linux/hid.h", "include/asm-i386/irq.h"], "input_tokens_sum": 118112, "output_tokens_sum": 1416, "description": "Most recent kernel where this bug did *NOT* occur: pre 2.6.21 mm kernels, non-mm\n2.6.22-rc2\nDistribution: Fedora Devel\nHardware Environment: EHCI input on external powered hub with CK804 mainboard\nSoftware Environment: Nothing specific\nProblem Description:\n\nAfter a few hours of activity 2.6.22-rc1-mm1 and 2.6.22-rc2-mm1 will lose USB\nHID INPUT (keyboard or mice with no priority), then the system will freeze\n\nIf the mouse/tackball is lost first switching to the console and moving the ball\nwill output random text. Restarting gpm will rescue the mouse (but the system\nwill lock up soon after anyway)\n\nSame system with similar config works fine with mainline or older mm kernels\n\nLast trace capture in logs before lockup:\n\nKernel:\ndrivers/hid/usbhid/hid-core.c: input irq status -75 received\n\nXorg:\nProcXCloseDevice to close or not ?\nProcXCloseDevice to close or not ?\n(II) nek4k-enhanced-usb-0000:00:02.1-8.1/input1: Off\n(II) track-expl-usb-0000:00:02.1-8.3/input0: Off\n\n\nSteps to reproduce:\nJust ", "title": "USB input death then system freeze", "Kernel Version": "2.6.23-rc1", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/hid/usbhid/hid-core.c", "arch/x86/kernel/irq.c", "drivers/usb/core/hub.c", "drivers/usb/core/usb.c", "mm/page_alloc.c"], "causes": [{"cause": "The USB HID input devices are losing connection due to improper handling of IRQ status -75, which indicates an EOVERFLOW error.", "code_file": "drivers/hid/usbhid/hid-core.c", "fix_solution": "Add error handling for IRQ status -75 to properly reset the USB device or reinitialize the connection."}, {"cause": "The system freeze might be caused by unhandled IRQs leading to a deadlock situation.", "code_file": "arch/x86/kernel/irq.c", "fix_solution": "Ensure that all IRQs are properly acknowledged and handled, especially in the case of unexpected vectors, to prevent deadlocks."}, {"cause": "The USB input devices might be affected by a race condition in the IRQ handling code, leading to loss of input and system freeze.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Implement proper locking mechanisms around critical sections in the IRQ handling code to prevent race conditions."}, {"cause": "The issue could be related to improper power management or handling of the external powered hub, causing the USB devices to disconnect.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Add checks and handling for power state changes in the USB core to ensure devices remain connected."}, {"cause": "The problem might be due to a regression in the mm kernel patches affecting USB input handling.", "code_file": "mm/page_alloc.c", "fix_solution": "Review and revert any recent changes in memory management that could affect USB input handling stability."}], "input_tokens": 9898, "output_tokens": 360}
{"id": "8450", "paths": ["include/net/ip6_fib.h"], "predicts": ["net/ipv6/exthdrs.c", "net/ipv6/ip6_input.c", "include/net/ipv6.h", "include/net/ip6_route.h", "net/ipv6/protocol.c", "net/ipv6/raw.c", "include/net/ip6_tunnel.h", "include/linux/netfilter_ipv6.h"], "input_tokens_sum": 115790, "output_tokens_sum": 1601, "description": "Most recent kernel where this bug did *NOT* occur: had this since 2.6.20, didnt\ntest earlier versions\nDistribution: gentoo\nHardware Environment: p3\nSoftware Environment: gcc 4.1.2\nProblem Description:\n\nrunning ip6sic with the following seed\n\nip6sic -i lo -d ::1 -p 2000 -r 32321\n\ncauses this oops\n\n[   69.293000] Oops: 0000 [#1]\n[   69.293000] PREEMPT \n[   69.293000] Modules linked in:\n[   69.293000] CPU:    0\n[   69.293000] EIP:    0060:[<c0548b76>]    Not tainted VLI\n[   69.293000] EFLAGS: 00010282   (2.6.21-ga989705c #7)\n[   69.293000] EIP is at ipv6_hop_jumbo+0x26/0x180\n[   69.293000] eax: 00000000   ebx: ce61bc08   ecx: 00000001   edx: 00000103\n[   69.293000] esi: ce750166   edi: 000000fd   ebp: c0773ed8   esp: c0773ec0\n[   69.293000] ds: 007b   es: 007b   fs: 0000  gs: 0033  ss: 0068\n[   69.293000] Process ip6sic (pid: 4607, ti=c0773000 task=cf332070\ntask.ti=cf002000)\n[   69.293000] Stack: c06c4ccc 000000fb c0773ef8 00000246 c071ae9c 0000002a\nc0773f08 c054837f \n[   69.293000]      ", "title": "ip6sic causes bug during interrupt handling", "Kernel Version": "2.6.21", "Product": "Networking", "Component": "IPV6", "Hardware": "i386 Linux", "reranked_files": ["net/ipv6/exthdrs.c", "net/ipv6/ip6_input.c"], "causes": [{"cause": "The function ipv6_hop_jumbo is not handling the skb buffer correctly during interrupt handling, leading to an oops.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Ensure that the skb buffer is properly checked and managed within ipv6_hop_jumbo to prevent invalid memory access."}, {"cause": "The TLV parsing in ip6_parse_tlv might not be correctly handling certain edge cases, causing a crash.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Add additional checks and error handling in ip6_parse_tlv to ensure robustness against malformed packets."}, {"cause": "The ipv6_parse_hopopts function might not be correctly updating the skb pointer, leading to invalid memory access.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Modify ipv6_parse_hopopts to ensure the skb pointer is correctly updated and validated after parsing options."}, {"cause": "The ipv6_hop_ra function might not be correctly handling the router alert option, leading to an oops.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Ensure that ipv6_hop_ra properly validates the router alert option and handles any errors gracefully."}, {"cause": "The ipv6_rcv function might not be correctly handling packets with hop-by-hop options, leading to a crash.", "code_file": "net/ipv6/ip6_input.c", "fix_solution": "Add additional validation and error handling in ipv6_rcv for packets with hop-by-hop options."}], "input_tokens": 11570, "output_tokens": 379}
{"id": "8381", "paths": ["drivers/net/forcedeth.c"], "predicts": ["drivers/net/forcedeth.c", "kernel/power/swsusp.c", "net/core/ethtool.c", "include/linux/ethtool.h"], "input_tokens_sum": 112906, "output_tokens_sum": 1315, "description": "Distribution: debian unstable\nHardware Environment: Athlon 3000+ on a K8N-E-Deluxe\nSoftware Environment: Linux 2.6.21-rc5\nProblem Description: The integrated NIC of my motherboard supports wol propertly\nwhen I hald my computer. But when I use suspend to ram or suspend to disk, wol\ndoesn't work anymore. \n\nSteps to reproduce:\n\nSteps that works :\n\n1/ power on the computer\n2/ boot linux\n3/ execute \"ethtool -s eth0 wol g\"\n4/ halt\n5/ send a magic packet with wakeonlan from another computer\n\nSteps that doesn't work :\n\n1/ power on the computer\n2/ boot linux\n3/ execute \"ethtool -s eth0 wol g\"\n4/ cat mem > /sys/power/state\n5/ send a magic packet with wakeonlan from another computer\n\nSame thing with s2disk.\n\nI'd like to use wol + suspend to ram.\n\n#lspci\nserver:/home/matthieu# lspci\n00:00.0 Host bridge: nVidia Corporation nForce3 250Gb Host Bridge (rev a1)\n00:01.0 ISA bridge: nVidia Corporation nForce3 250Gb LPC Bridge (rev a2)\n00:01.1 SMBus: nVidia Corporation nForce 250Gb PCI System Management (", "title": "(net forcedeth) doesn't wol on suspend", "Kernel Version": "2.6.21", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/nvidia/forcedeth.c", "net/core/dev.c", "net/core/ethtool.c", "kernel/power/swsusp.c"], "causes": [{"cause": "The forcedeth driver does not properly handle Wake-on-LAN (WoL) settings during suspend operations, leading to WoL not functioning after suspend.", "code_file": "drivers/net/ethernet/nvidia/forcedeth.c", "fix_solution": "Ensure that the WoL settings are preserved and re-applied during the suspend and resume operations in the forcedeth driver."}, {"cause": "The network device's power management settings are not correctly restored after a suspend operation, causing WoL to fail.", "code_file": "net/core/dev.c", "fix_solution": "Modify the device suspend and resume logic to ensure that WoL settings are correctly restored after a suspend operation."}, {"cause": "The ethtool interface does not correctly apply WoL settings during suspend, leading to WoL not functioning after suspend.", "code_file": "net/core/ethtool.c", "fix_solution": "Update the ethtool interface to ensure WoL settings are correctly applied and maintained during suspend and resume operations."}, {"cause": "The swsusp (software suspend) mechanism does not correctly handle network device states, causing WoL settings to be lost.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Ensure that the swsusp mechanism properly saves and restores network device states, including WoL settings, during suspend and resume."}], "input_tokens": 10139, "output_tokens": 317}
{"id": "8374", "paths": ["drivers/acpi/thermal.c"], "predicts": ["drivers/acpi/fan.c", "drivers/acpi/thermal.c", "drivers/acpi/power.c", "drivers/acpi/ec.c", "arch/i386/kernel/acpi/processor.c", "include/acpi/acpi.h", "include/acpi/processor.h", "arch/i386/pci/acpi.c", "arch/x86_64/kernel/acpi/sleep.c", "kernel/power/pm.c"], "input_tokens_sum": 112470, "output_tokens_sum": 1515, "description": "Most recent kernel where this bug did *NOT* occur: None\nDistribution: Debian 4.0 - Etch (Final)\nHardware Environment: HP/Compaq nc6000 (laptop), Pentium M 1.6 GHz, Intel ICH4,\nATI Radeon Mobility 9600, 512 MB RAM, newest available BIOS\nSoftware Environment: Debian Etch, no self-compiled tools but the kernel\nProblem Description: This is gonna be quite a long but hopefully equally useful\ndescription:\nShortly after I bought the laptop and installed Linux on it, I noticed that it\nsometimes turned itself off while I was away and did not turn off the computer.\nIt took me quite a while to figure out what was wrong until the laptop shut down\nby itself while I was using it.\nThe kernel printed a message that a ACPI critical trip point was reached and\nshut the system down to prevent damage. After I knew there was a temperature\nproblem I wrote a script to log the temperatures and after it happend again I\nsaw that the temperatures suddenly started to rise from about 40", "title": "ACPI: Unable to turn cooling device [c146aec8] 'on'", "Kernel Version": "2.6.21", "Product": "ACPI", "Component": "Power-Fan", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/thermal.c"], "causes": [{"cause": "The ACPI thermal zone is not correctly updating the cooling device state, leading to the inability to turn on the cooling device.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Ensure that the cooling device update function correctly handles the state transition and updates the cooling device list properly."}, {"cause": "The critical trip point is not being set or read correctly, causing the system to reach a critical temperature without activating cooling devices.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Verify and correct the logic for setting and reading the critical trip point to ensure it triggers the cooling devices as expected."}, {"cause": "The sysfs interface for thermal zones may not be correctly reflecting the state of the cooling devices, leading to incorrect system behavior.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Review and fix the sysfs interface implementation to ensure it accurately represents the cooling device states and allows for proper control."}, {"cause": "The ACPI thermal zone polling frequency might be too low, causing delayed response to temperature changes.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Increase the polling frequency to ensure more timely updates and responses to temperature changes."}], "input_tokens": 9726, "output_tokens": 294}
{"id": "8269", "paths": ["drivers/pnp/pnpacpi/core.c"], "predicts": ["drivers/pnp/core.c", "drivers/pnp/manager.c", "drivers/acpi/power.c", "drivers/acpi/processor_core.c", "kernel/power/pm.c", "arch/i386/power/suspend.c", "kernel/power/swsusp.c", "net/irda/irda_device.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h"], "input_tokens_sum": 111063, "output_tokens_sum": 1546, "description": "Most recent kernel where this bug did *NOT* occur: did occur since S3 works on P35\nDistribution: Gentoo 2006.1\nHardware Environment: Samsung P35 XVM 1600 III\nSoftware Environment:\nProblem Description:\nAfter doing the 2nd resume cycle after S3 dmesg shows this:\n\n1st S3:\npnp: Device 00:08 disabled.\npnp: Device 00:06 disabled.\n1st Resume:\nBoth gets activated.\n\n2nd S3:\npnp: Device 00:08 disabled.\npnp: Device 00:06 disabled.\n2nd Resume:\npnp: Evaluate _CRS failed\npnp: Failed to activate device 00:06.\npnp: Evaluate _CRS failed\npnp: Failed to activate device 00:08.\npnp: Device 00:09 does not support activation.\npnp: Failed to activate device 00:0a.\n\nFor every S3 & Resume again the last messages are there again.\nAlso my irda (nsc_ircc) does not work anymore after second resume as the chip\ntype is wrong now, at first boot its all ok.\n\nSteps to reproduce:\n\nTake a P35 and do two S3 & Resume Cycles. Happens all the time.\n\nkind regards\n\nTorsten", "title": "pnp: Failed to activate device 00:0a - Samsung P35 XVM 1600 III", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "i386 Linux", "reranked_files": ["drivers/pnp/manager.c", "drivers/acpi/resource.c", "kernel/power/swsusp.c", "drivers/pnp/resource.c", "drivers/base/power/resume.c"], "causes": [{"cause": "The PnP subsystem fails to properly reinitialize devices after the second resume from S3, leading to failed device activation.", "code_file": "drivers/pnp/manager.c", "fix_solution": "Ensure that the PnP subsystem correctly resets and reinitializes devices during the resume process, possibly by adding a reset function call before device activation."}, {"cause": "The ACPI subsystem does not correctly handle the _CRS (Current Resource Settings) evaluation after the second resume, causing device activation failures.", "code_file": "drivers/acpi/resource.c", "fix_solution": "Modify the ACPI resource handling to ensure that _CRS evaluation is correctly performed and resources are properly reassigned during resume."}, {"cause": "The swsusp (software suspend) process does not properly restore device states, leading to incorrect device configurations after resume.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Implement a more robust device state restoration mechanism in the swsusp resume path to ensure devices are correctly reinitialized."}, {"cause": "The PnP resource manager does not handle disabled resources correctly, leading to activation failures after resume.", "code_file": "drivers/pnp/resource.c", "fix_solution": "Update the resource manager to correctly handle and reassign disabled resources during the resume process."}, {"cause": "The device power management does not correctly transition devices from a suspended state to an active state, causing activation failures.", "code_file": "drivers/base/power/resume.c", "fix_solution": "Ensure that the power management code correctly transitions devices from PMSG_FREEZE to PMSG_SUSPEND and then to an active state during resume."}], "input_tokens": 10211, "output_tokens": 390}
{"id": "8262", "paths": ["drivers/pcmcia/cs.c"], "predicts": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/pcmcia_resource.c", "drivers/pcmcia/rsrc_mgr.c", "include/pcmcia/cs.h", "include/pcmcia/ss.h", "Documentation/pcmcia/crc32hash.c"], "input_tokens_sum": 112813, "output_tokens_sum": 1635, "description": "Most recent kernel where this bug did *NOT* occur: I don't know any.\nDistribution: Debian Etch\nHardware Environment: Thinkpad T41p\nSoftware Environment: pccardctl eject\nProblem Description: \n\nThe command \"pccardctl eject\" gives the following warning:\n\nkernel: PCMCIA: socket f793c428: *** DANGER *** unable to remove socket power\n\nIt seems that this warning is wrong, because the pcmcia-card is offline. (LED \nis off.)\n\nSteps to reproduce:\nInserting a pcmcia-card (I use the merlin u740.) and after this use \"pccardctl \neject\". If I remove the card without pccardctl eject I get no warning from the \nkernel.\n\ncat /proc/iomem  | grep -C1 yenta\nb0000000-b0000fff : 0000:02:00.0\n  b0000000-b0000fff : yenta_socket\nb1000000-b1000fff : 0000:02:00.1\n  b1000000-b1000fff : yenta_socket\n\nlspci -vv  | grep -A14 Card\n02:00.0 CardBus bridge: Texas Instruments PCI4520 PC card Cardbus Controller \n(rev 01)\n        Subsystem: IBM Unknown device 0552\n        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGAS", "title": "PCMCIA: socket *** DANGER *** unable to remove socket power", "Kernel Version": "2.6.20", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/pcmcia/cs.c", "drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/ds.c", "drivers/pcmcia/cs_internal.h", "drivers/pcmcia/ti113x.h"], "causes": [{"cause": "The PCMCIA subsystem is not correctly handling the power removal process for the socket, leading to the warning message.", "code_file": "drivers/pcmcia/cs.c", "fix_solution": "Ensure that the power removal logic correctly updates the socket state and checks the power status before issuing warnings."}, {"cause": "The yenta_socket driver may not be correctly managing the power state of the socket during the eject process.", "code_file": "drivers/pcmcia/yenta_socket.c", "fix_solution": "Add checks to verify the power state of the socket before attempting to remove power, and ensure proper synchronization."}, {"cause": "The PCMCIA socket state is not being updated correctly after the card is ejected, leading to incorrect power status reporting.", "code_file": "drivers/pcmcia/ds.c", "fix_solution": "Update the socket state to reflect the correct power status after a card is ejected, ensuring the LED status is accurately represented."}, {"cause": "The PCMCIA subsystem may not be correctly interfacing with the sysfs entries, leading to incorrect power status reporting.", "code_file": "drivers/pcmcia/cs_internal.h", "fix_solution": "Ensure that sysfs entries are correctly updated to reflect the current power status of the socket after an eject operation."}, {"cause": "The TI CardBus bridge may have incorrect IRQ routing, affecting the power management of the PCMCIA socket.", "code_file": "drivers/pcmcia/ti113x.h", "fix_solution": "Review and correct the IRQ routing logic to ensure it does not interfere with power management operations."}], "input_tokens": 10076, "output_tokens": 377}
{"id": "8110", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/thermal.c", "drivers/acpi/ec.c", "drivers/acpi/bus.c", "arch/i386/kernel/acpi/processor.c", "include/acpi/acpi_drivers.h", "include/linux/acpi.h", "arch/i386/kernel/irq.c", "arch/i386/kernel/time.c", "drivers/acpi/system.c", "kernel/printk.c"], "input_tokens_sum": 110636, "output_tokens_sum": 1972, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.2\nDistribution: Debian/SID\nHardware Environment: HP/Compaq nx8220 (and nc6000, nc8000)\nSoftware Environment:\nProblem Description:\n\nSince I'm using kernel 2.6.20, on some fresh start-ups ACPI reports insanely\nhigh temperatures of some thousand degrees C for thermal zone TZ3. I don't\nexactly know what this sensor does - TZ1 is CPU temperature, TZ2 graphics chip,\nTZ4 shows speed of CPU fan in % - I guess TZ3 shows some kind of case\ntemperature. Normal values for TZ3 are about 32C.\n\nAnother user on some forum has the same problem using a nc6000, yet another one\nuses a nc8000 and kernel 2.6.19 (which I personally never installed/used). So I\nguess the problem began with 2.6.19.\n\nAs I'm using powersaved, the system immediately shuts down on boot time, when\npowersaved starts. Messages in syslog are sth. like:\n\nACPI: Critical trip point\nCritical temperature reached (3264 C), shutting down.\n\nThe temperature shown is always different, most", "title": "insanely high temperature on bootup (e.g. 3517 C) - HP/Compaq nx8220, nc6000, nc8000 - 2.6.19 regression", "Kernel Version": "2.6.19", "Product": "ACPI", "Component": "EC", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/thermal.c", "drivers/acpi/ec.c", "drivers/acpi/scan.c", "drivers/acpi/fan.c"], "causes": [{"cause": "Incorrect temperature reading due to ACPI thermal zone misconfiguration or regression in handling thermal zones.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Review and correct the logic for reading and interpreting thermal zone temperatures, ensuring proper initialization and handling of temperature values."}, {"cause": "Regression in the Embedded Controller (EC) communication affecting temperature readings.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Investigate and fix any changes in EC communication logic that may affect temperature readings, possibly reverting to previous stable logic or improving error handling."}, {"cause": "Faulty ACPI DSDT (Differentiated System Description Table) causing incorrect temperature values.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Implement additional checks or corrections for DSDT parsing to ensure accurate temperature readings from ACPI tables."}, {"cause": "Improper handling of ACPI trip points leading to incorrect temperature shutdown behavior.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Adjust the logic for handling ACPI trip points to ensure they are correctly set and interpreted, preventing erroneous shutdowns due to false critical temperature readings."}, {"cause": "Changes in ACPI fan control logic affecting thermal management.", "code_file": "drivers/acpi/fan.c", "fix_solution": "Review and correct any changes in fan control logic that may impact thermal management, ensuring fans are activated correctly based on temperature readings."}], "input_tokens": 10403, "output_tokens": 342}
{"id": "7950", "paths": ["drivers/net/forcedeth.c"], "predicts": ["drivers/net/forcedeth.c", "drivers/net/mii.c", "drivers/net/phy/phy.c", "net/core/dev.c", "net/core/ethtool.c", "net/ipv4/protocol.c", "arch/i386/kernel/irq.c", "drivers/pci/pci.c", "include/linux/netdevice.h", "include/linux/netfilter.h"], "input_tokens_sum": 106449, "output_tokens_sum": 1336, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.6\n\nDistribution: CentOS 4.4\n\nHardware Environment:\n\nASUS M2N-E (nForce 570 chipset)\nAMD64 X2 Dual Core 5200+\nBuilt in nic hooked up to a HP ProCurve 2428 gigabit switch.\n\nSoftware Environment:\nUsing a plain kernel without any distro patches.\nUsing forcedeth network driver.\nNo nVidia binary drivers what so ever.\nIP tables is turned off.\n\nProblem Description:\nAt random all network traffic just stops without apparent reason.\nRunning tcpdump shows outgoing packets but no incoming packets.\nIfconfig does not show any rx or tx errors.\nNo error messages show up in dmesg.\nTransfering data at high speed triggers the problem almost right away.\nWhen running an interactive session in ssh it tends to happen after 5-10 \nminutes.\nKernel 2.6.19.2 has the same problem as well.\n\nDoing a ifdown eth0 + ifup eth0 makes things work again for a while, but sooner \nor later it happens again.\nWhen hooking it up to a 100 megabit switch it works perfectly.\n", "title": "Network traffic stops inexplicably when running at gigabit speed.", "Kernel Version": "2.6.20", "Product": "Networking", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/forcedeth.c"], "causes": [{"cause": "The forcedeth driver may not handle gigabit speed properly due to insufficient interrupt handling, leading to network traffic halts.", "code_file": "drivers/net/forcedeth.c", "fix_solution": "Increase the max_interrupt_work parameter to handle more interrupts, which can prevent the driver from hanging under high load."}, {"cause": "The forcedeth driver might not be properly initializing or resetting the network interface at gigabit speeds, causing traffic to stop.", "code_file": "drivers/net/forcedeth.c", "fix_solution": "Ensure that the driver properly initializes and resets the network interface by adding additional checks and resets in the nv_open and nv_close functions."}, {"cause": "The driver may not be correctly handling the descriptor ring buffer at high speeds, leading to packet loss or traffic stops.", "code_file": "drivers/net/forcedeth.c", "fix_solution": "Modify the ring buffer management logic to ensure that it can handle high-speed traffic without dropping packets or causing hangs."}, {"cause": "The driver might not be correctly handling the PHY link speed changes, causing issues when operating at gigabit speeds.", "code_file": "drivers/net/forcedeth.c", "fix_solution": "Add additional logic to handle PHY link speed changes more robustly, ensuring that the driver adapts correctly to gigabit speeds."}], "input_tokens": 10948, "output_tokens": 307}
{"id": "7942", "paths": ["drivers/ieee1394/nodemgr.c"], "predicts": ["drivers/ieee1394/ohci1394.c", "drivers/ieee1394/ohci1394.h", "drivers/ieee1394/hosts.c", "drivers/ieee1394/ieee1394_core.c", "drivers/ieee1394/nodemgr.c"], "input_tokens_sum": 113242, "output_tokens_sum": 1859, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.19\nDistribution: Fedora Core 5\nHardware Environment: 4-processor IWill H8502 (2.8GHz single core Opterons) w/\n10GB of RAM installed 4/2/2/2 across 4 nodes.\nSoftware Environment:\n\nThis is from the working kernel.  All have been built with the same versions of\nsoftware:\n\nLinux bubba.tuc.us.ray.com 2.6.19_00 #2 SMP PREEMPT Mon Feb 5 15:20:05 MST 2007\nx86_64 x86_64 x86_64 GNU/Linux\n\nGnu C                  4.1.1\nGnu make               3.80\nbinutils               2.16.91.0.6\nutil-linux             2.13-pre6\nmount                  2.13-pre6\nmodule-init-tools      3.2-pre9\ne2fsprogs              1.38\nquota-tools            3.13.\nPPP                    2.4.3\nLinux C Library        > libc.2.4\nDynamic linker (ldd)   2.4\nProcps                 3.2.6\nNet-tools              1.60\nKbd                    1.12\nSh-utils               5.93\nudev                   084\nModules Loaded         raw1394 ohci1394 ieee1394 tg3\n\n\nProblem Description:\n\nLooks lik", "title": "ohci1394 module broken and cannot be removed", "Kernel Version": "2.6.20", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/ieee1394/nodemgr.c", "drivers/ieee1394/ohci1394.c", "drivers/ieee1394/ieee1394_core.c"], "causes": [{"cause": "The ohci1394 module hangs during removal due to blocked signals in the kernel thread.", "code_file": "drivers/ieee1394/nodemgr.c", "fix_solution": "Unblock SIGTERM after the daemonize call to allow the thread to receive termination signals."}, {"cause": "The ohci1394 module calls dma_pool_destroy from an invalid context, causing a hang during module removal.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Use a work queue to defer the destruction of the DMA pool to a valid context."}, {"cause": "The ieee1394 subsystem uses deprecated kernel_thread API, which may cause issues with thread management.", "code_file": "drivers/ieee1394/ieee1394_core.c", "fix_solution": "Convert the ieee1394 subsystem to use the kthread API for better thread management."}, {"cause": "Endianness issues in debug messages may lead to incorrect handling of certain operations in the ohci1394 module.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Correct the endianness handling in debug messages to ensure proper operation on big endian machines."}, {"cause": "Incorrect handling of PCI state save/restore during suspend/resume operations on PPC platforms.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Adjust the PCI state save/restore logic to ensure it is only applied when necessary and correctly on PPC platforms."}], "input_tokens": 7296, "output_tokens": 367}
{"id": "7838", "paths": ["drivers/scsi/sd.c"], "predicts": ["drivers/scsi/libata-core.c", "drivers/scsi/ata_piix.c", "drivers/scsi/libata-scsi.c", "include/linux/libata.h", "arch/i386/kernel/reboot.c", "kernel/power/disk.c", "kernel/power/poweroff.c"], "input_tokens_sum": 80739, "output_tokens_sum": 2273, "description": "Problem Description:\n\nThe Linux kernel does not handle device_shutdown() for the libata buses.  The\nbus has no .shutdown method.  The devices have no .shutdown handlers.\n\nTherefore, device caches are not flushed prior to a system restart, system sleep\nor system powerdown, and device heads are not unloaded before a system sleep or\npowerdown, be it a transition to ACPI S3, S4 or S5 state, APM sleep/poweroff, or\nnon-PM-poweroff (the one that just asks the user to powerdown the machine).\n\nThis causes:\n  * Potential data loss if userspace does not manage to flush caches using the\npassthrough\n  * The need for the userspace halt(8) utility to try to avoid the above\nmentioned data loss (incidently, the lack of a proper high-level kernel\ninterface to do device cache flushes or device head unloads also means the\nuserspace code to do it is disgusting)\n  * Uneeded device wear (disk head assembly) if userspace or ACPI BIOS firmware\ndoes not unload heads prior to power off.\n\nThe disk's \"head auto-pa", "title": "Missing important feature: libata bus shutdown and device shutdown", "Kernel Version": "2.6.20", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "i386 Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-scsi.c", "include/linux/libata.h", "kernel/power/main.c"], "causes": [{"cause": "The libata subsystem lacks a shutdown method for flushing device caches and unloading disk heads during system power transitions.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Implement a .shutdown method in the libata driver to ensure device caches are flushed and disk heads are unloaded during shutdown."}, {"cause": "The absence of device_shutdown handlers for libata devices leads to potential data loss and unnecessary device wear.", "code_file": "drivers/ata/libata-scsi.c", "fix_solution": "Add device_shutdown handlers to libata devices to manage cache flushing and head unloading during system power transitions."}, {"cause": "The kernel does not provide a high-level interface for userspace to flush device caches or unload disk heads.", "code_file": "include/linux/libata.h", "fix_solution": "Define new kernel interfaces in libata.h for cache flushing and head unloading that can be invoked during shutdown."}, {"cause": "The system sleep and powerdown processes do not account for libata device state transitions, leading to potential data loss.", "code_file": "kernel/power/main.c", "fix_solution": "Modify the power management code to invoke libata device shutdown procedures during system sleep and powerdown transitions."}], "input_tokens": 10195, "output_tokens": 286}
{"id": "7800", "paths": ["drivers/ieee1394/sbp2.c"], "predicts": ["drivers/ieee1394/sbp2.c", "drivers/ieee1394/ieee1394_core.c", "include/linux/cdrom.h", "block/ioctl.c", "block/scsi_ioctl.c"], "input_tokens_sum": 111526, "output_tokens_sum": 1575, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18 (to my best knowledge)\nDistribution: Archlinux\nHardware Environment: 1 IDE disk, 1 IDE CD-RW (plextor), 1 IEEE1394 DVD-RW\nSoftware Environment: Using udev, 2.6.19.1 with modules sg, sbp2, sr_mod, ieee1394 \nProblem Description: \n\nMy DVD drive is being detected as a CD-ROM drive and seems to only be able to\nplay CDs. I can produce the error when I have the device plugged in via firewire\nand modprobe sbp2. This creates (using udev rules) sr0, sg0 and cdrom1 (cdrom0\nis IDE CD-RW) nodes in /dev. Udev is not getting the message that it is a DVD.\nHowever, even if I manually link /dev/dvd (for the DVD players) to /dev/sr0, I\nget the following errors:\n\nJan  9 19:01:27 neptune end_request: I/O error, dev sr0, sector 15557132\nJan  9 19:01:27 neptune end_request: I/O error, dev sr0, sector 15557128\n\nThis has started happening since I upgraded to 2.6.19. \n\nJan  9 18:54:56 neptune ieee1394: sbp2: Logged out of SBP-2 device\nJan  9 18:55:04 nep", "title": "Unable to read DVDs on external IEEE1394 DVD-RW", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/ieee1394/sbp2.c", "drivers/scsi/sr.c", "drivers/cdrom/cdrom.c", "drivers/ieee1394/ieee1394_core.c"], "causes": [{"cause": "The sbp2 driver may not correctly identify the DVD-RW capabilities of the device, leading to it being detected as a CD-ROM.", "code_file": "drivers/ieee1394/sbp2.c", "fix_solution": "Modify the sbp2 driver to correctly query and interpret the device's capabilities, ensuring it recognizes DVD-RW features."}, {"cause": "The sr_mod driver might not be handling the DVD-RW media type correctly, causing it to default to CD-ROM.", "code_file": "drivers/scsi/sr.c", "fix_solution": "Update the sr_mod driver to properly detect and handle DVD-RW media types by checking the device's feature set."}, {"cause": "The udev rules might not be correctly identifying the device type due to incorrect or missing information from the kernel.", "code_file": "drivers/cdrom/cdrom.c", "fix_solution": "Ensure that the cdrom driver correctly sets the device type flags for DVD-RW, so udev can create the appropriate device nodes."}, {"cause": "The GPCMD_GET_CONFIGURATION command might not be fetching the correct configuration data for the DVD-RW device.", "code_file": "drivers/scsi/sr.c", "fix_solution": "Enhance the handling of the GPCMD_GET_CONFIGURATION command to ensure it retrieves and interprets the full feature set of the device."}, {"cause": "The kernel's handling of IEEE1394 devices might have regressed, affecting the recognition of DVD-RW capabilities.", "code_file": "drivers/ieee1394/ieee1394_core.c", "fix_solution": "Review and update the IEEE1394 core handling to ensure it correctly supports and identifies all device capabilities, including DVD-RW."}], "input_tokens": 11095, "output_tokens": 405}
{"id": "7657", "paths": ["net/ieee80211/softmac/ieee80211softmac_assoc.c"], "predicts": ["net/ieee80211/softmac/ieee80211softmac_scan.c", "net/ieee80211/softmac/ieee80211softmac_priv.h", "net/ieee80211/softmac/ieee80211softmac_module.c", "drivers/net/wireless/bcm43xx/bcm43xx_main.c", "drivers/net/wireless/bcm43xx/bcm43xx_debugfs.c"], "input_tokens_sum": 108499, "output_tokens_sum": 1746, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.x\nDistribution: Ubuntu Dapper\n\nHardware Environment: \nModel: Compaq r4000\nCPU: AMD Athlon64 3200+\nWireless Controller: BCM4306\n\nlspci:\n0000:00:00.0 Host bridge: ATI Technologies Inc RS480 Host Bridge\n0000:00:01.0 PCI bridge: ATI Technologies Inc: Unknown device 5a3f\n0000:00:04.0 PCI bridge: ATI Technologies Inc: Unknown device 5a36\n0000:00:13.0 USB Controller: ATI Technologies Inc IXP SB400 USB Host Controller\n0000:00:13.1 USB Controller: ATI Technologies Inc IXP SB400 USB Host Controller\n0000:00:13.2 USB Controller: ATI Technologies Inc IXP SB400 USB2 Host\nController0000:00:14.0 SMBus: ATI Technologies Inc IXP SB400 SMBus Controller\n(rev 10)\n0000:00:14.1 IDE interface: ATI Technologies Inc Standard Dual Channel PCI IDE\nController ATI\n0000:00:14.3 ISA bridge: ATI Technologies Inc IXP SB400 PCI-ISA Bridge\n0000:00:14.4 PCI bridge: ATI Technologies Inc IXP SB400 PCI-PCI Bridge\n0000:00:14.5 Multimedia audio controller: ATI Technolog", "title": "BUG: NULL pointer dereference in ieee80211softmac_get_network_by_bssid_locked", "Kernel Version": "2.6.19", "Product": "Networking", "Component": "Wireless", "Hardware": "i386 Linux", "reranked_files": ["net/ieee80211/softmac/ieee80211softmac_assoc.c", "net/ieee80211/softmac/ieee80211softmac_module.c", "net/ieee80211/softmac/ieee80211softmac_auth.c", "include/net/ieee80211softmac.h", "net/ieee80211/softmac/ieee80211softmac_scan.c"], "causes": [{"cause": "NULL pointer dereference due to accessing a network structure that is not properly initialized or has been freed.", "code_file": "net/ieee80211/softmac/ieee80211softmac_assoc.c", "fix_solution": "Add a check to ensure the network structure is valid before dereferencing it in ieee80211softmac_get_network_by_bssid_locked."}, {"cause": "Race condition leading to accessing a network structure that is being modified or freed concurrently.", "code_file": "net/ieee80211/softmac/ieee80211softmac_module.c", "fix_solution": "Introduce proper locking mechanisms around network structure accesses to prevent concurrent modifications."}, {"cause": "Improper handling of workqueues leading to operations being performed on a stopped or uninitialized device.", "code_file": "net/ieee80211/softmac/ieee80211softmac_auth.c", "fix_solution": "Ensure that the 'running' flag is checked before scheduling or executing workqueue tasks."}, {"cause": "Incorrect state management causing operations to be performed on a device that is not in a valid state.", "code_file": "include/net/ieee80211softmac.h", "fix_solution": "Add additional state checks and ensure state transitions are atomic and protected by locks."}, {"cause": "Delayed work items being executed after the device has been stopped, leading to invalid memory accesses.", "code_file": "net/ieee80211/softmac/ieee80211softmac_scan.c", "fix_solution": "Cancel all pending work items and ensure no new work is scheduled once the device is stopped."}], "input_tokens": 9782, "output_tokens": 381}
{"id": "7601", "paths": ["arch/i386/kernel/acpi/boot.c"], "predicts": ["arch/i386/kernel/io_apic.c", "arch/i386/kernel/irq.c", "include/asm-i386/io_apic.h", "include/asm-i386/irq.h", "kernel/irq/manage.c", "kernel/irq/spurious.c", "drivers/acpi/pci_irq.c", "drivers/pci/setup-irq.c", "arch/i386/pci/acpi.c", "include/linux/irq.h"], "input_tokens_sum": 111795, "output_tokens_sum": 2108, "description": "Most recent kernel where this bug did *NOT* occur:\n2.6.18.3\n\nDistribution:\nFedora Core 6\n\nHardware Environment:\n00:00.0 Host bridge: Intel Corporation 82815 815 Chipset Host Bridge and Memory\nController Hub (rev 02)\n00:01.0 PCI bridge: Intel Corporation 82815 815 Chipset AGP Bridge (rev 02)\n00:1e.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 05)\n00:1f.0 ISA bridge: Intel Corporation 82801BA ISA Bridge (LPC) (rev 05)\n00:1f.1 IDE interface: Intel Corporation 82801BA IDE U100 (rev 05)\n00:1f.2 USB Controller: Intel Corporation 82801BA/BAM USB (Hub #1) (rev 05)\n00:1f.3 SMBus: Intel Corporation 82801BA/BAM SMBus (rev 05)\n00:1f.4 USB Controller: Intel Corporation 82801BA/BAM USB (Hub #2) (rev 05)\n01:00.0 VGA compatible controller: nVidia Corporation NV34 [GeForce FX 5200]\n(rev a1)\n02:09.0 FireWire (IEEE 1394): Texas Instruments TSB12LV23 IEEE-1394 Controller\n02:0a.0 Multimedia video controller: Brooktree Corporation Bt848 Video Capture\n(rev 12)\n02:0b.0 USB Controller: NEC Corporation ", "title": "irq 18: nobody cared - Intel STL2 SCI INT_SRC_OVR", "Kernel Version": "2.6.19", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/io_apic.c", "drivers/acpi/pci_link.c", "drivers/acpi/pci_irq.c", "arch/x86/kernel/mpparse.c"], "causes": [{"cause": "Incorrect IRQ polarity and trigger mode settings from ACPI, leading to misconfigured IRQ routing.", "code_file": "arch/x86/kernel/io_apic.c", "fix_solution": "Ensure that the IO-APIC uses the correct polarity and mode settings from ACPI by modifying the irq configuration logic to correctly interpret ACPI settings."}, {"cause": "ACPI PCI Link devices are not being set up correctly, leading to incorrect IRQ assignments.", "code_file": "drivers/acpi/pci_link.c", "fix_solution": "Modify the PCI link setup to ensure that IRQs are allocated correctly based on the current mode (PIC or APIC) and ensure that the correct set of link devices is used."}, {"cause": "Boot-enabled IRQs are not being set correctly, causing conflicts or incorrect routing.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Force every link device IRQ to be set at least once during initialization to ensure that the hardware and ACPI settings are synchronized."}, {"cause": "Potential issues in the PCI routing table setup, leading to incorrect IRQ routing.", "code_file": "arch/x86/kernel/mpparse.c", "fix_solution": "Adjust the PCI routing table setup to ensure that IRQs are correctly mapped and programmed, taking into account both PIC and APIC modes."}], "input_tokens": 10788, "output_tokens": 310}
{"id": "7527", "paths": ["drivers/char/isicom.c"], "predicts": ["drivers/serial/icom.c", "drivers/serial/icom.h", "include/linux/isicom.h"], "input_tokens_sum": 104993, "output_tokens_sum": 858, "description": "Most recent kernel where this bug did *NOT* occur:\nDistribution: Redhat EL 4\nHardware Environment: Intel x86\nSoftware Environment:\nProblem Description: Unable to access Modem\n\nSteps to reproduce:\n\n[root@dialin-0 ~]# setserial -g /dev/ttyM0\nSegmentation fault\n[root@dialin-0 ~]#\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: Oops: 0000 [#1]\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: SMP\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: CPU:    0\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: EIP is at isicom_close+0x12/0x1ab [isicom]\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: eax: f5f14000   ebx: 00000000   ecx: f8922cf0   edx: f7f7fa40\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: esi: 00000000   edi: 00000000   ebp: f5f14000   esp: f5fc7e08\n\nMessage from syslogd@dialin-0 at Tue Nov 14 1", "title": "isicom segmentation fault", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "Serial", "Hardware": "i386 Linux", "reranked_files": ["drivers/serial/isicom.c"], "causes": [{"cause": "Null pointer dereference in the isicom_close function due to uninitialized or improperly handled pointer.", "code_file": "drivers/serial/isicom.c", "fix_solution": "Add a null check for the pointer before dereferencing it in the isicom_close function."}, {"cause": "Improper handling of memory allocation or deallocation leading to invalid memory access.", "code_file": "drivers/serial/isicom.c", "fix_solution": "Ensure that all memory allocations are checked for success and properly freed in the error paths."}, {"cause": "Race condition in the isicom driver when accessing shared resources.", "code_file": "drivers/serial/isicom.c", "fix_solution": "Use appropriate locking mechanisms to protect shared resources in the isicom driver."}, {"cause": "Incorrect handling of device state transitions leading to invalid operations.", "code_file": "drivers/serial/isicom.c", "fix_solution": "Add state checks and ensure proper state transitions in the isicom driver functions."}], "input_tokens": 9184, "output_tokens": 240}
{"id": "7517", "paths": ["drivers/net/r8169.c"], "predicts": ["drivers/net/r8169.c"], "input_tokens_sum": 142424, "output_tokens_sum": 3549, "description": "Most recent kernel where this bug did not occur: N/A\nDistribution: Debian (but stock vanilla kernel.org kernel tree)\nHardware Environment: Intel Core 2 Duo E6300 on Gigabyte GA-945GM-S2 mainboard,\nNIC under test running 100Mbps, full duplex\nSoftware Environment: Debian testing installation (last updated early Nov 2006)\nProblem Description: About 2/3 of received packet data corrupted when using the\nr8169 driver to operate the onboard Realtek 8111B gigabit ethernet chip\n\nSteps to reproduce:\nmodprobe r8169, configure appropriate for operation on your ethernet\nping the NIC from another machine\nNotice that over 60% of the pings don't return\n\nAn examination of the traffic with wireshark running on the test machine reveals\nthat the machine is not returning most of the pings because the received packet\ndata is being corrupted.  The nature of the corruption is that the first 4 bytes\nof the corrupted packet data is simply missing (and there's 4 bytes of garbage\nappended at the end so the overall", "title": "r8169: Packet corruption on receive for 8111B chip", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/r8169.c"], "causes": [{"cause": "Misalignment in DMA buffer handling leading to packet data corruption.", "code_file": "drivers/net/r8169.c", "fix_solution": "Ensure that the DMA buffer alignment is correctly handled by using pci_alloc_consistent() for both Rx and Tx descriptors, and verify that the buffer addresses are correctly set in the descriptors."}, {"cause": "Incorrect handling of Rx descriptor status leading to missing bytes in received packets.", "code_file": "drivers/net/r8169.c", "fix_solution": "Review and correct the logic in rtl8169_rx_interrupt() to ensure that the Rx descriptor status is properly checked and handled, especially focusing on the OWNbit and RxRES flags."}, {"cause": "Potential issue with the Rx buffer size configuration causing data truncation.", "code_file": "drivers/net/r8169.c", "fix_solution": "Verify and adjust the RX_BUF_SIZE definition to ensure it accommodates the maximum expected packet size, including any additional headers or metadata."}, {"cause": "Improper initialization of Rx and Tx rings leading to descriptor mismanagement.", "code_file": "drivers/net/r8169.c", "fix_solution": "Ensure that rtl8169_init_ring() correctly initializes all descriptors and buffers, and that any errors during initialization are properly handled and logged."}, {"cause": "Inadequate error handling in the Rx path leading to packet corruption.", "code_file": "drivers/net/r8169.c", "fix_solution": "Enhance error handling in the Rx path, particularly in rtl8169_rx_interrupt(), to ensure that any errors are logged and that the driver attempts to recover gracefully."}], "input_tokens": 10832, "output_tokens": 371}
{"id": "7487", "paths": ["drivers/net/sundance.c"], "predicts": ["drivers/net/sundance.c"], "input_tokens_sum": 110720, "output_tokens_sum": 1013, "description": "Most recent kernel where this bug did not occur: Don't know. Only began checking\non 2.6.17, and it didn't work there.\n\nDistribution: Linux from Scratch\n\nHardware Environment: PIII 500.\n\n$ lspci\n00:00.0 Host bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX Host bridge\n(rev 03)\n00:01.0 PCI bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge\n(rev 03)\n00:07.0 ISA bridge: Intel Corporation 82371AB/EB/MB PIIX4 ISA (rev 02)\n00:07.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)\n00:07.2 USB Controller: Intel Corporation 82371AB/EB/MB PIIX4 USB (rev 01)\n00:07.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 02)\n00:0c.0 Multimedia audio controller: Yamaha Corporation YMF-724F [DS-1 Audio\nController] (rev 03)\n00:0e.0 USB Controller: NEC Corporation USB (rev 43)\n00:0e.1 USB Controller: NEC Corporation USB (rev 43)\n00:0e.2 USB Controller: NEC Corporation USB 2.0 (rev 04)\n00:0f.0 Ethernet controller: D-Link System Inc DL10050 Sundance Ethernet (rev 12)\n0", "title": "(net sundance) driver fails to recognize carrier status", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/sundance.c"], "causes": [{"cause": "The driver fails to correctly handle the carrier status due to improper handling of TxStatusOverflow and MaxCollisions.", "code_file": "drivers/net/sundance.c", "fix_solution": "Ensure that after re-enabling Tx, the Tx is actually enabled by checking the TxEnabled status and retrying if necessary."}, {"cause": "The driver does not properly reset the Tx logic, leading to incorrect carrier status detection.", "code_file": "drivers/net/sundance.c", "fix_solution": "Add a reset procedure for the Tx logic in the reset_tx function to ensure proper initialization."}, {"cause": "The driver may not be correctly handling tasklet operations during interface down and up sequences, causing carrier status issues.", "code_file": "drivers/net/sundance.c", "fix_solution": "Ensure tasklets are properly killed and reset during netdev_close to prevent inconsistent states."}, {"cause": "The driver might not be waiting for hardware operations to complete before proceeding, leading to incorrect carrier status.", "code_file": "drivers/net/sundance.c", "fix_solution": "Introduce delays and checks to ensure hardware operations are complete before continuing with network operations."}], "input_tokens": 9108, "output_tokens": 272}
{"id": "7462", "paths": ["sound/pci/hda/hda_intel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/core/memalloc.c", "sound/core/pcm_memory.c", "sound/core/sgbuf.c", "sound/core/pcm_lib.c"], "input_tokens_sum": 105283, "output_tokens_sum": 1182, "description": "Most recent kernel where this bug did not occur:\nDistribution:\nHardware Environment:\nSoftware Environment:\nProblem Description:\nhda_intel driver from ALSA up to 1.0.13 allocates insufficient memory for buffer\nSteps to reproduce:", "title": "hda_intel: insufficient memory for buffer", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Sound", "Hardware": "i386 Linux", "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/core/memalloc.c", "sound/pci/hda/hda_codec.c", "sound/core/init.c"], "causes": [{"cause": "The hda_intel driver allocates insufficient memory for audio buffers, potentially due to incorrect buffer size calculations or allocations.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the buffer size allocation in the hda_intel.c file to ensure sufficient memory is allocated for audio buffers."}, {"cause": "The buffer size might not be correctly calculated based on the hardware capabilities or requirements, leading to insufficient memory allocation.", "code_file": "sound/core/memalloc.c", "fix_solution": "Adjust the buffer size calculation logic to account for the specific hardware requirements, ensuring that the allocated memory is sufficient."}, {"cause": "The driver might not be correctly handling different hardware configurations, leading to incorrect memory allocation for certain devices.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Add checks and adjustments in the hda_codec.c file to handle different hardware configurations and ensure correct memory allocation."}, {"cause": "The ALSA driver might not be properly initializing or configuring the memory allocation settings, leading to insufficient buffer sizes.", "code_file": "sound/core/init.c", "fix_solution": "Ensure that the memory allocation settings are properly initialized and configured during the ALSA driver initialization process."}], "input_tokens": 2767, "output_tokens": 298}
{"id": "7385", "paths": ["fs/nfs/super.c"], "predicts": ["fs/nfs/super.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "net/sunrpc/auth.c", "net/sunrpc/svc.c", "net/sunrpc/xprt.c", "net/sunrpc/sched.c", "include/linux/nfsd/interface.h", "include/linux/nfsd/state.h", "include/linux/nfsd/syscall.h"], "input_tokens_sum": 110240, "output_tokens_sum": 2024, "description": "Most recent kernel where this bug did not occur: 2.6.18\nDistribution: gentoo (vanilla_sources)\nHardware Environment: \nSoftware Environment: nfs-utils 1.0.10, vanilla-sources 2.6.19\nProblem Description:\nIt is not possible to mount a nfs4 export. It fails with the error message can't\nread superblock.\nSteps to reproduce:\ninstall gentoo with vanilla-sources 2.6.19_rc1 or rc2 and nfs-utils 1.0.10 and\nunmask the necessary dependencies\n\nentries in /etc/export\n/export *(rw,fsid=0,insecure,no_subtree_check,sync)\n/export/bla *(rw,nohide,root_squash,insecure,no_subtree_check,async)\n/export/user *(rw,nohide,root_squash,insecure,no_subtree_check,async\n\n/export and /export/bla have group and owner root and chmod 0777\n\ncommands:\nmodprobe nfs\n/etc/init.d/nfs start\n/etc/init.d/nfsmount start\nmount -t nfs4 127.0.0.1:/bla /bla\n\nWatch the computer hanging and then responding with an error in\n/var/log/messages that the server wouldn't respond and mount responding with\n\"... can't read superblock\".\n\nThe prob", "title": "nfs4 broken in vanilla-sources 2.6.19", "Kernel Version": "2.6.19-rc2", "Product": "File System", "Component": "NFS", "Hardware": "i386 Linux", "reranked_files": ["fs/nfs/inode.c"], "causes": [{"cause": "The nfs_get_root function may be returning an incorrect error code when failing to get the root inode, leading to the 'can't read superblock' error.", "code_file": "fs/nfs/inode.c", "fix_solution": "Modify nfs_get_root to ensure it returns the correct error code, allowing the mount command to display a more accurate error message."}, {"cause": "The nfs_sb_init function might be returning a static error code of -EINVAL instead of the actual error code from nfs_get_root, causing misleading error messages.", "code_file": "fs/nfs/inode.c", "fix_solution": "Change the return value of nfs_sb_init to return the actual error code from nfs_get_root instead of a static -EINVAL."}, {"cause": "The NFS client might not be handling certain authentication types correctly, such as gss/krb5, which could prevent the root inode from being obtained.", "code_file": "fs/nfs/inode.c", "fix_solution": "Implement a mechanism to handle authentication types that do not allow root to present a credential for GETATTR, possibly by faking the root inode attributes initially."}, {"cause": "The mount version check in nfs4_get_sb might be incorrect, leading to compatibility issues between the client and server.", "code_file": "fs/nfs/inode.c", "fix_solution": "Ensure that the mount version check uses the correct version constants to avoid compatibility warnings or errors."}], "input_tokens": 10282, "output_tokens": 341}
{"id": "7306", "paths": ["arch/powerpc/kernel/pci-common.c"], "predicts": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/yenta_socket.h", "drivers/pcmcia/cistpl.c", "drivers/pcmcia/pcmcia_resource.c", "drivers/pcmcia/rsrc_mgr.c", "include/pcmcia/cisreg.h", "include/pcmcia/cistpl.h", "include/pcmcia/cs.h", "include/pcmcia/cs_types.h", "include/pcmcia/ss.h"], "input_tokens_sum": 124942, "output_tokens_sum": 2072, "description": "Most recent kernel where this bug did not occur: 2.6.12\nDistribution: Gentoo 2006.1\nHardware Environment: Apple PowerBook G3 (Lombard)\nSoftware Environment: Gentoo Linux 2006.1 (GCC 4.1.1)\nProblem Description: Machine panics with \"Oops: ...machine check...\" message on insertion of (also if card \nis already in slot on boot) any PCMCIA card with Yenta-socket driver, either as module, or compiled in.  \nFailure appears to be caused by pcmcia_read_cis_mem call according to stacktrace.\n\nSteps to reproduce: Compile yenta-socket support either into kernel or as module and insert PCMCIA card.", "title": "Yenta-socket causes oops on insertion of any PCMCIA card", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/pcmcia/cistpl.c", "drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/ds.c"], "causes": [{"cause": "The pcmcia_read_cis_mem function is causing a machine check error due to incorrect handling of CIS data.", "code_file": "drivers/pcmcia/cistpl.c", "fix_solution": "Ensure proper validation and error handling of CIS data before accessing it in pcmcia_read_cis_mem."}, {"cause": "The yenta_socket driver is incorrectly routing interrupts for PCMCIA cards, leading to system instability.", "code_file": "drivers/pcmcia/yenta_socket.c", "fix_solution": "Adjust the IRQ routing logic to correctly handle the interrupt settings for the specific hardware configuration."}, {"cause": "The initialization of PCMCIA devices is not properly synchronized, leading to race conditions during card insertion.", "code_file": "drivers/pcmcia/ds.c", "fix_solution": "Add proper locking mechanisms around device initialization and removal to prevent race conditions."}, {"cause": "The PCMCIA subsystem is not correctly handling multifunction devices, causing incorrect CIS parsing.", "code_file": "drivers/pcmcia/ds.c", "fix_solution": "Improve the handling of multifunction devices by correctly parsing and validating CIS data for each function."}, {"cause": "The resources_available flag is not being set correctly, leading to improper resource allocation for PCMCIA cards.", "code_file": "drivers/pcmcia/ds.c", "fix_solution": "Ensure the resources_available flag is accurately set based on the actual resource configuration status."}], "input_tokens": 9854, "output_tokens": 334}
{"id": "7303", "paths": ["drivers/acpi/dock.c"], "predicts": ["drivers/acpi/dock.c", "arch/i386/pci/acpi.c", "kernel/sched.c", "include/asm-i386/atomic.h", "include/asm-i386/hardirq.h", "kernel/irq/manage.c", "kernel/power/pm.c", " mm/memory_hotplug.c", "arch/i386/kernel/process.c", "drivers/acpi/ec.c"], "input_tokens_sum": 103370, "output_tokens_sum": 1820, "description": "Distribution: Debian Unstable\nHardware Environment: Thinkpad T40p and ThinkPad Dock II\nSoftware Environment: ACPI dock driver from vanilla 2.6.18\nProblem Description: If I dock my notebook to the dockingstation, I get the\nattached 'Scheduling while atomic BUG' in my dmesg.\n\nI can still work with this machine afterwards.\n\nSteps to reproduce: Dock the Thinkpad. I tested this with undocking first until\nnow. If you like, I can boot the notebook outside the dock, dock it and see if\nit gives the same result.", "title": "Dock driver: Scheduling while atomic BUG during docking.", "Kernel Version": "2.6.18", "Product": "ACPI", "Component": "Config-Hotplug", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/dock.c"], "causes": [{"cause": "The dock driver is attempting to perform a scheduling operation while in an atomic context, which is not allowed.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Ensure that any operations that might sleep, such as memory allocations with GFP_KERNEL, are not performed in atomic context. Use GFP_ATOMIC instead or defer the operation to a non-atomic context."}, {"cause": "The dock driver might be holding a spinlock while calling functions that can sleep, leading to a scheduling while atomic bug.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Review the code to ensure that no spinlocks are held when calling functions that can sleep, such as acpi_evaluate_object or acpi_bus_add."}, {"cause": "The notifier chain might be invoked in an atomic context, causing scheduling issues.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Ensure that the atomic_notifier_call_chain is called in a context where sleeping is allowed, or switch to a blocking notifier chain if appropriate."}, {"cause": "Improper handling of ACPI events in the dock driver leading to atomic context violations.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Refactor the acpi_dock_notify function to ensure that it does not perform operations that can sleep while in atomic context."}], "input_tokens": 9061, "output_tokens": 319}
{"id": "7234", "paths": ["drivers/i2c/i2c-core.c"], "predicts": ["drivers/i2c/i2c-core.c", "drivers/i2c/busses/i2c-via.c", "drivers/i2c/busses/i2c-viapro.c", "include/linux/i2c.h", "arch/cris/arch-v10/drivers/i2c.c", "arch/cris/arch-v32/drivers/i2c.c", "sound/i2c/i2c.c", "include/asm-i386/spinlock.h", "lib/kernel_lock.c", "lib/spinlock_debug.c"], "input_tokens_sum": 106604, "output_tokens_sum": 1922, "description": "Most recent kernel where this bug did not occur:\n2.6.18_rc2-mm1\nKernel that have this bug:\nMM-Kernel from 2.6.18_rc6-mm1\n2.6.18-git11 also has this bug\nDistribution: Gentoo-2006.1\nHardware Environment: \n00:00.0 Host bridge: VIA Technologies, Inc. VT8363/8365 [KT133/KM133] (rev 03)\n00:01.0 PCI bridge: VIA Technologies, Inc. VT8363/8365 [KT133/KM133 AGP]\n00:07.0 ISA bridge: VIA Technologies, Inc. VT82C686 [Apollo Super South] (rev \n22)\n00:07.1 IDE interface: VIA Technologies, Inc. \nVT82C586A/B/VT82C686/A/B/VT823x/A/C PIPC Bus Master IDE (rev 10)\n00:07.2 USB Controller: VIA Technologies, Inc. VT82xxxxx UHCI USB 1.1 \nController (rev 10)\n00:07.3 USB Controller: VIA Technologies, Inc. VT82xxxxx UHCI USB 1.1 \nController (rev 10)\n00:07.4 Host bridge: VIA Technologies, Inc. VT82C686 [Apollo Super ACPI] (rev \n30)\n00:07.5 Multimedia audio controller: VIA Technologies, Inc. VT82C686 AC97 Audio \nController (rev 20)\n00:07.6 Communication controller: VIA Technologies, Inc. AC'97 Modem Controller \n(re", "title": "bttv initialisation hang, may be i2c locking deadlock", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "I2C", "Hardware": "i386 Linux", "reranked_files": ["drivers/i2c/i2c-core.c"], "causes": [{"cause": "Deadlock due to improper locking in the I2C subsystem during initialization.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Ensure proper acquisition and release of locks in the initialization and exit paths to prevent deadlocks."}, {"cause": "Incorrect initialization sequence of the I2C subsystem leading to a hang during bttv initialization.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Change the initialization call from module_init to subsys_initcall to ensure the I2C subsystem is initialized earlier."}, {"cause": "Race condition in the I2C timer handling causing a hang during initialization.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Add proper synchronization mechanisms around timer operations to prevent race conditions."}, {"cause": "Improper handling of non-blocking I2C operations leading to a deadlock.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Review and correct the implementation of non-blocking I2C operations to ensure they do not cause deadlocks."}], "input_tokens": 11009, "output_tokens": 268}
{"id": "7206", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "include/acpi/acpi.h", "drivers/acpi/utils.c", "arch/i386/kernel/acpi/processor.c", "arch/i386/kernel/acpi/sleep.c", "arch/x86_64/kernel/acpi/processor.c", "arch/x86_64/kernel/acpi/sleep.c", "kernel/power/main.c", "kernel/power/pm.c"], "input_tokens_sum": 110051, "output_tokens_sum": 2665, "description": "On start of my notebook, with kde, Klaptop not display my residual charge.\n\nStart with only battery:\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/info\npresent:                 no\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/state\npresent:                 no\n\nAfter i insert and disconnect AC Power Supply:\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/state\npresent:                 yes\ncapacity state:          ok\ncharging state:          discharging\npresent rate:            2240 mA\nremaining capacity:      1731 mAh\npresent voltage:         12321 mV\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/info\npresent:                 yes\ndesign capacity:         4000 mAh\nlast full capacity:      3089 mAh\nbattery technology:      rechargeable\ndesign voltage:          9600 mV\ndesign capacity warning: 400 mAh\ndesign capacity low:     123 mAh\ncapacity granularity 1:  64 mAh\ncapacity granularity 2:  64 mAh\nmodel number:            PC-VP-WP66/OP-570-76620\nserial number:\nbattery type:   ", "title": "acpi not recognize residual charge on packard bell easynote S5011", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c"], "causes": [{"cause": "The ACPI battery driver does not correctly detect the battery presence on startup, possibly due to an initialization issue.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the battery presence is checked and updated during the initialization phase by calling acpi_battery_check() in acpi_battery_add()."}, {"cause": "The battery status is not being updated correctly after system events such as boot or resume.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a mechanism to re-check the battery status after system resume by adding a call to acpi_battery_check() in the acpi_battery_resume() function."}, {"cause": "The ACPI subsystem might not be correctly handling the transition from AC to battery power, leading to incorrect battery status reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add event handling to update battery status when the power source changes, ensuring that the battery status is refreshed when AC power is disconnected."}, {"cause": "The ACPI battery driver might not be correctly handling the power unit conversion, leading to incorrect reporting of battery metrics.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Verify and correct the power unit conversion logic in the battery status reporting functions to ensure accurate display of battery metrics."}], "input_tokens": 10395, "output_tokens": 315}
{"id": "7201", "paths": ["drivers/usb/net/rndis_host.c"], "predicts": ["drivers/usb/class/cdc-acm.c", "drivers/usb/net/rndis_host.c", "include/linux/usb/usb.h", "include/linux/usb/serial.h", "include/linux/usb/cdc.h", "include/linux/netdevice.h", "net/core/dev.c"], "input_tokens_sum": 107243, "output_tokens_sum": 1653, "description": "Most recent kernel where this bug did not occur: None I know\nDistribution: Debian unstable, but my own kernel compile off kernel.org\nHardware Environment: Toshiba R100, with docking station\nSoftware Environment: Debian unstable\nProblem Description:\n\nI connect the nokia E70 (a symbian S60 3rd edition device) to the USB, and\nselect \"PC Suite\". The kernel spews the following:\n\nSep 25 16:16:52 r100 kernel: usb 1-3.4: new full speed USB device using ehci_hcd\nand address 9\nSep 25 16:16:52 r100 kernel: usb 1-3.4: configuration #1 chosen from 1 choice\nSep 25 16:16:53 r100 kernel: cdc_acm 1-3.4:1.12: ttyACM0: USB ACM device\nSep 25 16:16:53 r100 kernel: usbcore: registered new driver cdc_acm\nSep 25 16:16:53 r100 kernel: drivers/usb/class/cdc-acm.c: v0.25:USB Abstract\nControl Model driver for USB modems and ISDN adapters\nSep 25 16:16:53 r100 kernel: usbcore: registered new driver cdc_ether\nSep 25 16:16:53 r100 kernel: usb%%d: unregister 'rndis_host'\nusb-0000:00:1d.7-3.4, RNDIS device\nSep 25 16:16", "title": "Connecting Nokia E70 via USB - unregistering non-registered device?", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/net/rndis_host.c", "drivers/usb/class/cdc-acm.c", "drivers/usb/core/config.c", "drivers/usb/core/message.c", "drivers/usb/core/hub.c"], "causes": [{"cause": "The Nokia E70 device is being incorrectly identified as an RNDIS device, leading to an attempt to unregister a non-registered device.", "code_file": "drivers/usb/net/rndis_host.c", "fix_solution": "Add a check to ensure the device is properly registered before attempting to unregister it."}, {"cause": "The cdc_acm driver is registering the device but the rndis_host driver is attempting to unregister it due to a misidentification.", "code_file": "drivers/usb/class/cdc-acm.c", "fix_solution": "Ensure proper device identification and registration logic to prevent misidentification between cdc_acm and rndis_host."}, {"cause": "The USB device descriptors are not being correctly parsed, leading to incorrect driver assignment.", "code_file": "drivers/usb/core/config.c", "fix_solution": "Improve the parsing logic for USB device descriptors to correctly identify the device class and protocol."}, {"cause": "The device is being registered with incorrect interface settings, causing conflicts between cdc_acm and rndis_host drivers.", "code_file": "drivers/usb/core/message.c", "fix_solution": "Adjust the interface settings during device registration to ensure compatibility with the correct driver."}, {"cause": "The kernel's USB subsystem is not handling the device's alternate settings correctly, leading to driver conflicts.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Implement a mechanism to correctly handle alternate settings for USB devices to prevent driver conflicts."}], "input_tokens": 10071, "output_tokens": 355}
{"id": "7200", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/ec.c", "drivers/acpi/acpi_ksyms.c", "arch/ia64/kernel/acpi.c", "arch/ia64/kernel/acpi-ext.c"], "input_tokens_sum": 79769, "output_tokens_sum": 1802, "description": "Most recent kernel where this bug did not occur:\nDistribution: fedora/ubuntu/suse\nHardware Environment: nec versa p550\nSoftware Environment: fedora core <= 5.90, ubuntu <= 6.06, suse 10\nProblem Description: The battery is not found after booting. But when I plugin  \nthe power cord or remove it then the battery is and remains detected.\n\nSteps to reproduce: \nBoot and see: battery not present.\n\nacpi version: 1.04\n\nBattery info after plugging in the cable:\n$ cat /proc/acpi/battery/BAT1/info\npresent:                 yes\ndesign capacity:         4800 mAh\nlast full capacity:      3507 mAh\nbattery technology:      rechargeable\ndesign voltage:          14800 mV\ndesign capacity warning: 400 mAh\ndesign capacity low:     140 mAh\ncapacity granularity 1:  64 mAh\ncapacity granularity 2:  64 mAh\nmodel number:            PC-VP-WP66/OP-570-76620\nserial number:\nbattery type:            LION\nOEM info:                NEC", "title": "battery not detected on laptop - nec versa p550", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/ec.c"], "causes": [{"cause": "The ACPI battery driver does not properly check the battery status during the initial boot sequence, leading to the battery not being detected until a power event occurs.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a battery status check during the initial boot sequence by calling acpi_battery_check() in the acpi_battery_add() function to ensure the battery is detected immediately after boot."}, {"cause": "The ACPI subsystem may not be generating the necessary events to update the battery status on boot.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Ensure that the ACPI Embedded Controller (EC) driver generates the necessary events to update the battery status by adding a call to acpi_bus_generate_event() in the initialization routine."}, {"cause": "The battery detection logic might be missing or incorrect in the ACPI resume path, causing the battery to only be detected after a power event.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a resume callback function, similar to acpi_battery_resume(), to explicitly check and update the battery status during the resume process."}, {"cause": "The ACPI battery driver might not be handling the power unit conversion correctly, leading to incorrect battery status reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Review and correct the power unit conversion logic in the acpi_battery_get_info() and acpi_battery_get_status() functions to ensure accurate battery status reporting."}], "input_tokens": 10354, "output_tokens": 351}
{"id": "7180", "paths": ["arch/x86_64/kernel/pci-calgary.c"], "predicts": ["arch/x86_64/kernel/pci-calgary.c", "drivers/parisc/sba_iommu.c", "drivers/parisc/iommu-helpers.h", "include/asm-i386/pci.h", "include/linux/pci.h", "include/scsi/scsi_host.h", "mm/ioremap.c"], "input_tokens_sum": 113601, "output_tokens_sum": 2757, "description": "Most recent kernel where this bug did not occur: 2.6.17\nDistribution: Ubuntu 6.06\nHardware Environment: IBM x366, 4x 3.16GHz Xeon, 8G RAM, aic94xx SAS controller,\n6x 36G SAS disks, Calgary IOMMU\nSoftware Environment: netbooted Ubuntu mutant.\nProblem Description: aic94xx driver NMIs the system if calgary iommu is enabled.\n\nSteps to reproduce:\n1. Clone linux-2.6 and add in scsi-misc, scsi-rc-fixes and aic94xx from\ngit.kernel.org.\n2. Build a netbootable \"allmodconfig\" kernel with attached config file.\n3. Calgary IOMMU code activates\n4. Subsequent loading of the aic94xx driver causes the service processor to log\na PCI SERR with a split completion timeout, followed by an NMI, followed by a\nreboot.\n\nNote that disabling the Calgary IOMMU for the bus that the SAS controller is\nconnected to (either via kconfig or iommu=none or calgary=disable=1) will make\nthe problem go away.", "title": "aic94xx driver locks up on IBM x366 with Calgary IOMMU enabled", "Kernel Version": "2.6.18", "Product": "SCSI Drivers", "Component": "AIC94XX", "Hardware": "i386 Linux", "reranked_files": ["arch/x86_64/kernel/pci-calgary.c", "drivers/scsi/aic94xx/aic94xx_core.c", "drivers/pci/probe.c"], "causes": [{"cause": "Off-by-one error in Calgary IOMMU initialization causing array overflow and subsequent system instability.", "code_file": "arch/x86_64/kernel/pci-calgary.c", "fix_solution": "Correct the loop condition in calgary_init and detect_calgary functions to prevent array overflow."}, {"cause": "Improper error handling in Calgary IOMMU code leading to NMIs when interacting with aic94xx driver.", "code_file": "arch/x86_64/kernel/pci-calgary.c", "fix_solution": "Improve error handling in Calgary IOMMU initialization and detection functions to prevent NMIs."}, {"cause": "Incompatibility between Calgary IOMMU and aic94xx driver due to incorrect DMA mask settings.", "code_file": "drivers/scsi/aic94xx/aic94xx_core.c", "fix_solution": "Ensure proper DMA mask settings in aic94xx driver to be compatible with Calgary IOMMU."}, {"cause": "Calgary IOMMU not properly disabling translation for specific PCI buses, causing split completion timeouts.", "code_file": "arch/x86_64/kernel/pci-calgary.c", "fix_solution": "Ensure Calgary IOMMU correctly disables translation for specified PCI buses using calgary_parse_options."}, {"cause": "Potential misconfiguration in PCI device setup leading to inconsistent DMA address handling.", "code_file": "drivers/pci/probe.c", "fix_solution": "Verify and correct PCI device setup to ensure consistent DMA address handling."}], "input_tokens": 9608, "output_tokens": 355}
{"id": "7153", "paths": ["drivers/char/ipmi/ipmi_si_intf.c"], "predicts": ["drivers/char/ipmi/ipmi_si_intf.c", "drivers/char/ipmi/ipmi_msghandler.c"], "input_tokens_sum": 121790, "output_tokens_sum": 3420, "description": "On a system *without* ipmi:\n- modprobe ipmi_si (it'll load also ipmi_msghandler)\n- the ipmi_si module returns of course -ENODEV\n- rmmod ipmi_msghandler\n- watch the kernel oopsing\n\nThe cause of this bug is a forgotten step in the error path. The ipmi_si module\nnever calls driver_unregister in his error path. \nA fix will be provided in the next comment :)", "title": "oops on ipmi_msghandler removal for non ipmi systems", "Kernel Version": "2.6.17", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/char/ipmi/ipmi_si_intf.c", "drivers/char/ipmi/ipmi_msghandler.c"], "causes": [{"cause": "The ipmi_si module does not call driver_unregister in its error path, leading to an oops when ipmi_msghandler is removed.", "code_file": "drivers/char/ipmi/ipmi_si_intf.c", "fix_solution": "Ensure that driver_unregister is called in the error path of the ipmi_si module to properly unregister the driver."}, {"cause": "The ipmi_msghandler module might not be properly handling the cleanup of resources when the module is removed, leading to a kernel oops.", "code_file": "drivers/char/ipmi/ipmi_msghandler.c", "fix_solution": "Add proper cleanup code in the module_exit function to ensure all resources are freed and handlers are unregistered."}, {"cause": "A race condition during the module removal process might leave some resources in an inconsistent state, causing a kernel oops.", "code_file": "drivers/char/ipmi/ipmi_msghandler.c", "fix_solution": "Implement locking mechanisms to ensure that resources are not accessed during the module removal process."}, {"cause": "The ipmi_si module might not be correctly handling the case where no IPMI device is present, leading to improper state cleanup.", "code_file": "drivers/char/ipmi/ipmi_si_intf.c", "fix_solution": "Add checks and proper handling for the case where no IPMI device is found, ensuring that all states are correctly reset."}], "input_tokens": 9668, "output_tokens": 329}
{"id": "7062", "paths": ["arch/i386/kernel/hpet.c"], "predicts": ["arch/i386/kernel/hpet.c", "arch/i386/kernel/time_hpet.c", "include/asm-i386/hpet.h", "arch/i386/kernel/time.c", "kernel/time/clocksource.c", "include/linux/timer.h", "kernel/timer.c"], "input_tokens_sum": 106474, "output_tokens_sum": 1659, "description": "Most recent kernel where this bug did not occur:\n2.6.17.3\nI did not test 2.6.17.11 yet but I'm pretty sure the bug was introduced in\n2.6.18-rc1\n\nDistribution:\nDebian unstable\n\nHardware Environment:\nThinkpad Z61m\nIt has a Pentium M CoreDuo. /proc/cpuinfo says:\nGenuine Intel(R) CPU           T2500  @ 2.00GHz\n\nProblem Description:\nWhen CONFIG_HPET_TIMER is enabled any call to nanosleep blocks indefinitely. \nFor me that's in a initramfs during udevsettle. Alt+PrintScreen+T says \nsomething about nanosleep. replaceing udevsettle with \"busybox sleep 1\" blocks \nas well with similar results for Alt+PrintScreen+T. The waiting process can be \nkilled with Alt+PrintScreen+I and the boot process continues until the next \nnanosleep.\nWhen CONFIG_HPET_TIMER is disabled the problem does not occur.\n\nI have tested 2.6.18-rc1 - 2.6.18-rc4 and several 2.6.18-rc?-mm? kernels. The \nproblem occurs for all of them. I assume the bug was intoduced with the big \ni386 timer related patches.\n\"indefinitely\" is of cou", "title": "nanosleep blocks indefinitely when CONFIG_HPET_TIMER is enabled", "Kernel Version": "2.6.18-rc4", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/i386/kernel/time_hpet.c", "arch/i386/kernel/timers/timer_hpet.c", "kernel/timer.c"], "causes": [{"cause": "The HPET timer configuration may not be correctly handling the periodic timer interrupts, causing nanosleep to block indefinitely.", "code_file": "arch/i386/kernel/time_hpet.c", "fix_solution": "Ensure that the HPET timer is correctly configured to handle periodic interrupts by checking and setting the HPET_TN_PERIODIC flag properly."}, {"cause": "The HPET timer might not be correctly initialized or started, leading to the timer not generating interrupts as expected.", "code_file": "arch/i386/kernel/timers/timer_hpet.c", "fix_solution": "Add checks and initialization code to ensure that the HPET timer is started and configured correctly, especially in the hpet_enable function."}, {"cause": "The HPET timer might not be correctly handling legacy replacement mode, causing issues with timer interrupts.", "code_file": "arch/i386/kernel/time_hpet.c", "fix_solution": "Modify the HPET initialization code to correctly handle systems that do not support legacy replacement mode by checking the HPET_ID_LEGSUP flag."}, {"cause": "The nanosleep function might not be correctly handling the timer interrupts due to incorrect jiffies handling.", "code_file": "kernel/timer.c", "fix_solution": "Ensure that the jiffies are correctly incremented and handled in the timer cascade to prevent indefinite blocking in nanosleep."}], "input_tokens": 10539, "output_tokens": 314}
{"id": "6965", "paths": ["drivers/md/md.c"], "predicts": ["drivers/md/raid1.c", "drivers/md/md.c", "drivers/md/bitmap.c", "include/linux/raid/md_p.h", "init/do_mounts_md.c"], "input_tokens_sum": 107182, "output_tokens_sum": 1856, "description": "Most recent kernel where this bug did not occur: 2.6.18-rc2\nDistribution: Slackintosh-Current\nHardware Environment:\n\nMac-Mini (ppc) : Internal Harddisk (rootfs) mirrored to an external\nUSB2 Harddrive\n\nProblem Description:\n\nThe internal harddrive of my MacMini is mirrored to an external\nUSB2-Harddrive via md-raid1.\n\nBecause the kernel doesn't attach the usb-device (sda2) to my\nraid (md0) itself (after a reboot) i'm using something like this in my\n/etc/rc.d/rc.local:\n\n> #!/bin/sh\n> postfix start  (<-- note: postfix ist started before attaching sda2)\n> /sbin/mdadm --manage /dev/md0 --add /dev/sda2\n\nThis worked well with kernels below 2.6.18-rc2 :\nA full sync from hda3 -> sda2 was started after each reboot.\n\nBeginning with 2.6.18-rc2 the kernel didn't sync\nthe drive after attaching it: It was added to the raid without\na full resync.\n\nAccording to 'iostat' the kernel does write to both devices\n*after* mdadm attached the harddrive but it seems like everything\nwritten to md0 before attaching ", "title": "Kernel doesn't re-sync usb-raid1 after running mdadm --add", "Kernel Version": "2.6.18-rc3", "Product": "IO/Storage", "Component": "MD", "Hardware": "i386 Linux", "reranked_files": ["drivers/md/raid1.c", "drivers/md/md.c"], "causes": [{"cause": "The kernel does not initiate a full resync of the RAID1 array after adding a new device with mdadm --add, possibly due to changes in the RAID1 resync logic.", "code_file": "drivers/md/raid1.c", "fix_solution": "Modify the logic in raid1_run to ensure that a full resync is triggered when a new device is added to the RAID1 array, even if the array is marked as clean."}, {"cause": "The RAID1 array does not recognize the need for resync after an unclean shutdown, leading to potential data inconsistency.", "code_file": "drivers/md/raid1.c", "fix_solution": "Ensure that the RAID1 array checks for unclean shutdowns and initiates a resync if any devices were not operational during the last shutdown."}, {"cause": "The RAID1 configuration does not properly handle the addition of a USB device, possibly due to timing issues with device recognition.", "code_file": "drivers/md/md.c", "fix_solution": "Add logic to delay the RAID1 resync process until all expected devices, including USB devices, are recognized and added to the array."}, {"cause": "The RAID1 array does not update its state correctly after a device is added, leading to a failure to trigger a resync.", "code_file": "drivers/md/md.c", "fix_solution": "Ensure that the RAID1 state is updated correctly in the md_update_sb function after a device is added, to trigger the necessary resync operations."}], "input_tokens": 8626, "output_tokens": 349}
{"id": "6921", "paths": ["drivers/block/cpqarray.c"], "predicts": ["drivers/block/cpqarray.c", "drivers/block/cpqarray.h", "kernel/module.c", "init/do_mounts_initrd.c"], "input_tokens_sum": 94469, "output_tokens_sum": 877, "description": "Most recent kernel where this bug did not occur: 2.6.14\nDistribution: Debian (etch)\nHardware Environment: Compaq Proliant DL360\nSoftware Environment: n/a\nProblem Description: When built as a module, cpqarray, since 2.6.15, is unable \nto detect arrays. Built into the kernel it works fine. The errors are as \nfollows:\ncpqarray: Finding drives on ida0\ncpqarray: ida0: idaSendPciCmd Timeout out, No command list address returned!\ncpqarray: error sending ID Controller\n\nSteps to reproduce: Boot with a Compaq Smart Array card (shows up as \"raid \ncontroller lsi logic/symbios logic 53C1510 (rev 2)\" in lspci) and a valid \narray. If the kernel is built with cpqarray as a module that is loaded in an \ninitrd, the module is loaded and the array can not be found. If the array \ncontains the root partition, the system (obviously) becomes unbootable.", "title": "cpqarray fails to detect array when built as a module", "Kernel Version": "2.6.16", "Product": "IO/Storage", "Component": "SCSI", "Hardware": "i386 Linux", "reranked_files": ["drivers/block/cpqarray.c", "include/linux/percpu.h", "kernel/module.c"], "causes": [{"cause": "The cpqarray module may not be initializing the hardware properly when loaded as a module, possibly due to missing initialization steps that are only executed when built into the kernel.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Ensure that all necessary initialization steps are performed in the module's init function, similar to when it is built into the kernel."}, {"cause": "The module may not be correctly handling PCI device resources when loaded as a module, leading to timeouts and failures in sending commands.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Review and correct the PCI resource handling in the module initialization code to ensure it matches the built-in behavior."}, {"cause": "The module might be missing necessary synchronization or locking mechanisms when accessing shared resources, leading to race conditions.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Add appropriate locking mechanisms around shared resource accesses to prevent race conditions."}, {"cause": "The module may not be correctly registering or accessing per-CPU variables, leading to incorrect behavior on SMP systems.", "code_file": "include/linux/percpu.h", "fix_solution": "Ensure that per-CPU variables are correctly initialized and accessed in the module context."}, {"cause": "The module might not be correctly handling module-specific initialization sequences, such as those related to module live state transitions.", "code_file": "kernel/module.c", "fix_solution": "Ensure that the module correctly transitions to a live state and handles any necessary post-initialization steps."}], "input_tokens": 9584, "output_tokens": 362}
{"id": "6706", "paths": ["drivers/ieee1394/nodemgr.c"], "predicts": ["drivers/ieee1394/ohci1394.c", "drivers/ieee1394/nodemgr.c", "drivers/ieee1394/hosts.c", "kernel/module.c", "arch/i386/kernel/module.c"], "input_tokens_sum": 98006, "output_tokens_sum": 1644, "description": "Most recent kernel where this bug did not occur: unknown\nDistribution: Mandrake 10.1\nHardware Environment: x86 K7 uniprocessor\ntwo FireWire host adapters (0: TI based, 1394b, 1: VIA based, 1394a)\nSoftware Environment: gcc 3.4.1, kernel.org's kernel\nProblem Description:\n\nWhen \"modprobe ohci1394\" is followed shortly by \"modprobe -r ohci1394\" (e.g. 1\nsecond after the previous modprobe finished), one of the following may happen:\n\n - kernel panic due to exception in interrupt\n   (happened on 2.6.15.x preempt uniprocessor)\n\n   or\n\n - modprobe -r hangs in D state, as does knodemgrd_0\n   (happened on 2.6.16.x preempt SMP on a uniprocessor machine,\n   with original drivers as well as with 1394 drivers equivalent\n   to 2.6.17-rc6-mm2 --- i.e. 2.6.17 will also be affected).\n\n   The knodemgrd_1 slept interruptibly (S state) while the other\n   slept uninterruptibly (D state) right after modprobe -r was\n   issued. This happens with or without other nodes attached to\n   the FireWire ports, with or wi", "title": "modprobe -r ohci1394 hangs or panics", "Kernel Version": "2.6.15", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/ieee1394/nodemgr.c", "drivers/ieee1394/ohci1394.c", "kernel/module.c"], "causes": [{"cause": "The knodemgrd thread is blocked in an uninterruptible sleep state (D state) due to improper signal handling, preventing it from exiting when modprobe -r is called.", "code_file": "drivers/ieee1394/nodemgr.c", "fix_solution": "Unblock SIGTERM after daemonize to allow the knodemgrd thread to receive termination signals."}, {"cause": "The ohci1394 module is not properly handling the cleanup of resources during module removal, leading to a hang or panic.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Ensure that all resources are properly freed and that any pending operations are completed before the module is removed."}, {"cause": "A race condition between module removal and interrupt handling in the ohci1394 driver, causing a panic or hang.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Add proper locking mechanisms to ensure that interrupts are disabled during critical sections of module removal."}, {"cause": "The ohci1394 driver may be attempting to destroy DMA pools while in an invalid context, leading to a panic.", "code_file": "drivers/ieee1394/ohci1394.c", "fix_solution": "Use a workqueue to defer the destruction of DMA pools to a valid context."}, {"cause": "The module list is being modified without proper synchronization, leading to potential race conditions with other kernel functions accessing the list.", "code_file": "kernel/module.c", "fix_solution": "Ensure that module list modifications are protected by appropriate locks or use stop_machine to safely modify the list."}], "input_tokens": 10227, "output_tokens": 391}
{"id": "6455", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ac.c", "drivers/acpi/battery.c", "drivers/acpi/power.c", "arch/i386/kernel/acpi/processor.c", "arch/i386/kernel/apm.c"], "input_tokens_sum": 100451, "output_tokens_sum": 1384, "description": "Most recent kernel where this bug did not occur: not known\nDistribution: Gentoo Linux\nHardware Environment: HP Compaq nx6125 laptop with AMD Turion 64 CPU, BIOS F.0E\nSoftware Environment: KDE 3.5.2\nProblem Description:\nAt some point battery and AC status just stops updating. This happens when I\nunplug the AC cable and when I start my laptop withiut being connected to AC\npower. I think that it is more likely to happen when I do something that uses a\nlot of CPU or Graphics power.\n\nSteps to reproduce:\nI can't tell you the exact steps as I didn't figure out what causes it to stop\nupdating. Most of the time it stops working when I power on my laptop while\ntravelling by train to the work and then at some point it justs stops updating.\nIt also happens at one point when if keep plugginh and unplugging the laptop\nfrom AC power. High CPU usage at that time may help in causing this bug.", "title": "battery and AC status stops updating - HP Compaq nx6125", "Kernel Version": "2.6.17", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/ac.c", "drivers/acpi/battery.c", "drivers/acpi/acpi_bus.c", "drivers/cpufreq/cpufreq.c", "drivers/acpi/osl.c"], "causes": [{"cause": "The ACPI subsystem is not properly notifying the system of changes in AC adapter status, leading to stale power status information.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Ensure that the acpi_ac_notify function properly updates the power status by adding a call to acpi_bus_generate_netlink_event to notify user space of the change."}, {"cause": "The battery status is not being updated due to a failure in the ACPI battery driver to handle notifications correctly.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a mechanism to force a refresh of the battery status when an ACPI event is received, possibly by calling acpi_battery_update on receiving a notification."}, {"cause": "High CPU usage is causing the ACPI subsystem to miss events or fail to process them in a timely manner.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Implement a more robust event handling mechanism that can queue and process ACPI events asynchronously to prevent missing updates during high CPU load."}, {"cause": "The CPU frequency scaling is interfering with the ACPI event handling, causing missed updates.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the cpufreq_reinit function is called whenever there is a change in AC adapter status to reinitialize the CPU frequency settings."}, {"cause": "The ACPI event handler is not correctly registered or is being unregistered prematurely, leading to missed notifications.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Verify that the acpi_install_notify_handler function is correctly registering the event handler and that it remains registered throughout the system's operation."}], "input_tokens": 10895, "output_tokens": 401}
{"id": "6200", "paths": ["fs/nfs/inode.c"], "predicts": ["fs/nfs/file.c", "fs/nfs/inode.c", "kernel/sched.c", "arch/i386/kernel/smp.c", "drivers/net/e1000/e1000_main.c", "drivers/net/tg3.c", "net/core/dev.c", "kernel/softirq.c", "init/main.c", "mm/page_alloc.c"], "input_tokens_sum": 68224, "output_tokens_sum": 1866, "description": "We are running Linux Kernel 2.4.32 and have been experiencing hangs every 1-4\ndays.  Sometimes, we can get multiple hangs in a single day.  We cannot\ndetermine the precise steps to reproduce the hang, but we have replaced the\nserver three times, and each time the problem continues to reoccur.  The\nfirst server had Intel server board SE7501WV2A.  The second system was a Dell\nPrecision WorkStation 450 (Intel 7505 chipset).  The last system was a Dell\nPowerEdge 1750 box (Intel ServerWorks GC LE chipset). All systems have Dual\nXeon, 4 gb memory.  The first two systems were using on-board Intel e1000, which\nI was suspicious was the cause of the problem, but the last system was running\ndual Broadcom gigabit and using the tg3 driver, so this was not an issue.  The\nusers logging into the server are accessing their home directories from our NFS\nserver.\n\nWhen the server hangs, the monitor on the console screen goes black, yet the\nmachine remains pingable.  An nmap on the machine reveals the port", "title": "Linux 2.4.32 keeps hanging", "Kernel Version": "2.4.32", "Product": "IO/Storage", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["fs/nfs/inode.c", "include/linux/cpumask.h", "include/linux/nodemask.h", "drivers/pci/pci.c", "drivers/net/tg3.c"], "causes": [{"cause": "The NFS client may be causing hangs due to improper handling of readahead settings, leading to resource exhaustion or deadlocks.", "code_file": "fs/nfs/inode.c", "fix_solution": "Implement a sysctl interface to dynamically adjust NFS readahead settings, allowing for better tuning based on network conditions."}, {"cause": "Potential issues with cpumask handling in the kernel, leading to improper CPU affinity settings and causing hangs.", "code_file": "include/linux/cpumask.h", "fix_solution": "Review and optimize cpumask operations to ensure correct CPU affinity settings, especially in systems with multiple CPUs."}, {"cause": "The kernel may be experiencing hangs due to improper handling of nodemasks, affecting memory node allocation and causing resource contention.", "code_file": "include/linux/nodemask.h", "fix_solution": "Ensure nodemask operations are correctly implemented and optimized for systems with multiple memory nodes, preventing resource contention."}, {"cause": "Issues with PCI allocation in 64-bit systems may be causing hangs due to incorrect memory allocation or address handling.", "code_file": "drivers/pci/pci.c", "fix_solution": "Implement support for 64-bit address allocations in pci_alloc_consistent to ensure proper memory handling in systems with large memory configurations."}, {"cause": "Potential deadlock or resource exhaustion in the network driver, particularly with the Broadcom tg3 driver.", "code_file": "drivers/net/tg3.c", "fix_solution": "Review and optimize the tg3 driver for handling network traffic efficiently, ensuring it does not cause resource exhaustion or deadlocks."}], "input_tokens": 8593, "output_tokens": 375}
{"id": "5992", "paths": ["drivers/net/r8169.c"], "predicts": ["drivers/net/r8169.c/r8169.c", "include/linux/etherdevice.h/etherdevice.h", "include/linux/netdevice.h/netdevice.h", "net/ethernet/eth.c/eth.c"], "input_tokens_sum": 98570, "output_tokens_sum": 1426, "description": "Most recent kernel where this bug did not occur: None found yet, seems to affect\nall recent 2.6.x kernels on my system\n\nDistribution: Ubuntu (Breezy)\n\nHardware Environment: Foxconn motherboard with r8169 integrated (gigabit\nethernet version). lspci -vvv output supplied.\n\nSoftware Environment: Linux kernel 2.6.15.1 (with Ubuntu Breezy). Output from\ndmesg supplied.\n\nProblem Description: r8169 gets a bad MAC address. After that occurs, no network\nconnectivity is possible. Attempting to use ifconfig to reconfigure the\ninterface causes a hang. System also hangs at \"deconfiguring network interfaces\"\nphase of shutdown.\n\nSteps to reproduce: Boot my system. Networking simply doesn't work.\n\nMore information:\n\nr8169 driver and Linux kernel 2.6.15.1 fails to work with my Realtek 8169\nethernet controller. This is the gigabit ethernet-capable embedded version which\nis integrated into a Foxconn 925A01-8EKRS2 motherboard.\n\nWhenever the system boots, the r8169 driver does not pick up the MAC\naddress fo", "title": "r8169 driver - no network connection, hang at shutdown", "Kernel Version": "2.6.15", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/realtek/r8169.c"], "causes": [{"cause": "The r8169 driver fails to correctly read the MAC address from the hardware, leading to an invalid MAC address being set.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Ensure the MAC address is correctly read from the hardware registers by adding checks and retries if the read operation fails."}, {"cause": "The driver does not handle the initialization sequence properly, causing the network interface to hang during configuration.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Review and correct the initialization sequence in the driver to ensure proper setup of the network interface."}, {"cause": "Incorrect handling of shutdown procedures in the driver, leading to system hang during network deconfiguration.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Implement proper shutdown and cleanup procedures in the driver to ensure resources are released correctly."}, {"cause": "Potential race conditions in the driver code that affect network interface operations.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Add necessary locking mechanisms to prevent race conditions during network interface operations."}], "input_tokens": 639, "output_tokens": 283}
{"id": "5553", "paths": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c"], "predicts": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c/speedstep-smi.c", "arch/i386/kernel/cpu/cpufreq/speedstep-lib.c/speedstep-lib.c", "arch/i386/kernel/cpu/cpufreq/speedstep-lib.h/speedstep-lib.h", "drivers/cpufreq/cpufreq.c/cpufreq.c", "kernel/module.c/module.c", "scripts/kconfig/conf.c/conf.c", "scripts/kconfig/confdata.c/confdata.c"], "input_tokens_sum": 95940, "output_tokens_sum": 2133, "description": "Most recent kernel where this bug did not occur:\n 2.6.14\nDistribution:\n Debian GNU/Linux Etch\nHardware Environment:\n IBM ThinkPad T22, Pentium III (Coppermine), i440BX\nSoftware Environment:\nProblem Description:\n\ncpufreq used to work with 2.6.8 and 2.6.11 kernels, but doesn't work with 2.6.12\nand 2.6.14 for me. I've found that it actually works with 2.6.14 but only if\nkernel is compiled with CONFIG_CPU_FREQ_DEBUG option set.\n\nSteps to reproduce:\n\nCompile kernel with all allmodconfig and clear the CONFIG_CPU_FREQ_DEBUG.\n\nThen the following happens (otherwise it works):\n\n# modprobe speedstep-lib relaxed_check=1\n# modprobe speedstep-smi\nFATAL: Error inserting speedstep_smi\n(/lib/modules/2.6.14/kernel/arch/i386/kernel/cpu/cpufreq/speedstep-smi.ko): No\nsuch device", "title": "speedstep-smi fails to load if CONFIG_CPU_FREQ_DEBUG is not set", "Kernel Version": "2.6.14", "Product": "Power Management", "Component": "cpufreq", "Hardware": "i386 Linux", "reranked_files": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c", "drivers/cpufreq/cpufreq.c", "arch/i386/kernel/cpu/cpufreq/speedstep-lib.c", "kernel/module.c"], "causes": [{"cause": "The speedstep-smi module fails to load due to missing initialization or checks that are only enabled when CONFIG_CPU_FREQ_DEBUG is set.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep-smi.c", "fix_solution": "Add necessary initialization or checks in the speedstep-smi module that are currently only executed when CONFIG_CPU_FREQ_DEBUG is enabled."}, {"cause": "The module relies on debug-specific code paths that are inadvertently skipped when CONFIG_CPU_FREQ_DEBUG is not set.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that essential code paths for module loading are not dependent on CONFIG_CPU_FREQ_DEBUG being set."}, {"cause": "The relaxed_check parameter is not being handled correctly when CONFIG_CPU_FREQ_DEBUG is not set, leading to a failure in device detection.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep-lib.c", "fix_solution": "Modify the handling of the relaxed_check parameter to ensure proper device detection regardless of the CONFIG_CPU_FREQ_DEBUG setting."}, {"cause": "There is a missing or incorrect configuration in the module loading process that is only corrected when CONFIG_CPU_FREQ_DEBUG is enabled.", "code_file": "kernel/module.c", "fix_solution": "Review and correct the module loading configuration to ensure it works correctly without relying on CONFIG_CPU_FREQ_DEBUG."}], "input_tokens": 616, "output_tokens": 319}
{"id": "5475", "paths": ["drivers/usb/input/hid-core.c"], "predicts": ["drivers/usb/input/usbmouse.c/usbmouse.c", "drivers/usb/core/devio.c/devio.c", "drivers/usb/core/hub.c/hub.c", "drivers/usb/core/usb.c/usb.c", "include/linux/usb.h/usb.h"], "input_tokens_sum": 94430, "output_tokens_sum": 2169, "description": "Most recent kernel where this bug did not occur: 2.6.10\nDistribution: Ubuntu\nHardware Environment: AMD Athlpn 1300, Nvidia GeForce2, Logitech Optical USB Mouse\nSoftware Environment: Ubuntu 5.04/Ubuntu 5.10\nProblem Description: \n\nBooting into Gnome and reading webpages. Not using the mouse for a while. When I\ngrab the mouse and want to move the pointer, the mouse is frozen. I have to\nswitch terminals (Ctrl+Alt+F1) and back to F7 to get the mouse working again.\n\nSteps to reproduce:\n\n1. Boot, log into Gnome.\n2. Use your computer for a while (eg. type in a bugreport on kernel.org)\n3. Move the mouse pointer. It appears frozen.\n\nThis did not appear in kernel 2.6.10. The problem is apparent also in 2.6.12.", "title": "USB mouse freezes in X", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/hub.c", "drivers/hid/usbhid/hid-core.c", "drivers/usb/core/usb.c", "drivers/input/mouse/usbmouse.c"], "causes": [{"cause": "The USB mouse driver may not be handling power management correctly, causing the device to become unresponsive after a period of inactivity.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Ensure that the USB hub driver properly handles power state transitions and reinitializes the device when it becomes active again."}, {"cause": "The USB input subsystem might not be correctly processing input events after the mouse has been idle.", "code_file": "drivers/hid/usbhid/hid-core.c", "fix_solution": "Modify the input event handling to ensure that events are correctly queued and processed even after periods of inactivity."}, {"cause": "A regression in the USB core driver could be causing the device to be improperly suspended.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Review and adjust the logic related to device suspension and resumption to ensure devices are correctly reactivated."}, {"cause": "The X server might not be correctly reinitializing the USB mouse after it has been idle.", "code_file": "drivers/input/mouse/usbmouse.c", "fix_solution": "Add logic to reinitialize the mouse device when it is detected as idle for a certain period and then used again."}], "input_tokens": 581, "output_tokens": 292}
{"id": "5366", "paths": ["arch/i386/kernel/timers/timer_tsc.c"], "predicts": ["arch/i386/kernel/timers/timer_tsc.c", "arch/i386/kernel/timers/timer.c", "arch/i386/kernel/time.c", "arch/x86_64/kernel/timers/timer_tsc.c", "arch/x86_64/kernel/timers/timer.c", "arch/x86_64/kernel/time.c", "include/asm-i386/timer.h", "include/asm-x86_64/io_apic.h", "kernel/time.c", "kernel/timer.c"], "input_tokens_sum": 88890, "output_tokens_sum": 1687, "description": "Most recent kernel where this bug did not occur: Unknown -- long ago, probably\nDistribution:\nHardware Environment: i386 and x86_64\nSoftware Environment:\nProblem Description:\n\nI verified this in 2.6.11 since it was handy on lxr.linux.no, but it\nprobably exists in most kernel versions.  Also, the bug appears to be\npresent in both the i386 and x86_64 arch even though it's in\narch-specific code.\n\nThe basic problem is that (in some system configurations) the timer\ninterrupt handler uses the TSC to determine whether some ticks have\nbeen lost, but the kernel synchronizes the TSCs by zeroing them all\n*after* timer interrupts have been started.  Thus at the next timer\ninterrupt, lost ticks are computed as a value from after the reset\n(near 0) minus a value from before the reset.  This overflows and\nproduces a garbage value that can be either positive or negative (the\ndetails of the arithmetic differ between x86_64 and i386, but the\nvalue is garbage on both).  If it's positive, it looks like a l", "title": "synchronize_tsc_bp can zero the TSC during a lost ticks measurement", "Kernel Version": "2.6.11", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/time.c", "arch/x86/kernel/timers/timer_tsc.c", "arch/x86/kernel/timers/timer.c"], "causes": [{"cause": "The TSC is zeroed after timer interrupts have started, leading to incorrect lost tick calculations due to overflow.", "code_file": "arch/x86/kernel/time.c", "fix_solution": "Ensure TSC synchronization occurs before timer interrupts are initialized to prevent zeroing during lost tick calculations."}, {"cause": "Lost tick compensation code does not account for TSC reset, causing incorrect jiffies increment.", "code_file": "arch/x86/kernel/timers/timer_tsc.c", "fix_solution": "Add a check to detect TSC reset and adjust lost tick calculations accordingly to prevent overflow."}, {"cause": "The lost tick detection code is executed outside of the timer->mark_offset function, leading to race conditions.", "code_file": "arch/x86/kernel/timers/timer.c", "fix_solution": "Move lost tick detection code inside timer->mark_offset to prevent race conditions and ensure consistent time calculations."}, {"cause": "The TSC-based lost tick compensation code does not handle CPU frequency changes, causing incorrect jiffies increment.", "code_file": "arch/x86/kernel/timers/timer_tsc.c", "fix_solution": "Implement a mechanism to detect CPU frequency changes and adjust TSC-based lost tick compensation accordingly."}, {"cause": "The lost tick detection code does not handle cases where interrupts are disabled for extended periods, leading to time drift.", "code_file": "arch/x86/kernel/time.c", "fix_solution": "Enhance lost tick detection to account for extended interrupt disable periods and adjust jiffies increment to prevent time drift."}], "input_tokens": 8087, "output_tokens": 364}
{"id": "5151", "paths": ["drivers/input/mouse/alps.c"], "predicts": ["drivers/usb/core/devio.c", "drivers/usb/core/hub.c", "drivers/usb/core/usb.c"], "input_tokens_sum": 95129, "output_tokens_sum": 1799, "description": "Most recent kernel where this bug did not occur: 2.6.11\nDistribution: Debian 3.1\nHardware Environment: Toshiba satellite 2410\nSoftware Environment: KDE\nProblem Description:\n\nSince the kernel 2.6.12, i have a problem with my touchpad. In Kde, the menus\ndisappear. In thunderbird, if i go to my last message and that i use my\ntouchpad, it returns at the beginning.\n\nBut when i put these lines in comments, all is correct. But not the scroll.\n(Option         \"ZAxisMapping\"          \"4 5\")\n\nSection \"InputDevice\"\n        Identifier      \"Configured Mouse\"\n        Driver          \"mouse\"\n        Option          \"CorePointer\"\n        Option          \"Device\"                \"/dev/psaux\"\n        Option          \"Protocol\"              \"ImPS/2\"\n        #Option         \"ZAxisMapping\"          \"4 5\"\nEndSection\nSection \"InputDevice\"\n        Identifier      \"Generic Mouse\"\n        Driver          \"mouse\"\n        Option          \"SendCoreEvents\"        \"true\"\n        Option          \"Device\"             ", "title": "Driver Mouse - Toshiba touchpad after kernel 2.6.11", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/input/mouse/psmouse-base.c", "drivers/input/input.c", "drivers/input/serio/serio.c"], "causes": [{"cause": "The touchpad driver may not be correctly handling ZAxisMapping, causing unexpected behavior in applications.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Modify the handling of ZAxisMapping to ensure it correctly interprets and processes scroll events."}, {"cause": "Changes in the input subsystem between kernel versions 2.6.11 and 2.6.12 might have introduced a regression affecting touchpad behavior.", "code_file": "drivers/input/input.c", "fix_solution": "Review and adjust the input event processing logic to ensure compatibility with touchpad devices."}, {"cause": "The protocol handling for ImPS/2 devices might have been altered, affecting touchpad functionality.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Ensure that the ImPS/2 protocol is correctly implemented and compatible with the touchpad hardware."}, {"cause": "The touchpad might not be correctly initialized or configured due to changes in the input device initialization sequence.", "code_file": "drivers/input/serio/serio.c", "fix_solution": "Verify and correct the initialization sequence for serio devices to ensure proper setup of the touchpad."}, {"cause": "The KDE environment might be interacting with the input subsystem in a way that exposes a bug in the touchpad driver.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Investigate and resolve any conflicts between the KDE environment and the touchpad driver, possibly by adding compatibility checks."}], "input_tokens": 10876, "output_tokens": 362}
{"id": "5105", "paths": ["arch/x86_64/kernel/time.c"], "predicts": ["kernel/timer.c", "arch/x86_64/kernel/time.c", "arch/x86_64/kernel/irq.c", "drivers/cpufreq/cpufreq.c", "init/calibrate.c", "arch/x86_64/kernel/apic.c", "include/asm-i386/timer.h", "arch/x86_64/kernel/smp.c", "kernel/cpu.c", "kernel/sched.c"], "input_tokens_sum": 91230, "output_tokens_sum": 1979, "description": "Distribution: Slamd64\nHardware Environment:\n\nAMD Athlon64 X2 4800+\nGigabyte GA-K8NXP-SLI motherboard\neVGA NVIDIA 6600GT PCI express\n\nSoftware Environment:\nx86_64 kernel target compiled from vanilla 2.6.12.5 kernel source\nx.org, nv driver (open source NVIDIA 2D accelerator driver)\n\nProblem Description:\nThe clock begins to run fast as soon as the CPU is loaded with a mathematical\ncalculation.  Kernel dmesg gives different messages depending on if in X windows\nor just at the console.  At the console the message is:\n\nLosing some ticks... checking if CPU frequency changed.\n\nIn X-Windows an additional message is\n\nwarning: many lost ticks.\nYour time source seems to be instable or some driver is hogging interupts\nrip default_idle+0x20/0x30\n\nIt might be possible to get that second message while only in console\neventually, but I haven't been able to do it.\n\nAlso, if hangcheck is turned on then I get a huge number of Hangcheck messages.\n\nAt first glance this might just sound like an annoying prob", "title": "lost ticks - hang check - after loading the CPU", "Kernel Version": "2.6.12", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/time.c", "drivers/char/hangcheck-timer.c", "kernel/sched.c", "arch/x86/kernel/timers/timer_tsc.c", "arch/x86/kernel/timers/timer_hpet.c"], "causes": [{"cause": "The system is losing timer ticks due to CPU frequency scaling or an unstable time source.", "code_file": "arch/x86/kernel/time.c", "fix_solution": "Ensure that the timekeeping code accounts for changes in CPU frequency by using a more stable time source like HPET or TSC with proper synchronization."}, {"cause": "The hangcheck-timer is detecting system stalls due to inaccurate timekeeping when the CPU is under load.", "code_file": "drivers/char/hangcheck-timer.c", "fix_solution": "Modify the hangcheck-timer to use a monotonic clock source that is not affected by CPU load or frequency changes."}, {"cause": "The scheduler is not handling task migrations efficiently, leading to lost ticks and instability.", "code_file": "kernel/sched.c", "fix_solution": "Improve the scheduler's handling of task migrations and CPU affinity to prevent excessive load on a single CPU."}, {"cause": "The TSC (Time Stamp Counter) is not synchronized across CPUs, leading to time drift and lost ticks.", "code_file": "arch/x86/kernel/timers/timer_tsc.c", "fix_solution": "Implement a mechanism to synchronize the TSC across all CPUs or switch to a more reliable time source like HPET."}, {"cause": "The system is not correctly handling high-resolution timers, causing instability in timekeeping.", "code_file": "arch/x86/kernel/timers/timer_hpet.c", "fix_solution": "Ensure that the HPET timer is correctly initialized and used as the primary time source for high-resolution timing."}], "input_tokens": 10277, "output_tokens": 367}
{"id": "5093", "paths": ["drivers/net/wireless/atmel.c"], "predicts": ["drivers/pcmcia/cs.c", "drivers/pcmcia/ds.c", "drivers/pcmcia/pcmcia_ioctl.c", "kernel/power/swsusp.c", "drivers/base/firmware_class.c", "include/pcmcia/cs.h", "kernel/power/pm.c"], "input_tokens_sum": 92483, "output_tokens_sum": 1327, "description": "Distribution: Debian unstable\nHardware Environment: x86 laptop pentium M compaq nc4000\nSoftware Environment: pcmcia_cs (not udev)\nProblem Description: \n\nMachine hangs on swsusp suspend to disk if 3com 3CRSHPW196 (atmel_cs) is in use,\nafter printing these two lines\n\nYenta O2: res at 0x94/0xD4: 00/ea\nYenta O2: enabling read prefetch/write burst\n\nSome investigation with Magic Sysrq indicates that it stopped in the middle of\nswsusp_write -> device_resume ... -> request_firmware: presumably the pcmcia\ndevice got resumed before the disk it wants to load its firmware from\n\nSteps to reproduce \n# #  -- insert a 3com network card and wait for modules to load --\n# echo platform >/sys/power/disk\n# echo disk >/sys/power/state", "title": "atmel_cs needs to keep firmware", "Kernel Version": "2.6.12", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/base/firmware_class.c", "drivers/pcmcia/atmel_cs.c", "kernel/power/swsusp.c"], "causes": [{"cause": "The firmware for the PCMCIA device is being requested before the disk is fully resumed, causing a hang during suspend to disk.", "code_file": "drivers/base/firmware_class.c", "fix_solution": "Ensure that the firmware request is deferred until after the disk has been fully resumed by adding a check or delay in the request_firmware function."}, {"cause": "The firmware loader is experiencing a race condition due to the timing of hotplug events and attribute creation.", "code_file": "drivers/base/firmware_class.c", "fix_solution": "Implement a synchronization mechanism to ensure that firmware loading attributes are fully initialized before any hotplug events are processed."}, {"cause": "The PCMCIA device is being resumed before the necessary resources (like the disk) are available, leading to a hang.", "code_file": "drivers/pcmcia/atmel_cs.c", "fix_solution": "Modify the device_resume function to ensure that dependencies like the disk are resumed before the PCMCIA device."}, {"cause": "The swsusp (software suspend) process is not correctly handling the order of device resume operations, leading to a hang when firmware is requested.", "code_file": "kernel/power/swsusp.c", "fix_solution": "Adjust the swsusp_resume function to ensure that all necessary devices, particularly storage devices, are resumed before any dependent devices."}], "input_tokens": 9238, "output_tokens": 320}
{"id": "4781", "paths": ["drivers/cpufreq/cpufreq_conservative.c"], "predicts": ["drivers/cpufreq/cpufreq_conservative.c", "drivers/cpufreq/cpufreq.c", "arch/i386/kernel/cpu/cpufreq/powernow-k8.c", "include/linux/cpufreq.h", "drivers/acpi/processor_core.c", "kernel/power/pm.c", "arch/i386/kernel/process.c", "kernel/power/process.c", "include/asm-i386/processor.h", "kernel/power/console.c"], "input_tokens_sum": 92039, "output_tokens_sum": 1725, "description": "Distribution: Slackware-current \n \nHardware Environment: Bi-Opteron system with Tiger K8W board, Logitech USB \nkeyboard \n \nSoftware Environment: Self-compiled 2.6.12rc6 and 2.6.12 kernels with \nkernel.org sources without patches, GCC 3.4.2, KDE 3.4.1 using the Logitech \ndriver. \n \nProblem Description: \nWhen I set up \"conservative\" as scaling governor (using a simple 'echo \n\"conservative\" > /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor' for \nCPU0 and CPU1 at boot), I cannot type anything in consoles and applications \n(like Kword, for instance) anymore. The oly way I can get my keyboard back is \nrebooting. \nWhen I use \"ondemand\", I don't have such problem at all. \nMy keyboard is a Logitech Internet Navigator USB keyboard. I cannot test a PS/2 \nkeyboard on this system, the PS/2 connector doesn't work since I plugged a \nsecond CPU in it. Everything works find, though, on this system, with any \ngovernor except the \"conservative\" one, so my guess is that it still has some \nquirks. \n ", "title": "Conservative governor makes me lose my USB keyboard", "Kernel Version": "2.6.12", "Product": "Power Management", "Component": "cpufreq", "Hardware": "i386 Linux", "reranked_files": ["drivers/cpufreq/cpufreq_conservative.c", "drivers/cpufreq/cpufreq.c", "drivers/usb/core/usb.c"], "causes": [{"cause": "The conservative governor may not be handling USB interrupts properly, leading to the loss of USB keyboard functionality.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Ensure that the conservative governor does not interfere with USB interrupt handling by adding checks or adjustments to the frequency scaling logic to maintain USB responsiveness."}, {"cause": "The conservative governor might be setting the CPU frequency too low, causing insufficient power for USB operations.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Modify the frequency scaling algorithm to set a minimum frequency threshold that ensures USB devices remain operational."}, {"cause": "The conservative governor may not be properly notifying the USB subsystem of frequency changes, leading to a loss of communication with the USB keyboard.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Add notifier calls in the conservative governor to inform the USB subsystem of frequency changes, ensuring it can adjust its operations accordingly."}, {"cause": "The USB driver may not be handling CPU frequency changes correctly when the conservative governor is active.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Implement additional handling in the USB driver to accommodate CPU frequency changes, ensuring continuous USB device functionality."}, {"cause": "The conservative governor might be causing a race condition with USB initialization or operation.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Introduce locking mechanisms or reordering of operations in the conservative governor to prevent race conditions affecting USB devices."}], "input_tokens": 9975, "output_tokens": 376}
{"id": "4625", "paths": ["drivers/block/ub.c"], "predicts": ["drivers/usb/storage/usb.c", "drivers/usb/core/devio.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "include/linux/usb.h"], "input_tokens_sum": 90491, "output_tokens_sum": 1604, "description": "Distribution: mandrake 10.2 rc2 \n\nHardware Environment: desktop - Asus A7V133 motherboard - Athlon XP 1600 CPU \n\nProblem Description:\n\nI have a 128Mb usb key drive. Writing to it is very slow with ub driver.\nYesterday, I tried to copy 16Mb to this drive then I issued a sync command to\nunmount it. 11 (eleven) minutes later, I aborted it by rmmoding uhci_hcd. \n\nUsing usb-storage instead of ub worked well. \n\nSteps to reproduce:\n\n# modprobe ub \n(plug the usb key drive)\n# mount -orw,nosuid,nodev,iocharset=iso8859-15,umask=0 /dev/uba1 /mnt/disk\n# time sh -c \" dd if=/dev/urandom of=/mnt/disk/blah bs=1k count=512 ; sync;\" \n512+0 enregistrements lus.\n512+0 enregistrements", "title": "ub is much slower in writing than usb-storage", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/block/ub.c", "drivers/usb/core/usb.c", "drivers/usb/host/uhci-hcd.c"], "causes": [{"cause": "The ub driver may have inefficient handling of USB bulk transfers, leading to slower write speeds compared to usb-storage.", "code_file": "drivers/block/ub.c", "fix_solution": "Optimize the bulk transfer handling logic to improve write performance, possibly by adjusting buffer sizes or transfer methods."}, {"cause": "The ub driver might be using a suboptimal method for syncing data to the USB device, causing delays during the sync operation.", "code_file": "drivers/block/ub.c", "fix_solution": "Review and improve the data syncing mechanism to ensure faster completion, possibly by using asynchronous operations or better caching strategies."}, {"cause": "There could be a misconfiguration or bug in the USB subsystem affecting the ub driver specifically, leading to slower performance.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Investigate and correct any configuration issues or bugs in the USB subsystem that might be affecting the ub driver, ensuring it uses the most efficient transfer protocols."}, {"cause": "The ub driver may not be properly utilizing the USB controller's capabilities, resulting in slower data transfer rates.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Ensure the ub driver is correctly interfacing with the USB controller to leverage its full capabilities, possibly by updating the driver to use newer APIs or configurations."}], "input_tokens": 1530, "output_tokens": 316}
{"id": "4380", "paths": ["drivers/net/via-velocity.c"], "predicts": ["drivers/net/via-velocity.c", "drivers/net/via-velocity.h", "net/ethernet/eth.c", "net/core/dev.c", "include/linux/netdevice.h", "arch/i386/kernel/pci-dma.c", "include/asm-i386/pci.h", "net/ipv4/devinet.c", "net/ipv4/ip_output.c", "net/ipv6/addrconf.c"], "input_tokens_sum": 83916, "output_tokens_sum": 1009, "description": "Distribution: \n\nDebian testing\n\nHardware Environment:\n\nA normal PC with Pentium M and a VT6122 PCI board.\n\nlspci -vv:\n\n0000:02:04.0 Ethernet controller: VIA Technologies, Inc. VT6120/VT6121/VT6122\nGigabit Ethernet Adapter (rev 11)\n        Subsystem: VIA Technologies, Inc.: Unknown device 0110\n        Control: I/O+ Mem+ BusMaster- SpecCycle- MemWINV+ VGASnoop- ParErr-\nStepping- SERR+ FastB2B-\n        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort-\n<TAbort- <MAbort- >SERR- <PERR-\n        Interrupt: pin A routed to IRQ 201\n        Region 0: I/O ports at 4000 [size=256]\n        Region 1: Memory at e0201000 (32-bit, non-prefetchable) [size=256]\n        Capabilities: [50] Power Management version 2\n                Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA\nPME(D0+,D1+,D2+,D3hot+,D3cold+)\n                Status: D3 PME-Enable- DSel=0 DScale=0 PME-\n\nSoftware Environment:\n\nDebian testing with 2.6.8 or 2.6.10 kernel.\n\nProblem Description:\n\nThe via velocity GE-driver isn't workin", "title": "(net via_velocity) receiver hang after setting mtu >1500", "Kernel Version": "2.6.8", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/via/via-velocity.c", "net/core/dev.c"], "causes": [{"cause": "The via_velocity driver does not handle MTU changes correctly, leading to a receiver hang when MTU is set above 1500.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Ensure that the driver properly configures the hardware to handle larger MTU sizes by adjusting buffer sizes and descriptors accordingly."}, {"cause": "The network stack may not be properly updating the MTU settings for the via_velocity driver, causing packet handling issues.", "code_file": "net/core/dev.c", "fix_solution": "Add checks and updates in the network stack to ensure that MTU changes are propagated correctly to the driver."}, {"cause": "The via_velocity driver might not be correctly handling jumbo frames, which are required when MTU is set above 1500.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Implement or fix jumbo frame support in the driver to ensure it can handle larger packets without hanging."}, {"cause": "The driver might not be properly allocating memory for larger packet sizes, leading to buffer overflows or hangs.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Review and adjust memory allocation logic in the driver to ensure it can handle larger MTU settings without issues."}, {"cause": "Interrupt handling in the via_velocity driver may not be correctly configured for larger MTU sizes, causing hangs.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Ensure that the interrupt handling logic in the driver is robust and can handle the increased load from larger packets."}], "input_tokens": 9525, "output_tokens": 391}
{"id": "4364", "paths": ["drivers/acpi/thermal.c"], "predicts": ["drivers/acpi/thermal.c", "drivers/acpi/ibm_acpi.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/power.c", "kernel/power/swsusp.c", "drivers/acpi/bus.c", "arch/i386/kernel/acpi/boot.c", "include/acpi/processor.h", "include/linux/acpi.h", "kernel/power/pm.c"], "input_tokens_sum": 91450, "output_tokens_sum": 1594, "description": "Distribution: Debian testing\n\nHardware Environment: Thinkpad 600X 650MHz Pentium III\n\nSoftware Environment: 2.6.11.4 + ACPI subsystem 20050309 + ibm_acpi 0.10f +\nXFree 4.3.0.1\n\nProblem Description: After entering S1 state, the screen goes blank but then\nstarts growing fine, rainbow-colored patterns near the middle of the screen and\na few horizontal lines.  The cruft grows until I hit the Fn key to wake it up. \nIt eventually comes back and the screen is just as it was before the sleep.  But\nvarious drivers are unhappy.  The uhci_hcd driver continuously reports error\nmessages such as \n\nhub 1-0:1.0: debounce: port 1: total 1500ms stable 0ms status 0x31f\nhub 1-0:1.0: connect-debounce failed, port 1 disabled\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nhub 1-0:1.0: over-current change on port 2\nhub 1-0:1.0: port 2, status 031f, change 000b, 1.5 Mb/s\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\n\nThe mes", "title": "S1 suspend/resume resets thermal limits -- TP 600X", "Kernel Version": "2.6.16", "Product": "ACPI", "Component": "Power-Thermal", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/thermal.c", "drivers/usb/host/uhci-hcd.c", "arch/x86/kernel/acpi/boot.c", "drivers/video/fbdev/core/fbmem.c"], "causes": [{"cause": "The ACPI subsystem is not correctly restoring thermal limits after a suspend/resume cycle, leading to incorrect thermal management.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Ensure that thermal limits are re-initialized and restored correctly after resume by adding code to reapply thermal settings in the resume path."}, {"cause": "The USB host controller driver (uhci_hcd) is not handling power state transitions properly, causing errors after resume.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Add proper handling for power state transitions in the USB host controller driver to ensure it reinitializes correctly after resume."}, {"cause": "The ACPI interrupt routing is not correctly restored after suspend/resume, leading to device misbehavior.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Ensure that ACPI interrupt routing is reconfigured correctly after resume by adding code to reinitialize ACPI settings."}, {"cause": "The graphics driver is not correctly handling the suspend/resume cycle, leading to display corruption.", "code_file": "drivers/video/fbdev/core/fbmem.c", "fix_solution": "Add code to properly reinitialize the graphics hardware and framebuffer settings after resume to prevent display corruption."}], "input_tokens": 10664, "output_tokens": 307}
{"id": "4359", "paths": ["arch/i386/kernel/smpboot.c"], "predicts": ["arch/i386/kernel/smp.c", "drivers/acpi/processor.c", "arch/i386/kernel/setup.c", "include/asm-i386/processor.h", "include/linux/topology.h"], "input_tokens_sum": 82715, "output_tokens_sum": 1502, "description": "Distribution: RHEL4 AS, Fedora Core 2\nHardware Environment: Dual Xeon (HP DL-360 or Sun Fire V60x)\nSoftware Environment: kernel-smp\nProblem Description: inconsistent sibling count when ht is disabled\n\nSteps to reproduce:\n\nOn an HP DL-360 or Sun Fire V60x (dual xeon systems)\n  1. disable HT in the bios\n  2. boot any smp kernel after 2.6.5 (didn't try UP kernel)\n  3. /proc/cpuinfo shows 2 processors (phys ID 0 and 3) with 2 siblings\n\nExpected behavior:\n /proc/cpuinfo should show 2 processors with 1 sibling each.\n\nI don't see this behavior on any of my other dual xeon systems (HP x4000,\nxw8000, or xw8200).\nI don't see this behavior on ANY systems running kernel 2.6.5 or earlier.\nI've tried updating the firmware and that didn't help.", "title": "With HT off in bios, /proc/cpuinfo shows2 processors, each with 2 siblings", "Kernel Version": "2.6.7", "Product": "ACPI", "Component": "BIOS", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/cpu/intel.c", "drivers/acpi/processor_core.c", "include/linux/cpumask.h", "arch/x86/kernel/acpi/boot.c"], "causes": [{"cause": "The kernel is not correctly handling the sibling count when Hyper-Threading (HT) is disabled in the BIOS, leading to incorrect reporting in /proc/cpuinfo.", "code_file": "arch/x86/kernel/cpu/intel.c", "fix_solution": "Modify the logic that calculates the number of siblings to account for the BIOS setting that disables HT, ensuring it reports the correct number of siblings."}, {"cause": "The ACPI tables might be incorrectly interpreted, leading to incorrect CPU topology information being reported.", "code_file": "drivers/acpi/processor_core.c", "fix_solution": "Update the ACPI processor parsing logic to correctly interpret the CPU topology when HT is disabled, ensuring accurate sibling counts."}, {"cause": "The cpumask handling might not be correctly updated to reflect the changes in CPU topology when HT is disabled.", "code_file": "include/linux/cpumask.h", "fix_solution": "Ensure that cpumask operations correctly reflect the actual number of logical processors when HT is disabled, adjusting the sibling count accordingly."}, {"cause": "The BIOS might be providing incorrect or incomplete information about the CPU topology, which the kernel is not handling gracefully.", "code_file": "arch/x86/kernel/acpi/boot.c", "fix_solution": "Add additional checks and fallbacks in the ACPI boot code to handle cases where the BIOS provides incorrect CPU topology information."}], "input_tokens": 9099, "output_tokens": 323}
{"id": "4351", "paths": ["drivers/char/ipmi/ipmi_si_intf.c"], "predicts": ["drivers/acpi/tables/tbget.c", "drivers/acpi/tables/tbutils.c", "drivers/acpi/acpi_ksyms.c", "arch/i386/kernel/acpi/boot.c", "include/acpi/acpi.h"], "input_tokens_sum": 86094, "output_tokens_sum": 1670, "description": "I find this bug in IPMI driver but after root cause I think it is an ACPI \nrelated bug.So post it here and say sorry in advance if it is not the proper \nplace for it.\n\nDistribution:\nRed Hat Enterprise Linux AS release 4\n\nHardware Environment:\nHPCX 2600\n\nSoftware Environment:\n\n\nProblem Description:\n\nFail to load ipmi_si driver with oop.\n\nMore details can be found in PS2.\n\nAfter debugging with the driver, I found the OOP is caused by an invalid \naddress.In IPMI driver, we will call acpi_get_firmware_table in try_init_acpi \nfunction to get the information of SPMI table. In this information, there is a \nmemory pointered by spmi->addr.address and it is invalid. It seems acpi map a \nwrong memory and send itout to IPMI but from the boot log of system ACPI is \nenabled properly. I think in this case, an error code should be returned by \nacpi_get_firmware_table instead of AE_OK, just as what we see in IPMI driver\n(See PS1)\n\n\nSteps to reproduce:\n    modprobe ipmi_msghandler\n    modprobe ipmi_si k", "title": "acpi_get_firmware_table return an invalid block of memory", "Kernel Version": "2.6.9", "Product": "ACPI", "Component": "BIOS", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/tables.c", "arch/i386/kernel/acpi/boot.c", "drivers/acpi/resources/rsutils.c", "arch/i386/kernel/setup.c"], "causes": [{"cause": "acpi_get_firmware_table is returning AE_OK even when the memory address in the SPMI table is invalid.", "code_file": "drivers/acpi/tables.c", "fix_solution": "Add validation checks for the memory address in the SPMI table before returning AE_OK."}, {"cause": "Improper mapping of ACPI tables leading to invalid memory addresses being used.", "code_file": "arch/i386/kernel/acpi/boot.c", "fix_solution": "Use __acpi_map_table instead of __va for mapping ACPI tables to ensure proper address mapping."}, {"cause": "ACPI resource handling does not correctly validate or handle resource addresses.", "code_file": "drivers/acpi/resources/rsutils.c", "fix_solution": "Implement additional checks in acpi_rs_get_method_data to validate resource addresses before processing."}, {"cause": "ACPI interrupt routing is not correctly disabled when requested, potentially causing invalid memory access.", "code_file": "arch/i386/kernel/setup.c", "fix_solution": "Ensure acpi_irq is set to 0 when pci=noacpi is specified to prevent ACPI from handling IRQ routing."}], "input_tokens": 6525, "output_tokens": 270}
{"id": "4312", "paths": ["drivers/video/tridentfb.c"], "predicts": ["drivers/video/tridentfb.c", "include/video/trident.h", "drivers/video/console/fbcon.c", "drivers/video/fbmem.c", "sound/oss/trident.c", "sound/pci/trident/trident.c", "sound/pci/trident/trident_main.c", "sound/pci/trident/trident_memory.c", "sound/pci/trident/trident_synth.c"], "input_tokens_sum": 90856, "output_tokens_sum": 1703, "description": "Distribution: Debian/sarge\nHardware Environment: VIA Mini-ITX with onboard graphic\nlspci -v:\n0000:01:00.0 VGA compatible controller: Trident Microsystems CyberBlade/i1 (rev\n6a) (prog-if 00 [VGA])\n        Subsystem: Trident Microsystems CyberBlade/i1\n        Flags: bus master, 66MHz, medium devsel, latency 32, IRQ 11\n        Memory at e1800000 (32-bit, non-prefetchable) [size=8M]\n        Memory at e2000000 (32-bit, non-prefetchable) [size=128K]\n        Memory at e1000000 (32-bit, non-prefetchable) [size=8M]\n        Capabilities: [80] AGP version 2.0\n                Status: RQ=33 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans-\n64bit- FW- AGP3- Rate=x1,x2,x4\n                Command: RQ=1 ArqSz=0 Cal=0 SBA- AGP- GART64- 64bit- FW-\nRate=<none>\n        Capabilities: [90] Power Management version 1\n                Flags: PMEClk- DSI+ D1+ D2+ AuxCurrent=0mA\nPME(D0-,D1-,D2-,D3hot-,D3cold-)\n                Status: D0 PME-Enable- DSel=0 DScale=0 PME-\n\nProblem Description:\nWhen there is disk I/O h", "title": "tridentfb: flicker when disk I/O is happening", "Kernel Version": "2.6.11", "Product": "Drivers", "Component": "Console/Framebuffers", "Hardware": "i386 Linux", "reranked_files": ["drivers/video/tridentfb.c", "drivers/video/console/fbcon.c", "drivers/video/fbmem.c", "include/linux/fb.h"], "causes": [{"cause": "The framebuffer driver tridentfb may not be handling concurrent access properly, leading to flickering during disk I/O operations.", "code_file": "drivers/video/tridentfb.c", "fix_solution": "Implement proper locking mechanisms around framebuffer access to ensure that concurrent operations do not interfere with each other."}, {"cause": "The framebuffer console (fbcon) might not be correctly synchronizing with the framebuffer during disk I/O, causing visual artifacts.", "code_file": "drivers/video/console/fbcon.c", "fix_solution": "Add synchronization mechanisms to ensure that framebuffer updates are atomic and do not conflict with other operations like disk I/O."}, {"cause": "Power management or suspend/resume operations might be affecting the framebuffer state, leading to flickering during disk I/O.", "code_file": "drivers/video/fbmem.c", "fix_solution": "Ensure that power management callbacks properly handle framebuffer state changes and synchronize with ongoing operations."}, {"cause": "The framebuffer client notification mechanism might not be correctly implemented, causing flickering when the framebuffer is accessed during disk I/O.", "code_file": "include/linux/fb.h", "fix_solution": "Review and correct the implementation of framebuffer client notifications to ensure they properly handle concurrent access and state changes."}], "input_tokens": 10460, "output_tokens": 293}
{"id": "4249", "paths": ["net/netlink/af_netlink.c"], "predicts": ["net/netlink/af_netlink.c", "include/net/sock.h", "include/linux/skbuff.h", "security/selinux/netlink.c"], "input_tokens_sum": 92675, "output_tokens_sum": 1333, "description": "Distribution: Slackware 10\nHardware Environment:\n# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 3\nmodel name      : Intel(R) Pentium(R) 4 CPU 2.80GHz\nstepping        : 4\ncpu MHz         : 2793.832\ncache size      : 1024 KB\nphysical id     : 0\nsiblings        : 2\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug        : no\ncoma_bug        : no\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 5\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov\npat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe pni monitor ds_cpl cid\nxtpr\nbogomips        : 5505.02\n\nprocessor       : 1\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 3\nmodel name      : Intel(R) Pentium(R) 4 CPU 2.80GHz\nstepping        : 4\ncpu MHz         : 2793.832\ncache size      : 1024 KB\nphysical id     : 0\nsiblings        : 2\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug    ", "title": "KERNEL: assertion (!atomic_read(&sk->sk_rmem_alloc)) failed at net/netlink/af_netlink.c (122)", "Kernel Version": "2.6.11", "Product": "Networking", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["net/netlink/af_netlink.c", "include/linux/skbuff.h", "net/socket.c"], "causes": [{"cause": "The assertion failure is likely due to a race condition where the sk_rmem_alloc counter is not decremented properly before the socket is released.", "code_file": "net/netlink/af_netlink.c", "fix_solution": "Ensure that sk_rmem_alloc is decremented correctly and add proper synchronization mechanisms to prevent race conditions."}, {"cause": "The sk_rmem_alloc counter might not be decremented if the socket buffer is not freed correctly, possibly due to a missing kfree_skb() call.", "code_file": "include/linux/skbuff.h", "fix_solution": "Add a check for NULL pointers in kfree_skb() and ensure that all allocated sk_buffs are freed properly."}, {"cause": "The netlink_unicast function might not handle errors correctly, leading to the socket being released without proper cleanup.", "code_file": "net/netlink/af_netlink.c", "fix_solution": "Improve error handling in netlink_unicast to ensure that resources are properly released in case of failure."}, {"cause": "The socket might be released prematurely due to incorrect reference counting, leading to the assertion failure.", "code_file": "net/socket.c", "fix_solution": "Review and correct the reference counting logic to ensure that sockets are not released prematurely."}, {"cause": "The removal of unused code related to NL_EMULATE_DEV might have inadvertently affected the handling of sk_rmem_alloc.", "code_file": "net/netlink/af_netlink.c", "fix_solution": "Re-evaluate the removal of NL_EMULATE_DEV code and ensure that all necessary checks and balances are in place for sk_rmem_alloc."}], "input_tokens": 10529, "output_tokens": 378}
{"id": "4219", "paths": ["drivers/net/pcnet32.c"], "predicts": ["drivers/net/pcnet32.c", "include/linux/netdevice.h", "net/core/dev.c", "net/core/ethtool.c", "include/linux/etherdevice.h"], "input_tokens_sum": 86512, "output_tokens_sum": 892, "description": "Problem Description:\n\n We have an Allied Telesyn 2701 FTX network cards. These cards has 2 interfaces:\na Fiberoptic 100 Mbit and a TP 10/100Mbit interface. These cards are based on\nAMD PCnet-PRO (AM79C976) chip. We coonnected two such cards using fiberoptic\ncables so diode on the cards indicates 100Mbit link. But Linux can't detect\nthis. It allways says \"link is down\". However, network works, but speed is very\nlow, about 1 Mbit.", "title": "pcnet32 fiberoptic do not works on Allied Telesyn 2701FTX", "Kernel Version": "2.6.16", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/pcnet32.c"], "causes": [{"cause": "The pcnet32 driver does not correctly handle PHY selection for the Allied Telesyn 2701FTX, causing it to incorrectly report the link status.", "code_file": "drivers/net/pcnet32.c", "fix_solution": "Skip PHY selection for the Allied Telesyn 2701FTX by adding a condition to check the subsystem vendor and device ID, and bypass the PHY selection logic."}, {"cause": "The driver does not correctly report link status for non-MII capable devices, leading to incorrect 'link is down' messages.", "code_file": "drivers/net/pcnet32.c", "fix_solution": "Modify the link status reporting logic to always report the link as up for non-MII capable devices by checking the MII capability and setting the link status accordingly."}, {"cause": "The driver might not be correctly setting the speed and duplex settings for the fiber optic interface, leading to reduced network performance.", "code_file": "drivers/net/pcnet32.c", "fix_solution": "Ensure that the correct speed and duplex settings are applied for the fiber optic interface by adjusting the BCR register settings based on the interface type."}], "input_tokens": 9993, "output_tokens": 269}
{"id": "3518", "paths": ["drivers/acpi/sleep/proc.c"], "predicts": ["drivers/acpi/sleep/wakeup.c", "arch/i386/kernel/acpi/sleep.c", "include/acpi/acpi_bus.h", "drivers/acpi/events/evregion.c", "arch/i386/kernel/acpi/boot.c", "drivers/acpi/resources/rsmisc.c", "include/acpi/acevents.h", "drivers/acpi/resources/rsxface.c", "kernel/power/pm.c", "arch/i386/kernel/io_apic.c"], "input_tokens_sum": 87327, "output_tokens_sum": 1563, "description": "Distribution: Slackware 10\nHardware Environment: Notebook Aristo 2500, CPU Celeron 2.40Ghz\nProblem Description:\n\nWhen i go into S3 mode (echo mem >/sys/power/state), i can wakeup\nby pressing SLPB (Fn+ESC on my laptop) or opening LID.\nWhen i do that on a working system, kernel sends events\n\"button/sleep SLPB 00000080 00000000x\" when i'm pressing Fn+ESC\nand \"button/lid LID 000000080 00000000x\" when i'm openning or\nclosing LID.\nBut, when i disable LID (echo LID >/proc/acpi/wakeup) *or*\nSLPB (echo SLPB >/proc/acpi/wakeup), i do cat /proc/acpi/wakeup\nand i see that LID or SLPB is disabled, i can't go back\nfrom S3 state.\n\nSteps to reproduce:\necho LID >/proc/acpi/wakeup or echo SLPB >/proc/acpi/wakeup\nand echo mem >/sys/power/state", "title": "disable event LID blocks SLPB and vice versa on wakeup from S3", "Kernel Version": "2.6.9", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/sleep.c", "drivers/acpi/wakeup.c", "drivers/acpi/button.c", "drivers/acpi/hardware/hwsleep.c"], "causes": [{"cause": "The ACPI wakeup events for LID and SLPB are not being correctly re-enabled after being disabled, preventing wakeup from S3 state.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the ACPI wakeup events for LID and SLPB are correctly re-enabled after being disabled by modifying the logic in the ACPI wakeup event handling code."}, {"cause": "The ACPI wakeup event handling does not correctly update the wakeup capabilities when LID or SLPB is disabled, leading to an inability to wake from S3.", "code_file": "drivers/acpi/wakeup.c", "fix_solution": "Modify the ACPI wakeup event handling to ensure that disabling one event does not inadvertently disable the other, allowing for proper wakeup from S3."}, {"cause": "The ACPI subsystem does not correctly handle the state transition for wakeup events when LID or SLPB is disabled, causing a failure to wake from S3.", "code_file": "drivers/acpi/button.c", "fix_solution": "Adjust the state transition logic in the ACPI button driver to ensure that wakeup events are correctly managed when LID or SLPB is disabled."}, {"cause": "The ACPI wakeup event configuration is not properly synchronized with the hardware state, leading to wakeup failures from S3.", "code_file": "drivers/acpi/hardware/hwsleep.c", "fix_solution": "Implement synchronization between the ACPI wakeup event configuration and the actual hardware state to ensure wakeup events are correctly processed."}], "input_tokens": 10721, "output_tokens": 366}
{"id": "3108", "paths": ["drivers/usb/core/devio.c"], "predicts": ["drivers/usb/core/devices.c", "drivers/usb/core/devio.c", "fs/proc/base.c", "fs/proc/generic.c", "drivers/usb/core/file.c", "arch/i386/kernel/process.c", "kernel/fork.c", "drivers/usb/core/hub.c", "include/linux/usb.h", "include/linux/proc_fs.h"], "input_tokens_sum": 81391, "output_tokens_sum": 1632, "description": "Problem Description: \nWe have a setup where we use libusb to control 32 units throughout a test \nprocess.  Basically we detect when a board is plugged in and fork a process for \nit.  Starting with 2.6.7, we have been having hang problems where the fork \noccurs and then the process goes into disk wait.  Once the test completes on \nthe units already running, then the processes in disk wait will continue.  I'm \nbetting it has to do with some of the serialize changes that went into 2.6.7. \n \nSteps to reproduce: \nTransfer data over several devices and then try to cat /proc/bus/usb/devices.", "title": "/proc/bus/usb/devices stall", "Kernel Version": "2.6.7", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/devio.c", "fs/proc/generic.c"], "causes": [{"cause": "The serialization changes in the USB subsystem introduced in kernel version 2.6.7 may be causing processes to hang when accessing /proc/bus/usb/devices.", "code_file": "drivers/usb/core/devio.c", "fix_solution": "Review and potentially adjust the locking mechanism around the USB device access to ensure it does not cause unnecessary blocking."}, {"cause": "The atime updates on USB device reads might be causing additional I/O operations that lead to the observed stalls.", "code_file": "drivers/usb/core/devio.c", "fix_solution": "Consider disabling atime updates for USB device reads or optimize the atime update logic to reduce I/O overhead."}, {"cause": "The process of reading from /proc/bus/usb/devices might be blocked due to contention with other USB operations.", "code_file": "fs/proc/generic.c", "fix_solution": "Investigate and optimize the read operations from /proc/bus/usb/devices to ensure they do not block due to other USB operations."}], "input_tokens": 11112, "output_tokens": 244}
{"id": "3024", "paths": ["drivers/acpi/hardware/hwsleep.c"], "predicts": ["kernel/power/poweroff.c", "arch/i386/kernel/reboot.c", "drivers/acpi/power.c", "arch/i386/pci/acpi.c", "include/linux/acpi.h", "drivers/acpi/acpi_ksyms.c", "init/main.c", "arch/i386/kernel/smp.c", "kernel/power/pm.c", "kernel/sys.c"], "input_tokens_sum": 84667, "output_tokens_sum": 1676, "description": "Distribution: Debian Sid (unstable)\nHardware Environment: Tyan Thunder K7 (s2462 with latest 2.14 Bios), Dual Athlon\nMP 1200 MHz, Ati Radeon 9600, Sounblaster PCI 128 (ens1371)\n\nlspci\n\n0000:00:00.0 Host bridge: Advanced Micro Devices [AMD] AMD-760 MP [IGD4-2P]\nSystem Controller (rev 11)\n0000:00:01.0 PCI bridge: Advanced Micro Devices [AMD] AMD-760 MP [IGD4-2P] AGP\nBridge\n0000:00:07.0 ISA bridge: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] ISA\n(rev 02)\n0000:00:07.1 IDE interface: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] IDE\n(rev 01)\n0000:00:07.3 Bridge: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] ACPI (rev 01)\n0000:00:07.4 USB Controller: Advanced Micro Devices [AMD] AMD-766 [ViperPlus]\nUSB (rev 07)\n0000:00:0b.0 Multimedia audio controller: Ensoniq ES1371 [AudioPCI-97] (rev 06)\n0000:00:0d.0 SCSI storage controller: Adaptec AIC-7899P U160/m (rev 01)\n0000:00:0d.1 SCSI storage controller: Adaptec AIC-7899P U160/m (rev 01)\n0000:00:0f.0 Ethernet controller: 3Com Corporation", "title": "Tyan Thunder K7 hangs on shutdown / reboot", "Kernel Version": "2.6.7", "Product": "ACPI", "Component": "Power-Off", "Hardware": "i386 Linux", "reranked_files": ["arch/i386/kernel/reboot.c", "arch/i386/kernel/dmi_scan.c", "drivers/acpi/sleep.c", "arch/x86/kernel/process.c"], "causes": [{"cause": "The local APIC is not being properly disabled during shutdown, causing the system to hang.", "code_file": "arch/i386/kernel/reboot.c", "fix_solution": "Add code to disable the local APIC in the machine_restart function, similar to the workaround described in the emails."}, {"cause": "The system requires a specific reboot method due to hardware quirks, which is not being automatically selected.", "code_file": "arch/i386/kernel/dmi_scan.c", "fix_solution": "Add a DMI entry for the Tyan Thunder K7 to automatically select the appropriate reboot method, such as BIOS or SMP."}, {"cause": "ACPI is not handling power-off correctly on this specific hardware, leading to hangs.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that ACPI shutdown methods are correctly implemented and called during the shutdown process."}, {"cause": "The kernel is not properly handling the shutdown sequence for the AMD-760 MP chipset.", "code_file": "arch/x86/kernel/process.c", "fix_solution": "Review and update the shutdown sequence to ensure compatibility with the AMD-760 MP chipset, possibly by adding chipset-specific handling."}], "input_tokens": 8866, "output_tokens": 283}
{"id": "2829", "paths": ["fs/locks.c"], "predicts": ["fs/locks.c", "fs/fcntl.c", "fs/file.c"], "input_tokens_sum": 84365, "output_tokens_sum": 1534, "description": "Distribution: debian\nHardware Environment:\nSoftware Environment:\nProblem Description: Using POSIX threads makes posix_locks_deadlock() loop\ninfinitely.\n\nSteps to reproduce:\n\nThere are 3 processes; \"A\", \"B\" and \"C\".\nEach process opens \"file1\", \"file2\" and \"file3\".\n\n\"A\" creates 3 POSIX threads; \"A1\", \"A2\" and \"A3\". (These threads' PIDs are the\nsame.)\n\"B\" creates 2 POSIX threads; \"B1\" and \"B2\". (These threads' PIDs are the same.)\n\"C\" creates 1 POSIX thread; \"C1\".\n\n\n1. \"A1\" locks \"file1\" exclusively.\n2. \"B1\" locks \"file2\" exclusively.\n3. \"C1\" locks \"file3\" exclusively.\n4. \"A2\" trys to lock \"file2\" and sleeps (blocked by \"B1\").\n5. \"A3\" trys to lock \"file3\" and sleeps (blocked by \"C1\").\n6. \"B2\" trys to lock \"file1\".\n   Here, posix_locks_deadlock() must detect deadlock, but\n   it does not. Then \"B2\" sleeps (blocked \"A1\").\n\n  \"A\"                                    \"B\"\n   |                                      |\n   +--A1(LOCK)---->(file1)<-B2(*deadlock)-+\n   |                                   ", "title": "posix_locks_deadlock() loops infinitely", "Kernel Version": "2.6.6", "Product": "File System", "Component": "VFS", "Hardware": "i386 Linux", "reranked_files": ["fs/locks.c", "fs/lockd/svclock.c"], "causes": [{"cause": "The posix_locks_deadlock() function fails to detect a deadlock when multiple threads from different processes attempt to lock files in a circular manner.", "code_file": "fs/locks.c", "fix_solution": "Enhance the posix_locks_deadlock() function to correctly identify circular dependencies between locks held by different threads, possibly by implementing a more comprehensive deadlock detection algorithm."}, {"cause": "The current implementation of posix_locks_deadlock() does not account for the scenario where multiple threads from the same process hold locks, leading to incorrect deadlock detection.", "code_file": "fs/locks.c", "fix_solution": "Modify posix_locks_deadlock() to consider thread-specific lock ownership and ensure it checks for deadlocks involving threads with the same PID."}, {"cause": "The locking mechanism does not properly handle the case where threads from different processes attempt to acquire locks on the same set of files, resulting in an infinite loop.", "code_file": "fs/locks.c", "fix_solution": "Implement additional checks in posix_locks_deadlock() to handle inter-process thread locking scenarios and prevent infinite loops."}, {"cause": "The function posix_lock_file() may not be correctly updating lock states, leading to incorrect assumptions about lock availability and deadlock detection.", "code_file": "fs/locks.c", "fix_solution": "Review and update posix_lock_file() to ensure it accurately reflects the current state of locks and interacts correctly with posix_locks_deadlock()."}, {"cause": "The NFS locking routines bypass the filesystem lock operations, potentially causing inconsistencies in lock states and deadlock detection.", "code_file": "fs/lockd/svclock.c", "fix_solution": "Ensure NFS locking routines invoke the filesystem lock operations to maintain consistency in lock states and improve deadlock detection."}], "input_tokens": 9992, "output_tokens": 423}
{"id": "2638", "paths": ["init/main.c"], "predicts": ["drivers/acpi/osl.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/utilities/utglobal.c", "include/acpi/acpi.h", "arch/i386/kernel/setup.c", "drivers/acpi/acpi_ksyms.c", "lib/cmdline.c", "init/main.c", "kernel/params.c"], "input_tokens_sum": 80068, "output_tokens_sum": 1449, "description": "Distribution: Debian unstable \nHardware Environment: Centrino Notebook Bullman V5Cen (= Compal  \nCL50) \nProblem Description: \n \nI am using the command line parameter acpi_os_name=\"Microsoft \nWindows XP\" to prevent the EHCI device from being disabled. However, \nthis does not work anymore with kernel 2.6.5 onwards. \n \nWith kernel 2.6.4, dmesg also showed a line containing: \n \nACPI: Overriding _OS definition \n \nWith kernel 2.6.5 and 2.6.6-rc1, acpi_os_name=\"Microsoft Windows XP\" \ndoes not have the desired effect (not disabling the EHCI device), and the \nabove line is not shown in dmesg. \n \nThis happens with both the kernels supplied by the Debian project and \nkernels compiled by myself from the original source.", "title": "kernel parameter acpi_os_name= does not work", "Kernel Version": "2.6.5", "Product": "ACPI", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/osl.c", "drivers/acpi/acpi_ksyms.c", "arch/i386/kernel/setup.c"], "causes": [{"cause": "The kernel parameter acpi_os_name is not being parsed or applied correctly in the newer kernel versions.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Ensure that the acpi_os_name parameter is correctly parsed and applied by adding necessary checks and logic to handle the parameter in the acpi_os_name_override function."}, {"cause": "The logic to override the ACPI _OS definition might have been removed or altered in the newer kernel versions.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Reintroduce or correct the logic that overrides the ACPI _OS definition when the acpi_os_name parameter is set, ensuring that the override is logged in dmesg."}, {"cause": "Changes in the ACPI subsystem might have affected how the OS name is set or overridden.", "code_file": "drivers/acpi/acpi_ksyms.c", "fix_solution": "Verify and update the export symbols related to ACPI OS name handling to ensure they are correctly linked and used throughout the ACPI subsystem."}, {"cause": "The parameter parsing mechanism might not be correctly handling the acpi_os_name parameter.", "code_file": "arch/i386/kernel/setup.c", "fix_solution": "Add or update the parameter parsing logic to ensure that acpi_os_name is correctly recognized and processed during early boot."}], "input_tokens": 10069, "output_tokens": 317}
{"id": "2567", "paths": ["drivers/acpi/pci_link.c"], "predicts": ["arch/i386/kernel/irq.c", "arch/i386/kernel/pci-irq.c", "arch/i386/kernel/setup.c", "drivers/acpi/pci_irq.c", "drivers/acpi/pci_link.c", "drivers/pci/setup-irq.c", "include/asm-i386/irq.h", "include/asm-i386/io_apic.h", "arch/i386/kernel/io_apic.c", "kernel/resource.c"], "input_tokens_sum": 64765, "output_tokens_sum": 1263, "description": "Hardware Environment: some centrino laptop\nProblem Description:\n\n I'm trying to use Intel Wireless 2100 adapter on my centrino based\n notebook. I use ipw2100 drivers from ipw2100.sf.net. The thing is that\n hardware says that the device should generate irq11, but it really\n generates irq5. I tryed both 2.4.26 and 2.6.5. I also tryed to compile\n kernel with and without ACPI. I tryed to compile kernel with and\n without APIC support. I also tryed to pass some parameters to kernel\n (acpi=off, acpi=force, pci=biosirq). But anyway kernel says irq 11 and\n device generates irq5. Of course it is possible to be hardware\n problem, but it works under windows.", "title": "wrong irq rouing on centrino laptop - PIC", "Kernel Version": "2.4.26", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/pci_irq.c", "arch/x86/kernel/irq.c", "arch/x86/kernel/apic/apic.c", "drivers/pci/probe.c", "kernel/irq/manage.c"], "causes": [{"cause": "Incorrect IRQ routing due to ACPI misconfiguration or incorrect handling of IRQs by the ACPI subsystem.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Ensure that the ACPI subsystem correctly interprets and routes IRQs by updating the ACPI IRQ routing logic to handle discrepancies between reported and actual IRQs."}, {"cause": "The kernel's IRQ handling code may not be correctly mapping the hardware IRQs to the expected software IRQs.", "code_file": "arch/x86/kernel/irq.c", "fix_solution": "Modify the IRQ handling logic to ensure that the IRQs are correctly mapped and routed, possibly by adding additional checks or mappings for specific hardware configurations."}, {"cause": "The APIC (Advanced Programmable Interrupt Controller) configuration might be incorrect, leading to improper IRQ assignments.", "code_file": "arch/x86/kernel/apic/apic.c", "fix_solution": "Review and update the APIC configuration and initialization code to ensure that it correctly assigns and handles IRQs for all devices, especially on Centrino platforms."}, {"cause": "The PCI subsystem might not be correctly configuring the IRQs for the Intel Wireless 2100 adapter.", "code_file": "drivers/pci/probe.c", "fix_solution": "Update the PCI IRQ configuration logic to ensure that the correct IRQ is assigned to the Intel Wireless 2100 adapter, possibly by adding specific handling for this device."}, {"cause": "The kernel might not be correctly handling shared IRQs, leading to conflicts or misrouting.", "code_file": "kernel/irq/manage.c", "fix_solution": "Enhance the shared IRQ handling logic to better manage and resolve conflicts between devices sharing the same IRQ line."}], "input_tokens": 9790, "output_tokens": 396}
{"id": "2443", "paths": ["drivers/acpi/events/evxfevnt.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "kernel/power/pm.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "include/acpi/acpi.h", "include/linux/acpi.h"], "input_tokens_sum": 80164, "output_tokens_sum": 1473, "description": "Distribution: Slackware-based, mostly self-built \nHardware Environment: IBM ThinkPad 240 - Celeron Mendocino 300, 192MB RAM \nSoftware Environment: \nProblem Description: System \"pauses\" for up to a second at a time, \napproximately every 10-15 seconds when ACPI is enabled. This corresponds to a \nblock of anything up to 10 \"battery BAT1 00000080 00000001\" events being \ngenerated. Running top shows \"events/0\" clocking up a chunk of CPU time \ncorresponding to the pause duration each time it occurs. \n \nUnder 2.4.25, the battery events always appear in twos. \n \nSteps to reproduce: Simply boot the system with an ACPI-enabled kernel :) I \ndon't know whether it is ThinkPad 240-specific or whether other systems are \nalso affected. The pauses are most noticeable when playing audio or video, but \naffect everything - when typing, characters will briefly stop being echoed \"in \nreal time\", then the system will \"catch up\" when the pause ends.", "title": "Frequent short \"pauses\" corresponding to multiple battery events", "Kernel Version": "2.6.5", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/events.c", "arch/i386/kernel/acpi/boot.c", "include/linux/acpi.h", "drivers/acpi/acpi_bus.c"], "causes": [{"cause": "Excessive battery event notifications causing high CPU usage in the events/0 process.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a debounce mechanism to limit the frequency of battery event notifications."}, {"cause": "Inefficient handling of ACPI battery events leading to system pauses.", "code_file": "drivers/acpi/events.c", "fix_solution": "Optimize the event handling logic to reduce CPU time spent processing battery events."}, {"cause": "ACPI interrupt handling may be causing unnecessary delays.", "code_file": "arch/i386/kernel/acpi/boot.c", "fix_solution": "Review and optimize the ACPI interrupt handling to ensure it does not block other processes."}, {"cause": "Potential issue with ACPI GSI to IRQ mapping causing frequent interrupts.", "code_file": "include/linux/acpi.h", "fix_solution": "Ensure correct mapping of ACPI GSI to IRQ to prevent excessive interrupt handling."}, {"cause": "ACPI BIOS might be generating redundant battery events due to improper configuration.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Add a check to filter out redundant or duplicate battery events at the ACPI bus level."}], "input_tokens": 9335, "output_tokens": 296}
{"id": "2423", "paths": ["drivers/usb/core/message.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/devio.c", "drivers/usb/core/hub.c", "drivers/usb/host/uhci-hcd.c", "drivers/usb/host/uhci-hub.c", "include/linux/usb.h", "net/bluetooth/hci_core.c", "net/bluetooth/hci_event.c", "net/bluetooth/hci_conn.c", "net/bluetooth/af_bluetooth.c"], "input_tokens_sum": 84126, "output_tokens_sum": 1357, "description": "Distribution: debian unstable\nHardware Environment: Asus L7000 OEM laptop (Intel UHCI), bluetooth dongle\n(worked before)\nSoftware Environment: hotplug 0.0.20040329-2, bluez 1.5-2 (debian unstable)\nProblem Description:\nWhen I insert my USB/Bluetooth dongle, the kernel OOPSes on me, and the device\ndoesn't show up in /proc/usb/devices (it doesn't work at all):\n\nusb 1-1: new full speed USB device using address 3\nUnable to handle kernel NULL pointer dereference at virtual address 00000004\n printing eip:\nc0238fc4\n*pde = 00000000\nOops: 0000 [#1]\nCPU:    0\nEIP:    0060:[<c0238fc4>]    Not tainted\nEFLAGS: 00010296   (2.6.5-rc3) \nEIP is at usb_disable_interface+0x14/0x50\neax: cb6280e0   ebx: 00000000   ecx: 00000286   edx: cbfef0a0\nesi: 00000002   edi: 00000000   ebp: c98eb800   esp: cbd53d48\nds: 007b   es: 007b   ss: 0068\nProcess khubd (pid: 5, threadinfo=cbd52000 task=cbfb2040)\nStack: 00001388 0000007b 00000001 00000002 c4496c10 c98eb800 c0239248 c98eb800 \n       cb6280e0 0000000b 00000001 000", "title": "2.6.4-rc3 OOPSes on insertion/removal of bluetooth dongle", "Kernel Version": "2.6.5", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/message.c", "drivers/usb/core/hub.c", "drivers/usb/host/uhci-hcd.c", "drivers/usb/core/usb.c"], "causes": [{"cause": "The kernel OOPS is likely caused by a NULL pointer dereference in the usb_disable_interface function when handling the USB device removal.", "code_file": "drivers/usb/core/message.c", "fix_solution": "Add a NULL check for the interface pointer before dereferencing it in the usb_disable_interface function."}, {"cause": "The USB subsystem may not be properly handling the initialization or cleanup of USB interfaces, leading to an invalid state when the Bluetooth dongle is inserted or removed.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Ensure that the USB interface is properly initialized and cleaned up by adding checks and handling for NULL pointers during device insertion and removal."}, {"cause": "The UHCI host controller driver might not be correctly managing the USB device states, causing an OOPS when the device state is accessed.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Review and correct the state management logic in the UHCI driver to ensure that device states are valid before accessing them."}, {"cause": "There might be a race condition in the USB core or host controller driver that leads to accessing freed memory when the Bluetooth dongle is removed.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Implement proper locking mechanisms to prevent race conditions during USB device insertion and removal."}], "input_tokens": 2305, "output_tokens": 320}
{"id": "2200", "paths": ["drivers/acpi/events/evgpeblk.c"], "predicts": ["drivers/acpi/events/evgpe.c", "drivers/acpi/hardware/hwgpe.c", "include/acpi/acpi.h", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/sleep/main.c", "drivers/acpi/power.c", "include/acpi/acglobal.h", "kernel/power/pm.c", "kernel/power/process.c"], "input_tokens_sum": 77038, "output_tokens_sum": 2108, "description": "Current ACPI implementation will enable a GPE if its corresponding _Lxx or \n_Exx method is found. But some GPEs the methods stand are wakeup GPEs. we \nshouldn't enable it before system enters sleep state.\nIn my P4 box, keyboard is such kind of devices. keyboard can generate 0x15 GPE \nto wakeup system, and DSDT has a method '_L15'. In 2.6.2, after boot, every \nhitting keyboard generates a SCI interrupt. if 0x15 is not enabled, keyboard \ndoesn't create SCI.", "title": "uncorrectly enabling GPEs", "Kernel Version": "2.6.2", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/acpica/evgpe.c", "drivers/acpi/acpica/hwgpe.c", "drivers/acpi/acpica/evgpeinit.c", "drivers/acpi/acpica/evgpeutil.c", "drivers/acpi/acpica/evgpeblock.c"], "causes": [{"cause": "The ACPI implementation incorrectly enables General Purpose Events (GPEs) associated with _Lxx or _Exx methods during boot, which should only be enabled during sleep states.", "code_file": "drivers/acpi/acpica/evgpe.c", "fix_solution": "Modify the GPE initialization logic to defer enabling wakeup GPEs until the system enters a sleep state."}, {"cause": "The ACPI subsystem does not correctly distinguish between wakeup and runtime GPEs, leading to premature enabling of wakeup GPEs.", "code_file": "drivers/acpi/acpica/hwgpe.c", "fix_solution": "Add checks to differentiate wakeup GPEs from runtime GPEs and ensure wakeup GPEs are only enabled during sleep transitions."}, {"cause": "The ACPI GPE handling does not account for device-specific wakeup capabilities, causing unnecessary SCI interrupts during normal operation.", "code_file": "drivers/acpi/acpica/evgpeinit.c", "fix_solution": "Implement logic to check device-specific wakeup capabilities and adjust GPE enabling accordingly."}, {"cause": "The ACPI initialization sequence does not properly configure GPEs based on their intended use, leading to incorrect interrupt generation.", "code_file": "drivers/acpi/acpica/evgpeutil.c", "fix_solution": "Refactor the GPE configuration process to ensure GPEs are only enabled when their associated methods are intended for active use."}, {"cause": "The ACPI subsystem lacks proper handling for GPEs that are intended solely for wakeup purposes, resulting in unnecessary system interrupts.", "code_file": "drivers/acpi/acpica/evgpeblock.c", "fix_solution": "Introduce a mechanism to track and manage wakeup-only GPEs separately from those used during normal operation."}], "input_tokens": 6596, "output_tokens": 424}
{"id": "1930", "paths": ["drivers/ide/ide-cd.c"], "predicts": ["drivers/ide/ide.c", "drivers/ide/ide-lib.c", "drivers/ide/ide-dma.c", "include/linux/ide.h", "drivers/scsi/ide-scsi.c", "fs/isofs/inode.c", "fs/isofs/util.c", "include/asm-i386/ide.h", "include/linux/fs.h", "init/do_mounts.c"], "input_tokens_sum": 80537, "output_tokens_sum": 1920, "description": "Distribution: Gentoo\n\nHardware Environment: \nAbit NF-7 (nforce2) Mobo, Athlon-XP 2500 (Barton), TDK Indi DVD+RW, Creative PC-DVD.\n\n################################################################################\n\nSoftware Environment: \nLinux gentoo 2.6.1 #3 Wed Jan 21 17:53:53 CST 2004 i686 AMD Athlon(tm) XP 2500+\nAuthenticAMD GNU/Linux\n \nGnu C                  3.2.3\nGnu make               3.80\nutil-linux             2.11z\nmount                  2.11z\nmodule-init-tools      0.9.15-pre4\ne2fsprogs              1.34\nnfs-utils              1.0.6\nLinux C Library        2.3.2\nDynamic linker (ldd)   2.3.2\nProcps                 3.1.12\nNet-tools              1.60\nKbd                    1.08\nSh-utils               5.0.91\nModules Loaded         nvnet nvidia\n################################################################################\n\nProblem Description:\nI've used growisofs (a mkisofs frontend) to write big (1.4 Gb) .avi's to my\nDVD+RW under both 2.4.xx and 2.6 kernels (atapi on the 2.6). Ho", "title": "2.6.1 fails to mount large iso9660 dvd discs with ATAPI drivers, succeeds with SCSI.", "Kernel Version": "2.6.1", "Product": "IO/Storage", "Component": "IDE", "Hardware": "i386 Linux", "reranked_files": ["fs/isofs/inode.c", "drivers/ide/ide-cd.c", "drivers/ide/ide-scsi.c", "drivers/block/ll_rw_blk.c"], "causes": [{"cause": "The iso9660 filesystem code checks that the 'sbsector' option is positioned within the first 660Mb of the disk, which prevents mounting large DVD discs.", "code_file": "fs/isofs/inode.c", "fix_solution": "Remove the check for sbsector being less than 660Mb to allow mounting of larger discs."}, {"cause": "The ATAPI driver may not handle large sector numbers correctly, causing failures when mounting large DVD discs.", "code_file": "drivers/ide/ide-cd.c", "fix_solution": "Ensure that the ATAPI driver can handle large sector numbers by updating the logic to correctly interpret and process them."}, {"cause": "The IDE subsystem may not correctly handle large block sizes or multisession DVDs, leading to mounting failures.", "code_file": "drivers/ide/ide-scsi.c", "fix_solution": "Update the IDE subsystem to correctly handle large block sizes and multisession DVDs by adjusting the block limits and error handling."}, {"cause": "The block layer may not propagate errors correctly for large DVD discs, causing mounting issues.", "code_file": "drivers/block/ll_rw_blk.c", "fix_solution": "Improve error handling and propagation in the block layer to ensure that errors are correctly reported and handled for large discs."}], "input_tokens": 10110, "output_tokens": 300}
{"id": "1865", "paths": ["drivers/usb/host/uhci-hcd.c"], "predicts": ["drivers/usb/host/uhci-hcd.c", "drivers/usb/host/ehci-hcd.c", "drivers/usb/input/hid-core.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "kernel/module.c", "mm/init.c", "kernel/exit.c", "kernel/panic.c"], "input_tokens_sum": 80118, "output_tokens_sum": 1760, "description": "Distribution: Gentoo Linux\nHardware Environment: AMD Athlon XP 2200+ on Via KT400 based board, 1GB Memory\nSoftware Environment: Gentoo Linux 1.4, Kernel 2.6 (and 2.6.1)\nProblem Description: \n\nThe driver responsible for my Logitech USB Mouse (uhci/ehci-hcd or hid) crashes\nand prevents the mouse from working any more. While the mouse's internal LED\nstays lit, it's impossible to unload and reload any module any more, so only a\nreboot solves the problem.\n\nReboot itself does not complete because it freezes when unloading other modules,\nlike Alsa. Any attempt to rmmod hid even with \"the force\" results in another\nuseless shell. Force module unload is enabled in Kernel.\n\nThe problem occured with both Kernel 2.6.0 and 2.6.1. I have not yet figured\nout, what really provokes the crash, but it will occur sometime after system\nstart. Shortest period was 30 minutes, longest 90 minutes.\n\nSteps to reproduce:\n- Start system\n- Wait.\n\nThis are example outputs of /var/log/messages at module crash time:\n\nJ", "title": "uhci-hcd or hid modules stops working blocking usb mouse and module unloading", "Kernel Version": "2.6.1", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/input/hid-core.c", "drivers/usb/host/uhci-hcd.c", "kernel/module.c"], "causes": [{"cause": "The USB HID driver may not be handling device disconnection properly, leading to a crash when the mouse is disconnected or stops responding.", "code_file": "drivers/usb/input/hid-core.c", "fix_solution": "Ensure proper handling of device disconnection by adding checks and cleanup routines in the error handling paths to prevent crashes."}, {"cause": "The UHCI HCD driver may have an interrupt latency issue causing the USB controller to become unresponsive.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Implement an interrupt latency fix to ensure the USB controller can handle interrupts in a timely manner, preventing it from becoming unresponsive."}, {"cause": "Module reference counting issues may prevent the unloading of USB-related modules, causing system instability.", "code_file": "kernel/module.c", "fix_solution": "Review and correct the module reference counting logic to ensure that modules can be safely unloaded without causing system instability."}, {"cause": "A double free error in the HID driver could lead to memory corruption and subsequent crashes.", "code_file": "drivers/usb/input/hid-core.c", "fix_solution": "Remove redundant kfree calls in the error handling paths to prevent double freeing of memory, which can lead to memory corruption."}], "input_tokens": 8891, "output_tokens": 298}
{"id": "1822", "paths": ["drivers/usb/storage/transport.c"], "predicts": ["drivers/usb/storage/usb.c", "drivers/usb/storage/scsiglue.c", "drivers/usb/storage/transport.c", "drivers/usb/core/usb.c", "drivers/usb/core/config.c", "include/scsi/scsi.h", "include/scsi/scsi_device.h", "include/scsi/scsi_host.h", "include/scsi/scsi_request.h", "include/scsi/scsi_driver.h"], "input_tokens_sum": 80759, "output_tokens_sum": 1621, "description": "I get this, while plugin my FinePix2400Zom camera to me USB port (it does work\nwith the 2.4 kernel series):\n\nInitializing USB Mass Storage driver...\nscsi0 : SCSI emulation for USB Mass Storage devices\n  Vendor: Fujifilm  Model: FinePix 1400Zoom  Rev: 1000\n  Type:   Direct-Access                      ANSI SCSI revision: 02\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\n /dev/scsi/host0/bus0/target0/lun0:<3>Buffer I/O error on device sda, logical\nblock 0\nBuffer I/O error on device sda, logical block 0\n unable to read partition table\n", "title": "usb-storage borks out with my camera", "Kernel Version": "2.6.1", "Product": "IO/Storage", "Component": "SCSI", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/storage/usb.c", "drivers/scsi/scsi_lib.c", "drivers/scsi/scsi_scan.c", "drivers/usb/storage/protocol.c", "drivers/scsi/scsi.c"], "causes": [{"cause": "The USB Mass Storage driver is not correctly handling the READ CAPACITY command for the camera, leading to failures in determining the storage capacity.", "code_file": "drivers/usb/storage/usb.c", "fix_solution": "Modify the handling of the READ CAPACITY command to correctly interpret the response from the camera, possibly by adding a quirk for this specific device."}, {"cause": "The SCSI layer is not properly interpreting the status and message codes returned by the USB Mass Storage device, resulting in incorrect assumptions about the device state.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Update the SCSI command completion logic to better handle cases where the status and message codes are zero, ensuring proper error handling and retries."}, {"cause": "The camera's USB Mass Storage interface may not fully comply with the expected SCSI command set, leading to unhandled conditions in the SCSI emulation.", "code_file": "drivers/scsi/scsi_scan.c", "fix_solution": "Implement a device-specific workaround in the SCSI scanning logic to accommodate the non-standard behavior of the camera's USB interface."}, {"cause": "The USB Mass Storage driver might be incorrectly assuming the device is write-enabled and has a drive cache, which could lead to incorrect I/O operations.", "code_file": "drivers/usb/storage/protocol.c", "fix_solution": "Add checks to verify the device's write capability and cache settings, and adjust the assumptions accordingly to prevent erroneous I/O operations."}, {"cause": "The SCSI device structure may not be initialized correctly for this specific camera, leading to failures in subsequent SCSI operations.", "code_file": "drivers/scsi/scsi.c", "fix_solution": "Ensure that the SCSI device structure is fully initialized with default values before any operations are attempted, particularly for non-standard devices."}], "input_tokens": 8658, "output_tokens": 422}
{"id": "1696", "paths": ["arch/i386/kernel/cpu/cpufreq/acpi.c"], "predicts": ["arch/i386/kernel/cpu/cpufreq/speedstep-centrino.c", "drivers/acpi/processor.c", "drivers/cpufreq/cpufreq.c", "drivers/acpi/power.c", "include/acpi/processor.h", "arch/i386/kernel/acpi/boot.c"], "input_tokens_sum": 80979, "output_tokens_sum": 1904, "description": "I used to use /proc/acpi/processor/.../performance to set Centrino's 5 \nperformance states via userspace daemon. \n \nNow in linux 2.6.0, I configured the kernel ACPI to include \"processor\" and I \nconfigured SpeedStep to support the \"deprecated\" acpi performance interface as \nwell as anything else I think I have to turn on for cpufreq. \nBut after booting 2.6, I have /proc/acpi/processor/.../ but without \n\"performance\" in it. \"info\" says  \n+----- \n| processor id:            0 \n| acpi id:                 0 \n| bus mastering control:   yes \n| power management:        yes \n| throttling control:      no \n| performance management:  no \n| limit interface:         yes \n+----- \n \nSo it seems like \"performance\" is not supported even if I select it in kernel \nconfig. \n \nAdditionally, I do not find anything cpufreq-related in /sys/.  \n \ndmesg|grep \"cpufreq\" says: \n+----- \n| cpufreq: No CPUs supporting ACPI performance management found. \n+----- \n \nIn 2.4, everything is fine...", "title": "Centrino's Speedstep is not detected correctly", "Kernel Version": "2.6.0", "Product": "ACPI", "Component": "Power-Processor", "Hardware": "i386 Linux", "reranked_files": ["arch/i386/kernel/cpu/cpufreq/acpi.c", "drivers/acpi/processor.c", "drivers/acpi/processor_performance.c", "arch/i386/kernel/cpu/cpufreq/speedstep.c"], "causes": [{"cause": "The ACPI P-states driver is not correctly registering the cpufreq driver, leading to the performance management not being activated.", "code_file": "arch/i386/kernel/cpu/cpufreq/acpi.c", "fix_solution": "Ensure that the cpufreq_register_driver function is called after checking for capable CPUs and before any performance state transitions."}, {"cause": "The ACPI processor performance management is not being initialized correctly due to skipping online CPUs.", "code_file": "drivers/acpi/processor.c", "fix_solution": "Modify the loop that checks for capable CPUs to include online CPUs, ensuring that performance management is activated for all CPUs."}, {"cause": "The deprecated ACPI performance interface is not being correctly supported in the new kernel version.", "code_file": "drivers/acpi/processor_performance.c", "fix_solution": "Add support for the deprecated interface by ensuring that the performance management structures are initialized and populated correctly."}, {"cause": "The cpufreq subsystem is not correctly detecting and initializing the available performance states for the CPU.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep.c", "fix_solution": "Ensure that the speedstep driver correctly initializes the performance states and registers them with the cpufreq subsystem."}, {"cause": "The ACPI processor driver is not correctly reporting the performance management capabilities.", "code_file": "drivers/acpi/processor.c", "fix_solution": "Add additional logging and checks to ensure that the performance management capabilities are correctly detected and reported."}], "input_tokens": 10289, "output_tokens": 361}
{"id": "1321", "paths": ["drivers/net/8139cp.c"], "predicts": ["drivers/net/8139cp.c", "drivers/net/8139too.c", "net/core/dev.c", "net/ethernet/eth.c", "kernel/sched.c", "arch/i386/kernel/irq.c", "scripts/kconfig/mconf.c", "scripts/kconfig/menu.c", "mm/memory.c", "init/main.c"], "input_tokens_sum": 80422, "output_tokens_sum": 1729, "description": "Distribution: Red Hat 9.0 (both local and remote computers)\nHardware Environment:\nLocal: Athlon, ATI+ALi combo, 512 MB RAM, IDE HDD, RTL 8139 C+ (8139cp) Fast\nEthernet card\nRemote: Athlon, ALi, 512 MB RAN, IDE HDD, DEC Tulip Ethernet card\nSoftware Environment:\nLocal: 2.6.0-test6 (vesa driver for XFree86, KDE/Konsole)\nRemote: 2.4.23-pre6\nProblem Description: Kernel hangs while executing \"make menuconfig\" from a\nremote computer.\n\nSteps to reproduce:\n1. Consider 2 computers: laptop (local), desktop (remote)\n2. From laptop computer under KDE's Konsole ssh to desktop\n3. Execute make menuconfig (2.4.23-pre6 source tree in my case) on the remote\ncomputer.\n4. Exit and restart it few times (in my case it hangs within a dozen attempts)\n5. The local computer hangs. Remote computer is fine.\n\nIt doesn't happen if I try the same from Console terminals. And it doesn't\nhappen under 2.4.23-pre6 on the same local computer.\n\nThanks\nSrihari\nharisri@bigpond.com", "title": "[8139cp?] 2.6.0-test6 hangs while executing \"make menuconfig\" on a remote computer", "Kernel Version": "2.6.0", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/realtek/8139cp.c", "arch/i386/kernel/irq.c", "drivers/video/fbdev/vesafb.c", "net/core/dev.c", "drivers/tty/tty_io.c"], "causes": [{"cause": "The 8139cp driver may not handle certain network conditions properly, leading to a hang when executing commands over SSH.", "code_file": "drivers/net/ethernet/realtek/8139cp.c", "fix_solution": "Ensure proper handling of network interrupts and add checks to prevent deadlocks in the 8139cp driver."}, {"cause": "The IRQ handling code may not properly manage shared interrupts, causing a hang when multiple network cards are involved.", "code_file": "arch/i386/kernel/irq.c", "fix_solution": "Review and update the IRQ handling logic to ensure proper management of shared interrupts, especially for network devices."}, {"cause": "The VESA driver used in the local machine might be causing conflicts with network operations over SSH.", "code_file": "drivers/video/fbdev/vesafb.c", "fix_solution": "Investigate and resolve any potential conflicts between the VESA framebuffer driver and network operations, possibly by updating the driver to handle concurrent operations better."}, {"cause": "The kernel's network stack might not handle certain edge cases well when using the RTL 8139 C+ card.", "code_file": "net/core/dev.c", "fix_solution": "Add additional checks and error handling in the network stack to better manage edge cases and prevent hangs."}, {"cause": "The KDE Konsole environment might be interacting poorly with the network stack, leading to hangs.", "code_file": "drivers/tty/tty_io.c", "fix_solution": "Ensure that the TTY layer properly handles network-related operations and does not cause deadlocks or hangs."}], "input_tokens": 9900, "output_tokens": 370}
{"id": "933", "paths": ["net/ipv4/netfilter/ip_nat_helper.c"], "predicts": ["net/ipv4/netfilter/ip_conntrack_ftp.c", "net/ipv4/netfilter/ip_nat_ftp.c", "include/linux/netfilter_ipv4/ip_conntrack_ftp.h", "include/linux/netfilter_ipv4/ip_nat.h", "include/linux/netfilter_ipv4/ip_nat_core.h"], "input_tokens_sum": 77257, "output_tokens_sum": 1507, "description": "Distribution: Red Hat 9\nHardware Environment: \nSoftware Environment: gcc-3.3\nProblem Description:\n\nBoth IP masquerading and SNAT do not work with FTP. When I issue dir command,\nftp connection gets stuck. In ethernet sniffer I see a lot of TCP ack packets\ngoing in both directions. Both FTP client and server are Win2k boxes. \n\nSteps to reproduce:\n\nSetup a NAT box\nmodprobe ip_nat_ftp\nmodprobe ip_conntrack_ftp\niptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE (assuming eth0 is an\nexternal interface)\n\nTry ftp connection.\n\nThis setup works fine with RedHat kernel 2.4.20-18.9.", "title": "FTP NAT doesn't work in 2.6.0-test1", "Kernel Version": "2.5.75", "Product": "Networking", "Component": "Netfilter/Iptables", "Hardware": "i386 Linux", "reranked_files": ["net/ipv4/netfilter/ip_conntrack_ftp.c", "net/ipv4/netfilter/ip_nat_ftp.c", "net/ipv4/netfilter/ip_conntrack_core.c"], "causes": [{"cause": "The FTP NAT helper might not be correctly handling the FTP control connection, leading to issues with the data connection setup.", "code_file": "net/ipv4/netfilter/ip_conntrack_ftp.c", "fix_solution": "Ensure that the FTP helper correctly parses and tracks the FTP commands and responses, especially for passive mode (EPSV) and active mode (PORT) commands."}, {"cause": "The removal of memset initializations in the FTP NAT helper might have led to uninitialized data structures, causing incorrect behavior.", "code_file": "net/ipv4/netfilter/ip_nat_ftp.c", "fix_solution": "Reintroduce necessary memset initializations to ensure that all data structures are properly initialized before use."}, {"cause": "The connection tracking might not be correctly handling expectations for FTP data connections, leading to connection stalls.", "code_file": "net/ipv4/netfilter/ip_conntrack_core.c", "fix_solution": "Review and adjust the handling of connection expectations to ensure that they are correctly set and matched for FTP data connections."}, {"cause": "A typo in the function handling EPSV responses might cause incorrect parsing of FTP commands.", "code_file": "net/ipv4/netfilter/ip_conntrack_ftp.c", "fix_solution": "Correct the typo in the function name from try_espv_response to try_epsv_response to ensure proper handling of EPSV responses."}], "input_tokens": 8841, "output_tokens": 323}
{"id": "640", "paths": ["arch/i386/mm/fault.c"], "predicts": ["mm/swapfile.c", "arch/i386/mm/init.c", "drivers/base/init.c", "init/main.c", "include/linux/swapops.h"], "input_tokens_sum": 74824, "output_tokens_sum": 1352, "description": "Distribution: RH 7.3\nHardware Environment: 8-way pIII-700\nSoftware Environment:\nProblem Description:\nOn boot, the boot stops progressing at \"Activating swap\"  The machine is not\ncompletely hung (magic sysrq works) but is useless of course.  I tried this with\n2.5.68-vanilla and it does not have the same problem, but mjb1 and mjb2 do have\nthe problem.\n\nSteps to reproduce:\nHere's what I suspect it is having problems with:\n(exerpt from /etc/fstab)\n/dev/sda5               swap                    swap    defaults        0 0\n/dev/sda6               swap                    swap    defaults        0 0\n/dev/sda7               swap                    swap    defaults        0 0\n/dev/sda8               swap                    swap    defaults        0 0\n/dev/sda9               swap                    swap    defaults        0 0\n/dev/sda10              swap                    swap    defaults        0 0\n/dev/sda11              swap                    swap    defaults        0 0\n/dev/sda12          ", "title": "2.5.68-mjb2 stops at activating swap", "Kernel Version": "2.5.68", "Product": "Alternate Trees", "Component": "mjb", "Hardware": "i386 Linux", "reranked_files": ["mm/swapfile.c", "mm/page_alloc.c", "kernel/module.c", "mm/oom_kill.c"], "causes": [{"cause": "The mjb2 patchset may have introduced a regression in the swap activation process, possibly due to changes in swapfile handling.", "code_file": "mm/swapfile.c", "fix_solution": "Review recent changes in swapfile.c related to swap activation and ensure that swap devices are correctly initialized and activated without deadlocks or hangs."}, {"cause": "The kernel may be encountering an issue with handling multiple swap devices, leading to a hang during swap activation.", "code_file": "mm/page_alloc.c", "fix_solution": "Ensure that the code handling multiple swap devices is robust and can handle the initialization of multiple swap partitions without deadlocks."}, {"cause": "A potential race condition in module initialization could be affecting the swap activation process.", "code_file": "kernel/module.c", "fix_solution": "Investigate and apply fixes for race conditions in module initialization that could affect swap activation, ensuring modules are fully initialized before use."}, {"cause": "The system may be running out of memory during swap activation, causing a hang.", "code_file": "mm/oom_kill.c", "fix_solution": "Implement checks to ensure sufficient memory is available before activating swap, and handle low-memory situations gracefully."}], "input_tokens": 5964, "output_tokens": 285}
{"id": "583", "paths": ["fs/coda/psdev.c"], "predicts": ["fs/coda/coda_linux.c", "include/linux/coda.h", "include/linux/devfs_fs_kernel.h", "init/do_mounts_devfs.c", "lib/vsprintf.c", "fs/coda/sysctl.c", "fs/coda/file.c", "kernel/panic.c", "fs/coda/cache.c", "fs/coda/pioctl.c"], "input_tokens_sum": 76129, "output_tokens_sum": 1444, "description": "Distribution: Gentoo 1.4_rc \nHardware Environment: Micron Millenia Transport, P133 (i586) \nSoftware Environment: i586-pc-linux-gnu, posix threads, gcc 3.2.2 \nProblem Description: Compiling Devfs into kernel is fine. Compiling Coda into kernel is fine. \nCompiling Devfs and Coda together is not fine, causes a kernel panic. \n \nSorry, I don't have a console - here is what I can see of the error: \n \nCPU:     0 \nEIP:     0060:[<C020605F>]    Not tainted \nEFLAGS: 00010202 \nEIP is at vsnprintf+0x2f/0x460 \neax: c2fd3f43    ebx: c2fd3f44   ecx: c040776c   edx: 00000000 \nesi: c2fd3f44    edi: 00000000   ebp: c2fd3f24    esp: c2fd3f0c \nds: 007b    es: 007b    ss: 0068 \nProcess swapper (pid: 1, threadinfo=c2fd2000 task c2fd0040) \nStack: 000001f0 c2fd3f2c c2fd3f83 c2fd3f44 c2fd3fa0 00000000 c2fd3f8c c01a4a62 \n          c2fd3f44 00000040 00000000 c2fd3f98 c01360d1 00000000 00000246 00000043 \n          00000001 00000000 c2fd3f70 c0150e47 00000018 000000d0 00000000 00000001 \n \n[<c01a4a62>] devfs_mk_dir", "title": "Enabling Coda with Devfs causes Kernel Panic", "Kernel Version": "2.5.67", "Product": "File System", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["fs/devfs/base.c", "lib/vsprintf.c", "fs/coda/coda_linux.c", "fs/devfs/devfs_init.c"], "causes": [{"cause": "The kernel panic occurs due to a conflict between Devfs and Coda when both are compiled into the kernel, possibly due to improper handling of directory creation in Devfs.", "code_file": "fs/devfs/base.c", "fix_solution": "Ensure proper error handling and synchronization in the devfs_mk_dir function to prevent conflicts when creating directories."}, {"cause": "The vsnprintf function is being called with invalid parameters or buffer overflow, leading to a kernel panic.", "code_file": "lib/vsprintf.c", "fix_solution": "Add checks to ensure that the buffer size is sufficient and parameters are valid before calling vsnprintf."}, {"cause": "The interaction between Devfs and Coda might be causing improper memory access or corruption.", "code_file": "fs/coda/coda_linux.c", "fix_solution": "Review and update the Coda initialization and registration code to ensure it properly interacts with Devfs, avoiding memory corruption."}, {"cause": "There might be a missing or incorrect initialization of structures when both Devfs and Coda are enabled, leading to undefined behavior.", "code_file": "fs/devfs/devfs_init.c", "fix_solution": "Ensure all necessary structures are properly initialized when both Devfs and Coda are compiled into the kernel."}, {"cause": "The kernel panic could be due to a race condition between Devfs and Coda during the boot process.", "code_file": "fs/devfs/base.c", "fix_solution": "Implement proper locking mechanisms to prevent race conditions when Devfs and Coda are accessing shared resources."}], "input_tokens": 10522, "output_tokens": 364}
