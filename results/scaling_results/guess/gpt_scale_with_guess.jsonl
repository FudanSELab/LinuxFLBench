{"id": "207835", "paths": ["drivers/acpi/video_detect.c"], "predicts": ["drivers/cpufreq/acpi-cpufreq.c", "include/acpi/video.h", "include/linux/backlight.h"], "input_tokens_sum": 198802, "output_tokens_sum": 4417, "description": "On the Intel GM45/GMA 4500MHD laptop with Debian Sid/unstable and Linux 5.6.7 and GNOME Shell 3.36.2, trying to change the brightness of the internal display using the function keys, GNOME shows the OSD, which seems to have five levels (from acer_wmi?), but the actual brightness does *not* change. There is only `/sys/class/backlight/intel_backlight/brightness` though, and writing values to it seems to work.\n\nBooting the system with `acpi_backlight=vendor`, exposes `/sys/devices/platform/acer-wmi/backlight/acer-wmi/brightness`, but the behavior is the same.\n\nBooting the system with `acpi_backlight=native` or `acpi_backlight=native`, changing the brightness with the function keys works, and there now seem to be 15 (or 16) levels.\n\n```\n$ grep '.*' /sys/class/dmi/id/*_* 2> /dev/null\n/sys/class/dmi/id/bios_date:07/26/2011\n/sys/class/dmi/id/bios_vendor:Acer\n/sys/class/dmi/id/bios_version:V1.14\n/sys/class/dmi/id/board_asset_tag:Base Board Asset Tag\n/sys/class/dmi/id/board_name:BA51_MV\n/sys/cl", "title": "ACPI video backlight brightness control does not work on Acer TravelMate 5735Z by default", "Kernel Version": "5.6.7", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video backlight control for the Acer TravelMate model is not properly set to handle the hardware correctly, defaulting to a configuration that does not change actual brightness.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Add a DMI quirk entry for the Acer TravelMate 5735Z to prefer native ACPI backlight control mode. This can be achieved by modifying the dmi table in the video_detect.c file to update the backlight detection to use the 'native' driver explicitly."}, {"cause": "The acer-wmi driver is not correctly setting the number of brightness levels for this specific hardware leading to mismatch between software level and actual brightness setting.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Modify the segment in acer-wmi.c where the brightness levels are initialized to properly detect 15 levels instead of the incorrect default. This involves reading DMI information and adjusting the setting appropriately for this specific device."}, {"cause": "The kernel's handling of backlight interfaces is suboptimal for this hardware, possibly due to a mismatch between vendor-specific and native ACPI video interfaces that can be resolved by preferring the correct mode for this device.", "code_file": "drivers/gpu/drm/i915/intel_acpi_backlight.c", "fix_solution": "Adjust the logic for selecting the appropriate backlight interface by modifying the kernel parameters defaults or adding a condition specifically for the Acer TravelMate 5735Z to force the native interface."}], "reranked_files": ["drivers/acpi/video_detect.c", "drivers/platform/x86/acer-wmi.c", "drivers/gpu/drm/i915/intel_acpi_backlight.c"], "input_tokens": 653, "output_tokens": 344}
{"id": "206661", "paths": ["drivers/net/wireless/intel/iwlwifi/pcie/drv.c"], "predicts": ["drivers/net/wireless/intel.c", "drivers/pci/quirks.c", "drivers/pci/pci-driver.c", "drivers/pci/pci.c", "include/linux/pci.h", "include/linux/wireless.h", "net/wireless/core.c", "net/wireless/nl80211.c", "net/wireless/rdev-ops.h", "net/wireless/util.c"], "input_tokens_sum": 208390, "output_tokens_sum": 4200, "description": "Created attachment 287603 [details]\nBoot Log of Error\n\nI am using Kernel 5.6 RC2 and I am seeing issues where firmware is not being loaded for my Intel Corporation Wireless-AC 9260 card.  Attached is the boot logging.\n\nIf I can do anything to debug, let me know,", "title": "iwlwifi:9260: missing PCI subdevice entries for 0x2526 (0x04010, 0x4018 and 0x401C)", "Kernel Version": "5.6-rc2", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "causes": [{"cause": "The PCI subdevice entries for the Intel Wireless-AC 9260 card with specific device IDs are missing, causing the firmware not to load.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "fix_solution": "Add the missing PCI subdevice entries for device IDs 0x2526 with subdevice IDs 0x04010, 0x4018, and 0x401C to the iwlwifi_pci_id_table."}, {"cause": "The firmware loading mechanism does not recognize the new subdevice IDs, leading to a failure in loading the appropriate firmware.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-config.h", "fix_solution": "Ensure that the firmware names corresponding to the new subdevice IDs are defined and mapped correctly in the iwl_cfg structure."}, {"cause": "The PCI device ID table is not updated to include the new subdevice IDs, preventing the driver from initializing the hardware properly.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "fix_solution": "Update the PCI device ID table to include the new subdevice IDs, ensuring the driver can recognize and initialize the hardware."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "drivers/net/wireless/intel/iwlwifi/iwl-config.h", "drivers/net/wireless/intel/iwlwifi/pcie/tx.c"], "input_tokens": 448, "output_tokens": 295}
{"id": "203617", "paths": ["drivers/pci/hotplug/acpiphp_glue.c"], "predicts": ["arch/x86/kernel/acpi/boot.c", "drivers/acpi-cpufreq.c", "kernel/power/suspend.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h", "kernel/irq/pm.c", "mm/init-mm.c", "arch/x86/kernel/acpi/cppc_msr.c", "arch/x86/kernel/acpi/cstate.c", "kernel/power/process.c"], "input_tokens_sum": 195880, "output_tokens_sum": 3345, "description": "Created attachment 282777 [details]\nOutput of `uname -a`\n\nAttempting to boot an LG 17Z990 with newer kernels causes an endless stream of errors. Excerpt:\n\n00:47:20 phobos kernel: [   26.235209] ACPI Error: No installed handler for fixed event - PM_Timer (0), disabling (20190215/evevent-257)\n00:47:20 phobos kernel: [   26.236062] ACPI Error: No installed handler for fixed event - SleepButton (3), disabling (20190215/evevent-257)\n00:47:20 phobos kernel: [   26.236917] ACPI Error: Could not disable RealTimeClock events (20190215/evxfevnt-245)\n00:47:20 phobos kernel: [   26.237796] ACPI Error: No handler or method for GPE 08, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.238699] ACPI Error: No handler or method for GPE 09, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.239306] ACPI Error: No handler or method for GPE 0A, disabling event (20190215/evgpe-835)\n00:47:20 phobos kernel: [   26.239910] ACPI Error: No handler or method for GPE 0B, disabli", "title": "ACPI Error \"storm\" on LG Gram 17 (\"No handler or method for GPE...\")", "Kernel Version": "5.1", "Product": "ACPI", "Component": "Other", "Hardware": "Intel Linux", "causes": [{"cause": "The ACPI subsystem is not installing handlers for General Purpose Events (GPEs), leading to missed events and errors being logged when the corresponding GPE is triggered.", "code_file": "drivers/acpi/evgpe.c", "fix_solution": "Add logic to ensure GPE handlers are installed correctly and verify GPE methods before attempting to disable them."}, {"cause": "Incorrect handling or initialization of fixed ACPI events such as PM_Timer, SleepButton, and RealTimeClock events.", "code_file": "drivers/acpi/events.c", "fix_solution": "Review the code responsible for installing fixed event handlers to ensure they are properly initialized during ACPI setup."}, {"cause": "Improper interaction between the ACPI driver and system firmware leading to unsuccessful event handler installations.", "code_file": "drivers/acpi/acpi_driver.c", "fix_solution": "Enhance the ACPI driver to better negotiate capabilities and compatibility with the firmware of the device."}, {"cause": "Bug in kernel changes from earlier versions to version 5.1 affecting ACPI event handling for specific hardware configurations.", "code_file": "drivers/acpi/acpica/acobject.c", "fix_solution": "Identify and revert any problematic patches related to ACPI event handling that were introduced in kernel version 5.1."}], "reranked_files": ["drivers/acpi/evgpe.c", "drivers/acpi/events.c", "drivers/acpi/acpi_driver.c", "drivers/acpi/acpica/acobject.c"], "input_tokens": 697, "output_tokens": 300}
{"id": "203475", "paths": ["drivers/ata/libata-core.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-scsi.c", "drivers/ata/ahci.c", "drivers/ata/ata_piix.c", "include/linux/libata.h", "block/blk-core.c", "block/blk-mq.c", "block/blk-settings.c", "fs/block_dev.c", "include/linux/ata.h"], "input_tokens_sum": 197893, "output_tokens_sum": 5698, "description": "Created attachment 282579 [details]\ndmesg of the errors occuring\n\nI have a Samsung SSD 860 EVO mSATA 500GB SSD connected via an ASMedia ASM1062 Serial ATA Controller. It causes has 20-30 seconds lockups on fstrim (which runs during bootup on my system), with messages such as:\n\n[  332.792044] ata14.00: exception Emask 0x0 SAct 0x3fffe SErr 0x0 action 0x6 frozen\n[  332.798271] ata14.00: failed command: SEND FPDMA QUEUED\n[  332.804499] ata14.00: cmd 64/01:08:00:00:00/00:00:00:00:00/a0 tag 1 ncq dma 512 out\n                        res 40/00:00:00:00:00/00:00:00:00:00/00 Emask 0x4 (timeout)\n[  332.817145] ata14.00: status: { DRDY }\n\nAfter disabling queued TRIM via the included patch, the issue disappears.", "title": "Samsung 860 EVO queued TRIM issues", "Kernel Version": "4.14.114", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "causes": [{"cause": "The Samsung 860 EVO SSD may not fully support queued TRIM commands, leading to timeouts and lockups.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Add a quirk to disable queued TRIM for Samsung 860 EVO SSDs by checking the device model and setting the ATA_HORKAGE_NO_NCQ_TRIM flag."}, {"cause": "The ASMedia ASM1062 SATA controller may have compatibility issues with queued TRIM commands.", "code_file": "drivers/ata/ahci.c", "fix_solution": "Introduce a controller-specific quirk to disable queued TRIM for devices connected to ASMedia ASM1062 by setting the appropriate flag in the controller initialization code."}, {"cause": "The timeout value for queued TRIM commands might be too short, causing premature timeouts.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Increase the timeout value for queued TRIM commands to allow more time for completion, especially for devices known to have longer processing times."}], "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/ahci.c", "drivers/ata/libata-eh.c"], "input_tokens": 610, "output_tokens": 246}
{"id": "203369", "paths": ["drivers/hid/hid-a4tech.c"], "predicts": ["drivers/input/mouse/logips2pp.c", "drivers/input/mouse/logips2pp.h", "drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/psmouse.h", "include/uapi/linux/input-event-codes.h"], "input_tokens_sum": 273291, "output_tokens_sum": 7989, "description": "I have an A4Tech WOP-49Z mouse, which has two wheels - one for vertical and one for horizontal scrolling. It has worked perfectly well with many Linux kernel versions since 2011. With the latest stable kernel version 5.0, however, the horizontal wheel acts as an inverted vertical wheel.\n\nxev reports both vertical and horizontal wheel scrolling as buttons 4/5 with kernel versions 5.0.5, 5.0.7. With kernel versions 4.19.32, 4.19.34 and 4.20.17, xev reports vertical wheel scrolling as buttons 4/5 and horizontal wheel scrolling as buttons 6/7.\n\nI'm testing different kernel versions in the same system with the same other package versions. I'm rebooting and switching between different installed kernel versions provided by Manjaro Linux distribution.\n\nCould this bug be caused by a mistake in the implementation of the new feature in kernel 5.0 - \"Logitech High Resolution Scrolling support\"?", "title": "A4Tech mouse: horizontal scrolling is recognized as vertical since kernel 5.0", "Kernel Version": "5.0", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "causes": [{"cause": "The bug is likely caused by a change in the way horizontal and vertical scroll events are mapped due to the introduction of \"Logitech High Resolution Scrolling\" support in kernel 5.0. This change may have unintentionally altered how the input system interprets button codes for horizontal scrolling.", "code_file": "drivers/hid/hid-logitech-hidpp.c", "fix_solution": "Add a device-specific quirk for A4Tech WOP-49Z mouse to correctly map horizontal scroll events to buttons 6/7 instead of 4/5."}, {"cause": "The input event handling in the HID driver may incorrectly treat horizontal scroll input as vertical scroll due to missing or incorrect handling for specific hardware.", "code_file": "drivers/input/mouse/hidpp-scroll.c", "fix_solution": "Update the scroll event handler to correctly distinguish between horizontal and vertical scroll inputs for devices with dual wheels."}, {"cause": "The recent changes to the input subsystem may have altered the button mapping logic, causing horizontal scroll events to be misreported as vertical scroll.", "code_file": "drivers/input/input.c", "fix_solution": "Introduce a conditional check to differentiate between vertical and horizontal scroll inputs for devices with multiple scroll wheels."}], "reranked_files": ["drivers/hid/hid-logitech-hidpp.c", "drivers/input/mouse/hidpp-scroll.c", "drivers/input/input.c"], "input_tokens": 567, "output_tokens": 283}
{"id": "200989", "paths": ["drivers/acpi/acpi_lpss.c"], "predicts": ["drivers/dma/acpi-dma.c", "kernel/power/suspend.c", "drivers/thermal/intel_soc_dts_iosf.c", "drivers/thermal/intel_soc_dts_iosf.h", "arch/x86/pci/acpi.c"], "input_tokens_sum": 180143, "output_tokens_sum": 2520, "description": "Created attachment 278225 [details]\n[PATCH] ACPI / LPSS: Ensure LPIOEP is always set on resume\n\nHi there.\n\nI've got a 3rd generation Lenovo 11e that locks up on boot. The processor inside is an Intel N3150, which is family 6, model 0x4c, which is one that turns on lpss_quirks. I was able to bisect the problem commit to the merge of 12864ff8545f6b8144fdf1bb89b5663357f29ec4 which skipped over some IOSF updates when exiting D3 that wasn't matched by a call to the handler for entering D3.  \n\nWhat I've been able to see is that on boot, the acpi_lpss_resume() function gets called, but the acpi_lpss_suspend() hasn't.  Because of this, the IOSF write to LPSS_IOSF_UNIT_LPIOEP never happens, and for some reason that freezes the computer.  I've got a minimal patch that allows my system to boot normally by ensuring that write happens whether the matching acpi_lpss_suspend() call takes place or not.\n\nI don't have any other relevant systems to test this patch on so I can't say whether it introduces ", "title": "ACPI / LPSS Braswell Lenovo 11e won't boot as of LPSS commit in 4.17.12 (with patch)", "Kernel Version": "4.17.12", "Product": "ACPI", "Component": "Power-Other", "Hardware": "Intel Linux", "causes": [{"cause": "The issue occurs because the `acpi_lpss_resume()` function is called without the corresponding `acpi_lpss_suspend()` being executed, preventing the IOSF write to LPSS_IOSF_UNIT_LPIOEP, which causes the system to freeze.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Ensure that the write to LPSS_IOSF_UNIT_LPIOEP is always performed during resume, even if acpi_lpss_suspend() is not called."}, {"cause": "The `acpi_lpss_resume()` function does not trigger the necessary hardware state change (LPSS_IOSF_UNIT_LPIOEP write), which is essential for the system to resume correctly after suspend.", "code_file": "drivers/acpi/lpss.c", "fix_solution": "Modify the `acpi_lpss_resume()` function to always handle the IOSF write to LPSS_IOSF_UNIT_LPIOEP during resume, ensuring that the necessary state change is performed."}, {"cause": "The lack of matching IOSF updates when exiting D3, which was not handled correctly by the patch in the problematic commit, leads to inconsistent hardware state transitions.", "code_file": "drivers/acpi/iosf.c", "fix_solution": "Implement a proper handler to ensure that the required IOSF updates are applied when transitioning out of D3 state, matching the behavior during entry to D3."}], "reranked_files": ["drivers/acpi/processor_idle.c", "drivers/acpi/lpss.c", "drivers/acpi/iosf.c"], "input_tokens": 637, "output_tokens": 320}
{"id": "199971", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/net/wireless/iwlwifi/core.c", "drivers/net/wireless/iwlwifi/iwl-phy-db.c", "drivers/net/wireless/iwlwifi/mvm/ops.c", "drivers/net/wireless/iwlwifi/mvm/tx.c", "drivers/net/wireless/iwlwifi/pcie/tx.c", "drivers/net/wireless/iwlwifi/queue/tx.c", "drivers/net/wireless/iwlwifi/fw/dbg.c", "drivers/net/wireless/iwlwifi/fw/dump.c", "drivers/net/wireless/iwlwifi/fw/error-dump.c", "drivers/net/wireless/iwlwifi/fw-notif-wait.c"], "input_tokens_sum": 300486, "output_tokens_sum": 25892, "description": "Created attachment 276377 [details]\ndebug info encrypted for Emmanuel Grumbach, Johannes Berg and Luciano Coelho\n\nDell Vostro 5468 laptop with Intel Corporation Wireless 3165 (rev 79) on board. Firmware crash tested on Ubuntu 18.04, Arch Linux and openSUSE Leap 15.0. Arch running latest kernel available: 4.16.13-2-ARCH and linux-firmware 20180518.2a9b2cf-1 dated 19 May 2018. All debug info (with .dump) included in the archive. Information was gathered from openSUSE (kernel: 4.12.14-lp150.12.4-default and firmware version 29.1044073957.0) just because it happened to be the last distro I tested.\n\nThe crash happens when I try to transfer files over SFTP from laptop to smartphone. Files are 200-300 MB in size, sometimes bigger. Download starts slowly at 600 KB/s and goes to 1.7 MB/s max. The crash occurs around half way through the file. If firmware crashes a couple of times download speed degrades to 800 KB/s max. I'm not sure if firmware crashes during \"regular\" internet surfing and/or i", "title": "iwlwifi: 3165: TFD queue hang", "Kernel Version": "4.12.14", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The issue is likely related to a queue hang in the iwlwifi driver while handling the Transmission Frame Descriptors (TFD). This can happen when the driver has issues processing large data transfers, especially over protocols like SFTP which involve high data throughput.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Investigate and modify the code for TFD handling in the iwlwifi driver to improve stability and ensure that the queue processing does not hang during large data transfers."}, {"cause": "The firmware crash might be due to improper synchronization between the kernel and the firmware, potentially leading to race conditions or buffer overruns when handling large file transfers.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-fw.c", "fix_solution": "Review and implement proper synchronization mechanisms and buffer management to ensure that large data transfers do not result in firmware crashes."}, {"cause": "Slow transfer speeds and crashes might also indicate a problem with the management of resources for high-bandwidth transfers, possibly due to issues with interrupt handling or resource allocation in the driver.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-trans.c", "fix_solution": "Optimize interrupt handling and resource allocation to handle higher bandwidth transfers more efficiently and prevent crashes during sustained data transfer."}, {"cause": "The issue could be linked to outdated firmware or an incompatibility between the kernel and firmware versions, as the bug occurs on specific kernel and firmware versions.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c", "fix_solution": "Ensure the firmware version compatibility with the kernel and consider updating or patching the driver to support newer firmware versions or address known issues."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "drivers/net/wireless/intel/iwlwifi/iwl-fw.c", "drivers/net/wireless/intel/iwlwifi/iwl-trans.c", "drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c"], "input_tokens": 623, "output_tokens": 406}
{"id": "198351", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c"], "predicts": ["net/mac80211/cfg.c", "drivers/pci/pci-driver.c", "net/wireless/core.c"], "input_tokens_sum": 229618, "output_tokens_sum": 24499, "description": "Created attachment 273399 [details]\ndmesg output\n\nI recently updated my 8260 card to 9260 in laptop.\n\nAfter that download speed from my nas connected over ethernet to router dropped significantly at 5Gz.\nWas around 40MB/s with 8260. Dropped to 4MB/s with 9260.\n\nDownload speeds from internet(google drive) fully saturate my internet channel. eg. ~15MB/s. \nSo it looks like issue exists only for local wan-lan connections.\n\nAlso download speeds at 2.4Ghz is around 10MB/b which is also faster than 5Ghz one.\n\nI'm using most recent firmware-version: 34.0.0\nand most recent kernel 4.15-rc6. (got the same behavior though on 4.14.10)", "title": "iwlwifi: 9260: very slow WAN-LAN transfers at 5Ghz", "Kernel Version": "4.15-rc6", "Product": "Drivers", "Component": "network-wireless", "Hardware": "Intel Linux", "causes": [{"cause": "The iwlwifi driver is not handling the 5GHz band optimally for the Intel 9260 card, leading to significantly reduced local WAN-LAN transfer speeds.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/fw.c", "fix_solution": "Review and optimize the rate selection logic specific to the 9260 model for 5GHz operations to ensure better throughput."}, {"cause": "The firmware communication logic may not be fully compatible with the changes necessary for the 9260 card, causing slow local traffic throughput.", "code_file": "drivers/net/wireless/intel/iwlwifi/fw/api/tx.c", "fix_solution": "Ensure proper configuration settings are being applied for the 9260 card which include power settings and channel utilization, especially for 5GHz connections."}, {"cause": "There might be a regression in the channel negotiation process for 5GHz bands specific to the 9260 card, affecting transfer speeds.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c", "fix_solution": "Update channel negotiation parameters for the Intel 9260 to enhance performance for the 5GHz channels."}, {"cause": "The driver might be missing optimal antenna configurations for the 9260 at 5GHz, resulting in lower throughput.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c", "fix_solution": "Modify the antenna configuration logic to better suit the Intel 9260 hardware at 5GHz frequencies."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/mvm/fw.c", "drivers/net/wireless/intel/iwlwifi/fw/api/tx.c", "drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c", "drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c"], "input_tokens": 542, "output_tokens": 365}
{"id": "196743", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "net/core/dev_addr_lists.c", "net/ipv6/mcast.c", "net/ipv6/addrconf.c"], "input_tokens_sum": 318260, "output_tokens_sum": 5959, "description": "Adding a multicast address to a device that has at least 50 of them already present produces a warning.\nThe addresses were added using the script below:\n\n#!/bin/bash\nfor i in {0..255}\ndo\n\thex=$(printf '%02x' $i)\n\tip maddress add 33:33:ff:00:00:$hex dev wlp4s0\ndone\n\n\nCommand MCAST_FILTER_CMD (0x1d0) is too large (328 bytes)\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 3839 at drivers/net/wireless/intel/iwlwifi/pcie/tx.c:1526 iwl_pcie_enqueue_hcmd+0x8d8/0xb00 [iwlwifi]\nModules linked in: nfnetlink_queue nfnetlink_log nfnetlink bluetooth ecdh_generic fuse ctr ccm nf_conntrack_ipv6 nf_defrag_ipv6 nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack libcrc32c crc32c_generic ip6table_filter iptable_filter ip6_tables nls_iso8859_1 nls_cp437 msr vfat fat intel_rapl x86_pkg_temp_ther\n thermal wmi led_class tpm battery ac mac_hid sch_fq_codel sg ip_tables x_tables ext4 crc16 jbd2 fscrypto mbcache dm_crypt algif_skcipher af_alg dm_mod dax sr_mod cdrom sd_mod crct10dif_pclmul cr", "title": "iwlwifi: adding too many link-layer multicast addresses produces a warning - WIFILNX-1329", "Kernel Version": "4.12.8", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The command MCAST_FILTER_CMD exceeds the maximum allowed size due to too many multicast addresses being added.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "fix_solution": "Increase the maximum allowed size for MCAST_FILTER_CMD or implement a mechanism to handle larger commands gracefully."}, {"cause": "The iwl_pcie_enqueue_hcmd function does not properly handle large command sizes, leading to warnings when the size limit is exceeded.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "fix_solution": "Modify iwl_pcie_enqueue_hcmd to check for command size limits and split the command into smaller parts if necessary."}, {"cause": "The driver does not have a mechanism to limit the number of multicast addresses, leading to excessive command sizes.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "fix_solution": "Introduce a limit on the number of multicast addresses that can be added to prevent exceeding command size limits."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/pcie/tx.c", "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h"], "input_tokens": 687, "output_tokens": 255}
{"id": "196741", "paths": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/bcma/core.c", "include/linux/netdevice.h", "net/core/dev.c", "include/linux/etherdevice.h", "net/ipv6/mcast.c", "net/ipv6/ndisc.c"], "input_tokens_sum": 165570, "output_tokens_sum": 1899, "description": "Only frames with link-layer address that is on the list shown by `ip -0 maddress show dev wlp4s0` are received.\nThe wireless device is set to ALLMULTI mode by: `ip link set dev wlp4s0 allmulticast on`\n\nSteps to reproduce:\n1. connect a wireless client to a wireless AP\n2. open Wireshark on the client to monitor icmpv6 traffic\n3. execute on the client: `ip link set dev wlp4s0 allmulticast on`\n4. execute on the AP: ping ff02::1 ... RECEIVED by the client (the link-layer address 33:33:00:00:00:01 is on the list)\n5. execute on the AP: ping ff02::1:ffab:cdef ...  NOT RECEIVED by the client (the link-layer address 33:33:ff:ab:cd:ef is not on the list)\n6. apply workaround\n7. go to step 5; the packets are now received by the client\n\nExpected result:\nThe client should receive packets from ff02::1:ffab:cdef because, even though the address is not in the multicast address list, the adapter is in ALLMULTI mode.\n\n\n\nThe workaround for me was to add more than MAX_MCAST_FILTERING_ADDRESSES (256) using t", "title": "iwlwifi: unsolicited multicast traffic still dropped when adapter set to allmulti - WIFILNX-1330", "Kernel Version": "4.12.8", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The iwlwifi driver does not properly configure the firmware to accept all multicast frames when the ALLMULTI flag is set, leading to the firmware filtering out multicast packets not explicitly listed.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "fix_solution": "Modify the multicast filter command structure to include a pass_all flag, ensuring that when ALLMULTI is set, the firmware is instructed to pass all multicast frames."}, {"cause": "The firmware's multicast filter command does not account for the ALLMULTI flag, resulting in unintended dropping of multicast packets.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c", "fix_solution": "Update the firmware command to set the pass_all parameter when the ALLMULTI flag is enabled, allowing all multicast packets to be received."}, {"cause": "The driver limits the number of multicast addresses to MAX_MCAST_FILTERING_ADDRESSES (256), causing additional multicast addresses to be ignored even when ALLMULTI is set.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "fix_solution": "Implement logic to bypass the address limit when the ALLMULTI flag is set, ensuring all multicast traffic is accepted regardless of the address list size."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/mvm/mvm.h", "drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c"], "input_tokens": 654, "output_tokens": 306}
{"id": "196375", "paths": ["drivers/scsi/sg.c"], "predicts": ["drivers/ata/libata-scsi.c", "drivers/usb/storage/transport.c", "drivers/block/scsi_ioctl.c", "include/scsi/scsi.h", "include/uapi/scsi/fc/fc_fs.h", "include/uapi/scsi/fc/fc_gs.h", "include/scsi/scsi_transport_fc.h", "drivers/block/ioctl.c", "block/blk-core.c", "drivers/ata/libata-core.c"], "input_tokens_sum": 198023, "output_tokens_sum": 5290, "description": "After upgrading to 4.12rc0 (also tested on all RC's 4.12, and 4.13 git), the following mtx commands fail on an ML6000 with LTO5 FC drive attached to a qlogic 2462 HBA.  Running Ubuntu Server 16.04\n\nmtx -f /dev/sg19 load 16 0\nLoading media from Storage Element 16 into drive 0...mtx: Request Sense: Long Report=yes\nmtx: Request Sense: Valid Residual=no\nmtx: Request Sense: Error Code=0 (Unknown?!)\nmtx: Request Sense: Sense Key=No Sense\nmtx: Request Sense: FileMark=no\nmtx: Request Sense: EOM=no\nmtx: Request Sense: ILI=no\nmtx: Request Sense: Additional Sense Code = 00\nmtx: Request Sense: Additional Sense Qualifier = 00\nmtx: Request Sense: BPV=no\nmtx: Request Sense: Error in CDB=no\nmtx: Request Sense: SKSV=no\nMOVE MEDIUM from Element Address 4111 to 256 Failed\n\nDowngrading to 4.11.10 resolves the issue.  The issue (and fix) has been replicated on a server running Fedora with an NEOs T48 with an LTO6 SAS drive attached to LSI 3008.  Commit hash from latest version that works is - v4.11-4395-g8", "title": "MTX load commands fail", "Kernel Version": "4.12", "Product": "Tools", "Component": "Other", "Hardware": "Intel Linux", "causes": [{"cause": "Changes in the SCSI mid-layer between kernel versions 4.11 and 4.12 may have introduced stricter compliance checks or altered command handling, leading to failures in MOVE MEDIUM commands issued by the mtx utility.", "code_file": "drivers/scsi/scsi_transport_fc.c", "fix_solution": "Review and adjust the handling of MOVE MEDIUM commands to ensure compatibility with devices like the ML6000 tape library. This may involve modifying command validation or execution paths to accommodate device-specific requirements."}, {"cause": "Modifications in the QLogic Fibre Channel driver (qla2xxx) between kernel versions 4.11 and 4.12 could have affected the communication between the host and the ML6000 tape library, resulting in command failures.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Investigate recent changes in the qla2xxx driver that may impact SCSI command processing, particularly MOVE MEDIUM commands. Implement necessary adjustments to restore proper communication with the tape library."}, {"cause": "Alterations in the Generic SCSI driver (sg) between kernel versions 4.11 and 4.12 might have introduced issues in handling SCSI commands sent through /dev/sg devices, affecting utilities like mtx.", "code_file": "drivers/scsi/sg.c", "fix_solution": "Examine changes in the sg driver that could influence the processing of SCSI commands. Apply fixes to ensure that commands issued via /dev/sg devices are correctly interpreted and executed."}], "reranked_files": ["drivers/scsi/scsi_transport_fc.c", "drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/sg.c"], "input_tokens": 657, "output_tokens": 349}
{"id": "195869", "paths": ["net/core/dev_ioctl.c"], "predicts": ["net/core/dev_ioctl.c", "net/wireless/wext-core.c", "include/uapi/linux/wireless.h", "include/uapi/linux/if.h", "block/ioctl.c", "fs/ioctl.c", "mm/usercopy.c", "lib/usercopy.c", "lib/net_utils.c", "fs/compat_ioctl.c"], "input_tokens_sum": 249328, "output_tokens_sum": 9544, "description": "Created attachment 256697 [details]\ncomplete reduced testcase\n\nIf you do, say\n  struct iwreq* req = ...;\n  int ret = ioctl(sockfd, SIOCGIWNAME, req);\nthe ioctl will fail with EFAULT if req points to valid memory that is exactly sizeof(struct iwreq). Full testcase attached.\n\nThe problem is that dev_ioctl() does a copy_from_user(sizeof(struct ifreq)). On x86-64 that's 40 bytes, but sizeof(struct iwreq) is only 32 bytes.\n\nThis isn't a huge deal, but it does mean that user code that stores struct iwreq on the heap can randomly fail once in a blue moon, and that's bad.\n\nAlternatively it could be documented somewhere that user code should actually pass in a struct ifreq and cast it to struct iwreq for all usage, but that's horrible.", "title": "Wireless ioctls fail if struct iwreq is at the end of a memory mapping", "Kernel Version": "4.12-rc1", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "causes": [{"cause": "The dev_ioctl() function uses sizeof(struct ifreq) for copy_from_user, which is larger than sizeof(struct iwreq), causing EFAULT when struct iwreq is at the end of a memory mapping.", "code_file": "net/core/dev_ioctl.c", "fix_solution": "Modify dev_ioctl() to use sizeof(struct iwreq) when handling wireless ioctls, ensuring the correct size is used for copy_from_user."}, {"cause": "The ioctl handling code does not differentiate between struct ifreq and struct iwreq sizes, leading to incorrect memory access.", "code_file": "include/uapi/linux/wireless.h", "fix_solution": "Document the requirement for user code to use struct ifreq and cast it to struct iwreq, or adjust the ioctl handling to correctly interpret the size based on the ioctl command."}, {"cause": "The wireless ioctl command SIOCGIWNAME is not properly handling the size difference between struct ifreq and struct iwreq.", "code_file": "net/wireless/wext-core.c", "fix_solution": "Update the wireless ioctl command handling to correctly calculate the size of the data structure being passed, ensuring compatibility with struct iwreq."}], "reranked_files": ["net/core/dev_ioctl.c", "include/uapi/linux/wireless.h", "net/wireless/wext-core.c"], "input_tokens": 535, "output_tokens": 272}
{"id": "195651", "paths": ["drivers/acpi/ec.c"], "predicts": ["arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h", "include/linux/acpi.h"], "input_tokens_sum": 190295, "output_tokens_sum": 3857, "description": "Created attachment 256185 [details]\nacpidump output\n\nThe Asus laptops X550VXK/FX502VD/FX502VE have a BIOS bug where the\nECDT (correctly) states that EC events trigger GPE 0x23, but the\nDSDT _GPE method (incorrectly) says GPE 0x33.\n\nA cursory glance of the code suggests that this should work regardless\n(because it looks like Linux would treat the ECDT and DSDT as two separate\nECs supported simultaneously), but in practice it is not working since the\nECDT is ultimately ignored in favour of the DSDT EC. The sequence of\nevents is:\n\n1. acpi_ec_ecdt_probe() is called in early boot, and calls\n   acpi_config_boot_ec(is_ecdt=true) for the ECDT EC.\n\nacpi_config_boot_ec() sets boot_ec to this new EC, and\nboot_ec_is_ecdt = true.\n\n2. Later, acpi_ec_dsdt_probe() is called and creates a new ec to represent\n   the DSDT EC. Then:\n    /*\n     * When the DSDT EC is available, always re-configure boot EC to\n     * have _REG evaluated. _REG can only be evaluated after the\n     * namespace initialization.\n ", "title": "Boot EC - Asus BIOS contain broken DSDT EC but working ECDT EC", "Kernel Version": "4.11", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "causes": [{"cause": "The ECDT EC is correctly initialized, but when the DSDT EC is discovered later, it overwrites the ECDT EC configuration, resulting in mismatched GPE trigger assignments.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Ensure that when the DSDT EC is probed, it checks if the ECDT EC was already initialized and retains the correct GPE settings from the ECDT. Modify the logic in acpi_ec_dsdt_probe() to respect the ECDT configuration if present."}, {"cause": "The current implementation might dismiss the ECDT EC by design once the DSDT is loaded, due to how the boot EC is reconfigured without verifying GPE disparities.", "code_file": "drivers/acpi/ec.c", "fix_solution": "In acpi_ec_configure(), add a check to see if boot_ec_is_ecdt is true, and handle GPE configurations separately to correctly manage both ECDT and DSDT GPE assignments."}, {"cause": "The setting of boot_ec_is_ecdt to true during early boot isn't leveraged later in the boot process, leading to its configuration being overlooked.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Implement logic that rechecks boot_ec_is_ecdt and ensures ECDT configurations aren't overwritten during subsequent namespace evaluations or device initializations."}, {"cause": "The evaluation of _REG in DSDT is forcing a reconfiguration without reevaluating existing ECDT state, causing functional EC events to misalign.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Add logic to acpi_ec_dsdt_probe() that evaluates whether ECDT's _REG has been evaluated correctly and preserves those configurations during the DSDT EC initialization."}], "reranked_files": ["drivers/acpi/ec.c"], "input_tokens": 638, "output_tokens": 410}
{"id": "187061", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/power.c", "drivers/acpi/reboot.c", "arch/x86/kernel/reboot.c", "drivers/base/power/main.c", "kernel/power/poweroff.c", "arch/x86/kernel/process.c", "drivers/platform/x86/dell-laptop.c", "drivers/char/ipmi/ipmi_poweroff.c", "kernel/reboot.c", "drivers/acpi/sleep.c"], "input_tokens_sum": 334973, "output_tokens_sum": 15416, "description": "Created attachment 243731 [details]\nScreenshot just before hanging\n\nWhen doing a poweroff or a reboot the PC stops for a few seconds, apparently at the very end of the process, then it hungs. Screen is blank but leds (disk, power and wifi) blink.\n\nI compile the vanilla kernel myself (and the attached files refers to my kernel) but the same problem affects all the kernels I tested, including the original 4.8.0 deloivered with debian SID, and kernel 4.8 delivered with Ubuntu 16.10.\n\nI am attaching a screenshot of the console during the seconds of waiting just before the screen goes blank and the leds start blinking. I am also attaching dmesg result with the last running kernel (4.7.10) and with the latest 4.9.0-rc4 kernel.\n\nAny help on how to further analyze the source of the bug is welcome.\n\nGianpaolo", "title": "Poweroff and reboot hungs the PC with screen off and leds blinking on Latitude E7250", "Kernel Version": "4.9-rc4", "Product": "ACPI", "Component": "Power-Off", "Hardware": "Intel Linux", "causes": [{"cause": "The bug might be related to the ACPI (Advanced Configuration and Power Interface) handling during the poweroff or reboot process. Specifically, the system might be hanging due to improper shutdown signaling or ACPI power state transitions.", "code_file": "drivers/acpi/acpi_shutdown.c", "fix_solution": "Investigate the shutdown sequence in the ACPI code and ensure that all ACPI power states are properly handled during shutdown and reboot, adding proper synchronization if necessary."}, {"cause": "The issue could be related to a race condition or improper handling of hardware resource deallocation during shutdown, particularly in relation to the system\u2019s power management or device driver interactions.", "code_file": "drivers/base/power/main.c", "fix_solution": "Review and modify the power management code, ensuring that all hardware resources are cleanly deallocated and devices are properly powered down before the final shutdown sequence."}, {"cause": "There may be a problem in the ACPI sleep state transitions or in the suspend-to-idle mechanism causing the system to hang during poweroff or reboot.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure proper handling of sleep state transitions, particularly when transitioning from a sleep state back to a powered-down state during poweroff or reboot."}, {"cause": "The LED blinking behavior could be linked to improper handling of device power-off sequences or incorrect ACPI notifications being sent to the system components.", "code_file": "drivers/acpi/acpi_led.c", "fix_solution": "Verify the LED driver interactions during shutdown and modify the driver to handle correct power-off notifications and sequences for devices such as LEDs."}, {"cause": "There could be an issue in the kernel\u2019s interaction with specific hardware (e.g., Intel chipset or system firmware) that is causing a hang at shutdown.", "code_file": "drivers/platform/x86/intel_pmc.c", "fix_solution": "Investigate the interaction between the kernel and the Intel platform management controller (PMC) during shutdown and reboot, and apply fixes if there is a failure to properly reset or shutdown the hardware."}], "reranked_files": ["drivers/acpi/acpi_shutdown.c", "drivers/base/power/main.c", "drivers/acpi/sleep.c", "drivers/acpi/acpi_led.c", "drivers/platform/x86/intel_pmc.c"], "input_tokens": 557, "output_tokens": 465}
{"id": "177311", "paths": ["drivers/i2c/busses/i2c-i801.c"], "predicts": ["drivers/hwmon/jc42.c", "drivers/i2c/busses/i2c-i801.c", "drivers/i2c/busses/i2c-ismt.c", "kernel/irq/manage.c", "include/linux/i2c-smbus.h", "kernel/irq/handle.c", "drivers/hwmon/hwmon.c"], "input_tokens_sum": 289708, "output_tokens_sum": 1987, "description": "I've noticed, when I do enable CONFIG_SENSORS_JC42 as a module or build into\nmy kernel, this causes a very high rate of interrupts on i801_smbus - about\n6000-8000 per second according to /proc/interrupts. After 20 minutes, there\nwere about 5 million interrupts generated on i801_smbus.\n\u00a0\nWhen I do unload the module jc42, the interrupts do not stop, until I do a\ncomplete reboot.\n\u00a0\nMainboard: Supermicro A1SRM-2758F\nKernel: Gentoo-Sources 4.8.1 (Happens also with Vanilla 4.8.1 and older kernel\nversions)\n\u00a0\ndmesg:\n[    8.319900] i801_smbus 0000:00:1f.3: enabling device (0140 -> 0143)\n[    8.321864] i801_smbus 0000:00:1f.3: SMBus using PCI interrupt\n[    8.326098] ismt_smbus 0000:00:13.0: enabling device (0140 -> 0142)\n\u00a0\nlspci:\n00:1f.3 SMBus: Intel Corporation Atom processor C2000 PCU SMBus (rev 02)\n\nWhen the module is loaded, I am also getting this errors:\n[   73.934901] ismt_smbus 0000:00:13.0: completion wait timed out\n[   74.974970] ismt_smbus 0000:00:13.0: completion wait timed out\n[   7", "title": "crazy interrupt rate on i801_smbus", "Kernel Version": "4.8.1", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "causes": [{"cause": "The i801_smbus driver may not be properly handling interrupts, leading to an excessive interrupt rate when the jc42 module is loaded.", "code_file": "drivers/i2c/busses/i2c-i801.c", "fix_solution": "Modify the interrupt handler to ensure it correctly acknowledges and clears interrupts, preventing them from being continuously triggered."}, {"cause": "The jc42 module might be causing the i801_smbus driver to enter a state where it continuously generates interrupts due to improper initialization or cleanup.", "code_file": "drivers/hwmon/jc42.c", "fix_solution": "Ensure that the jc42 module properly initializes and cleans up its resources, particularly in relation to the SMBus, to prevent leaving the bus in an interrupt-generating state."}, {"cause": "The i801_smbus driver might not be correctly handling the completion of SMBus transactions, leading to timeouts and repeated interrupt generation.", "code_file": "drivers/i2c/busses/i2c-i801.c", "fix_solution": "Review and adjust the transaction completion logic to ensure that transactions are completed or aborted correctly, preventing timeouts and unnecessary interrupts."}, {"cause": "There may be a conflict between the i801_smbus and ismt_smbus drivers, causing improper handling of SMBus resources and leading to excessive interrupts.", "code_file": "drivers/i2c/busses/i2c-ismt.c", "fix_solution": "Investigate and resolve any resource conflicts between the i801_smbus and ismt_smbus drivers, ensuring they can coexist without causing interrupt storms."}], "reranked_files": ["drivers/i2c/busses/i2c-i801.c", "drivers/hwmon/jc42.c", "drivers/i2c/busses/i2c-ismt.c"], "input_tokens": 712, "output_tokens": 368}
{"id": "120591", "paths": ["drivers/gpu/drm/nouveau/nouveau_fbcon.c"], "predicts": ["drivers/gpu/drm/nouveau/nouveau_acpi.c", "drivers/gpu/drm/nouveau/nouveau_connector.c", "drivers/gpu/drm/nouveau/nouveau_debugfs.c", "drivers/gpu/drm/nouveau/nouveau_fbcon.c", "drivers/gpu/drm/nouveau/nouveau_hwmon.c"], "input_tokens_sum": 284345, "output_tokens_sum": 2596, "description": "Created attachment 220561 [details]\ndmesg\n\nOS: Arch Linux\nVideo adapter: GeForce GTX 780 Ti\nxf86-nouveau: 1.0.12\n\nI blacklisted nouveau module for full OS initialisation before reproducing, then issued:\n# modprobe nouveau debug=trace\n\nAfter that screen becomes black and in dmesg appears:\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000210\n\nBug is not reproducible with 4.7-rc2 or earlier mainline.", "title": "BUG() in dmesg after loading nouveau module", "Kernel Version": "4.7-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "x86-64 Linux", "causes": [{"cause": "NULL pointer dereference in nouveau driver when loading module with debug trace enabled.", "code_file": "drivers/gpu/drm/nouveau/nouveau_drm.c", "fix_solution": "Add null pointer checks before accessing potentially uninitialized data structures in the nouveau driver."}, {"cause": "Incompatibility between kernel version 4.7-rc3 and the nouveau module leading to a NULL pointer dereference.", "code_file": "drivers/gpu/drm/nouveau/nouveau_mem.c", "fix_solution": "Ensure that proper error handling and initialization routines are followed when interacting with memory structures in the nouveau driver."}, {"cause": "Possible regression introduced in kernel 4.7-rc3 affecting nouveau module initialization.", "code_file": "drivers/gpu/drm/nouveau/nouveau_drv.c", "fix_solution": "Review and update the module initialization code to handle edge cases and potential null pointer accesses."}], "reranked_files": ["drivers/gpu/drm/nouveau/nouveau_drm.c", "drivers/gpu/drm/nouveau/nouveau_mem.c", "drivers/gpu/drm/nouveau/nouveau_drv.c"], "input_tokens": 468, "output_tokens": 212}
{"id": "117651", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/inode.c", "fs/nfs/namespace.c", "fs/nfs/proc.c", "fs/nfs/super.c", "include/uapi/linux/nfs_fs.h", "include/uapi/linux/nfs_mount.h", "net/sunrpc/auth.c", "net/sunrpc/cache.c", "net/sunrpc/svc.c", "net/sunrpc/xprtsock.c"], "input_tokens_sum": 257156, "output_tokens_sum": 2576, "description": "Created attachment 215321 [details]\nlog fragment with failed getattr\n\nAfter upgrading from 3.14.12 to 4.1.15 I've got strange behaviour with autofs. \n\nIt happens on diskless machine with root on NFS. There is autofs indirect mount on /storage, where NFS volumes are mounted on demand.\n\nEverything mounts normally, but after mount expiration\n(during unmount) autofs mount disappears - that is, not only /storage/<volume>\nunmounts, but /storage is also unmounted. This happens quite often - usually on the very first expiration.\n\nautomount logs umount error in such cases.\n\nWithout autofs, mount/umount of the same NFS volume works correctly. \n\nWith NFS debug enabled, I've got following errors:\n\nNFS reply getattr: -512\nnfs_revalidate_inode: (0:15/6291480) getattr failed, error=-512\nNFS: nfs_lookup_revalidate(/storage) is invalid\n\nAfter inode revalidate failure all mounts on this inode are unmounted and so autofs mount disappears, while automount daemon itself continue to run.\n\ntcpdump shows, tha", "title": "Root NFS and autofs - mount disappears due to inode revalidate failed", "Kernel Version": "4.1.15", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "causes": [{"cause": "The NFS client may not be handling server responses correctly, leading to the NFS lookup revalidation failure and subsequent autofs mount disappearance.", "code_file": "fs/nfs/dir.c", "fix_solution": "Modify the nfs_lookup_revalidate() function to properly handle the -512 error code, ensuring that the autofs mount is not mistakenly invalidated."}, {"cause": "Autofs may not be correctly managing the expiration of mounts when used with NFS, causing the parent mount point to be unmounted unexpectedly.", "code_file": "fs/autofs4/expire.c", "fix_solution": "Adjust the autofs_expire_indirect() function to ensure that only the intended NFS volume is unmounted upon expiration, preserving the autofs mount point."}, {"cause": "There might be an issue with the NFS client's inode revalidation process, causing it to incorrectly invalidate the autofs mount point.", "code_file": "fs/nfs/inode.c", "fix_solution": "Update the nfs_revalidate_inode() function to correctly handle getattr failures, preventing unnecessary invalidation of the autofs mount."}, {"cause": "The automount daemon may not be handling umount errors properly, leading to the disappearance of the autofs mount.", "code_file": "include/linux/automount.h", "fix_solution": "Enhance the error handling in the automount daemon to ensure that umount errors do not cause the autofs mount point to be removed."}], "reranked_files": ["fs/nfs/dir.c", "fs/autofs4/expire.c", "fs/nfs/inode.c", "include/linux/automount.h"], "input_tokens": 599, "output_tokens": 340}
{"id": "110831", "paths": ["drivers/net/wireless/iwlwifi/mvm/mac80211.c"], "predicts": ["drivers/sn/ioc3.c", "include/uapi/linux/nl80211.h", "net/mac80211/scan.c", "net/wireless/scan.c", "net/mac80211/util.c", "net/wireless/util.c", "drivers/bcma/scan.c", "drivers/bcma/scan.h"], "input_tokens_sum": 255221, "output_tokens_sum": 1764, "description": "Hardware: Intel edison with Intel 7260 chip.\nSoftware:Connman-1.3, Wpa_supplicant-2.5 and kernel-4.1.13\n\nThe firmware of Intel 7260 is iwlwifi-7260-13.ucode.\n\nStep:\n1. After wifi is enabled, use the connman cmd of \"connmanctl scan wifi\" to scan wifi ap.\n\n2. When use the connman cmd of \"connmanctl scan wifi\", connman will invoke the interfaces of Wpa_supplicant and Wpa_supplicant will trigger sched scan.\n\n3. After trigger sched scan, no NL80211_CMD_SCHED_SCAN_RESULTS events come from kernel with Intel 7260 chip. \n\n4. Wpa_supplicant will always wait for the events of NL80211_CMD_SCHED_SCAN_RESULTS to get the sched scan results.\n\nExpect:\nNL80211_CMD_SCHED_SCAN_RESULTS events come from kernel with Intel 7260 chip.", "title": "iwlwifi: mvm: scheduled scan doesn't report results when no matches are passed - MWG100254662", "Kernel Version": "4.1.13", "Product": "Drivers", "Component": "network-wireless", "Hardware": "Intel Linux", "causes": [{"cause": "The kernel is not generating the NL80211_CMD_SCHED_SCAN_RESULTS events when no matches are found in the scheduled scan results, possibly due to missing or incorrect handling in the scan result reporting logic.", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c", "fix_solution": "Ensure that the logic in the scheduled scan result handling generates the NL80211_CMD_SCHED_SCAN_RESULTS event even when no results match, by modifying the condition that checks for scan matches."}, {"cause": "The interaction between Wpa_supplicant and the kernel might not be triggering the scan result events properly due to issues in the interface between the nl80211 driver and Wpa_supplicant.", "code_file": "drivers/net/wireless/nl80211.c", "fix_solution": "Check the handling of scheduled scan events in the nl80211 driver and ensure that events are sent correctly to Wpa_supplicant, including when no matches are found."}, {"cause": "There may be a bug in the firmware handling of the scan process, causing it to not return expected scan results even when triggered.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-trans.h", "fix_solution": "Review and ensure proper handling of the scan process in the firmware interaction code, specifically making sure that even empty scan results trigger an appropriate response."}, {"cause": "The scheduled scan functionality might not be correctly implemented or is disabled due to misconfiguration or missing features in the kernel version (4.1.13).", "code_file": "drivers/net/wireless/intel/iwlwifi/mvm/sched_scan.c", "fix_solution": "Review the configuration and code related to scheduled scan in the iwlwifi driver and ensure that the functionality is fully enabled and correctly handles the event generation."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c", "drivers/net/wireless/nl80211.c", "drivers/net/wireless/intel/iwlwifi/iwl-trans.h", "drivers/net/wireless/intel/iwlwifi/mvm/sched_scan.c"], "input_tokens": 568, "output_tokens": 415}
{"id": "106571", "paths": ["drivers/gpio/gpiolib-acpi.c"], "predicts": ["arch/x86/kernel/acpi/apei.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/acpi/sleep.h", "include/acpi/acpi_bus.h", "include/acpi/acpixf.h", "kernel/power/autosleep.c", "kernel/power/main.c", "sound/aoa/core/gpio-feature.c"], "input_tokens_sum": 270695, "output_tokens_sum": 3992, "description": "Created attachment 191021 [details]\ndmesg until failure\n\nOn the Microsoft Surface 3, when you fold the type cover over the screen (or \"close the lid\"), the lid switch state does not change, and an ACPI error is thrown. The lid switch state always reports closed.\n\n[root@localhost ~]# cat /proc/acpi/button/lid/LID/state \nstate:      closed\n\n[ 1130.459896] ACPI Exception: AE_ERROR, Returned by Handler for [GeneralPurposeIo] (20150930/evregion-297)\n[ 1130.460061] ACPI Error: Method parse/execution failed [\\_SB.GPO0._E4C] (Node ffff88013f4b4438), AE_ERROR (20150930/psparse-542)\n\nFrom the DSDT, this is the GPIO event handler that toggles the lid switch state.", "title": "Surface 3 Lid Switch Method parse/execution failed", "Kernel Version": "4.3-rc6", "Product": "ACPI", "Component": "Config-Tables", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ACPI GPIO event handler for lid switch state (\\_SB.GPO0._E4C) fails to execute correctly, resulting in unresolved GeneralPurposeIo operations.", "code_file": "drivers/acpi/acpi_gpio.c", "fix_solution": "Review and correct the implementation of the GPIO event handling function to ensure proper execution and error handling for GPIO operations."}, {"cause": "The DSDT table implementation does not correctly map the physical GPIO to the expected logic for lid open/close detection.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Modify the ACPI scan logic to correctly interpret the GPIO events and enforce proper mapping in the DSDT table for lid state changes."}, {"cause": "Incorrect interaction between ACPI driver and device firmware leading to erroneous lid state reporting.", "code_file": "drivers/acpi/button.c", "fix_solution": "Enhance the ACPI button driver to handle exceptional cases and firmware quirks by incorporating additional logic to probe and update lid state correctly."}], "reranked_files": ["drivers/acpi/acpi_gpio.c", "drivers/acpi/scan.c", "drivers/acpi/button.c"], "input_tokens": 553, "output_tokens": 237}
{"id": "104121", "paths": ["drivers/acpi/acpi_video.c"], "predicts": ["drivers/acpi/acpi_video.c", "include/acpi/video.h", "include/linux/backlight.h", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/video_detect.c"], "input_tokens_sum": 278669, "output_tokens_sum": 3315, "description": "Created attachment 186931 [details]\nacpidump of Esprimo Mobile M9410\n\nUnder /sys/class/backlight there are two entries:\n[xxx@yyy ~]$ ls -l /sys/class/backlight/\nlrwxrwxrwx. 1 root root 0  6. Sep 2015  acpi_video0 -> ../../devices/pci0000:00/0000:00:02.0/backlight/acpi_video0\nlrwxrwxrwx. 1 root root 0  6. Sep 2015  acpi_video1 -> ../../devices/pci0000:00/0000:00:02.0/backlight/acpi_video1\n\nWhen writing manually a new value to acpi_video0/brightness the backlight is not changing. Do the same with acpi_video1/brightness is changing the backlight.\n\nBoth entries are of type firmware.\nAs a result, the backlight can not be changed from the gnome shell slider (gnome 3.16), gsd-backlight-helper and xbacklight. xbacklight is working, when acpi_video1 is defined as the backlight device in an xorg.conf.d file.\n\nHere the output of all files in the acpi_video* folder. In addition I attache an acpidump. If any additional information is needed, please let me know and I try to get it.\n\n[xxx@yyy ~]$ gre", "title": "Esprimo Mobile 9410: Two acpi_video* devices in sysfs, only one working", "Kernel Version": "4.2-rc5", "Product": "ACPI", "Component": "Power-Video", "Hardware": "x86-64 Linux", "causes": [{"cause": "The system is detecting two backlight devices (acpi_video0 and acpi_video1) but only one is functional. The kernel may not be handling the second backlight device correctly.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that both acpi_video0 and acpi_video1 devices are correctly registered and initialized, and fix the logic for selecting the active device for brightness control."}, {"cause": "There might be an issue in the kernel code that does not properly handle multiple backlight devices in the sysfs directory.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add handling to ensure that only one backlight device is active at a time and that the user-space tools (gnome-shell, xbacklight, etc.) interact with the correct device."}, {"cause": "The ACPI driver might not be exposing the proper interface for controlling the backlight on acpi_video0.", "code_file": "drivers/acpi/video.c", "fix_solution": "Fix the backlight control interface in the ACPI driver to ensure that the brightness controls for acpi_video0 work as expected."}, {"cause": "The conflict in device registration might be related to the kernel\u2019s handling of multiple ACPI devices of the same type.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Ensure proper device initialization and resource allocation for devices with similar names (acpi_video0 and acpi_video1) to avoid conflicts."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/bus.c"], "input_tokens": 673, "output_tokens": 341}
{"id": "101521", "paths": ["net/mac80211/iface.c"], "predicts": ["net/mac80211/driver-ops.h", "include/linux/rfkill.h", "net/mac80211/main.c", "include/linux/ieee80211.h", "include/net/mac80211.h", "net/rfkill/core.c", "drivers/infiniband/core/netlink.c", "net/wireless/core.c", "include/uapi/linux/wireless.h", "lib/test_firmware.c"], "input_tokens_sum": 283831, "output_tokens_sum": 4043, "description": "Created attachment 182661 [details]\nlspci -vvvx\n\nI am testing vanilla linux-4.1.2 kernel on Dell Vostro 3550 laptop with A12 BIOS. During cold boot I received:\n\n[   20.114785] r8169 0000:05:00.0: Direct firmware load for rtl_nic/rtl8168e-2.fw failed with error -2\n[   20.114795] r8169 0000:05:00.0 enp5s0: unable to load firmware patch rtl_nic/rtl8168e-2.fw (-2)\n[   20.138835] r8169 0000:05:00.0 enp5s0: link down\n[   20.493918] ------------[ cut here ]------------\n[   20.493928] WARNING: CPU: 2 PID: 3162 at net/mac80211/driver-ops.h:12 ieee80211_bss_info_change_notify+0x1e2/0x1f0()\n[   20.493930] wlp9s0:  Failed check-sdata-in-driver check, flags: 0x0\n[   20.493931] Modules linked in: fuse x86_pkg_temp_thermal intel_powerclamp kvm_intel kvm ums_realtek uas iwldvm usb_storage iwlwifi dell_smo8800\n[   20.493942] CPU: 2 PID: 3162 Comm: iwconfig Not tainted 4.1.2-default-pciehp #2\n[   20.493943] Hardware name: Dell Inc. Vostro 3550/, BIOS A12 02/18/2014\n[   20.493945]  ffffffff81dadc75 ffff8", "title": "iwlwifi: WARNING when setting Tx power with WEXT while in RFKILL - MWG100249491", "Kernel Version": "4.1.2", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ieee80211_bss_info_change_notify function is being called while the device is in RFKILL state, which is not handled properly.", "code_file": "net/mac80211/driver-ops.h", "fix_solution": "Add a check in ieee80211_bss_info_change_notify to ensure the device is not in RFKILL state before proceeding with operations."}, {"cause": "The wireless extension (WEXT) interface is attempting to set Tx power while the device is in RFKILL state, leading to an invalid operation.", "code_file": "net/wireless/wext.c", "fix_solution": "Modify the WEXT interface to check the RFKILL state before attempting to set Tx power and return an appropriate error if the device is blocked."}, {"cause": "The driver is not correctly handling the RFKILL state transition, leading to operations being attempted when they should be blocked.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Implement proper RFKILL state checks and handling in the iwlwifi driver to prevent operations when the device is in RFKILL state."}], "reranked_files": ["net/mac80211/driver-ops.h", "net/wireless/wext.c", "drivers/net/wireless/intel/iwlwifi/iwl-drv.c"], "input_tokens": 770, "output_tokens": 274}
{"id": "95061", "paths": ["drivers/gpu/drm/i915/i915_drv.c"], "predicts": ["kernel/power/hibernate.c", "arch/x86/power/hibernate_32.c", "arch/x86/power/hibernate_64.c", "drivers/acpi/sleep.c", "kernel/power/poweroff.c", "drivers/power/power_supply_core.c", "include/linux/pm.h", "drivers/acpi/acpi_processor.c", "kernel/power/suspend.c", "kernel/power/user.c"], "input_tokens_sum": 251111, "output_tokens_sum": 2348, "description": "Created attachment 171081 [details]\ndmesg output\n\nHi,\n\nSince kernel 3.19 (including 3.19.1) the system (Laptop FSC S7110) will not correctly shut down when suspending to disk (echo disk > /sys/power/state). The power-LED is still on and the fan keeps whirling. However, the hibernation image is created successfully. After pulling the plug and powering the system on, it will boot into the hibernated image without problems. I didn't ran into this problem with a former kernel as far as I can remember but 4.0-rc4 has the same issue. Suspend to RAM, shutdown and reboot all work as expected.\n\ncat /sys/power/disk\n[platform] shutdown reboot suspend\n\nRegards,\nDirk", "title": "Laptop will not shutdown after suspend to disk (regression)", "Kernel Version": "3.19", "Product": "Drivers", "Component": "Video", "Hardware": "Intel Linux", "causes": [{"cause": "The system does not correctly call the power down sequence after creating the hibernation image due to a regression in the power management core.", "code_file": "kernel/power/suspend.c", "fix_solution": "Ensure the function responsible for powering off the system is invoked after the hibernation image is created by checking and correcting the suspend_to_disk sequence."}, {"cause": "The platform-specific shutdown mechanism is not triggered after writing the hibernation image, possibly due to changes in the shutdown sequence logic.", "code_file": "arch/x86/kernel/acpi/sleep.c", "fix_solution": "Review and adjust the control flow to ensure the system shutdown is invoked correctly in the ACPI sleep state transitions after suspending to disk."}, {"cause": "An issue in the ACPI subsystem might prevent the final shutdown actions from executing properly after the hibernation image is created.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Verify and update the ACPI callbacks and notifications related to the completion of hibernation to ensure the system powers off."}, {"cause": "The Intel video driver may hold system resources that prevent the shutdown process from completing as expected after suspend to disk.", "code_file": "drivers/gpu/drm/i915/i915_suspend.c", "fix_solution": "Modify the driver to ensure all resources are freed and devices are properly powered down in the suspend and shutdown procedure."}], "reranked_files": ["kernel/power/suspend.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/sleep.c", "drivers/gpu/drm/i915/i915_suspend.c"], "input_tokens": 521, "output_tokens": 329}
{"id": "94411", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "include/linux/acpi.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/acpi_processor.c", "drivers/acpi/power.c", "kernel/time/hrtimer.c", "kernel/time/timer.c", "lib/timerqueue.c", "include/linux/pm.h"], "input_tokens_sum": 247127, "output_tokens_sum": 1350, "description": "Created attachment 169541 [details]\ndmesg when function keys are pressed\n\nMy laptop (XPS13 9333) has two function keys to control the screen brightness. When pressed, two _Qxx ACPI methods are called, one to increase and one to decrease the brightness. Both the methods sleep for 200ms.\n\nThis pause of 200ms is causing some problems when I keep one of the function keys pressed. In this situation, more queries than needed are scheduled for a delayed execution, making the screen brightness change even after the function key is released. If I keep the function key pressed for X seconds, it will take roughly 2X seconds for all the queries to be executed.\n\nHere attached see some log lines that show the problem.", "title": "Unwanted delayed execution of _Qxx EC methods", "Kernel Version": "3.19", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "causes": [{"cause": "The ACPI EC (Embedded Controller) driver is scheduling too many delayed work items when a function key is held down, leading to excessive execution of _Qxx methods.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Implement a mechanism to coalesce or limit the number of scheduled work items when a function key is held down, possibly by checking if a similar work item is already pending before scheduling a new one."}, {"cause": "The delay in the execution of _Qxx methods is due to the fixed sleep duration in the ACPI method execution path, which does not account for rapid key presses.", "code_file": "drivers/acpi/acpica/evregion.c", "fix_solution": "Modify the ACPI method execution logic to dynamically adjust or eliminate the sleep duration based on the context, such as detecting rapid key presses and reducing the sleep time accordingly."}, {"cause": "The ACPI event handling mechanism is not efficiently processing the events generated by the function keys, leading to a backlog of events.", "code_file": "drivers/acpi/button.c", "fix_solution": "Optimize the event handling loop to process key press events more efficiently, possibly by introducing a debounce mechanism to prevent excessive event generation."}], "reranked_files": ["drivers/acpi/ec.c", "drivers/acpi/acpica/evregion.c", "drivers/acpi/button.c"], "input_tokens": 509, "output_tokens": 283}
{"id": "90521", "paths": ["drivers/gpio/gpio-crystalcove.c"], "predicts": ["kernel/irq/manage.c", "drivers/input/input.c", "kernel/irq/handle.c", "arch/x86/kernel/irq_32.c", "arch/x86/kernel/irq_64.c", "include/linux/interrupt.h", "fs/proc/interrupts.c", "drivers/acpi/event.c", "include/linux/gpio_keys.h", "arch/x86/kernel/apic/io_apic.c"], "input_tokens_sum": 252011, "output_tokens_sum": 1956, "description": "Hello the side buttons for volume on the Asust100 baytrail are not working properly they are being detected by the crystalcove-gpio \n\n  \n265:          0          0          0          0  Crystal Cove    5  gpio_crystalcove\n 266:          0          0          0          0  Crystal Cove    0  volume_up\n 267:          0          0          0          0  Crystal Cove    1  volume_down\n 273:          0          0          0          0  Crystal Cove    7  rotation_lock\n 274:          0          0          0          0  Crystal Cove    8  home\n 360:         17          0   \n\nhowever when i push the volune buttons i get the following error message\n\n 4089.639205] WARNING: CPU: 2 PID: 72 at kernel/irq/manage.c:661 irq_nested_primary_handler+0x2c/0x30()\n[ 4089.639216] Primary handler called for nested irq 267\n[ 4089.639224] Modules linked in: hci_uart joydev snd_soc_sst_baytrail_pcm asus_nb_wmi gpio_keys asus_wmi hid_generic sparse_keymap snd_soc_sst_dsp snd_soc_sst_byt_rt5640_mach intel_rapl in", "title": "Asus t100ta Buttons not working", "Kernel Version": "3.19-rc2", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "All Linux", "causes": [{"cause": "The volume buttons are not generating interrupts due to incorrect GPIO configuration or handling in the Crystal Cove GPIO driver.", "code_file": "drivers/gpio/gpio-crystalcove.c", "fix_solution": "Ensure that the GPIO pins for volume buttons are correctly configured as interrupt-generating inputs and that the interrupt handler is properly registered."}, {"cause": "The irq_nested_primary_handler is being incorrectly called for a nested interrupt, indicating a possible misconfiguration in the interrupt handling setup.", "code_file": "kernel/irq/manage.c", "fix_solution": "Review and correct the interrupt hierarchy setup to ensure that nested interrupts are properly configured and handled."}, {"cause": "The GPIO interrupt lines for the volume buttons might not be correctly mapped to the corresponding IRQ numbers.", "code_file": "arch/x86/platform/intel-mid/intel_mid_pinctrl.c", "fix_solution": "Verify and update the pinctrl mapping to ensure that the correct GPIO lines are associated with the expected IRQ numbers for the volume buttons."}, {"cause": "The ACPI configuration might not be correctly setting up the GPIO resources for the volume buttons.", "code_file": "drivers/acpi/acpi_gpio.c", "fix_solution": "Check the ACPI tables and ensure that the GPIO resources for the volume buttons are correctly defined and initialized."}], "reranked_files": ["drivers/gpio/gpio-crystalcove.c", "kernel/irq/manage.c", "arch/x86/platform/intel-mid/intel_mid_pinctrl.c", "drivers/acpi/acpi_gpio.c"], "input_tokens": 658, "output_tokens": 304}
{"id": "84561", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/gpu/drm/i915/intel_display.c", "drivers/acpi/video.c", "drivers/acpi/video_detect.c", "drivers/video/backlight/pwm_bl.c", "include/linux/backlight.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/pci/acpi.c", "drivers/gpu/drm/drm_modes.c", "include/acpi/video.h", "include/video/edid.h"], "input_tokens_sum": 244479, "output_tokens_sum": 2460, "description": "Hi!\n\nAfter upgrading from kernel 3.14 to 3.16 on a Samsung 880Z5E laptop (with dual Intel HD 4000 and Radeon 8770M cards), the intermediate % of backlight don't work.\n\nI.e. /sys/class/backlight/intel_backlight is there with max_brightness=4882 and type=raw, but all brightness levels > 0 result in full brightness, and brightness level = 0 results in the screen turned off. The same is on the brightness adjustment UI: 0% is \"turned off\", everything greater than 0% is full brightness.\n\n(although when the screen is turned on after being turned off, the backlight turns on smoothly)\n\nacpi_backlight=vendor and video.use_native_backlight=1 also don't work.\n\nWhat other details do you need? acpidump, dmidecode?", "title": "[ivb] Intel backlight does not adjust, but only turns on/off in kernel 3.16 on Samsung 880Z5E laptop", "Kernel Version": "3.16.2", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The brightness control logic in the i915 driver for the Intel HD graphics may have a regression, causing it to incorrectly handle brightness levels.", "code_file": "drivers/gpu/drm/i915/intel_panel.c", "fix_solution": "Check and correct the logic that calculates the actual brightness level from the user-set value. Ensure that the linear interpolation of brightness levels is correctly implemented."}, {"cause": "Changes between kernel 3.14 and 3.16 may have incorrectly configured the panel backlight control settings, leading to incorrect interpretations of non-zero brightness values.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the logic that interfaces with ACPI to ensure it correctly sends backlight setting commands and properly handles different backlight interfaces."}, {"cause": "A mismatch between the ACPI backlight control and the Intel driver, where the ACPI method implementation might incorrectly communicate the brightness changes.", "code_file": "drivers/acpi/acpi_video.c", "fix_solution": "Review and possibly extend the supported range check or correct the backlight level scaling to accommodate hardware-specific quirks."}, {"cause": "The interaction between ACPI and video drivers has changed between the kernel versions, leading to conflicting control over the backlight settings.", "code_file": "drivers/gpu/drm/drm_sysfs.c", "fix_solution": "Investigate the association between ACPI and DRM settings for backlight. Ensure correct handling and synchronization between ACPI generic and hardware-specific backlight control mechanisms."}], "reranked_files": ["drivers/gpu/drm/i915/intel_panel.c", "drivers/acpi/video.c", "drivers/acpi/acpi_video.c", "drivers/gpu/drm/drm_sysfs.c"], "input_tokens": 558, "output_tokens": 347}
{"id": "84111", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c", "include/acpi/video.h", "include/linux/backlight.h", "drivers/acpi/device_pm.c"], "input_tokens_sum": 231550, "output_tokens_sum": 1772, "description": "My HP Pavilion dv6-3182 laptop shows three interfaces in /sys/class/backlight: acpi_video0, acpi_video1 and radeon_bl0.\n\nradeon_bl0 only appears when the radeon driver is used (i.e. not if fglrx is used).\n\nBoth acpi_video0 and radeon_bl0 control the brightness of the screen, but acpi_video0 has 11 brightness levels whilst radeon_bl0 has 256.\n\nAs far as I know, acpi_video1 has no purpose. Writing to its brightness file doesn't do anything, but it causes problems to desktop environments that choose it over the other options.", "title": "HP Pavilion dv6-3182 shows at least one additional backlight interface", "Kernel Version": "3.13", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The presence of multiple ACPI video interfaces without clear distinction leads to confusion in desktop environments.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Modify the ACPI video interface detection logic to filter out redundant interfaces, ensuring only necessary interfaces are exposed."}, {"cause": "The system exposes both ACPI and radeon backlight interfaces, leading to interface overlap.", "code_file": "drivers/gpu/drm/radeon/radeon_backlight.c", "fix_solution": "Implement a check to prevent registration of the radeon backlight interface if an ACPI video interface already provides sufficient control."}, {"cause": "acpi_video1 is being registered erroneously without functionality, causing it to interfere with user space applications.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the video device initialization to avoid registering non-functional backlight interfaces like acpi_video1."}, {"cause": "The desktop environment selects the first available backlight interface which might not be the most appropriate one for control.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Enhance the interface selection heuristic to prioritize interfaces offering more brightness levels or that are explicitly marked as primary."}], "reranked_files": ["drivers/acpi/video_detect.c", "drivers/gpu/drm/radeon/radeon_backlight.c", "drivers/acpi/video.c"], "input_tokens": 494, "output_tokens": 287}
{"id": "83151", "paths": ["drivers/cpufreq/intel_pstate.c"], "predicts": ["drivers/cpufreq/intel_pstate.c", "arch/x86/include/asm/msr.h", "arch/x86/lib/msr.c", "arch/x86/power/cpu.c", "fs/sysfs/file.c", "tools/power/cpupower/utils/cpupower.c", "tools/power/x86/turbostat/turbostat.c"], "input_tokens_sum": 247112, "output_tokens_sum": 1960, "description": "On my laptop (Dell XPS 13 9333) MSR_IA32_MISC_ENABLE_TURBO_DISABLE is 0 when AC is present, 1 otherwise.\nBecause of this, setting turbo_disabled on init leads to some issues:\n* If I turn on the laptop while the AC is present, the sysfs interface always allows me to change the state of no_turbo. However, the changes are only effective when the AC is present.\n* If I turn on the laptop while on battery, the sysfs interface doesn't allow me to change the state of no_turbo. That means I'm not able to disable it when it's automatically enabled when I plug the AC.\n\nNote that I don't have the possibility to disable Intel Turbo from the BIOS settings.", "title": "Intel Turbo can't be disabled/enabled under certain conditions", "Kernel Version": "3.16", "Product": "Power Management", "Component": "intel_pstate", "Hardware": "Intel Linux", "causes": [{"cause": "The intel_pstate driver does not correctly handle the MSR_IA32_MISC_ENABLE_TURBO_DISABLE register based on the AC power state, leading to inconsistent turbo mode behavior.", "code_file": "drivers/cpufreq/intel_pstate.c", "fix_solution": "Modify the intel_pstate driver to check the AC power state during initialization and when the power state changes, ensuring the MSR_IA32_MISC_ENABLE_TURBO_DISABLE register is set correctly based on the current power source."}, {"cause": "The sysfs interface for controlling turbo mode does not properly update or reflect the actual hardware state when the power source changes.", "code_file": "drivers/cpufreq/intel_pstate.c", "fix_solution": "Update the sysfs interface handling in the intel_pstate driver to ensure it accurately reflects the current state of the turbo mode, and allow changes to be applied regardless of the initial power state during boot."}, {"cause": "The initialization sequence of the intel_pstate driver does not account for the power source, leading to incorrect initial settings for turbo mode.", "code_file": "drivers/cpufreq/intel_pstate.c", "fix_solution": "Adjust the initialization sequence in the intel_pstate driver to detect the current power source and set the turbo mode accordingly, ensuring consistent behavior across different boot scenarios."}], "reranked_files": ["drivers/cpufreq/intel_pstate.c"], "input_tokens": 509, "output_tokens": 305}
{"id": "75581", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "include/linux/power/power_supply.h", "kernel/power/power.h", "include/linux/power/sbs-battery.h", "include/linux/power/bq27x00_battery.h", "include/linux/power/jz4740-battery.h", "include/linux/power/twl4030_madc_battery.h"], "input_tokens_sum": 233885, "output_tokens_sum": 1795, "description": "Created attachment 135211 [details]\noutput of dmesg (last line after rmmod battery&&modprobe battery)\n\nSometimes battery detection in module battery fails, reloading of module solves problem. I see this bug from Linux-3.7.4 until Linux-3.14.2.", "title": "Faill of battery detection on Lenovo Z480 with probability 5-10%", "Kernel Version": "3.14.2", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "causes": [{"cause": "Race condition between battery initialization and module load operations, causing intermittent failures in battery detection.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Introduce locking mechanisms or use atomic operations during module initialization and loading to prevent race conditions."}, {"cause": "Incorrect handling or initialization of ACPI interfaces during load operation, possibly leading to failed battery detection.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Add proper checks and reinitialize ACPI interfaces to ensure battery information is correctly loaded every time the module is initialized."}, {"cause": "Power supply or battery subsystem issues with event notification handling, leading to missed updates about battery status.", "code_file": "drivers/power/supply/power_supply_core.c", "fix_solution": "Enhance event handling in the power supply core to ensure all battery status notifications are reliably captured and processed."}, {"cause": "Missing or incorrect management of the cached battery state during module reload operations.", "code_file": "drivers/acpi/acpi_cache.c", "fix_solution": "Ensure proper flushing and updating of cached battery state during reload to prevent stale or incorrect battery state representation."}], "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/acpi_bus.c", "drivers/power/supply/power_supply_core.c", "drivers/acpi/acpi_cache.c"], "input_tokens": 425, "output_tokens": 271}
{"id": "60583", "paths": ["drivers/acpi/acpica/evxface.c"], "predicts": ["drivers/acpi/acpica/evmisc.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/acpica/acglobal.h"], "input_tokens_sum": 209122, "output_tokens_sum": 1238, "description": "Created attachment 106942 [details]\nOutput of acpidump, hwinfo lspci syslog\n\nSometimes the kernel oops at boot, something to do with acpi.\nIt started when I installed 3.5.4 on a Panasonic CF-19 Toughbook.\nI tried 3.10.1 but the same result.\nCrash occurs in same function but different adress. (drivers/acpi/acpica/evmisc.c line 267 for 3.5.4 and line 216 for 3.1.0.1)\n\nsyslog reports :\nJul  5 10:44:36 ship1 kernel: BUG: unable to handle kernel NULL pointer dereference at   (null)\nJul  5 10:44:36 ship1 kernel: IP: [<  (null)>]   (null)\nJul  5 10:44:36 ship1 kernel: *pde = 00000000\nJul  5 10:44:36 ship1 kernel: Oops: 0010 [#1] SMP\nJul  5 10:44:36 ship1 kernel: Modules linked in: af_packet uinput nfsd exportfs nfs lockd nfs_acl sunrpc ipv6 iptable_filter iptable_nat nf_nat nf_conntrack_ipv4 nf_conntrack nf_defrag_ipv4 iptable_mangle iptable_raw ip_tables x_tables binfmt_misc loop cpufreq_ondemand cpufreq_conservative cpufreq_powersave speedstep_lib acpi_cpufreq arc4 freq_table iwlwifi mac802", "title": "Kernel oops at boot in acpi_ev_notify_dispatch", "Kernel Version": "3.5.4", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "causes": [{"cause": "Dereferencing a NULL pointer in acpi_ev_notify_dispatch function, likely due to receiving an unexpected or malformed ACPI event during system boot.", "code_file": "drivers/acpi/acpica/evmisc.c", "fix_solution": "Add a NULL check for the pointer before dereferencing it, ensuring robustness against unexpected events."}, {"cause": "Incorrect initialization or uninitialized variables leading to NULL pointer dereference when handling ACPI notifications.", "code_file": "drivers/acpi/acpica/nsutil.c", "fix_solution": "Ensure proper initialization of relevant structures and variables before their use in the notification dispatch logic."}, {"cause": "Faulty logic in the event dispatch process in the ACPICA core leading to an assumption that the data structures will always be valid.", "code_file": "drivers/acpi/acpica/evgpe.c", "fix_solution": "Introduce sanity checks before processing events, including verifying pointer validity and structure integrity."}, {"cause": "Race condition when accessing shared resources or structures causing inconsistent state during ACPI notification dispatch.", "code_file": "drivers/acpi/acpica/evxface.c", "fix_solution": "Implement proper locking mechanism or review existing locks to prevent race conditions during access."}], "reranked_files": ["drivers/acpi/acpica/evmisc.c", "drivers/acpi/acpica/nsutil.c", "drivers/acpi/acpica/evgpe.c", "drivers/acpi/acpica/evxface.c"], "input_tokens": 692, "output_tokens": 290}
{"id": "60577", "paths": ["drivers/net/wireless/iwlwifi/pcie/drv.c"], "predicts": ["drivers/net/wireless/b43/main.c", "include/linux/wireless.h", "net/wimax/stack.c", "net/wimax/id-table.c", "include/linux/rfkill.h"], "input_tokens_sum": 274065, "output_tokens_sum": 13284, "description": "Created attachment 106926 [details]\nlspci -vv\n\nI have notebook Dell 11z with WiMAX/WiFi adapter Intel Link 5150. \nWhen I tried to list network interfaces, i didn't see any WiFi interfaces.\n\n>ifconfig\n\nenp0s29f7u5: flags=129<UP,NOARP>  mtu 1400\n        ether 00:1d:e1:1b:40:a2  txqueuelen 20  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nenp2s0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\n        ether 00:26:b9:c8:83:86  txqueuelen 1000  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\n        loop  txqueuelen 0  (Local Loopback)\n        ", "title": "WiFi doen't work on Intel WiMAX/WiFi Link 5150", "Kernel Version": "3.9.9", "Product": "Drivers", "Component": "network-wireless", "Hardware": "x86-64 Linux", "causes": [{"cause": "The Intel WiMAX/WiFi Link 5150 driver is not loaded or initialized properly.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-agn.c", "fix_solution": "Ensure that the driver is correctly initialized by checking the return values of initialization functions and adding error handling to retry or log failures."}, {"cause": "The firmware for the Intel WiMAX/WiFi Link 5150 is missing or not loaded.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "fix_solution": "Add checks to ensure the firmware is present and loaded correctly, and log an error message if the firmware is missing."}, {"cause": "The PCI device for the WiFi adapter is not being recognized or configured correctly.", "code_file": "drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "fix_solution": "Verify that the PCI device ID for the Intel WiMAX/WiFi Link 5150 is included in the supported devices list and add it if missing."}, {"cause": "The network interface is not being registered correctly with the kernel.", "code_file": "net/core/dev.c", "fix_solution": "Ensure that the network interface registration functions are called correctly and that the interface is added to the system's list of network interfaces."}], "reranked_files": ["drivers/net/wireless/intel/iwlwifi/iwl-agn.c", "drivers/net/wireless/intel/iwlwifi/iwl-drv.c", "drivers/net/wireless/intel/iwlwifi/pcie/drv.c", "net/core/dev.c"], "input_tokens": 745, "output_tokens": 321}
{"id": "60519", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply_sysfs.c", "arch/x86/kernel/acpi/acpi.c", "arch/x86/kernel/acpi/sleep.c", "drivers/power/bq27x00_battery.c", "drivers/power/olpc_battery.c", "drivers/power/pmu_battery.c", "include/linux/power_supply.h", "include/acpi/acpi.h", "include/acpi/acpi_bus.h"], "input_tokens_sum": 175170, "output_tokens_sum": 2671, "description": "Created attachment 106809 [details]\nOutput of acpidump\n\nThe battery information reported in sysfs is wrong since kernel 2.6.34. In older versions the information is correct.\n\nThe affected device is a Samsung NP540U3C. The output of acpidump is attached.\nThese are the contents of /sys/class/power_supply/BAT1/uevent:\n\nCorrect information on 2.6.33:\nPOWER_SUPPLY_NAME=BAT1\nPOWER_SUPPLY_TYPE=Battery\nPOWER_SUPPLY_STATUS=Full\nPOWER_SUPPLY_PRESENT=1\nPOWER_SUPPLY_TECHNOLOGY=Li-ion\nPOWER_SUPPLY_VOLTAGE_MIN_DESIGN=7500000\nPOWER_SUPPLY_VOLTAGE_NOW=8638000\nPOWER_SUPPLY_CURRENT_NOW=0\nPOWER_SUPPLY_CHARGE_FULL_DESIGN=6890000\nPOWER_SUPPLY_CHARGE_FULL=6800000\nPOWER_SUPPLY_CHARGE_NOW=6800000\nPOWER_SUPPLY_MODEL_NAME=\nPOWER_SUPPLY_MANUFACTURER=SAMSUNG Electronics\nPOWER_SUPPLY_SERIAL_NUMBER=\n\nWrong information on 2.6.34:\nPOWER_SUPPLY_NAME=BAT1\nPOWER_SUPPLY_TYPE=Battery\nPOWER_SUPPLY_STATUS=Unknown\nPOWER_SUPPLY_PRESENT=1\nPOWER_SUPPLY_TECHNOLOGY=Unknown\nPOWER_SUPPLY_CYCLE_COUNT=204\nPOWER_SUPPLY_VOLTAGE_MIN_DES", "title": "Wrong battery information reported on Samsung NP540U3C", "Kernel Version": "2.6.34", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "causes": [{"cause": "Changes in ACPI battery driver code may have led to incorrect parsing of battery status and technology for specific models.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Update the ACPI battery driver to correctly parse and interpret battery status and technology data for Samsung NP540U3C, potentially adding specific quirks or checks for this model."}, {"cause": "The incorrect interpretation of ACPI tables due to updated ACPI specifications or implementation differences may result in wrong battery information.", "code_file": "drivers/acpi/acpica/tables.c", "fix_solution": "Examine ACPI table parsing routines to ensure they correctly interpret entries related to battery information, applying necessary fixes or adjustments for data structures involved."}, {"cause": "Incomplete or erroneous power supply property initialization leading to default or unrecognized values being used instead of correct data.", "code_file": "drivers/power/supply/power_supply_core.c", "fix_solution": "Check and ensure initialization and updates for power supply properties are proper and model-specific quirks are handled appropriately in the battery information reporting path."}], "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/acpica/tables.c", "drivers/power/supply/power_supply_core.c"], "input_tokens": 647, "output_tokens": 254}
{"id": "53441", "paths": ["sound/pci/hda/hda_intel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_auto_parser.c", "sound/pci/hda/hda_proc.c", "include/linux/sound.h", "include/sound/hda_hwdep.h", "drivers/acpi/sleep.c", "kernel/power/suspend.c", "lib/pci_iomap.c"], "input_tokens_sum": 214838, "output_tokens_sum": 2176, "description": "Created attachment 92591 [details]\ndmesg showing error messages\n\nOn a fresh boot the sound card works fine.\nAfter a few suspends to ram (it doesn't necessarily happen after just one) the sound card stops working well. The sound comes out chopppy, as a series of clicks separated by 2 second or so silences.\n\nI see these messages in the kernel log right after resume:\nhda-intel: azx_get_response timeout, switching to polling mode: last cmd=0x00170503\nhda-intel: No response from codec, disabling MSI: last cmd=0x00170503\nhda_intel: azx_get_response timeout, switching to single_cmd mode: last cmd=0x00170503\n\nThe only way to fix the sound seems to be a reboot.\nI don't have this problem with v3.6.11, it appeared with kernel v3.7.1 (I have not tested v3.7). Right now I'm running 3.7.6 and the problem is still there.\n\n$ lspci  | grep -i audio\n00:1b.0 Audio device: Intel Corporation 5 Series/3400 Series Chipset High Definition Audio (rev 05)\n01:00.1 Audio device: NVIDIA Corporation High Definition", "title": "hda_intel: sound stops working after suspend to ram", "Kernel Version": "3.7.6", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "causes": [{"cause": "The azx_get_response function is timing out due to improper handling of the codec response after suspend/resume cycles.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the timeout value in azx_get_response to allow more time for the codec to respond after resume."}, {"cause": "The system is not properly reinitializing the audio codec after resume, leading to MSI (Message Signaled Interrupts) issues.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Add a reinitialization routine for the audio codec in the resume path to ensure MSI is correctly set up."}, {"cause": "The transition to single_cmd mode indicates a failure in handling the codec's power state transitions.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Ensure that the codec's power state is correctly restored during the resume process by adding checks and reinitialization in the power management callbacks."}, {"cause": "The suspend/resume sequence is not correctly restoring the hardware state, leading to communication issues with the codec.", "code_file": "sound/pci/hda/hda_controller.c", "fix_solution": "Implement a more robust state save and restore mechanism in the suspend and resume functions to ensure all hardware registers are correctly reprogrammed."}], "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_controller.c"], "input_tokens": 627, "output_tokens": 317}
{"id": "51141", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "include/linux/backlight.h", "include/acpi/video.h", "arch/x86/kernel/acpi/boot.c"], "input_tokens_sum": 201059, "output_tokens_sum": 2097, "description": "Created attachment 87851 [details]\ndmesg log (kernel 3.6.8)\n\nEvery time I boot-up my notebook's display stays black. Since most of the time I'm using an external display I found out that the backlight brightness in GNOME settings is set to zero \u2013 I can temporarily solve the issue by increasing the screen brightness but next time I boot this setting is lost, screen brightness is set back to zero again. Using the kernel boot parameter i915.invert_brightness=1 works fine as workaround.\n\nWhen I looked into /sys/class/backlight/acpi_video0/brightness to confirm that it's set to zero I realized that I have two entries in backlight:\n- 'acpi_video0' (with brightness set to 0, actual_brightness set to 0) and\n- 'intel_backlight' (with brightness set to 4882, actual_brightness set to 0).\n\nWhen I increase screen brightness to 100% in GNOME settings, the values change to:\n- 'acpi_video0' brightness & actual_brightness 10,\n- 'intel_backlight' brightness & actual_brightness 4882.\n\nNext time I boot, A", "title": "ACPI display backlight brightness is set to zero at every boot-up - HP Folio 13-2000", "Kernel Version": "3.6.8", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video driver is incorrectly setting the initial brightness value to zero during boot.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the initialization routine to set a default brightness value based on the last known good value or a predefined default instead of zero."}, {"cause": "The interaction between the ACPI video driver and the Intel backlight driver is causing a conflict, leading to incorrect brightness settings.", "code_file": "drivers/gpu/drm/i915/intel_panel.c", "fix_solution": "Ensure that the Intel backlight driver correctly initializes the brightness value by checking and synchronizing with the ACPI video driver settings during boot."}, {"cause": "The kernel parameter handling for i915.invert_brightness is not correctly applied, leading to incorrect brightness settings.", "code_file": "drivers/gpu/drm/i915/i915_params.c", "fix_solution": "Review and correct the logic for handling the i915.invert_brightness parameter to ensure it is applied consistently during boot."}, {"cause": "The ACPI subsystem is not correctly storing or retrieving the brightness settings across reboots.", "code_file": "drivers/acpi/acpi_video.c", "fix_solution": "Implement a mechanism to store the brightness settings persistently and retrieve them during boot to ensure consistent brightness levels."}], "reranked_files": ["drivers/acpi/video.c", "drivers/gpu/drm/i915/intel_panel.c", "drivers/gpu/drm/i915/i915_params.c", "drivers/acpi/acpi_video.c"], "input_tokens": 614, "output_tokens": 303}
{"id": "50491", "paths": ["drivers/edac/i7core_edac.c"], "predicts": ["drivers/edac/i7core_edac.c", "drivers/edac/edac_module.c", "drivers/edac/edac_mc.c", "drivers/edac/edac_core.h", "include/linux/edac.h", "arch/x86/include/asm/edac.h"], "input_tokens_sum": 247937, "output_tokens_sum": 7081, "description": "If I run the following on my system:\n\n# while rmmod i7core_edac ; do modprobe i7core_edac ; done\n\nI quickly get a flood of warning and error messages in the kernel logs. First I get 3 correct cycles:\n\nEDAC PCI: Removed device 0 for i7core_edac EDAC PCI controller: DEV 0000:ff:03.0\nEDAC MC: Removed device 0 for i7core_edac.c i7 core #0: DEV 0000:ff:03.0\nEDAC MC0: Giving out device to 'i7core_edac.c' 'i7 core #0': DEV 0000:ff:03.0\nEDAC PCI1: Giving out device to module 'i7core_edac' controller 'EDAC PCI controller': DEV '0000:ff:03.0' (POLLED)\nEDAC i7core: Driver loaded, 1 memory controller(s) found.\n\nbut then a first failure occurs:\n\nEDAC PCI: Removed device 3 for i7core_edac EDAC PCI controller: DEV 0000:ff:03.0\nEDAC MC: Removed device 0 for i7core_edac.c i7 core #0: DEV 0000:ff:03.0\nEDAC i7core: Device not found: dev 00.0 PCI ID 8086:2c41\n\nThis last message is repeated a hundred times or so, and finally a WARNING followed by a BUG.\n\n------------[ cut here ]------------\nWARNING: at inc", "title": "rmmod/modprobe i7core_edac leads to kernel oops", "Kernel Version": "3.0.39", "Product": "Drivers", "Component": "EDAC", "Hardware": "All Linux", "causes": [{"cause": "The i7core_edac module does not properly handle the removal and re-initialization of devices, leading to device reference errors.", "code_file": "drivers/edac/i7core_edac.c", "fix_solution": "Ensure proper cleanup and re-initialization of device structures during module removal and insertion."}, {"cause": "Race condition between rmmod and modprobe operations causing inconsistent device states.", "code_file": "drivers/edac/edac_core.c", "fix_solution": "Implement locking mechanisms to prevent race conditions during module load and unload operations."}, {"cause": "Improper handling of PCI device references leading to incorrect device removal and addition.", "code_file": "drivers/pci/pci-driver.c", "fix_solution": "Add checks to ensure PCI device references are valid before performing operations on them."}, {"cause": "Memory controller structures are not correctly freed or reallocated, causing stale references.", "code_file": "drivers/edac/edac_mc.c", "fix_solution": "Ensure memory controller structures are properly freed and reallocated during module operations."}], "reranked_files": ["drivers/edac/i7core_edac.c", "drivers/edac/edac_core.c", "drivers/pci/pci-driver.c", "drivers/edac/edac_mc.c"], "input_tokens": 693, "output_tokens": 258}
{"id": "45921", "paths": ["drivers/acpi/sleep.c"], "predicts": ["kernel/power/hibernate.c", "drivers/gpu/drm/i915/i915_suspend.c", "drivers/gpu/drm/i915/i915_drv.c", "kernel/power/suspend.c", "include/linux/pm.h", "arch/x86/power/hibernate_64.c", "kernel/freezer.c", "include/linux/freezer.h", "drivers/gpu/drm/i915/i915_irq.c", "arch/x86/power/hibernate_32.c"], "input_tokens_sum": 202063, "output_tokens_sum": 2203, "description": "The system in question can't suspend to ram, resume results in a reset and the system hanging in a broken bios (power off required).\n\nHibernate, however, works, but only, if CONFIG_SUSPEND=y and CONFIG_SUSPEND_FREEZER=y, otherwise resume from hibernate fails with two displays full of vertical bars and an otherwise fully locked up system.\n\nThe difference, as far as I can remember, is that if both options are set these vertical bars appear twice shortly on the main display during hibernation, when the options are not set they don't seem to appear.\n\nThe system is an Ivy Bridge system using the integrated HD4000 graphics, so i915 is in use.\n\nThe behavior is the same with 3.5.0 and 3.5.1. Kernel config attached.", "title": "resume from hibernate fails when \"Suspend to RAM and standby\" is disabled", "Kernel Version": "3.5", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "causes": [{"cause": "The system fails to properly re-initialize the graphics after resuming from hibernate when certain configurations are disabled.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Ensure the graphics pipeline is re-initialized by explicitly calling the initialization functions during resume, regardless of CONFIG_SUSPEND settings."}, {"cause": "The freezer functionality that helps quiesce the system devices might not be invoked properly without CONFIG_SUSPEND_FREEZER, causing inconsistent states on resume.", "code_file": "kernel/power/process.c", "fix_solution": "Create alternative freezing mechanism or ensure all device drivers enter a consistent state before and after hibernate without needing CONFIG_SUSPEND_FREEZER."}, {"cause": "The resume process does not correctly handle specific PM callbacks for the HD4000 graphics device when CONFIG_SUSPEND is not enabled.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Add an alternative resume path or ensure callbacks are executed correctly for all possible configurations, not relying solely on CONFIG_SUSPEND."}, {"cause": "Display mode settings restoration might be incomplete due to conditional code dependent on CONFIG_SUSPEND.", "code_file": "drivers/gpu/drm/i915/intel_pm.c", "fix_solution": "Improve the function handling display plane restoration to not depend on CONFIG_SUSPEND by checking the actual hardware states."}], "reranked_files": ["drivers/gpu/drm/i915/intel_display.c", "kernel/power/process.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_pm.c"], "input_tokens": 525, "output_tokens": 329}
{"id": "43286", "paths": ["fs/nfs/nfs4proc.c"], "predicts": ["fs/nfs/nfs4proc.c", "fs/nfs/nfs4state.c", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "fs/nfs/internal.h"], "input_tokens_sum": 205733, "output_tokens_sum": 3354, "description": "I noticed while testing against a NetApp filer that the Linux NFSv4 client currently translates NFS4ERR_SHARE_DENIED errors to EIO; it would be nice if this was translated to something more sensible like EACCES.\n\n(This was on an Ubuntu 11.10 client, but AFAICT NFS4ERR_SHARE_DENIED is not\nreferenced in the mainline kernel tree either.)\n\n# uname -a\nLinux kjamieson 3.0.0-19-generic #33-Ubuntu SMP Thu Apr 19 19:05:14 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n# strace cat /mnt/file1\nopen(\"/mnt/file1\", O_RDONLY)     = -1 EIO (Input/output error)\n\nNetwork File System\n    [Program Version: 4]\n    [V4 Procedure: COMPOUND (1)]\n    Status: NFS4ERR_SHARE_DENIED (10015)\n    Tag: <EMPTY>\n        length: 0\n        contents: <EMPTY>\n    Operations (count: 3)\n        Opcode: PUTFH (22)\n            Status: NFS4_OK (0)\n        Opcode: SAVEFH (32)\n            Status: NFS4_OK (0)\n        Opcode: OPEN (18)\n            Status: NFS4ERR_SHARE_DENIED (10015)\n\n\nAs a point of comparison, Solaris appears to map NFS4", "title": "NFS4ERR_SHARE_DENIED errors are translated to EIO", "Kernel Version": "3.0", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "causes": [{"cause": "The NFSv4 client code incorrectly maps the NFS4ERR_SHARE_DENIED error to EIO instead of a more appropriate error code like EACCES.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Modify the error mapping logic in the NFSv4 client to map NFS4ERR_SHARE_DENIED to EACCES instead of EIO."}, {"cause": "The error handling function for NFSv4 operations does not have a specific case for NFS4ERR_SHARE_DENIED, leading to a default mapping to EIO.", "code_file": "fs/nfs/nfs4xdr.c", "fix_solution": "Add a specific case in the error handling function to map NFS4ERR_SHARE_DENIED to EACCES."}, {"cause": "The NFSv4 error code translation table lacks an entry for NFS4ERR_SHARE_DENIED, causing it to fall back to a generic error code.", "code_file": "include/linux/nfs4.h", "fix_solution": "Update the NFSv4 error code translation table to include a mapping for NFS4ERR_SHARE_DENIED to EACCES."}], "reranked_files": ["fs/nfs/nfs4proc.c", "fs/nfs/nfs4xdr.c", "include/linux/nfs4.h"], "input_tokens": 661, "output_tokens": 275}
{"id": "43163", "paths": ["drivers/gpu/drm/i915/intel_dp.c"], "predicts": ["drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_gem.c", "drivers/gpu/drm/i915/i915_drv.h", "include/drm/drmP.h", "include/drm/drm.h", "include/video/edid.h", "arch/x86/video/fbdev.c", "include/linux/fb.h"], "input_tokens_sum": 198996, "output_tokens_sum": 2761, "description": "On every boot under 3.3.3 the system starts to a black screen. I can login and startx at which point the screen works. \n\nWhen switching display via Xrandr the other monitor works without issue, however going back to the laptop display makes the black screen come back. Switching back and forth between display several times reactivates the laptop display.\n\nThe system was booting fine in 3.3.1 however xrandr had occasional issues. \n3.1.10 was perfect.", "title": "[ILK eDP] Black Screen on Boot for Dell Latitude E6410 Intel HD Graphics (panel power sequencing fail?)", "Kernel Version": "3.3.3", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "Panel power sequencing issues are causing the eDP display to not initialize correctly on boot, possibly due to mismatches in timing or state management.", "code_file": "drivers/gpu/drm/i915/intel_panel.c", "fix_solution": "Adjust the panel power sequencing logic to ensure the panel gets powered on correctly during boot. This could involve tweaking the timing parameters or adding additional state checks to ensure the sequence completes."}, {"cause": "A regression in the i915 driver introduced between kernel versions 3.3.1 and 3.3.3 that affects display initialization on Intel HD Graphics systems.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Review recent changes between the kernel versions for the i915 module and revert or adjust any offending commits related to display initialization or state restoration."}, {"cause": "A potential mismatch in backlight control initialization, causing the screen to remain off after power-up.", "code_file": "drivers/gpu/drm/i915/intel_backlight.c", "fix_solution": "Ensure backlight initialization is properly tied to the power sequencing, and set correct default states based on the power-on sequence."}, {"cause": "A bug in the hotplug detection logic or related code could cause the initial display connection status to be incorrectly reported.", "code_file": "drivers/gpu/drm/i915/intel_hotplug.c", "fix_solution": "Enhance or correct the hotplug event handling to ensure display status changes are correctly handled and propagated, particularly during boot."}], "reranked_files": ["drivers/gpu/drm/i915/intel_panel.c", "drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/intel_backlight.c", "drivers/gpu/drm/i915/intel_hotplug.c"], "input_tokens": 474, "output_tokens": 355}
{"id": "43088", "paths": ["drivers/gpu/drm/i915/intel_display.c"], "predicts": ["drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_suspend.c", "drivers/gpu/drm/i915/intel_display.c", "include/drm/drm_mode.h", "include/drm/i915_drm.h", "kernel/power/hibernate.c", "kernel/power/suspend.c", "arch/x86/video/fbdev.c", "kernel/power/power.h"], "input_tokens_sum": 197159, "output_tokens_sum": 2370, "description": "Created attachment 72873 [details]\nlspci -vvnn\n\nHello,\n\nI have the Ubuntu 12.04 beta2 x86_64 with a mainline kernel 3.2.14 installed on a FUJITSU SIEMENS ESPRIMO Mobile M9400 notebook with an Intel Corporation Mobile GM965/GL960 Integrated Graphics Controller (lspci -vvnn attached), and I'm experiencing GPU hangups several times a day (dmesg output attached).\n\nEverything is well as long as I don't leave the computer for long enough for a DPMS powersaving to kick in (set to 5 minutes in Unity). If I'm away long enough, there is a good chance I'll find the GPU hanged up upon return. Unfortunately, I'm not able to reproduce this issue at will and have to wait for it to happen.\n\nIf there is anything I can do to help to resolve this, I'll gladly do so.\n\nMartin Senft", "title": "[965GM] hang at DPMS time", "Kernel Version": "3.2.14", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The GPU hang may be caused by improper handling of power management states during DPMS (Display Power Management Signaling) transitions.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Ensure proper handling of power state transitions by adding checks and synchronization mechanisms during DPMS events to prevent GPU hang."}, {"cause": "There might be a race condition in the graphics driver when the system enters a low power state, leading to GPU hang.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Introduce locking mechanisms around critical sections that handle power state changes to prevent race conditions."}, {"cause": "The GPU hang could be due to incorrect or incomplete initialization of the graphics hardware during DPMS transitions.", "code_file": "drivers/gpu/drm/i915/intel_pm.c", "fix_solution": "Review and update the initialization routines to ensure all necessary hardware components are correctly configured during power state changes."}, {"cause": "The issue might be related to improper handling of interrupts during DPMS transitions, causing the GPU to hang.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Modify the interrupt handling logic to ensure that interrupts are correctly managed during DPMS transitions, preventing hangs."}], "reranked_files": ["drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/intel_pm.c", "drivers/gpu/drm/i915/i915_drv.c"], "input_tokens": 548, "output_tokens": 307}
{"id": "42981", "paths": ["drivers/acpi/acpi_pad.c"], "predicts": ["drivers/acpi/processor_idle.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/processor.h", "arch/x86/include/asm/idle.h", "drivers/acpi/processor_thermal.c", "drivers/acpi/bus.c", "drivers/acpi/glue.c", "include/acpi/acpi.h", "include/acpi/acpi_drivers.h"], "input_tokens_sum": 162364, "output_tokens_sum": 2822, "description": "Processors' Idling, as defined in \"Processor Aggregator Device\" chapter of ACPI 4.0a spec, isn't stable, it doesn't handle big changes of the active cores well. Slow changes (e.g. 2 cores idled or activated every second) are OK, but drastic changes of the number of active cores cause whole FW-OS communication to stop (communication using ACPI defined interface). It happens especially when bigger number of cores (8 or more) is reactivated.\n\nVersion-Release number of selected component (if applicable):\nI've tested it using kernel 2.6.32 and newer, e.g. 3.1.4 with the same results.\n\nReproducible: Always\n\nSteps to Reproduce:\n1. Request OS to idle 8 or more cores as described in \"Processor Aggregator\nDevice\" chapter of ACPI 4.0a spec.\n2. Request OS to make all cores active.\n3. Repeat steps with bigger number of cores to idle if necessary.\nActual Results:  \nCores are active again but communication with the firmware using ASL code is\nstopped, no _OST response from OS. power_saving processes a", "title": "Processor Aggregator Device is not stable causing FW-OS communication to stop", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Processor", "Hardware": "x86-64 Linux", "causes": [{"cause": "The ACPI Processor Aggregator Driver is not handling abrupt changes in core activity efficiently, resulting in a breakdown in communication with the firmware.", "code_file": "drivers/acpi/processor_aggregator.c", "fix_solution": "Implement a state management system to ensure stable transitions when activating or idling multiple cores simultaneously, adding checks to validate the process before executing core adjustments."}, {"cause": "The power management API used in the ACPI code isn't properly synchronized when a large number of cores become active at once, causing a halt in communication.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Introduce locking mechanisms around core idling processes to ensure atomic operations and prevent concurrent access issues that could lead to communication freezing."}, {"cause": "The handling of _OST ACPI objects isn't robust enough to deal with high-load scenarios of idling/reactivating cores, causing the lack of responses to firmware.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Enhance _OST response handling to ensure fail-safe behavior under strenuous conditions and guarantee processing of firmware commands."}], "reranked_files": ["drivers/acpi/processor_aggregator.c", "drivers/acpi/bus.c", "drivers/acpi/osl.c"], "input_tokens": 609, "output_tokens": 258}
{"id": "41672", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "include/acpi/video.h", "drivers/acpi/button.c", "drivers/gpu/drm/i915/intel_acpi.c", "include/linux/backlight.h"], "input_tokens_sum": 194399, "output_tokens_sum": 1660, "description": "No backlight options will be available on a Lenovo V570.  I've tried it with several different kernel versions including 3.1-rc3.  In all cases dmesg has the error  ACPI Error: Current brightness invalid. \n\nIt appears the kernel believes the machine is multi-headed.  It does the right thing for the first head it sees and then gets the invalid brightness on the second head which causes it to assume acpi brightness won't work.  The laptop has the standard external D-sub connector for an external monitor, but there is nothing connected to it.  In fact, if I make the ugly hack of commenting out the multihead check in acpi_video_bus_check() then backlight control works fine.\n\nI'll attach the acpidump, dmesg, and ugly hack.", "title": "backlight control will not work on Lenovo V570", "Kernel Version": "3.1-rc3", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "The ACPI video driver incorrectly assumes the presence of multiple video outputs, leading to invalid brightness settings.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the acpi_video_bus_check() function to correctly handle systems with a single video output by adding a check for the actual number of connected displays before assuming multi-head configuration."}, {"cause": "The ACPI video driver does not correctly handle the case where no external monitor is connected, leading to invalid brightness errors.", "code_file": "drivers/acpi/video_detect.c", "fix_solution": "Update the logic in the video_detect() function to ensure it accurately detects the presence of connected displays and does not default to multi-head assumptions when only the internal display is active."}, {"cause": "The ACPI video driver fails to correctly initialize brightness levels for systems with only an internal display.", "code_file": "drivers/acpi/video_brightness.c", "fix_solution": "Ensure that the brightness initialization routine correctly sets the brightness level for single-display systems by adding a condition to handle cases where only the internal display is present."}], "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/video_detect.c", "drivers/acpi/video_brightness.c"], "input_tokens": 523, "output_tokens": 254}
{"id": "41342", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/core/control.c", "sound/core/pcm.c"], "input_tokens_sum": 197549, "output_tokens_sum": 1907, "description": "The audio volume is much, much louder in 3.1-rc2 and -rc1 compared to kernel 3.0 and earlier for my card:\n\n00:1b.0 Audio device: Intel Corporation 6 Series Chipset Family High Definition Audio Controller (rev 05)\n\tSubsystem: Dell Device 050e\n\tFlags: bus master, fast devsel, latency 0, IRQ 53\n\tMemory at f1c00000 (64-bit, non-prefetchable) [size=16K]\n\tCapabilities: <access denied>\n\tKernel driver in use: snd_hda_intel\n\tKernel modules: snd-hda-intel\n\n\nSound blasts out deafeningly unless I use alsamixer to adjust Master to zero (alsamixer says this is -64dB) and PCM to near to zero (eg a value like 27, ie -29dB).\n\nNote that with kernel 3.0, adjusting PCM in alsamixer does not affect the sound gain, but in 3.1 it (luckily!) does. It's quite difficult to adjust the sound to a non-painful level using gnome-volume control because the gain is biased so high.", "title": "Audio gain is massively higher in kernel 3.1", "Kernel Version": "3.0-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "causes": [{"cause": "The audio gain control logic in the snd_hda_intel driver may have been altered, leading to incorrect default gain settings.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Adjust the default gain settings in the initialization function to match the previous kernel version's behavior."}, {"cause": "Changes in the ALSA mixer control handling might have affected the gain levels applied to the audio output.", "code_file": "sound/pci/hda/hda_mixer.c", "fix_solution": "Review and correct the mixer control initialization to ensure it aligns with the expected gain levels from previous kernel versions."}, {"cause": "A regression in the handling of PCM volume controls could have caused the gain to be applied incorrectly.", "code_file": "sound/core/pcm_native.c", "fix_solution": "Investigate and fix any changes in PCM volume control logic that might have led to incorrect gain application."}, {"cause": "The default initialization of the audio codec might have been changed, leading to higher default gain settings.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Revert or adjust the codec initialization sequence to ensure default gain settings are consistent with previous versions."}], "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_mixer.c", "sound/core/pcm_native.c", "sound/pci/hda/hda_intel.c"], "input_tokens": 606, "output_tokens": 291}
{"id": "40042", "paths": ["drivers/net/wireless/iwlwifi/iwl-agn-rs.c"], "predicts": ["drivers/net/wireless/iwlwifi/iwl-5000.c", "net/mac80211/agg-tx.c", "net/mac80211/main.c", "include/net/mac80211.h", "include/linux/ieee80211.h"], "input_tokens_sum": 238332, "output_tokens_sum": 11247, "description": "Hi.\n\nI'm trying to get 802.11n working with followed card:\n\n   02:00.0 Network controller: Intel Corporation WiFi Link 5100\n\nIt's inside ASUS F6A laptop. I'm connecting it to another machine with:\n   \n   01:00.0 Network controller: Atheros Communications Inc. AR5008 Wireless Network Adapter (rev 01)\n\nAtheros card is in AP mode (with hostapd). And just after connecting I'm getting followed messages:\n\n[132378.252140] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132404.533559] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 3\n[132427.820093] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132445.826017] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 1\n[132448.868061] iwlagn 0000:02:00.0: iwlagn_tx_agg_start on ra = 00:21:91:f3:c8:a1 tid = 0\n[132472.781121] iwlagn 0000:02:00.0: Aggregation not enabled for tid 0 because load = 0\n[132479.995679] iwlagn 0000:02:00.0: Aggregation not enabled", "title": "iwlagn: bad 802.11n performance and \"aggregation not enabled\" flood in dmesg", "Kernel Version": "3.0", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "causes": [{"cause": "The driver incorrectly checks the load threshold for enabling packet aggregation, which prevents 802.11n performance improvements.", "code_file": "drivers/net/wireless/iwlwifi/iwl-agn.c", "fix_solution": "Modify the condition that checks the load for enabling aggregation to use a more accurate metric that reflects network conditions better, potentially adjusting the threshold for enabling aggregation."}, {"cause": "Race condition in the driver's TX aggregation setup process causes it to fail the activation of 802.11n aggregation.", "code_file": "drivers/net/wireless/iwlwifi/iwl-trans.c", "fix_solution": "Ensure proper locking mechanisms are in place when modifying aggregation state variables to prevent race conditions during TX aggregation setup."}, {"cause": "Misconfiguration in the rate control mechanism that incorrectly assesses the condition to start aggregation for higher throughput.", "code_file": "drivers/net/wireless/iwlwifi/mvm/rate-control.c", "fix_solution": "Adjust the rate control logic to accurately assess when to initiate aggregation, ensuring the conditions for starting aggregation align with 802.11n specification requirements."}], "reranked_files": ["drivers/net/wireless/iwlwifi/iwl-agn.c", "drivers/net/wireless/iwlwifi/iwl-trans.c", "drivers/net/wireless/iwlwifi/mvm/rate-control.c"], "input_tokens": 735, "output_tokens": 261}
{"id": "36082", "paths": ["drivers/platform/x86/samsung-laptop.c"], "predicts": ["drivers/platform/x86/samsung-laptop.c", "arch/x86/include/asm/dmi.h", "include/linux/dmi.h"], "input_tokens_sum": 190760, "output_tokens_sum": 1404, "description": "The samsung-laptop driver fails to load on my laptop (N150), due to a DMI mismatch: the driver expexts N230 to be in the identifier (and product/board name), whereas my laptop only includes N150/N210/N220.\n\nFull DMI output is attached.", "title": "samsung-laptop: N150 DMI mismatch", "Kernel Version": "2.6.39", "Product": "Drivers", "Component": "Platform_x86", "Hardware": "All Linux", "causes": [{"cause": "The samsung-laptop driver has a hardcoded DMI check that only recognizes specific model identifiers, excluding the N150 model.", "code_file": "drivers/platform/x86/samsung-laptop.c", "fix_solution": "Modify the DMI table in the samsung-laptop.c file to include the N150 model identifier alongside the existing N230 identifier."}, {"cause": "The DMI matching logic in the samsung-laptop driver is too restrictive, only allowing exact matches for certain model names.", "code_file": "drivers/platform/x86/samsung-laptop.c", "fix_solution": "Update the DMI matching logic to use a more flexible pattern matching that can accommodate multiple model names, such as using a wildcard or regex pattern."}, {"cause": "The DMI table in the samsung-laptop driver does not account for regional variations or alternative model names that are functionally identical.", "code_file": "drivers/platform/x86/samsung-laptop.c", "fix_solution": "Expand the DMI table to include alternative model names or regional variations that are known to be compatible with the driver."}], "reranked_files": ["drivers/platform/x86/samsung-laptop.c"], "input_tokens": 417, "output_tokens": 253}
{"id": "35472", "paths": ["drivers/gpu/drm/radeon/rv770.c"], "predicts": ["drivers/gpu/drm/radeon/rv770.c", "drivers/gpu/drm/radeon/r600_cp.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_cs.c", "include/drm/radeon_drm.h"], "input_tokens_sum": 192278, "output_tokens_sum": 2361, "description": "with 2.6.37 it's all OK but since 2.6.38 from very framebuffer initialization screen is filled with dense grey lines looking like ugly grid. also per every 3cm on my 1920x1080/23' screen there is a distinctive whitish vertical line.\nwhen X try to startup i can see cursor and can move it around for a while (that grey grid is there too) but kdm does not starting up and GPU locks up.\n\nit is the same with 2.6.39. here is `dmesg|grep drm` for 2.6.39:\n[    0.462282] [drm] Initialized drm 1.1.0 20060810\n[    0.462315] [drm] radeon defaulting to kernel modesetting.\n[    0.462337] [drm] radeon kernel modesetting enabled.\n[    0.462575] [drm] initializing kernel modesetting (RV770 0x1002:0x944E).\n[    0.462608] [drm] register mmio base: 0xFDFE0000\n[    0.462630] [drm] register mmio size: 65536\n[    0.463313] [drm] Detected VRAM RAM=512M, BAR=256M\n[    0.463343] [drm] RAM width 128bits DDR\n[    0.463526] [drm] radeon: 512M of VRAM memory ready\n[    0.463549] [drm] radeon: 512M of GTT memory ready", "title": "[bisected] [r600] radeondrmfb rendering is broken and running X makes GPU lock-up on RV770 CE (Radeon HD 4730)", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The issue may be due to incorrect initialization of the framebuffer or display settings for the RV770 chipset, leading to rendering issues and GPU lock-up.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Ensure that the framebuffer initialization parameters are correctly set for the RV770 chipset, possibly by adjusting the timing or memory settings specific to this hardware."}, {"cause": "There might be a problem with the memory management for VRAM and GTT, causing incorrect memory access or allocation.", "code_file": "drivers/gpu/drm/radeon/radeon_gart.c", "fix_solution": "Review and correct the VRAM and GTT memory allocation and mapping logic to ensure proper handling of memory boundaries and access patterns."}, {"cause": "The GPU lock-up could be caused by improper handling of GPU commands or state changes during the transition to kernel modesetting.", "code_file": "drivers/gpu/drm/radeon/radeon_kms.c", "fix_solution": "Investigate and fix any issues in the command submission or state management code to ensure that the GPU is correctly initialized and managed during modesetting."}, {"cause": "The rendering issues might be due to incorrect handling of display modes or resolutions, particularly for high-resolution displays.", "code_file": "drivers/gpu/drm/radeon/radeon_mode.c", "fix_solution": "Adjust the mode setting logic to correctly handle high-resolution displays, ensuring that the display parameters are correctly configured for the RV770 chipset."}], "reranked_files": ["drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_gart.c", "drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_mode.c"], "input_tokens": 741, "output_tokens": 345}
{"id": "34252", "paths": ["drivers/gpu/vga/vga_switcheroo.c"], "predicts": ["drivers/vga/vga_switcheroo.c", "include/linux/vga_switcheroo.h", "drivers/gpu/drm/radeon/radeon_atpx_handler.c"], "input_tokens_sum": 209773, "output_tokens_sum": 6472, "description": "Created attachment 56262 [details]\nKernel config\n\nTrying to setup script, that switches video cards, I ran into the situation when I left with a black screen not possible to do anything with the system.\nHere is an example:\n\n# cat /sys/kernel/debug/vgaswitcheroo/switch\n0:IGD:+:Pwr:0000:01:05.0\n1:DIS: :Pwr:0000:02:00.0\n# echo IGD > /sys/kernel/debug/vgaswitcheroo/switch\n# cat /sys/kernel/debug/vgaswitcheroo/switch\n0:IGD:+:Off:0000:01:05.0\n1:DIS: :Pwr:0000:02:00.0\n\nI think that this behaviour is buggy and this should not happen.\n\nEnvironment:\n# lspci | grep -i vga\n01:05.0 VGA compatible controller: ATI Technologies Inc RS780M/RS780MN [Radeon HD 3200 Graphics]\n02:00.0 VGA compatible controller: ATI Technologies Inc M93 [Mobility Radeon HD 4500 Series]\n# uname -a\nLinux garik-laptop 2.6.39-rc5+ #8 SMP Sat Apr 30 18:36:12 MSD 2011 x86_64 AMD Athlon(tm) Neo Processor MV-40 AuthenticAMD GNU/Linux", "title": "Unexpected behaviour when switching video cards with vga_switcheroo", "Kernel Version": "2.6.39-rc5", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The vga_switcheroo mechanism may not correctly handle the power state transition when switching from integrated graphics (IGD) to discrete graphics (DIS), leading to a black screen.", "code_file": "drivers/gpu/vga/vga_switcheroo.c", "fix_solution": "Ensure that the power state transition logic correctly updates the power state of both graphics cards and handles any necessary reinitialization of the display output."}, {"cause": "The switch command may not properly synchronize the state of the graphics cards, causing the integrated graphics to be turned off without properly activating the discrete graphics.", "code_file": "drivers/gpu/drm/radeon/radeon_drv.c", "fix_solution": "Add synchronization mechanisms to ensure that the state of the graphics cards is correctly updated and that the display output is properly initialized after switching."}, {"cause": "The kernel may not correctly handle the PCI device power management during the switch, leading to improper power states.", "code_file": "drivers/pci/pci.c", "fix_solution": "Review and update the PCI power management code to ensure that the power states of the graphics cards are correctly managed during the switch operation."}, {"cause": "The debugfs interface used for vga_switcheroo may not correctly reflect the actual state of the graphics cards, leading to misleading information.", "code_file": "fs/debugfs/file.c", "fix_solution": "Ensure that the debugfs interface accurately reflects the current state of the graphics cards and updates correctly after a switch operation."}], "reranked_files": ["drivers/gpu/vga/vga_switcheroo.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/pci/pci.c", "fs/debugfs/file.c"], "input_tokens": 651, "output_tokens": 342}
{"id": "33812", "paths": ["drivers/gpu/drm/radeon/radeon_atombios.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/drm_modes.c", "drivers/gpu/vga/vga_switcheroo.c", "include/drm/radeon_drm.h", "include/drm/i915_drm.h", "include/linux/vga_switcheroo.h", "include/video/radeon.h", "arch/x86/video/fbdev.c"], "input_tokens_sum": 185034, "output_tokens_sum": 1712, "description": "Created attachment 54942 [details]\nkernel log\n\nSystem: Lenovo ThinkPad T500\n00:02.0 VGA compatible controller: Intel Corporation Mobile 4 Series Chipset Integrated Graphics Controller (rev 07)\n01:00.0 VGA compatible controller: ATI Technologies Inc Mobility Radeon HD 3650\nusing vgaswitcheroo\n\nTrying to load radeon (as a module or in kernel) with modeset not explicitly disabled causes a kernel NULL pointer dereference if i915 has initialised the fb console already. \nThat behaviour did not occur in 2.6.38, only after upgrading to 2.6.38.3 (haven't had the time to bisect yet).\n\nIf I disable switching in the BIOS and move to the radeon card as exclusive adapter, everything works fine. with dual graphics stack", "title": "radeon with modeset option causes oops as secondary adapter (vgaswitcheroo)", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The radeon driver may not be properly checking if the framebuffer console is already initialized by another driver, leading to a NULL pointer dereference.", "code_file": "drivers/gpu/drm/radeon/radeon_drv.c", "fix_solution": "Add a check to ensure that the framebuffer console is not already initialized by another driver before proceeding with initialization."}, {"cause": "vgaswitcheroo might not be handling the switch between the Intel and Radeon graphics properly, leading to conflicts in framebuffer initialization.", "code_file": "drivers/gpu/vga/vga_switcheroo.c", "fix_solution": "Implement additional checks or synchronization mechanisms to ensure that the switch between graphics adapters is handled safely without causing conflicts."}, {"cause": "The modesetting code in the radeon driver might not be correctly handling the case where it is not the primary adapter, leading to a NULL pointer dereference.", "code_file": "drivers/gpu/drm/radeon/radeon_kms.c", "fix_solution": "Modify the modesetting code to correctly handle cases where the radeon card is not the primary adapter, ensuring proper initialization and cleanup."}], "reranked_files": ["drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/vga/vga_switcheroo.c", "drivers/gpu/drm/radeon/radeon_kms.c"], "input_tokens": 532, "output_tokens": 259}
{"id": "33232", "paths": ["drivers/net/wireless/zd1211rw/zd_mac.c"], "predicts": ["net/wireless/scan.c", "include/net/cfg80211.h"], "input_tokens_sum": 194648, "output_tokens_sum": 1324, "description": "Hello\nReported just to keep track, system seems to work.\n\n- latest updates installed\n- window with stop sign displayed on desktop every time after full loading re kernel developed a serious problem ....\n- os still functional in spite of above mssge (can perform updates, use mail, browse)\n\nProblemType: KernelOops\nDistroRelease: Ubuntu 11.04\nPackage: linux-image-2.6.38-8-generic 2.6.38-8.42\n\n[   52.942507] WARNING: at /build/buildd/linux-2.6.38/net/wireless/scan.c:591 cfg80211_inform_bss_frame+0x1da/0x1f0 [cfg80211]()\n[   52.942509] Hardware name: GA-MA78GM-S2HP\n[   52.942510] Modules linked in: binfmt_misc nls_iso8859_1 nls_cp437 vfat fat snd_hda_codec_hdmi arc4 snd_hda_codec_realtek snd_usb_audio snd_hda_intel snd_hda_codec zd1211rw ppdev mac80211 snd_pcm snd_hwdep snd_usbmidi_lib snd_seq_midi snd_rawmidi snd_seq_midi_event radeon snd_seq snd_timer psmouse snd_seq_device cfg80211 serio_raw uvcvideo videodev v4l2_compat_ioctl32 ttm snd k10temp edac_core drm_kms_helper edac_mce_amd parpo", "title": "WARNING: at /build/buildd/linux-2.6.38/net/wireless/scan.c:591 cfg80211_inform_bss_frame 0x1da/0x1f0 [cfg80211]()", "Kernel Version": "2.6.38", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "causes": [{"cause": "The warning is likely due to handling incorrect or duplicate BSS frame information in cfg80211, leading to an unexpected state in the scan function.", "code_file": "net/wireless/scan.c", "fix_solution": "Add a check to ensure that BSS information is not added if it is already present or if it is incomplete or malformed."}, {"cause": "A possible race condition leading to inconsistent BSS frame data being processed by the cfg80211 layer.", "code_file": "net/wireless/scan.c", "fix_solution": "Implement proper locking mechanisms around the BSS data processing to avoid race conditions."}, {"cause": "Incorrect or unexpected usage of cfg80211_inform_bss_frame function due to incorrect parameters being passed, leading to assertions.", "code_file": "net/wireless/core.c", "fix_solution": "Review and sanitize the input parameters to cfg80211_inform_bss_frame to ensure they fall within expected ranges."}, {"cause": "Kernel configuration or module parameter issue causing unexpected behavior when processing certain wireless BSS frames.", "code_file": "net/wireless/util.c", "fix_solution": "Review configuration parameters and add additional validation checks to adjust handling based on configuration."}], "reranked_files": ["net/wireless/scan.c", "net/wireless/core.c", "net/wireless/util.c"], "input_tokens": 706, "output_tokens": 290}
{"id": "32592", "paths": ["drivers/acpi/video_detect.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/power.c", "include/acpi/video.h", "include/acpi/acpi_drivers.h", "arch/x86/pci/acpi.c", "kernel/power/main.c", "kernel/power/suspend.c", "kernel/power/power.h"], "input_tokens_sum": 200165, "output_tokens_sum": 2530, "description": "Created attachment 53362 [details]\nAsus UL30VT Bios 211 DSDT\n\nAsus UL30VT backlight control only works with acpi_osi=\"Linux\" acpi_osi=\"!Windows 2009\".  Without these options, I get a desktop notification for the brightness when using the Fn brightness up/down keys, but no change in display brightness.  Likewise the sysfs brightness control thinks it's doing it's job when I read and write the file, but there's no change in the display state.  Either method causes the display brightness to change when the system is rebooted, as if Linux setup the change, but didn't actually flush it out to hardware.", "title": "Asus UL30VT backlight control only works with acpi_osi=\"Linux\" acpi_osi=\"!Windows 2009\"", "Kernel Version": "3.2", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "causes": [{"cause": "ACPI implementation for brightness control incorrectly interacts with hardware due to insufficient handling of specific ACPI_OSI strings.", "code_file": "drivers/acpi/osi.c", "fix_solution": "Modify the ACPI `_OSI` handling in the driver to properly recognize and set the correct features for backlight control, including adding specific conditions for hardware compatibility."}, {"cause": "The ACPI routine for adjusting brightness via sysfs is not flushing changes effectively to the hardware.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure sysfs-based brightness adjustments are correctly implemented and flushed to the hardware by validating and forcing hardware interaction after sysfs write operations."}, {"cause": "Mismatched ACPI method call being used when attempting to change brightness on the hardware, resulting in failed attempts.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Verify and correct the ACPI method calls related to brightness changes, ensuring they are compatible with the expected values for this model series."}], "reranked_files": ["drivers/acpi/osi.c", "drivers/acpi/video.c", "drivers/acpi/bus.c"], "input_tokens": 512, "output_tokens": 234}
{"id": "32402", "paths": ["drivers/gpu/drm/radeon/radeon_display.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_irq_kms.c", "drivers/gpu/drm/radeon/radeon_gem.c", "drivers/gpu/drm/radeon/radeon_drv.c", "kernel/workqueue.c", "mm/memory.c", "arch/x86/mm/fault.c", "lib/dma-debug.c", "init/main.c", "include/linux/workqueue.h"], "input_tokens_sum": 197183, "output_tokens_sum": 2125, "description": "If this system (LFS build) is left idle for several hours with xscreensaver running(don't currently know which screen saver app. I am assuming one of the Mesa 3D ones) the system will oops. The system is locked solid and there is no trace in messages.old on reboot. The attached jpg is a photo of the screen at system failure. I first noticed the problem in 2.6.38-rc8 but have waited until now to report the problem in the hope of obtaining a more repeatable scenario.\n\nVersion info:\n\nXorg server 1.10.0\nXorg ati driver 6.14.1\nlibdrm-2.4.24\nMesa-7.10.1\n\nProcessor  AMD Phenom(tm) II X4 940 Processor\n\nLinux Andromeda 2.6.38.2 #1 SMP Mon Mar 28 22:17:13 BST 2011 i686 athlon-4 i386 GNU/Linux\n \nGnu C                  4.6.0\nGnu make               3.81\nbinutils               2.21\nutil-linux             2.14.1\nmount                  support\nmodule-init-tools      3.5\ne2fsprogs              1.41.4\nLinux C Library        2.13\nDynamic linker (ldd)   2.13\nLinux C++ Library      6.0.15\nProcps           ", "title": "Oops associated with radeon_unpin_work_func", "Kernel Version": "2.6.39", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "causes": [{"cause": "The radeon_unpin_work_func might be accessing a freed buffer or an invalid GPU memory region when a screen saver with 3D graphics is running, causing a kernel oops.", "code_file": "drivers/gpu/drm/radeon/radeon_object.c", "fix_solution": "Ensure proper reference counting and memory region validation in the radeon_unpin_work_func to prevent access to released or invalid regions."}, {"cause": "The idle timeout or work queue handling in the radeon driver may not correctly synchronize with ongoing rendering tasks, potentially causing a GPU command submission error.", "code_file": "drivers/gpu/drm/radeon/radeon_gart.c", "fix_solution": "Add additional synchronization mechanisms before unpinning operations to ensure no pending GPU tasks use the regions being unpinned."}, {"cause": "Race conditions due to improperly handled interrupt workloads related to display engine when idle for long periods.", "code_file": "drivers/gpu/drm/radeon/radeon_irq_kms.c", "fix_solution": "Modify interrupt handler routines to ensure consistent access and locking of shared data structures affected by display updates or unpin operations."}], "reranked_files": ["drivers/gpu/drm/radeon/radeon_object.c", "drivers/gpu/drm/radeon/radeon_gart.c", "drivers/gpu/drm/radeon/radeon_irq_kms.c"], "input_tokens": 662, "output_tokens": 264}
{"id": "32052", "paths": ["drivers/platform/x86/wmi.c"], "predicts": ["drivers/platform/x86/acer-wmi.c", "drivers/platform/x86/wmi.c", "include/linux/module.h", "kernel/module.c", "net/rfkill/core.c", "include/linux/rfkill.h"], "input_tokens_sum": 226162, "output_tokens_sum": 4785, "description": "Created attachment 52302 [details]\nlspci -vvv\n\nHello.\n\nI have Acer Aspire TimelineX 1830T so I'm using acer_wmi module. Since 2.6.37 there is a regression which is causing a NULL pointer dereference and kernel oops.\n\nSteps to reproduce:\n1. Boot any kernel newer than 2.6.37 (tested on 2.6.37.1, .3, .4, .5 and 2.6.38.1) with acer_wmi built as module\n2. Run \"modprobe -r acer_wmi\"\n3. Kernel oops!\n\nOn 2.6.36, .1, .2, .4 works flawlessly.\nRunning ArchLinux x86_64.\n\nlspci -vvv and appropriate part of everything.log attached. \nCan provide any other info if needed.", "title": "Unloading wmi module causes a kernel oops.", "Kernel Version": "2.6.37", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "x86-64 Linux", "causes": [{"cause": "The acer_wmi module is not properly cleaning up resources during module unload, leading to a NULL pointer dereference.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Ensure that all allocated resources are properly freed and any pointers are set to NULL during the module's exit function."}, {"cause": "A reference to a data structure used by the acer_wmi module is not being properly released, causing a NULL pointer dereference when the module is unloaded.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Add checks and ensure that all references are properly released and set to NULL in the module's exit function."}, {"cause": "The module's exit function is not correctly unregistering callbacks or handlers, leading to a NULL pointer dereference.", "code_file": "drivers/platform/x86/acer-wmi.c", "fix_solution": "Review and update the module's exit function to ensure all callbacks and handlers are unregistered properly."}], "reranked_files": ["drivers/platform/x86/acer-wmi.c"], "input_tokens": 546, "output_tokens": 238}
{"id": "32032", "paths": ["drivers/staging/brcm80211/sys/wlc_ampdu.c"], "predicts": ["drivers/staging/brcm80211/sys/wlc_rate.c", "drivers/staging/brcm80211/sys/wl_mac80211.c", "net/mac80211/rc80211_minstrel_ht.c", "net/mac80211/status.c", "include/net/mac80211.h", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/cpu.c", "lib/div64.c"], "input_tokens_sum": 193089, "output_tokens_sum": 2451, "description": "Created attachment 52232 [details]\nsyslog capturing crashes\n\nDebian Squeeze with updated kernels containing brcm80211 driver.\nReproduced with the following kernel packages:\n linux-image-2.6.37-trunk-686   2.6.37-1~experimental.1\n linux-image-2.6.37.2-686       2.6.37-2\n linux-image-2.6.38-1-686       2.6.38-1\nwith two different firmware versions for brcm80211, currently:\n firmware-brcm80211             0.29\n\nThe system worked reliably with the first kernel until an automated package update occurred. Wireless is now unusable. I have been unable to trace what may have changed to trigger the problem.\n\nAfter associating, the following crash occurs, followed by a second crash in acpi_idle_enter_bm, which then keeps occurring, rendering the system completely hung in a matter of seconds.\n\nMar 27 14:31:10 davin kernel: [ 1716.250150] divide error: 0000 [#1] SMP\nMar 27 14:31:10 davin kernel: [ 1716.250305] last sysfs file: /sys/module/aes_generic/initstate\nMar 27 14:31:10 davin kernel: [ 1716.2", "title": "Divide error in minstrel_ht_tx_status followed by hang", "Kernel Version": "2.6.38", "Product": "Drivers", "Component": "Staging", "Hardware": "All Linux", "reranked_files": ["net/mac80211/rc80211_minstrel_ht.c", "drivers/acpi/processor_idle.c", "drivers/net/wireless/brcm80211/brcmsmac/main.c"], "causes": [{"cause": "The divide error in minstrel_ht_tx_status is likely caused by a division by zero when calculating the rate statistics.", "code_file": "net/mac80211/rc80211_minstrel_ht.c", "fix_solution": "Add a check to ensure that the divisor is not zero before performing the division in minstrel_ht_tx_status."}, {"cause": "The crash in acpi_idle_enter_bm may be due to an unhandled exception or incorrect state transition after the initial divide error.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Add error handling to manage unexpected states or exceptions in acpi_idle_enter_bm to prevent system hang."}, {"cause": "The issue may be triggered by an incorrect update or regression in the brcm80211 driver affecting rate control.", "code_file": "drivers/net/wireless/brcm80211/brcmsmac/main.c", "fix_solution": "Review and revert any recent changes related to rate control logic in the brcm80211 driver that could lead to invalid state or division by zero."}], "input_tokens": 649, "output_tokens": 251}
{"id": "31872", "paths": ["drivers/acpi/scan.c"], "predicts": ["drivers/acpi/acpica/evgpeblk.c", "drivers/acpi/acpica/evxfevnt.c", "drivers/acpi/acpica/evxfgpe.c", "drivers/acpi/osl.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "kernel/panic.c"], "input_tokens_sum": 189773, "output_tokens_sum": 2620, "description": "Created attachment 51972 [details]\nlspci -vvv\n\nMy laptop cannot boot anymore with latest 2.6.38 kernel (also confirmed\nwith 2.6.38 rc6, rc7 and rc8) while ACPI support is enabled (booting with ACPI=off allows ending the boot sequence but many functionalities are lost). A kernel panic occurs early during the boot.\n\nOlder kernels until 2.6.37.2 did not trigger this bug on that laptop.\n\nIt's the official Debian kernel 2.6.38-1-686.", "title": "boot panic unless acpi=off, Thread overran stack, or stack corrupted - Toshiba Satellite/mobile P4", "Kernel Version": "2.6.38", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/osl.c", "drivers/acpi/tables.c", "drivers/acpi/interrupt.c", "drivers/acpi/acpica/nsutils.c", "drivers/acpi/acpica/executer/exoparg1.c"], "causes": [{"cause": "The ACPI stack size might be insufficient, leading to a stack overflow during ACPI initialization.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Increase the stack size allocated for ACPI operations to prevent overflow."}, {"cause": "A recent change in the ACPI subsystem might have introduced a regression causing improper handling of ACPI tables.", "code_file": "drivers/acpi/tables.c", "fix_solution": "Review and revert recent changes related to ACPI table parsing that could lead to stack corruption."}, {"cause": "The ACPI interrupt handling might be causing stack corruption due to improper context switching.", "code_file": "drivers/acpi/interrupt.c", "fix_solution": "Ensure that the interrupt handling code properly saves and restores the stack context."}, {"cause": "A bug in the ACPI namespace management could be causing excessive recursion, leading to stack overflow.", "code_file": "drivers/acpi/acpica/nsutils.c", "fix_solution": "Optimize the namespace management to reduce recursion depth or convert recursive functions to iterative ones."}, {"cause": "Incorrect handling of ACPI method execution could be causing stack corruption.", "code_file": "drivers/acpi/acpica/executer/exoparg1.c", "fix_solution": "Audit the method execution code to ensure that stack operations are correctly managed and balanced."}], "input_tokens": 490, "output_tokens": 323}
{"id": "31572", "paths": ["mm/vmalloc.c"], "predicts": ["drivers/firewire/ohci.c", "drivers/firewire/core-card.c", "drivers/firewire/core-device.c", "mm/page_alloc.c", "mm/memory.c"], "input_tokens_sum": 195976, "output_tokens_sum": 2152, "description": "Created attachment 51502 [details]\nphoto of oops\n\nComputer crash randomly at boot with one flashdisk or usb cdrom connected.\nTested with kernel 2.6.38-rc2 and 2.6.38.\n\nComputer: AMD Phenom x6, M4A88TD-V EVO/USB3 motherboard, 8GB RAM.\n\nlspci:\n\n00:00.0 Host bridge: Advanced Micro Devices [AMD] RS880 Host Bridge\n00:01.0 PCI bridge: ASUSTeK Computer Inc. RS880 PCI to PCI bridge (int gfx)\n00:09.0 PCI bridge: Advanced Micro Devices [AMD] RS780/RS880 PCI to PCI bridge (PCIE port 4)\n00:0a.0 PCI bridge: Advanced Micro Devices [AMD] RS780/RS880 PCI to PCI bridge (PCIE port 5)\n00:11.0 SATA controller: ATI Technologies Inc SB700/SB800 SATA Controller [IDE mode] (rev 40)\n00:12.0 USB Controller: ATI Technologies Inc SB700/SB800 USB OHCI0 Controller\n00:12.2 USB Controller: ATI Technologies Inc SB700/SB800 USB EHCI Controller\n00:13.0 USB Controller: ATI Technologies Inc SB700/SB800 USB OHCI0 Controller\n00:13.2 USB Controller: ATI Technologies Inc SB700/SB800 USB EHCI Controller\n00:14.0 SMBus: ATI Tech", "title": "BUG in vb_alloc() - firewire crash at boot", "Kernel Version": "2.6.38-rc2", "Product": "Memory Management", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/firewire/fw-ohci.c", "drivers/firewire/core-transaction.c", "drivers/firewire/fw-device.c", "drivers/pci/probe.c"], "causes": [{"cause": "The vb_alloc() function may be improperly handling memory allocation for FireWire devices, leading to a crash when certain USB devices are connected.", "code_file": "drivers/firewire/fw-ohci.c", "fix_solution": "Ensure proper error handling and memory allocation checks in the vb_alloc() function to prevent crashes when devices are connected."}, {"cause": "There might be a race condition in the initialization sequence of FireWire and USB subsystems, causing a crash during boot.", "code_file": "drivers/firewire/core-transaction.c", "fix_solution": "Implement locking mechanisms to ensure that FireWire and USB subsystems are initialized in a thread-safe manner."}, {"cause": "The FireWire subsystem might be accessing uninitialized or freed memory during the boot process when USB devices are present.", "code_file": "drivers/firewire/fw-device.c", "fix_solution": "Add checks to ensure that memory is properly initialized before access and that pointers are not dereferenced after being freed."}, {"cause": "Improper handling of PCI bridge resources might be causing conflicts between FireWire and USB devices, leading to a crash.", "code_file": "drivers/pci/probe.c", "fix_solution": "Review and correct the resource allocation logic for PCI bridges to prevent conflicts between FireWire and USB devices."}], "input_tokens": 667, "output_tokens": 301}
{"id": "30832", "paths": ["drivers/gpu/drm/radeon/atombios_crtc.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_fb.c", "include/drm/radeon_drm.h", "include/video/radeon.h", "arch/x86/video/fbdev.c"], "input_tokens_sum": 190932, "output_tokens_sum": 2339, "description": "The S-Video out of Radeon driver has become black and white in kernel 2.6.38.The regression happened around 2.6.37.2 as the driver worked fine in 2.6.37. I have a Radeon HD4850 card.\n\nHere is the difference in the dmesg output from the two kernels. I can hardly notice any difference, other than timestamps. In kernel 2.6.38, initialization happens very quickly - maybe a timing issue? Other than the kernels, everything else is same.\n\n2.6.38-6-generic\n\n[    9.422549] [drm] Initialized drm 1.1.0 20060810\n[   10.094022] [drm] radeon defaulting to kernel modesetting.\n[   10.094024] [drm] radeon kernel modesetting enabled.\n[   10.094105] fb: conflicting fb hw usage radeondrmfb vs VESA VGA - removing generic driver\n[   10.095453] [drm] initializing kernel modesetting (RV770 0x1002:0x9442).\n[   10.095475] [drm] register mmio base: 0xFDFE0000\n[   10.095476] [drm] register mmio size: 65536\n[   10.097903] [drm] Detected VRAM RAM=512M, BAR=256M\n[   10.097906] [drm] RAM width 256bits DDR\n[   10.0980", "title": "Radeon S-Video Out has become black and white. Works fine in 2.6.37", "Kernel Version": "2.6.38-rc6", "Product": "Drivers", "Component": "Video", "Hardware": "IA-64 Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_fb.c", "drivers/gpu/drm/radeon/radeon_kms.c"], "causes": [{"cause": "The color encoding for the S-Video output might have been incorrectly set or defaulted to a different standard (e.g., NTSC vs. PAL) in the newer kernel version.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Ensure that the color encoding is explicitly set to the correct standard for S-Video output, possibly by adding or modifying a function that sets the TV standard based on the region or user configuration."}, {"cause": "A regression in the initialization sequence of the Radeon driver might have altered the timing or order of setting up the display output, affecting the S-Video signal.", "code_file": "drivers/gpu/drm/radeon/radeon_drv.c", "fix_solution": "Review and adjust the initialization sequence to ensure that the S-Video output is configured correctly, possibly by adding a delay or reordering the setup functions."}, {"cause": "Changes in the framebuffer handling or conflicts with other framebuffer drivers might have affected the S-Video output.", "code_file": "drivers/gpu/drm/radeon/radeon_fb.c", "fix_solution": "Investigate and resolve any conflicts between the Radeon framebuffer and other framebuffer drivers, ensuring that the correct driver is used for S-Video output."}, {"cause": "A change in the default settings for the Radeon driver might have inadvertently affected the S-Video output configuration.", "code_file": "drivers/gpu/drm/radeon/radeon_kms.c", "fix_solution": "Review the default settings and ensure that the S-Video output is configured correctly, possibly by adding a configuration option for users to specify their desired output settings."}], "input_tokens": 712, "output_tokens": 376}
{"id": "29732", "paths": ["drivers/net/wireless/rndis_wlan.c"], "predicts": ["drivers/net/wireless/rndis_wlan.c", "include/linux/usb/rndis_host.h", "net/wireless/core.c", "net/wireless/mlme.c", "net/wireless/nl80211.c"], "input_tokens_sum": 240411, "output_tokens_sum": 10876, "description": "Created attachment 48752 [details]\nSyslogs for rndis_wlan with 2.6.38-rc5\n\nI've been testing the 2.6.368 kernel with my wireless adapter and it seems that something is not well once again.\n\n\nI'm attaching the logs of four test sets. All tests were performed after booting the computer with the device disconnected and only connecting it after everything is ready on the desktop. The attachments show what came up on the syslog after the moment I plugged in the device.\n\n\n- On the first test, I disabled network-manager and only used iwconfig + dhclient. I got no connection and the adapter's \"Link\" LED just kept blinking as if nothing was happening.\n\n- For all other tests I enabled network-manager. On the second test, after about an hour with the device connected, it hadn't connected yet and my ESSID didn't shown up on n-m's available connections. I used iwconfig + dhclient to configure the device. No success yet. N-m caught the SSID by then but it couldn't connect neither.\n\n- On the third te", "title": "rndis_wlan not working again for BCM4320a", "Kernel Version": "2.6.38-rc5", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/rndis_wlan.c", "net/wireless/reg.c"], "causes": [{"cause": "The rndis_wlan driver may not be properly initializing the BCM4320a chipset, leading to failure in establishing a connection.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Ensure that the initialization sequence for the BCM4320a chipset is correctly implemented by adding necessary initialization commands specific to this chipset."}, {"cause": "The network-manager might not be correctly interfacing with the rndis_wlan driver, causing issues in detecting and connecting to available networks.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Add additional logging and error handling to better interface with network-manager, ensuring that all connection attempts are properly logged and handled."}, {"cause": "The power management settings for the rndis_wlan driver might be causing the device to not function correctly when plugged in.", "code_file": "drivers/net/wireless/rndis_wlan.c", "fix_solution": "Review and adjust the power management settings to ensure that the device remains active and does not enter a low-power state inadvertently."}, {"cause": "The wireless regulatory domain settings might be incorrect, preventing the device from connecting to available networks.", "code_file": "net/wireless/reg.c", "fix_solution": "Ensure that the regulatory domain settings are correctly configured for the region, allowing the device to scan and connect to the appropriate channels."}], "input_tokens": 585, "output_tokens": 327}
{"id": "28142", "paths": ["fs/cifs/transport.c"], "predicts": ["fs/cifs/cifssmb.c", "fs/cifs/connect.c", "fs/cifs/sess.c", "fs/cifs/transport.c", "fs/cifs/file.c"], "input_tokens_sum": 195266, "output_tokens_sum": 3482, "description": "hi,\n\nafter mounting a CIFS share on a windows server 2003, r2 3790 SP2, and doing \"nothing\"/idling, after about 50-60 seconds accessing the mounted share is not possible anymore due to \"permission denied\" errors.\n\nsniffing the traffic reveals that a \"Echo Request\" message is being sent immediately followed by a \"Echo Response, Error: STATUS_ACCESS_DENIED\" message. after that one has to remount the share in order to access it again.\n\naccessing the share and copying files seems to work fine immediately after mounting, but only until the \"Echo Request\" message.\n\n2.6.37 was not affected. i've tested 2.6.38-rc2 and 2.6.38-rc3 and both suffer from the issues.\n\nmount.cifs version: 1.14-3.5.6, samba-3.5.6\n------------\nCONFIG_CIFS=y\n# CONFIG_CIFS_STATS is not set\nCONFIG_CIFS_WEAK_PW_HASH=y\nCONFIG_CIFS_UPCALL=y\nCONFIG_CIFS_XATTR=y\nCONFIG_CIFS_POSIX=y\n# CONFIG_CIFS_DEBUG2 is not set\nCONFIG_CIFS_DFS_UPCALL=y\nCONFIG_CIFS_ACL=y\nCONFIG_CIFS_EXPERIMENTAL=y\nCONFIG_SMB_FS=m  (module is not loaded)\nCONFI", "title": "CIFS: \"Echo Request\" message results in STATUS_ACCESS_DENIED", "Kernel Version": "2.6.38-rc3", "Product": "File System", "Component": "CIFS", "Hardware": "All Linux", "reranked_files": ["fs/cifs/connect.c", "fs/cifs/sess.c", "fs/cifs/smb2pdu.c", "fs/cifs/cifssmb.c"], "causes": [{"cause": "The CIFS client may not be handling the Echo Request/Response correctly, leading to a misinterpretation of the server's response as an access denial.", "code_file": "fs/cifs/connect.c", "fix_solution": "Modify the handling of Echo Response messages to correctly interpret the server's response and avoid treating STATUS_ACCESS_DENIED as a fatal error."}, {"cause": "The session re-authentication mechanism might be failing, causing the server to deny access after the Echo Request.", "code_file": "fs/cifs/sess.c", "fix_solution": "Ensure that the session re-authentication is correctly triggered and handled after receiving an Echo Response with STATUS_ACCESS_DENIED."}, {"cause": "There might be a timeout or session expiration issue that is not being properly managed, leading to the server denying access.", "code_file": "fs/cifs/smb2pdu.c", "fix_solution": "Implement a mechanism to refresh the session or extend the timeout before sending an Echo Request to prevent session expiration."}, {"cause": "The CIFS client might not be correctly maintaining the session state, causing the server to reject requests after an Echo Request.", "code_file": "fs/cifs/cifssmb.c", "fix_solution": "Review and correct the session state management logic to ensure that the session remains valid and synchronized with the server."}], "input_tokens": 650, "output_tokens": 313}
{"id": "25922", "paths": ["drivers/platform/x86/ideapad-laptop.c"], "predicts": ["drivers/platform/x86/ideapad-laptop.c", "drivers/acpi/video.c", "include/acpi/video.h", "include/linux/backlight.h"], "input_tokens_sum": 187886, "output_tokens_sum": 3079, "description": "After increasing/decreasing brightness by \"Fn+Up/Down\" it changes by some value and after that keys are not responding (not making any change).\nModifying brighntness value by:\necho 0 > /sys/class/backlight/acpi_video0/brightness\nworks good.\n\nLatest kernel that I tried where the issue no occurs was 2.6.36.2.", "title": "IdeaPad Y530 brightness keys not functioning", "Kernel Version": "2.6.37-rc8", "Product": "Drivers", "Component": "Platform_x86", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/ideapad-laptop.c", "drivers/acpi/video.c", "drivers/input/input.c"], "causes": [{"cause": "The brightness key handling logic in the platform driver may not correctly update the brightness level after the initial change.", "code_file": "drivers/platform/x86/ideapad-laptop.c", "fix_solution": "Ensure that the key event handler properly updates the brightness level and state after each key press, possibly by re-reading the current brightness level and applying the change."}, {"cause": "The ACPI video driver might not be correctly interfacing with the hardware to update the brightness level after the first change.", "code_file": "drivers/acpi/video.c", "fix_solution": "Review and update the ACPI video driver to ensure it correctly processes and applies brightness changes, possibly by adding additional checks or reinitializing the brightness control interface."}, {"cause": "A regression in the kernel's input handling might be causing the brightness keys to stop functioning after the first adjustment.", "code_file": "drivers/input/input.c", "fix_solution": "Investigate the input event processing logic to ensure that key events are consistently recognized and processed, and fix any issues related to event handling or state management."}], "input_tokens": 437, "output_tokens": 253}
{"id": "25692", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/patch_sigmatel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c"], "input_tokens_sum": 203810, "output_tokens_sum": 3227, "description": "Created attachment 41702 [details]\nFull kernel log\n\nI am using linux-image-2.6.37-rc7-amd64 (2.6.37~rc7-1~experimental.1) from debian experimental. My motherboard is Intel D946GZIS. During boot I get this oops and sound does not work. It used to work on 2.6.36 and before.\n\nBelow is the relevant part of dmesg. I also attached the whole thing (kernel.log). I am new to submitting kernel bugs so I apologise beforehand if I am missing any info. Please let me know if you need anything else.\n\n[    6.267424] HDA Intel 0000:00:1b.0: PCI INT A -> GSI 22 (level, low) -> IRQ 22\n[    6.267479] HDA Intel 0000:00:1b.0: irq 40 for MSI/MSI-X\n[    6.267505] HDA Intel 0000:00:1b.0: setting latency timer to 64\n[    6.320950] input: HDA Digital PCBeep as /devices/pci0000:00/0000:00:1b.0/input/input6\n[    6.520042] BUG: unable to handle kernel NULL pointer dereference at           (null)\n[    6.520066] IP: [<ffffffffa072cc3b>] stac92xx_unsol_event+0x38b/0x577 [snd_hda_codec_idt]\n[    6.520087] PGD 36854067 ", "title": "Kernel oops (NULL pointer deref) during boot on stac92xx_unsol_event", "Kernel Version": "2.6.37-rc7", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/patch_sigmatel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c"], "causes": [{"cause": "The stac92xx_unsol_event function is dereferencing a NULL pointer, possibly due to an uninitialized or improperly handled codec structure.", "code_file": "sound/pci/hda/patch_sigmatel.c", "fix_solution": "Add a NULL check for the codec structure before dereferencing it in the stac92xx_unsol_event function."}, {"cause": "The unsol event handler is being called with an invalid or uninitialized codec pointer, leading to a NULL pointer dereference.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Ensure that the codec pointer is properly initialized and validated before being passed to the unsol event handler."}, {"cause": "A race condition during the initialization of the HDA codec might leave the codec structure in an inconsistent state, leading to a NULL pointer dereference.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Introduce proper locking mechanisms during codec initialization to prevent race conditions."}, {"cause": "The stac92xx_unsol_event function might be accessing a member of the codec structure that has not been properly initialized.", "code_file": "sound/pci/hda/patch_sigmatel.c", "fix_solution": "Initialize all members of the codec structure before they are accessed in the stac92xx_unsol_event function."}], "input_tokens": 722, "output_tokens": 320}
{"id": "24562", "paths": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c"], "predicts": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "arch/x86/kernel/cpu/cpufreq/powernow-k8.h", "drivers/cpufreq/cpufreq.c", "drivers/cpufreq/cpufreq_ondemand.c", "include/linux/cpufreq.h", "kernel/smp.c", "include/linux/smp.h", "arch/x86/include/asm/cpu.h", "arch/x86/kernel/setup.c", "fs/proc/cpuinfo.c"], "input_tokens_sum": 184155, "output_tokens_sum": 2353, "description": "During boot, I get this summary on my AMD 890FX/SB850 chipset:\n\nSMP: Allowing 6 CPUs, 0 hotplug CPUs\nsetup_percpu: NR_CPUS:4096 nr_cpumask_bits:6 nr_cpu_ids:6 nr_node_ids:1\nPERCPU: Embedded 27 pages/cpu @ffff880006000000 s80704 r8192 d21696 u262144\npcpu-alloc: s80704 r8192 d21696 u262144 alloc=1*2097152\npcpu-alloc: [0] 0 1 2 3 4 5 - - \nSLUB: Genslabs=13, HWalign=64, Order=0-3, MinObjects=0, CPUs=6, Nodes=1\n        RCU-based detection of stalled CPUs is disabled.\n        Verbose stalled-CPUs detection is disabled.\nCPU: Physical Processor ID: 0\nCPU: Processor Core ID: 0\nmce: CPU supports 6 MCE banks\nCPU0: AMD Phenom(tm) II X6 1090T Processor stepping 00\nSwitch to broadcast mode on CPU1\nSwitch to broadcast mode on CPU2\nSwitch to broadcast mode on CPU3\nSwitch to broadcast mode on CPU4\nBrought up 6 CPUs\nSwitch to broadcast mode on CPU5\nSwitch to broadcast mode on CPU0\n\nAnd a bit further down cores 4 and 5 are not seen by \"powernow-k8\":\n\npowernow-k8: Found 1 AMD Phenom(tm) II X6 1090T Proces", "title": "k8-powernow does not see all cores", "Kernel Version": "2.6.36", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/powernow-k8.c", "arch/x86/kernel/cpu/topology.c", "drivers/cpufreq/cpufreq.c", "drivers/acpi/processor_driver.c"], "causes": [{"cause": "The powernow-k8 driver may not be correctly identifying all cores due to incorrect initialization or detection logic for multi-core processors.", "code_file": "drivers/cpufreq/powernow-k8.c", "fix_solution": "Update the core detection logic to ensure all cores are correctly identified and initialized during the boot process."}, {"cause": "The cpufreq subsystem might not be correctly handling the topology information for the AMD Phenom II X6 processor, leading to incomplete core detection.", "code_file": "arch/x86/kernel/cpu/topology.c", "fix_solution": "Modify the topology detection code to accurately reflect the number of cores and their configuration for the AMD Phenom II X6 processor."}, {"cause": "There might be an issue with the initialization sequence of the cpufreq driver, causing it to miss some cores during setup.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure the initialization sequence properly iterates over all available cores and sets up the cpufreq driver for each core."}, {"cause": "The BIOS or ACPI tables might be providing incorrect information about the processor cores, leading to incomplete detection by the kernel.", "code_file": "drivers/acpi/processor_driver.c", "fix_solution": "Add additional checks and validation for the core information provided by ACPI tables to ensure all cores are detected."}], "input_tokens": 696, "output_tokens": 319}
{"id": "24492", "paths": ["drivers/acpi/sbs.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply_sysfs.c", "include/linux/power_supply.h", "drivers/power/power_supply.h"], "input_tokens_sum": 156404, "output_tokens_sum": 1301, "description": "On a Acer Travelmate 2301, the battery status (energy, current, etc.)  doesn't get updated, unless events are triggered (e.g. charger disconnection).\n\nExample, with charger on, an old reading is reported:\n\ntestuser@castor:~$ cat /sys/class/power_supply/BAT0/energy_now\n1120000\n\nImmediately after, having unplugged the charger in order to trigger an event,\nsysfs gets updated:\n\ntestuser@castor:~$ cat /sys/class/power_supply/BAT0/energy_now\n13600000", "title": "SBS - Battery status is updated only on AC/DC event, not every minute - Acer Travelmate 2301", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/power/supply/power_supply_core.c", "drivers/acpi/ec.c"], "causes": [{"cause": "The battery status update mechanism is only triggered by AC/DC events, not by a periodic timer.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Introduce a periodic timer to refresh the battery status every minute, ensuring updates occur independently of AC/DC events."}, {"cause": "The polling interval for battery status updates is set incorrectly or not configured to update frequently.", "code_file": "drivers/power/supply/power_supply_core.c", "fix_solution": "Modify the polling interval configuration to ensure regular updates of battery status, such as setting a timer to poll every minute."}, {"cause": "The ACPI battery driver does not handle regular updates due to missing or incorrect event handling logic.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Enhance the event handling logic to include periodic checks for battery status updates, ensuring the battery information is refreshed regularly."}], "input_tokens": 490, "output_tokens": 212}
{"id": "24342", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_realtek.c", "include/sound/pcm.h", "sound/core/pcm.c"], "input_tokens_sum": 180897, "output_tokens_sum": 3633, "description": "the sound on spdif has gone between 2.6.35.6-45 and 2.6.35.9-64 -these are versions avaliable in fedora. so after booting to older kernel everything works well again.\n\nthere is nothing special in any log files. also my digital reciever shows pcm signal incoming during playback, however it wrongly shows 'pcm' input also when trying to play ac3/dts and in all cases there is no sound.\n\nI am using intel hda chipset (currently have no possibility to check analog audio now)\n\ncard 0: Intel [HDA Intel], device 0: ALC889 Analog [ALC889 Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: Intel [HDA Intel], device 1: ALC889 Digital [ALC889 Digital]\n  Subdevices: 0/1\n  Subdevice #0: subdevice #0\n\n\n00:1b.0 Audio device: Intel Corporation 5 Series/3400 Series Chipset High Definition Audio (rev 06)", "title": "no sound on spdif", "Kernel Version": "2.6.35", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/patch_realtek.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c", "sound/core/pcm_native.c"], "causes": [{"cause": "The SPDIF output configuration might have been altered or incorrectly set in the ALSA driver for the Intel HDA chipset.", "code_file": "sound/pci/hda/patch_realtek.c", "fix_solution": "Ensure the SPDIF output is correctly configured for the ALC889 codec by reviewing and potentially reverting changes made to the SPDIF setup between the affected kernel versions."}, {"cause": "A regression in the handling of digital audio formats such as AC3/DTS in the ALSA driver for Intel HDA.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Investigate changes in the handling of digital audio formats and ensure that the codec correctly identifies and processes AC3/DTS streams."}, {"cause": "Changes in the initialization sequence for the Intel HDA audio device that might affect SPDIF output.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Review the initialization sequence for the Intel HDA device and ensure that SPDIF output is properly initialized and enabled."}, {"cause": "Incorrect handling of PCM streams in the ALSA driver, leading to misidentification of audio formats.", "code_file": "sound/core/pcm_native.c", "fix_solution": "Check the PCM stream handling logic to ensure that audio formats are correctly identified and processed, especially for SPDIF output."}], "input_tokens": 582, "output_tokens": 316}
{"id": "24312", "paths": ["drivers/gpu/drm/i915/intel_sdvo.c"], "predicts": ["drivers/gpu/drm/i915/intel_i2c.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/intel_display.c", "include/linux/i2c.h", "include/drm/drmP.h", "include/drm/i915_drm.h", "arch/x86/mm/iomap_32.c", "kernel/irq/devres.c", "mm/internal.h"], "input_tokens_sum": 178709, "output_tokens_sum": 1772, "description": "The i915 module in Natty's 2.6.37-rc3-7 (and perhaps others) kernel oopses with a null pointer dereference on boot on my i915GM-based Dell Latitude D610 as seen below,\n\n[ 16.693732] i915 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16\n[ 16.693741] i915 0000:00:02.0: setting latency timer to 64\n[ 16.753618] BUG: unable to handle kernel NULL pointer dereference at (null)\n[ 16.753753] IP: [<c04ca13e>] i2c_transfer+0x1e/0xc0\n[ 16.753851] *pde = 3f032067\n[ 16.753940] Oops: 0000 [#1] SMP\n[ 16.754060] last sysfs file: /sys/module/ssb/initstate\n[ 16.754124] Modules linked in: i915(+) b43(+) snd_seq_device mac80211 drm_kms_helper drm sunrpc cfg80211 yenta_socket dell_laptop pcmcia_rsrc snd dcdbas psmouse\npcmcia_core i2c_algo_bit video shpchp soundcore serio_raw snd_page_alloc output lp parport tg3 ssb\n[ 16.755116]\n[ 16.755171] Pid: 341, comm: modprobe Not tainted 2.6.37-7-generic #19-Ubuntu 0U8082/Latitude D610\n[ 16.755267] EIP: 0060:[<c04ca13e>] EFLAGS: 00010296 CPU: 0\n[ 16.755331] EI", "title": "[i915] null pointer dereference on modprobe in intel_svdo_read_byte.clone.8", "Kernel Version": "2.6.37-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/i915/intel_i2c.c", "drivers/gpu/drm/i915/intel_display.c", "drivers/gpu/drm/i915/i915_drv.c"], "causes": [{"cause": "The null pointer dereference occurs because the i2c_transfer function is called with a null i2c_adapter pointer, likely due to an uninitialized or improperly initialized i2c_adapter structure.", "code_file": "drivers/gpu/drm/i915/intel_i2c.c", "fix_solution": "Ensure that the i2c_adapter structure is properly initialized before calling i2c_transfer. Add a check for null pointers and return an error if the adapter is not initialized."}, {"cause": "The i915 driver may not be correctly setting up the I2C bus for the specific hardware configuration, leading to a null pointer dereference when attempting to access the I2C bus.", "code_file": "drivers/gpu/drm/i915/intel_display.c", "fix_solution": "Add additional hardware checks and initialization routines specific to the i915GM chipset to ensure the I2C bus is correctly set up before use."}, {"cause": "A race condition during module initialization could lead to the i2c_adapter being accessed before it is fully initialized.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Introduce proper locking mechanisms or reordering of initialization code to ensure that the i2c_adapter is fully initialized before any access."}], "input_tokens": 765, "output_tokens": 295}
{"id": "24302", "paths": ["fs/nfs/mount_clnt.c"], "predicts": ["fs/nfs/client.c", "fs/nfs/inode.c", "fs/nfs/super.c", "include/linux/nfs_mount.h", "net/sunrpc/svc.c", "net/sunrpc/svc_xprt.c", "kernel/panic.c", "arch/x86/mm/fault.c", "init/do_mounts.c"], "input_tokens_sum": 159763, "output_tokens_sum": 2358, "description": "ARCH: x86_64 (not tested on i386)\n\nTestcase:\n\nOn the server side, configure an export that will be denied to mount (used sec=krb5 as that gives a permission denied for me)\n\n--- server /etc/exports ---\n/foo *(rw,krb5)\n\nOn the client side, autofs gets configured to try to automount server:/foo\n\n--- client /etc/auto.master ---\n/auto /etc/auto.auto\n\n--- client /etc/auto.auto ---\nfoo -tcp server:/foo\n\n[optional]\nStop the autofs service and start the automounter in the foreground (automount -d -f) to see the permission denied message.\n\nCreate a symlink pointing to the autofs:\nln -s /auto/foo foo\n\nThe following is done in a loop as the crash sometimes takes longer than other times:\n\nwhile true; do ls foo/; sleep 1; done\n\nIt seems to take longer on the newest kernel, but eventually there will be a panic.", "title": "Kernel crashes when repeatedly trying to mount nfs share that is failing", "Kernel Version": "2.6.32", "Product": "File System", "Component": "NFS", "Hardware": "x86-64 Linux", "reranked_files": ["fs/nfs/super.c", "fs/nfs/client.c", "fs/autofs4/init.c", "fs/namei.c"], "causes": [{"cause": "The kernel may not be handling repeated mount failures correctly, leading to resource exhaustion or a race condition.", "code_file": "fs/nfs/super.c", "fix_solution": "Implement a mechanism to limit the number of retries or introduce a delay between retries to prevent resource exhaustion."}, {"cause": "There might be a lack of proper error handling when the NFS mount fails due to permission issues, leading to a kernel panic.", "code_file": "fs/nfs/client.c", "fix_solution": "Add error handling code to gracefully handle permission denied errors and ensure resources are properly released."}, {"cause": "The automount process might be causing a deadlock or race condition when repeatedly attempting to mount a denied NFS share.", "code_file": "fs/autofs4/init.c", "fix_solution": "Introduce locking mechanisms or checks to prevent race conditions when handling repeated mount attempts."}, {"cause": "The symlink creation and repeated access might be causing a reference count issue, leading to a kernel panic.", "code_file": "fs/namei.c", "fix_solution": "Ensure that reference counts are correctly managed when accessing symlinks in the context of failed mounts."}], "input_tokens": 572, "output_tokens": 278}
{"id": "23892", "paths": ["fs/nfs/file.c"], "predicts": ["fs/locks.c", "fs/nfs/delegation.c", "fs/nfs/file.c", "fs/nfsd/lockd.c", "fs/nfsd/nfsproc.c", "include/linux/nfs_fs.h", "include/linux/nfsd/state.h", "net/sunrpc/svc.c", "net/sunrpc/svcsock.c", "net/sunrpc/xprtsock.c"], "input_tokens_sum": 152861, "output_tokens_sum": 3171, "description": "Created attachment 38442 [details]\nPrograms for reproducing\n\nEnvironment:\n\nDebian Lenny with kernel 2.6.37-rc3 i686\nnfs-common         1:1.1.2-6lenny2\nnfs-kernel-server  1:1.1.2-6lenny2\n172.22.0.10 is a server\n172.22.0.11 is a client\n\n/etc/exports on a server:\n/srv/test  172.22.0.11(rw,sync,no_subtree_check)\n\n\nSteps to reproduce:\n\nclient# mount -t nfs 172.22.0.10:/srv/test /srv/test\n\nserver$ cd /srv/test\nserver$ ./linlock r file\npress Ctrl-C...\n\nclient$ cd /srv/test\nclient$ ./linlock w file\nfcntl: Resource temporary unavailable\nclient$ ./lockinfo file\nF_UNLCK SEEK_SET start 0 len 0\n\n./linlock tool set read (r) or write (w) lock on a file. ./lockinfo shows what F_GETLK returns. This test shows that a client can not set a write lock on a read lock of server but F_GETLK tells that file is not locked.\n\n\nThe bug does not occur if client with 2.6.21 kernel.\nThe bug occurs if client with 2.6.22-rc1 and higher.", "title": "fcntl(..., F_GETLK, ...) does not return correct info about a read lock which is set on server", "Kernel Version": "2.6.22-rc1", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/nfs4proc.c", "fs/lockd/svclock.c", "fs/nfs/nfs4state.c"], "causes": [{"cause": "The NFS client is not correctly interpreting the lock state returned by the server, leading to incorrect F_GETLK results.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Ensure that the NFS client properly interprets the lock state by updating the lock parsing logic in the nfs4_proc_getlk function to correctly handle read locks set by the server."}, {"cause": "The NFS server is not correctly communicating the lock state to the client, causing the client to misinterpret the lock status.", "code_file": "fs/lockd/svclock.c", "fix_solution": "Modify the server-side lockd code to ensure that the lock state is correctly communicated to the client, particularly in the nlmsvc_grant function, to ensure accurate lock status reporting."}, {"cause": "There is a mismatch in the lock protocol version or implementation between the client and server, leading to incorrect lock status reporting.", "code_file": "fs/nfs/nfs4state.c", "fix_solution": "Update the NFSv4 state management code to ensure compatibility between client and server lock protocols, particularly in the nfs4_set_lock_state function, to ensure consistent lock status communication."}], "input_tokens": 672, "output_tokens": 281}
{"id": "23222", "paths": ["drivers/gpu/drm/radeon/radeon_combios.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_connectors.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/radeon/radeon_drv.c", "include/drm/drm_crtc.h", "include/video/radeon.h"], "input_tokens_sum": 178123, "output_tokens_sum": 1782, "description": "Created attachment 37562 [details]\nkernel config\n\nAfter upgrade from 2.6.35 to 2.6.36 I think I have found a regression.\n2.6.36 is booting fine until kernel tries to change resolution. Then my monitor just goes blank, but the booting process continues. Using ssh I'm able to connect to my computer and there are following messages in my dmesg:\n[    4.650041] No connectors reported connected with modes\n[    4.650046] [drm] Cannot find any crtc or sizes - going 1024x768\n\nMy configuration:\nonboard graphic card: ATI Technologies Inc RS482 [Radeon Xpress 200] with both VGA and DVI ports\nmonitor: Samsung SyncMaster 204B\n\nPlease note that this only happens when my monitor is connected with DVI.\nAfter switching to standard VGA cable everything works just fine.", "title": "2.6.36 radeon KMS: [drm] Cannot find any crtc or sizes", "Kernel Version": "2.6.36", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_connectors.c", "drivers/gpu/drm/radeon/radeon_display.c", "drivers/gpu/drm/drm_edid.c", "drivers/gpu/drm/drm_modes.c"], "causes": [{"cause": "The DVI connector is not being properly detected or initialized by the Radeon KMS driver, leading to a failure in finding any connected display modes.", "code_file": "drivers/gpu/drm/radeon/radeon_connectors.c", "fix_solution": "Ensure that the DVI connector is correctly initialized and detected by adding additional checks or initialization routines specific to DVI connectors in the radeon_connector_init function."}, {"cause": "The CRTC (Cathode Ray Tube Controller) assignment logic may not be handling the DVI output correctly, causing it to fail to find a suitable CRTC.", "code_file": "drivers/gpu/drm/radeon/radeon_display.c", "fix_solution": "Modify the CRTC assignment logic in the radeon_crtc_pick_best function to better handle DVI outputs, possibly by adding specific handling for the RS482 chipset."}, {"cause": "The EDID (Extended Display Identification Data) reading from the DVI port might be failing, resulting in no modes being reported.", "code_file": "drivers/gpu/drm/drm_edid.c", "fix_solution": "Add additional error handling and retry logic in the drm_get_edid function to ensure that EDID data is correctly read from DVI ports."}, {"cause": "The mode setting logic might not be correctly applying default modes when no modes are detected, leading to a fallback that doesn't work with DVI.", "code_file": "drivers/gpu/drm/drm_modes.c", "fix_solution": "Enhance the drm_mode_set_config_internal function to ensure that a safe default mode is applied when no modes are detected, particularly for DVI connections."}], "input_tokens": 558, "output_tokens": 375}
{"id": "23012", "paths": ["drivers/usb/serial/usb-serial.c"], "predicts": ["drivers/usb/serial/ftdi_sio.c", "drivers/usb/serial/ftdi_sio.h", "drivers/usb/serial/ftdi_sio_ids.h", "drivers/usb/serial/usb-serial.c", "include/linux/serial.h", "include/usb/serial.h", "include/usb.h"], "input_tokens_sum": 184484, "output_tokens_sum": 1928, "description": "I am using a ftdi USB-to-serial device, which has worked in previous kernels.  After a recent update to mainline 2.6.37, I am no longer able to access the device.  Upon plugging in the device, the ftdi_sio module loads and /dev/ttyUSB0 appears.  However, when I try to access the device, I get the error \"Resource Temporarily Unavailable\".  There is no other process trying to access the device.  After downgrading to 2.6.36, the problem is fixed.", "title": "ftdi_sio /dev/ttyUSB error:  \"Resource Temporarily Unavailable\"", "Kernel Version": "2.6.37-rc1", "Product": "Drivers", "Component": "USB", "Hardware": "All Linux", "reranked_files": ["drivers/usb/serial/ftdi_sio.c", "drivers/tty/tty_io.c", "drivers/usb/core/usb.c", "drivers/usb/serial/usb-serial.c"], "causes": [{"cause": "The ftdi_sio driver may not be properly handling the open() system call, leading to the 'Resource Temporarily Unavailable' error.", "code_file": "drivers/usb/serial/ftdi_sio.c", "fix_solution": "Ensure that the open() function in ftdi_sio.c properly initializes the tty port and checks for any conditions that might lead to a non-blocking open failure."}, {"cause": "There might be a regression in the tty layer that affects how USB serial devices are handled, causing the device to be marked as busy.", "code_file": "drivers/tty/tty_io.c", "fix_solution": "Review and adjust the tty_open() function to ensure it correctly handles the state of USB serial devices, preventing them from being incorrectly marked as busy."}, {"cause": "Changes in the USB core layer might be affecting the initialization sequence of USB serial devices, leading to resource availability issues.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Investigate the usb_probe_interface() function to ensure that the initialization sequence for USB serial devices is correctly handled, and adjust any logic that might lead to premature resource allocation."}, {"cause": "The locking mechanism in the ftdi_sio driver might be incorrectly implemented, causing the device to be locked when accessed.", "code_file": "drivers/usb/serial/usb-serial.c", "fix_solution": "Examine the locking logic in usb_serial_generic_open() to ensure that locks are correctly acquired and released, preventing the device from being erroneously marked as unavailable."}], "input_tokens": 488, "output_tokens": 364}
{"id": "21092", "paths": ["fs/reiserfs/super.c"], "predicts": ["fs/reiserfs/lock.c", "fs/reiserfs/journal.c", "include/linux/reiserfs_fs.h", "fs/reiserfs/procfs.c", "fs/reiserfs/xattr.c", "include/linux/reiserfs_fs_sb.h"], "input_tokens_sum": 183788, "output_tokens_sum": 1442, "description": "I get this bug during boot at enabling usrquta for a reiser(3)fs since 2.6.36. The kernel is a x86_64 smp. The reiserfs reisdes on a dm raid level 5. The same setup worked with kernel version 2.6.35.7, of course there was no other configuratrion change between 2.6.35.7 and 2.6.36.\n\nREISERFS warning (device dm-4): reiserfs-2500 finish_unfinished: cannot turn on journaled quota: error -3\n------------[ cut here ]------------\nkernel BUG at fs/reiserfs/lock.c:43!\ninvalid opcode: 0000 [#1] SMP \nlast sysfs file: /sys/devices/virtual/vc/vcsa12/uevent\nCPU 5 \nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss quota_v2 quota_tree snd_hda_codec_atihdmi snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_pcm psmouse snd_timer evdev firewire_ohci snd pcspkr soundcore processor firewire_core thermal snd_page_alloc button crc_itu_t i5k_amb scsi_transport_iscsi tg3 libphy fuse nfs auth_rpcgss fscache lockd sunrpc dm_crypt dm_mirror dm_regi", "title": "Kernel 2.6.36 Bug during quotaon on reiserfs", "Kernel Version": "2.6.36", "Product": "File System", "Component": "ReiserFS", "Hardware": "All Linux", "reranked_files": ["fs/reiserfs/super.c", "fs/reiserfs/lock.c", "fs/reiserfs/quota.c"], "causes": [{"cause": "The function responsible for enabling journaled quotas on ReiserFS may not handle certain error conditions properly, leading to a failure when attempting to turn on quotas.", "code_file": "fs/reiserfs/super.c", "fix_solution": "Add error handling to ensure that the function gracefully handles cases where enabling journaled quotas fails, possibly by checking the return values of related functions and providing a fallback mechanism."}, {"cause": "A change in the locking mechanism in the ReiserFS code between kernel versions 2.6.35.7 and 2.6.36 might have introduced a bug that causes a failure when enabling quotas.", "code_file": "fs/reiserfs/lock.c", "fix_solution": "Review and adjust the locking logic to ensure that it correctly synchronizes access to shared resources when enabling quotas, preventing invalid operations."}, {"cause": "The quota initialization process might not be correctly integrated with the device-mapper RAID setup, leading to an error when attempting to enable quotas.", "code_file": "fs/reiserfs/quota.c", "fix_solution": "Modify the quota initialization code to ensure compatibility with device-mapper RAID configurations, possibly by adding checks or adjustments specific to such setups."}], "input_tokens": 676, "output_tokens": 279}
{"id": "19872", "paths": ["drivers/staging/phison/phison.c"], "predicts": ["drivers/staging/phison/phison.c", "fs/partitions/check.c", "fs/partitions/msdos.c"], "input_tokens_sum": 179122, "output_tokens_sum": 1678, "description": "Created attachment 32712 [details]\ndmesg log\n\nI have a Verbatim ExpressCard SSD that uses the phison driver from staging.\nOn recent kernels when loading the module I see a lot of errors and the driver is eventually unable to read the partition table off the device, rendering the device useless on those kernels. (log attached)\n\nI tested it with 2.6.35 and 2.6.36rc7, same behaviour. 2.6.32 works find. I haven't had the chance yet to test .33 and .34.", "title": "phison unable to read partition table", "Kernel Version": "2.6.36-rc7", "Product": "Drivers", "Component": "Staging", "Hardware": "All Linux", "reranked_files": ["drivers/staging/phison/phison.c", "drivers/staging/phison/init.c", "block/blk-core.c", "drivers/staging/phison/error.c"], "causes": [{"cause": "The phison driver in the staging area may have undergone changes that affect its ability to correctly read the partition table from the SSD.", "code_file": "drivers/staging/phison/phison.c", "fix_solution": "Review and revert recent changes related to partition table reading logic in the phison driver to match the behavior of version 2.6.32."}, {"cause": "There might be an issue with the initialization sequence of the phison driver that prevents it from properly accessing the SSD.", "code_file": "drivers/staging/phison/init.c", "fix_solution": "Ensure that the initialization sequence is consistent with the working version 2.6.32, particularly focusing on hardware initialization routines."}, {"cause": "Changes in the block layer or related subsystems between kernel versions might have affected the phison driver's ability to interact with the device.", "code_file": "block/blk-core.c", "fix_solution": "Investigate changes in the block layer that could affect device communication and adjust the phison driver to accommodate these changes."}, {"cause": "The error handling mechanism in the phison driver might be too aggressive, causing premature failure when reading the partition table.", "code_file": "drivers/staging/phison/error.c", "fix_solution": "Relax error handling conditions to allow for retries or more lenient error thresholds when attempting to read the partition table."}], "input_tokens": 472, "output_tokens": 319}
{"id": "19462", "paths": ["drivers/acpi/acpica/dswexec.c"], "predicts": ["drivers/acpi/acpica/exstore.c", "drivers/acpi/processor_core.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/sleep.c", "drivers/acpi/power.c", "drivers/acpi/acpica/acglobal.h", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "arch/x86/pci/acpi.c"], "input_tokens_sum": 162849, "output_tokens_sum": 3019, "description": "I've got reproducible kernel panics on recent stable kernels (2.6.32.8/16/23 and 2.6.35.2 specifically), but not on 2.6.30.x kernels. The panic/oops are occurring on two different hardware platforms; the Panasonic Toughbook CF-19 Mark 3 and and Toughbook CF-74 Mark 4. These are the latest revisions of these hardware models and we have seen the issue on multiple units.\n\nI'll attach the dmesg output from a few different panics / oops we've captured. There are two or three variations of kernel panics that repeat, so I'll include representatives from each type. All of the kernel panics I've seen occur during  boot (initramfs or early init boot process). Once a system is up and running fully, I've not seen a single lockup or oops of this type again. I've looked at related bugs with the acpi subsystem, but haven't seen anything quite like our issue, so I am opening a new issue here.\n\nFYI, I build mainline kernels, using the Debian config and package process, with some very minor config tweak", "title": "Reproducible Kernel panic/oops during boot and startup - Panasonic Toughbooks", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/tables.c", "drivers/acpi/scan.c", "drivers/acpi/device.c", "drivers/acpi/osl.c"], "causes": [{"cause": "The kernel panic during boot on Panasonic Toughbooks may be due to an ACPI table parsing issue specific to these models, which was introduced in kernel versions after 2.6.30.x.", "code_file": "drivers/acpi/tables.c", "fix_solution": "Add a quirk to handle the specific ACPI table parsing for Panasonic Toughbook models CF-19 and CF-74, ensuring compatibility with their ACPI implementations."}, {"cause": "A regression in the ACPI subsystem related to power management or device initialization that affects the boot process on certain hardware configurations.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Implement a conditional check to bypass problematic ACPI power management routines for the affected Panasonic Toughbook models during early boot."}, {"cause": "An issue with the initialization of ACPI devices that are not correctly handled in the newer kernel versions, leading to a panic during the boot sequence.", "code_file": "drivers/acpi/device.c", "fix_solution": "Introduce a workaround to delay the initialization of specific ACPI devices until after the critical boot phase is completed."}, {"cause": "A bug in the ACPI interrupt handling that causes a race condition or misconfiguration during the early boot process on these specific hardware models.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Modify the interrupt handling logic to ensure proper synchronization and configuration for the Panasonic Toughbook models during boot."}], "input_tokens": 601, "output_tokens": 334}
{"id": "16351", "paths": ["drivers/media/IR/imon.c"], "predicts": [], "input_tokens_sum": 175084, "output_tokens_sum": 1257, "description": "Jarod Wilson (the imon driver maintainer) asked my to open a report here so that the issues are not forgotten.\n\n- There is no fallback timer if a release code is missed (i.e. remote pointed \naway from receiver or some other anomaly), causing a key stuck on autorepeat. \nThe driver should inject a release code itself if there is no release/repeat \ncode in 500ms after initial press or in 120ms after a repeat code.\n\n- No release code is sent for 0x02XXXXXX keys if pressing any other button \nbefore release, examples:\n\nexample 1:\nhold '5', then press 'Play' once, then release '5'\nThe 'Play' codes are relayed properly, but the release code for '5' (the 'all \n0x02XXXXXX keys released' (i.e. empty HID input report) which the hardware \ndoes send properly) is wrongly interpreted as a release code for 'Play'.\nThe driver should either release '5' when the empty report is received, or, as \nthis is just a remote control, just inject a release code for '5' when 'Play' \nis pressed.\n\nexample 2:\nhold '5'", "title": "Various issues with imon remote control driver", "Kernel Version": "2.6.35-rc4", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/media/rc/imon.c"], "causes": [{"cause": "The driver does not implement a fallback timer to inject a release code if a release or repeat code is not received within a specified time frame.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Implement a timer that triggers a release event if no release or repeat code is received within 500ms after an initial press or 120ms after a repeat code."}, {"cause": "The driver incorrectly interprets an empty HID input report as a release code for the last pressed key instead of the currently held key.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Modify the logic to correctly associate the empty HID input report with the release of the currently held key, or inject a release code for the previously held key when a new key is pressed."}, {"cause": "The driver does not handle the scenario where a new key is pressed before the release of a previously held key, leading to missed release events.", "code_file": "drivers/media/rc/imon.c", "fix_solution": "Add logic to track the state of each key and ensure that a release event is generated for any key that was held when a new key press is detected."}], "input_tokens": 608, "output_tokens": 277}
{"id": "16272", "paths": ["sound/pci/hda/patch_realtek.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "include/sound/core.h", "sound/core/init.c", "sound/core/sound.c"], "input_tokens_sum": 232884, "output_tokens_sum": 20808, "description": "I switched from 3.6.33 on both sabayon and archlinux distros and both suffer the same symptom of no audio.\n\nalsaconf yeilds:\nLoading driver...\n:: Saving ALSA Levels [BUSY]\n/usr/sbin/alsactl: save_state:1504: No soundcards found.. [DONE]\n:: Restoring ALSA Levels [BUSY]\n/usr/sbin/alsactl: load_state:1610: No soundcards found...... [FAIL]\nSetting default volumes...\namixer: Mixer attach default error: No such file or directory\n---------\nand if I try to force it by adding snd_hda_intel to modules I hang on boot.\nalso going to attach dmesg ........\nreinstalled 3.6.33 and problem is gone, went back to 3.6.34 and broken.\n\nafter no luck fixing it on archforum I was told to post it \"upstream\" so here it is.\n\nthanks for all of the work you do.\nlet me know if any more info is required.", "title": "switching to 2.6.34 broke audio on toshiba satellite x205-s9800 using snd_hda_intel module", "Kernel Version": "2.6.34", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/core/init.c", "drivers/pci/probe.c"], "causes": [{"cause": "The snd_hda_intel module may not be correctly initializing the audio codec for the Toshiba Satellite X205-S9800, possibly due to a missing or incorrect PCI ID entry.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Add the specific PCI ID for the Toshiba Satellite X205-S9800 to the snd_hda_intel module's list of supported devices to ensure proper initialization."}, {"cause": "A regression in the power management code for the snd_hda_intel module might be causing the audio hardware to not be powered on correctly.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Review and update the power management logic to ensure the audio hardware is powered on during initialization."}, {"cause": "Changes in the ALSA core might have introduced a bug that prevents the detection of the sound card.", "code_file": "sound/core/init.c", "fix_solution": "Investigate recent changes in the ALSA core initialization and revert or fix any changes that could prevent sound card detection."}, {"cause": "The PCI subsystem might not be correctly enumerating the audio device due to changes in the PCI handling code.", "code_file": "drivers/pci/probe.c", "fix_solution": "Ensure that the PCI enumeration logic correctly identifies and initializes the audio device by checking for any recent changes that could affect this process."}], "input_tokens": 591, "output_tokens": 327}
{"id": "16213", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/sysctl.c", "include/linux/nfs_fs.h", "fs/nfs/callback.c", "fs/nfs/client.c", "net/sunrpc/svc.c", "net/sunrpc/svc_xprt.c", "net/sunrpc/xprt.c"], "input_tokens_sum": 170243, "output_tokens_sum": 3140, "description": "Given a file \"foo\" of 50Mb on a remote machine \"remote\". The command\n<localmachine $> cp /remote_mount_point/foo bar\nnever finishes, and bar has a size lesser than foo.\nand the automounting of the local machine is hanged.\n\nThe error message in /var/log/messages is:\nkernel: Callback slot table overflowed\n\nIf foo is lesser than 10Mb, the problem does'nt occur.\nAfter several tries with the source of 50Mb,\nthe different sizes of the target file \"bar\" are random.\n\nThis incident occurs with:\nsunrpc.tcp_slot_table_entries = 16\n\nbut after tunning this parameter, all is fine with:\nsunrpc.tcp_slot_table_entries = 32", "title": "Some NFS/RPC file transfers fail and hang automounting", "Kernel Version": "2.6.33", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["net/sunrpc/clnt.c", "fs/nfs/nfs4state.c", "net/sunrpc/xprt.c"], "causes": [{"cause": "The NFS client is running out of available callback slots due to insufficient tcp_slot_table_entries, causing file transfers to hang.", "code_file": "net/sunrpc/clnt.c", "fix_solution": "Increase the default value of tcp_slot_table_entries to a higher number, such as 32, to prevent slot table overflow."}, {"cause": "The NFS client is not handling the callback slot overflow properly, leading to incomplete file transfers and hanging automounts.", "code_file": "fs/nfs/nfs4state.c", "fix_solution": "Implement better error handling and recovery mechanisms when the callback slot table overflows to ensure file transfers can continue."}, {"cause": "The NFS client is not dynamically adjusting the number of slots based on the file size or network conditions, leading to inefficiencies.", "code_file": "net/sunrpc/xprt.c", "fix_solution": "Modify the code to dynamically adjust the number of tcp_slot_table_entries based on the file size or network load to optimize resource usage."}], "input_tokens": 515, "output_tokens": 242}
{"id": "16043", "paths": ["drivers/usb/core/driver.c"], "predicts": ["drivers/usb/core/hcd-pci.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/acpi/sleep.h", "arch/x86/kernel/pci/acpi.c", "include/acpi/acpi.h", "kernel/power/suspend.c", "kernel/power/power.h", "include/acpi/acpi_drivers.h"], "input_tokens_sum": 169284, "output_tokens_sum": 2335, "description": "Using the latest Arch Linux kernel (2.6.33.10-1), the contents of /proc/acpi/wakeup are:\n\n[scott@blargh-htpc ~]$ cat /proc/acpi/wakeup\nDevice  S-state   Status   Sysfs node\nHUB0      S5     disabled  pci:0000:00:09.0\nXVR0      S5     disabled\nXVR1      S5     disabled\nXVR2      S5     disabled\nXVR3      S5     disabled\nXVR4      S5     disabled  pci:0000:00:16.0\nXVR5      S5     disabled\nXVR6      S5     disabled\nUAR1      S5     disabled  pnp:00:08\nUSB0      S4     enabled   pci:0000:00:04.0\nUSB1      S4     disabled  pci:0000:00:06.0\nUSBB      S3     disabled  pci:0000:00:06.1\nUSB2      S3     disabled  pci:0000:00:04.1\nAZAD      S5     disabled  pci:0000:00:08.0\nMMAC      S5     disabled  pci:0000:00:0a.0\n\n[scott@blargh-htpc pkg]$ uname -a\nLinux blargh-htpc 2.6.33-ARCH #1 SMP PREEMPT Thu May 13 11:32:37 CEST 2010 x86_64 Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz GenuineIntel GNU/Linu\nx\n\nThe machine will suspend to RAM correctly, but will no longer be resumed by a USB remote power-on", "title": "Resume w/USB remote working in 2.6.33.2, no longer in 2.6.33.10", "Kernel Version": "2.6.33.5", "Product": "Drivers", "Component": "USB", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/sleep.c", "drivers/usb/core/hub.c", "drivers/usb/core/usb.c", "drivers/acpi/wakeup.c"], "causes": [{"cause": "The USB wake-up functionality might have been inadvertently disabled or altered in the ACPI subsystem between kernel versions 2.6.33.2 and 2.6.33.10.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Review and ensure that the ACPI wake-up settings for USB devices are correctly configured and enabled during the resume process."}, {"cause": "Changes in the USB driver code might have affected the handling of wake-up events from USB devices.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Check the USB hub initialization and power management code to ensure that wake-up events are properly registered and handled."}, {"cause": "The power management settings for USB devices might have been altered, preventing them from triggering wake-up events.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Verify that the power management settings for USB devices allow wake-up events and adjust the configuration if necessary."}, {"cause": "A regression in the handling of S4/S3 states for USB devices might have occurred, affecting their ability to wake the system.", "code_file": "drivers/acpi/wakeup.c", "fix_solution": "Investigate the handling of S4/S3 states in the ACPI wake-up code and ensure that USB devices are correctly configured to wake the system."}], "input_tokens": 763, "output_tokens": 318}
{"id": "16027", "paths": ["drivers/gpu/drm/i915/dvo_tfp410.c"], "predicts": ["drivers/gpu/drm/i915/dvo_tfp410.c", "drivers/gpu/drm/i915/dvo.h", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c"], "input_tokens_sum": 131601, "output_tokens_sum": 1385, "description": "Created attachment 26495 [details]\nPatch against linux-2.6.34 to use RSEN instead of HTPLG as monitor present indicator\n\nPresence detection of a digital monitor seems not to be reliable using the\nHTPLG bit, so use the RSEN bit instead.\n\nAs the original Xorg code suffers from the same problem, this \"bug\" is present in a kernels since this inclusion of the Xorg code into the Linux kernel (somewhere around 2.6.29, i think).", "title": "TFP410 driver should use RSEN bit to detect presence of a digital monitor", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/bridge/ti-tfp410.c"], "causes": [{"cause": "The TFP410 driver is using the HTPLG bit for monitor presence detection, which is unreliable.", "code_file": "drivers/gpu/drm/bridge/ti-tfp410.c", "fix_solution": "Modify the driver to use the RSEN bit instead of the HTPLG bit for detecting the presence of a digital monitor."}, {"cause": "The logic for detecting monitor presence using the HTPLG bit does not account for certain hardware configurations where the RSEN bit is more reliable.", "code_file": "drivers/gpu/drm/bridge/ti-tfp410.c", "fix_solution": "Implement a check for the RSEN bit in the presence detection logic and update the condition to use RSEN as the primary indicator."}, {"cause": "The integration of Xorg code into the Linux kernel did not adapt the monitor detection logic to use the more reliable RSEN bit.", "code_file": "drivers/gpu/drm/bridge/ti-tfp410.c", "fix_solution": "Refactor the code to replace all instances of HTPLG bit checks with RSEN bit checks for monitor presence detection."}], "input_tokens": 466, "output_tokens": 262}
{"id": "15982", "paths": ["drivers/gpu/drm/radeon/radeon_display.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_fb.c", "drivers/gpu/drm/radeon/radeon_pm.c", "drivers/gpu/drm/radeon/radeon_state.c", "sound/pci/atiixp.c", "sound/pci/hda/hda_intel.c", "include/sound/ac97_codec.h", "sound/core/pcm.c"], "input_tokens_sum": 177329, "output_tokens_sum": 3671, "description": "Playing sound via ATI IXP SB400 card does not work, qmmp player reports buffer underruns with ALSA, other (sox for example) applications just hangs, its possible to hear sound via FMOD , but its noisy and jerky\n\nLast worked: 2.6.33.4 , doesnt work for mainline 2.6.34 (tried with rc6 and rc7-git9)\n\n\nlspci -vv :\n\n00:14.5 Multimedia audio controller: ATI Technologies Inc IXP SB400 AC'97 Audio Controller (rev 02)\n        Subsystem: ASUSTeK Computer Inc. Device 1183\n        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV+ VGASnoop- ParErr- Stepping- SERR+ FastB2B- DisINTx-\n        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=slow >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-\n        Latency: 64 (500ns min), Cache Line Size: 64 bytes\n        Interrupt: pin B routed to IRQ 10\n        Region 0: Memory at febfcc00 (32-bit, non-prefetchable) [size=256]\n        Capabilities: <access denied>\n        Kernel driver in use: ATI IXP AC97 controller\n        Kernel modules: snd-atiixp\n\n\n$ lsmod\nMo", "title": "radeon module update for 2.6.34 breaks ALSA (snd_atiixp and snd_hda_intel)", "Kernel Version": "2.6.34", "Product": "Drivers", "Component": "Video", "Hardware": "i386 Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_audio.c", "sound/pci/atiixp.c", "drivers/pci/pci.c"], "causes": [{"cause": "The radeon module update may have introduced changes that affect the initialization or configuration of the sound hardware, leading to buffer underruns and application hangs.", "code_file": "drivers/gpu/drm/radeon/radeon_audio.c", "fix_solution": "Review and adjust the audio initialization sequence to ensure compatibility with the ATI IXP SB400 AC'97 Audio Controller, possibly reverting changes that affect sound buffer management."}, {"cause": "The interaction between the radeon module and ALSA drivers (snd_atiixp and snd_hda_intel) may be causing resource conflicts or incorrect handling of audio interrupts.", "code_file": "sound/pci/atiixp.c", "fix_solution": "Ensure proper handling of audio interrupts and resource allocation in the snd_atiixp driver, possibly adding checks or synchronization mechanisms to prevent conflicts with the radeon module."}, {"cause": "Changes in the radeon module might be affecting the PCI configuration space, leading to incorrect settings for the audio controller.", "code_file": "drivers/pci/pci.c", "fix_solution": "Verify and correct any changes to the PCI configuration space handling that might affect the audio controller, ensuring that the correct settings are applied during initialization."}], "input_tokens": 685, "output_tokens": 275}
{"id": "15979", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/platform/x86/eeepc-laptop.c", "drivers/power/power_supply_core.c", "drivers/power/max17040_battery.c", "include/linux/power_supply.h", "arch/x86/kernel/acpi/processor.c", "arch/x86/include/asm/acpi.h", "drivers/power/power_supply_sysfs.c", "kernel/power/main.c", "arch/x86/kernel/acpi/boot.c", "drivers/power/apm_power.c"], "input_tokens_sum": 158009, "output_tokens_sum": 1850, "description": "On eeepc 900 (and possibly other variants) the battery status is incorrectly reported, possibly do to a mixup of units.\n\nWith power plugged in and battery fully charged:\n$ cat /proc/acpi/battery/BAT0/info \npresent:                 yes\ndesign capacity:         5200 mAh\nlast full capacity:      100 mAh\nbattery technology:      rechargeable\ndesign voltage:          8400 mV\ndesign capacity warning: 20 mAh\ndesign capacity low:     10 mAh\ncapacity granularity 1:  52 mAh\ncapacity granularity 2:  52 mAh\nmodel number:            900\nserial number:            \nbattery type:            LION\nOEM info:                ASUS\n\n$ cat /proc/acpi/battery/BAT0/state \npresent:                 yes\ncapacity state:          ok\ncharging state:          charged\npresent rate:            unknown\nremaining capacity:      100 mAh\npresent voltage:         8326 mV\n\n\nlast full capacity remaining capacity are reported by asus in %\nthere may be a similar problem with granularity\n\nAs a result of the above ubuntu reports a", "title": "Eeepc 900 reports incorrect battery status", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c"], "causes": [{"cause": "Incorrect unit conversion for battery capacity values, leading to misinterpretation of percentage as mAh.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a conversion function to correctly interpret percentage values as mAh when reading battery capacity data."}, {"cause": "Misinterpretation of battery granularity values due to incorrect unit handling.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure granularity values are correctly converted from percentage to mAh, similar to capacity values."}, {"cause": "Incorrect parsing of ACPI battery information leading to erroneous reporting of battery status.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Review and correct the parsing logic for ACPI battery information to ensure accurate data representation."}], "input_tokens": 602, "output_tokens": 188}
{"id": "15908", "paths": ["drivers/char/nozomi.c"], "predicts": ["drivers/char/nozomi.c", "drivers/char/tty_io.c", "drivers/char/tty_port.c", "kernel/mutex.c", "include/linux/mutex.h", "drivers/char/tty_buffer.c", "kernel/irq/handle.c", "kernel/irq/manage.c", "drivers/char/random.c", "fs/ioctl.c"], "input_tokens_sum": 172277, "output_tokens_sum": 2148, "description": "There is device in /dev/ directory:\n\nls -l /dev/noz*\ncrw-rw---- 1 root dialout 251, 0 2010-05-05 11:31 /dev/noz0\ncrw-rw---- 1 root dialout 251, 1 2010-05-05 11:31 /dev/noz1\ncrw-rw---- 1 root dialout 251, 2 2010-05-05 11:31 /dev/noz2\ncrw-rw---- 1 root dialout 251, 3 2010-05-05 11:31 /dev/noz3\n\nbut trying to use it from any probram (pppd, comgt) gives:\nCan't open device /dev/noz0\n\nand the dmesg has:\n\nWarning: dev (noz0) tty->count(0) != #fd's(1) in tty_open\nnoz: activated 0: f685b860\nBUG: unable to handle kernel NULL pointer dereference at 000000bc\nIP: [<c046b03c>] mutex_lock+0xc/0x30\n*pde = 00000000\nOops: 0002 [#1] SMP\nlast sysfs file: /sys/devices/pci0000:00/0000:00:14.4/0000:02:06.0/net/mon.wlan0                                              /flags\nModules linked in: binfmt_misc xt_state xt_tcpudp ipt_MASQUERADE iptable_nat nf_                                              nat nf_conntrack_ipv4 nf_conntrack nf_defrag_ipv4 nozomi arc4 pcmcia ecb ath5k m                                   ", "title": "Not able to use nozomi modem", "Kernel Version": "2.6.34-rc6", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/char/nozomi.c", "drivers/tty/tty_io.c"], "causes": [{"cause": "The NULL pointer dereference in mutex_lock suggests that the nozomi driver is attempting to lock a mutex that has not been properly initialized.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Ensure that the mutex is initialized before it is used in the nozomi driver, possibly by adding mutex_init(&nozomi->mutex) in the initialization function."}, {"cause": "The tty->count mismatch indicates that the tty structure is not being properly managed, leading to inconsistencies in reference counting.", "code_file": "drivers/tty/tty_io.c", "fix_solution": "Review the reference counting logic in the tty_open function to ensure that the tty->count is correctly incremented and decremented."}, {"cause": "The device nodes /dev/noz* are created, but the driver might not be correctly handling open operations, leading to the 'Can't open device' error.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Check the open function implementation in the nozomi driver to ensure it correctly handles device opening and returns appropriate error codes."}], "input_tokens": 724, "output_tokens": 258}
{"id": "15903", "paths": ["drivers/pnp/resource.c"], "predicts": ["drivers/pnp/core.c", "drivers/pnp/manager.c", "drivers/pnp/pnpacpi/core.c", "arch/x86/kernel/acpi/boot.c", "include/linux/pnp.h", "arch/x86/mm/ioremap.c", "kernel/resource.c", "drivers/pnp/base.h", "arch/x86/pci/acpi.c", "sound/isa/opl3sa2.c"], "input_tokens_sum": 166918, "output_tokens_sum": 1928, "description": "Pavel wrote:\n> i am playing with old PIII computer (HP Vectra VE) and ISA soundcards.\n> Soundcards are PNP(yamaha,opti,ess,...) and no PNP (multisound).\n> Machine\n> is old, but ACPI compliant - old BIOS.\n> \n> Computer booting OK. PNP0 devices allocate resources OK, but PNP1\n> devices (one ISA slot) not. PNP soundcard driver is not correctly\n> loaded\n> - soundcard device not created.\n\n> 2.6.33 kernel working without problem.", "title": "PNP resource assignment fails", "Kernel Version": "2.6.34-rc6", "Product": "Drivers", "Component": "PNP", "Hardware": "All Linux", "reranked_files": ["drivers/pnp/manager.c", "drivers/pnp/isapnp/core.c", "drivers/acpi/resource.c", "sound/pci/isa/pnp_card.c"], "causes": [{"cause": "The PNP resource assignment logic for ISA devices may have regressed between kernel versions 2.6.33 and 2.6.34-rc6, possibly due to changes in the handling of PNP1 devices.", "code_file": "drivers/pnp/manager.c", "fix_solution": "Review and adjust the logic in the PNP resource assignment function to ensure that PNP1 devices are correctly handled, similar to the logic in version 2.6.33."}, {"cause": "There might be an issue with the initialization sequence or resource allocation for ISA PNP devices, which could be causing the soundcard driver to fail to load.", "code_file": "drivers/pnp/isapnp/core.c", "fix_solution": "Ensure that the initialization sequence for ISA PNP devices is correctly implemented and matches the sequence that worked in kernel version 2.6.33."}, {"cause": "Changes in the ACPI subsystem between kernel versions might be affecting the detection and resource allocation for PNP1 devices.", "code_file": "drivers/acpi/resource.c", "fix_solution": "Investigate and potentially revert changes in the ACPI resource handling that could impact PNP1 device resource allocation."}, {"cause": "The PNP soundcard driver might not be correctly registering the device due to changes in the PNP core or driver interface.", "code_file": "sound/pci/isa/pnp_card.c", "fix_solution": "Verify and update the soundcard driver's registration and initialization code to ensure compatibility with the updated PNP core interface."}], "input_tokens": 479, "output_tokens": 357}
{"id": "15789", "paths": ["fs/nfs/dir.c"], "predicts": ["fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/namespace.c", "fs/nfs/super.c", "fs/nfs/write.c", "include/linux/nfs.h", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "init/do_mounts.c", "include/linux/vfs.h"], "input_tokens_sum": 163330, "output_tokens_sum": 2556, "description": "There is some serious weirdness if you try and use bind mounts in conjunction with nfs4 mounts.\n\n $ df -T /var/tmp\nFilesystem    Type   1K-blocks      Used Available Use% Mounted on\nfs.beware.dropbear.id.au:/tmp/\n              nfs4     5160576    403968   4494464   9% /var/tmp\n $ df -T /tmp\nFilesystem    Type   1K-blocks      Used Available Use% Mounted on\n/tmp         tmpfs      921600         4    921596   1% /tmp\n $ cat /tmp/foo\nOver The Lazy Dogs Back\n $ cat /var/tmp/foo\nThe Quick Brown Fox\n#\n# So /var/tmp/foo is on an nfs4 mounted filesystem\n# /tmp/foo is on a tmpfs. Both files are different.\n#\n $ mount --bind /tmp/foo /var/tmp/foo\n $ cat /tmp/foo\nOver The Lazy Dogs Back\n $ cat /var/tmp/foo\nThe Quick Brown Fox\n#\n# Both files should be the same. ie \"Over The Lazy Dogs Back\"\n#\n# In other oddity, ls -l correctly shows both files the same size (31),\n# and ls -i correctly shows both have the same inode number, yet:\n $ cat /tmp/foo | wc -c\n31\n $ cat /var/tmp/foo | wc -c\n20\n#\n# So much f", "title": "Bind mounts broken when used with NFSv4", "Kernel Version": "2.6.32", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/file.c", "fs/nfs/inode.c", "fs/namei.c", "fs/nfs/nfs4proc.c"], "causes": [{"cause": "The bind mount operation does not correctly update the file content when used with NFSv4 due to improper handling of file data caching.", "code_file": "fs/nfs/file.c", "fix_solution": "Ensure that the NFS client invalidates the cache for the file being bind-mounted to force a fresh read from the server."}, {"cause": "Inode information is not correctly synchronized between the tmpfs and NFSv4 filesystem, leading to inconsistent file content visibility.", "code_file": "fs/nfs/inode.c", "fix_solution": "Modify the inode revalidation logic to ensure that inode attributes are correctly updated during bind mount operations."}, {"cause": "The VFS layer does not properly handle bind mounts with NFSv4, causing discrepancies in file content visibility.", "code_file": "fs/namei.c", "fix_solution": "Update the VFS bind mount logic to ensure that file content is correctly synchronized between different filesystem types."}, {"cause": "NFSv4 does not correctly handle file locking and synchronization during bind mount operations, leading to stale data being read.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Implement additional locking mechanisms to ensure that file data is correctly synchronized during bind mount operations."}], "input_tokens": 662, "output_tokens": 294}
{"id": "15788", "paths": ["drivers/usb/core/driver.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/hub.c", "sound/usb/usbaudio.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "include/linux/pm.h", "sound/core/pcm_native.c", "arch/x86/kernel/acpi/sleep.c", "drivers/usb/core/hcd.c", "drivers/usb/core/hcd-pci.c"], "input_tokens_sum": 163530, "output_tokens_sum": 1659, "description": "My external usb sound card doesn't work after resume. What is strange is that it appears in lsusb output but not in aplay -l. I am using tuxonice but the problem also occurs with the suspend-to-disk functionality of the mainline kernel.", "title": "external usb sound card doesn't work after resume", "Kernel Version": "2.6.34-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/usb/card.c", "sound/core/init.c", "drivers/usb/core/hub.c", "sound/usb/pcm.c"], "causes": [{"cause": "The USB sound card driver does not properly reinitialize the device after resume, causing it to be recognized by lsusb but not by the sound subsystem.", "code_file": "sound/usb/card.c", "fix_solution": "Ensure that the USB sound card driver reinitializes the device properly during the resume process by adding a call to the initialization routine in the resume handler."}, {"cause": "The ALSA sound subsystem fails to rescan and re-register the USB sound card after resume, leading to the device not appearing in aplay -l.", "code_file": "sound/core/init.c", "fix_solution": "Modify the ALSA sound subsystem to trigger a rescan of USB sound devices during the resume process to ensure all devices are properly registered."}, {"cause": "The power management code does not correctly restore the state of the USB sound card, causing it to be recognized by the USB subsystem but not by the sound subsystem.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Update the power management code to ensure that the state of USB devices, including sound cards, is fully restored during resume."}, {"cause": "The sound card's state is not correctly saved and restored across suspend and resume cycles, leading to incomplete initialization.", "code_file": "sound/usb/pcm.c", "fix_solution": "Implement proper state saving and restoration logic for the USB sound card in the suspend and resume handlers."}], "input_tokens": 409, "output_tokens": 332}
{"id": "15537", "paths": ["drivers/ata/libata-sff.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "drivers/ata/ata_piix.c", "drivers/ata/libata-sff.c", "block/blk-timeout.c", "block/blk-core.c", "include/linux/libata.h", "kernel/irq/spurious.c", "arch/x86/kernel/irq.c"], "input_tokens_sum": 174636, "output_tokens_sum": 2673, "description": "The system works fine with 2.6.33 \nCompiling 2.6.34-rc1 I accepted the defaults for all the new options (except the max no of GPUs). The kernel boot Ok but when I try to use the system and access the disk it freezes for about 30 seconds with no disk activity and then I get a message like this in the system log\n\nMar 11 14:57:57 eccles kernel: ata2: clearing spurious IRQ\nMar 11 14:58:27 eccles kernel: ata2: lost interrupt (Status 0x50)\nMar 11 14:58:27 eccles kernel: ata2.01: exception Emask 0x0 SAct 0x0 SErr 0x0 action 0x0 frozen\nMar 11 14:58:27 eccles kernel: ata2.01: failed command: WRITE DMA\nMar 11 14:58:27 eccles kernel: ata2.01: cmd ca/00:08:4c:37:6f/00:00:00:00:00/fd tag 0 dma 4096 out\nMar 11 14:58:27 eccles kernel:          res 40/00:00:00:00:00/00:00:00:00:00/10 Emask 0x4 (timeout)\nMar 11 14:58:27 eccles kernel: ata2.01: status: { DRDY }\nMar 11 14:58:27 eccles kernel: ata2.00: hard resetting link\nMar 11 14:58:28 eccles kernel: ata2.01: hard resetting link\nMar 11 14:58:28 eccles k", "title": "2.6.34-rc1 hangs for 30 seconds when trying to access the disk", "Kernel Version": "2.6.34-rc1", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-sff.c", "drivers/ata/libata-eh.c", "arch/x86/kernel/apic/io_apic.c"], "causes": [{"cause": "The 'lost interrupt' message suggests that the interrupt handling for the SATA controller is not functioning correctly, possibly due to changes in the IRQ handling code.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Ensure that the IRQ handling logic correctly acknowledges and clears interrupts for the SATA controller. This may involve reviewing recent changes to the interrupt handling code and ensuring compatibility with the specific hardware."}, {"cause": "The 'WRITE DMA' command failure indicates a potential issue with the DMA setup or execution, possibly due to incorrect configuration or a regression in the DMA handling code.", "code_file": "drivers/ata/libata-sff.c", "fix_solution": "Review and correct the DMA setup and execution logic, ensuring that the DMA engine is properly initialized and that commands are correctly issued and completed."}, {"cause": "The 'hard resetting link' message suggests that the link between the SATA controller and the device is unstable, possibly due to changes in the link management code.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Investigate and stabilize the link management code, ensuring that link resets are handled gracefully and that the link is properly re-established after a reset."}, {"cause": "The 'spurious IRQ' message indicates that the system is receiving unexpected interrupts, which could be due to incorrect IRQ routing or masking.", "code_file": "arch/x86/kernel/apic/io_apic.c", "fix_solution": "Verify and correct the IRQ routing and masking logic to ensure that only valid interrupts are processed and that spurious interrupts are minimized."}], "input_tokens": 737, "output_tokens": 363}
{"id": "15419", "paths": ["drivers/net/wireless/ipw2x00/ipw2200.c"], "predicts": ["drivers/net/wireless/ipw2x00/ipw2200.c", "drivers/net/wireless/ipw2x00/ipw2200.h", "net/wireless/scan.c", "drivers/net/wireless/ipw2x00/libipw_wx.c", "net/wireless/mlme.c"], "input_tokens_sum": 161866, "output_tokens_sum": 2389, "description": "Created attachment 25292 [details]\nCommented dmesg (ipw2200 debug=255)\n\nOverview:\nSince long time (at least 2.6.24), with some networks the connection gets systematically dropped when a scan is requested (i.e. by NetworkManager).\n\nSteps to reproduce:\nI could always reproduce this issue by stopping NetworkManager and manually configuring a wireless connection to an affected network in /etc/network/interfaces (ifupdown uses wpa_supplicant, like NM does): when the connection is active, a iwlist ethx scan command always causes ap disassociation and subsequent connection drop. If no scans are requested the connection is very reliable and fast and lasts hours (no disassociations happen).\n\nActual results:\nThe card gets disassociated from the ap and the connection drops.\n\nExpected results:\nThe connection shouldn't drop when scanning is requested.\n\nBuild date and platform:\nDebian Sid i386 current (kernel 2.6.32-9) on an Acer TravelMate 435LMi + Intel ProWireless 2915 (ipw2200).\n\nAdditional info", "title": "ipw2200: requesting scan causes connection drops", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ipw2x00/ipw2200.c", "net/wireless/core.c", "drivers/net/wireless/ipw2x00/ipw2200.h", "drivers/net/wireless/ipw2x00/ipw2200_hw.c"], "causes": [{"cause": "The ipw2200 driver may not handle scan requests properly, leading to disassociation from the access point.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.c", "fix_solution": "Modify the scan handling logic to ensure that scan requests do not interfere with the current connection state, possibly by deferring scans when connected."}, {"cause": "The wireless stack may not properly synchronize scan operations with connection management, causing race conditions.", "code_file": "net/wireless/core.c", "fix_solution": "Implement locking mechanisms or state checks to ensure that scan operations do not disrupt active connections."}, {"cause": "NetworkManager or wpa_supplicant may trigger scan requests in a way that conflicts with the ipw2200 driver's connection management.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200.h", "fix_solution": "Adjust the driver's interaction with user-space tools to better handle scan requests without affecting the connection."}, {"cause": "The firmware or hardware interaction layer in the ipw2200 driver may not correctly handle concurrent operations, leading to disassociation.", "code_file": "drivers/net/wireless/ipw2x00/ipw2200_hw.c", "fix_solution": "Review and update the hardware interaction code to ensure it can handle concurrent scan and connection operations without causing disassociation."}], "input_tokens": 579, "output_tokens": 322}
{"id": "15407", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/power.c", "kernel/power/suspend.c", "kernel/irq/spurious.c", "arch/x86/kernel/time.c", "include/linux/irq.h", "include/linux/suspend.h", "fs/proc/interrupts.c", "arch/x86/kernel/acpi/processor.c", "kernel/irq/handle.c", "drivers/usb/host/xhci-hcd.c"], "input_tokens_sum": 164659, "output_tokens_sum": 2110, "description": "After unloading drivers that cause problems with suspend (xhci, bluetooth, etc) the system can suspend OK.  On resume however this message is displayed in dmesg:\n\n[18446744064.763411] irq 9: nobody cared (try booting with the \"irqpoll\" option)\n[18446744064.763419] Pid: 0, comm: swapper Tainted: G        W  2.6.32-14-generic #20-Ubuntu\n[18446744064.763423] Call Trace:\n[18446744064.763426]  <IRQ>  [<ffffffff810c4c1b>] __report_bad_irq+0x2b/0xa0\n[18446744064.763439]  [<ffffffff810c4e1c>] note_interrupt+0x18c/0x1d0\n[18446744064.763446]  [<ffffffff81019f09>] ? read_tsc+0x9/0x20\n[18446744064.763452]  [<ffffffff810c551d>] handle_fasteoi_irq+0xdd/0x100\n[18446744064.763457]  [<ffffffff81015d52>] handle_irq+0x22/0x30\n[18446744064.763465]  [<ffffffff81563bdc>] do_IRQ+0x6c/0xf0\n[18446744064.763472]  [<ffffffff81013b53>] ret_from_intr+0x0/0x11\n[18446744064.763475]  <EOI>  [<ffffffff813086c0>] ? acpi_idle_enter_bm+0x283/0x2b7\n[18446744064.763486]  [<ffffffff813086b9>] ? acpi_idle_enter_bm+0x27c/0x2b", "title": "All Lenovo i5/i7 notebooks do not resume properly after suspend - system resumes but will hang if resumed a second time", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "All Linux", "reranked_files": ["kernel/irq/manage.c", "drivers/acpi/sleep.c", "drivers/acpi/processor_idle.c", "drivers/base/power/main.c"], "causes": [{"cause": "The IRQ handler for IRQ 9 is not properly re-enabled after a suspend/resume cycle, leading to the 'nobody cared' message.", "code_file": "kernel/irq/manage.c", "fix_solution": "Ensure that the IRQ handler is properly re-registered and re-enabled during the resume process by adding checks and reinitialization in the resume path."}, {"cause": "ACPI is not correctly restoring the IRQ routing or configuration after resume, causing IRQ 9 to become unhandled.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Add additional ACPI state restoration logic to ensure IRQ routing is correctly restored during the resume process."}, {"cause": "The ACPI idle driver is not correctly handling the transition from idle to active state after resume, leading to IRQ issues.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Modify the ACPI idle state transition logic to ensure proper handling of IRQs when resuming from suspend."}, {"cause": "The system's power management code is not correctly handling the reinitialization of hardware components, leading to IRQ conflicts.", "code_file": "drivers/base/power/main.c", "fix_solution": "Enhance the power management resume routines to ensure all hardware components are correctly reinitialized and IRQs are properly configured."}], "input_tokens": 790, "output_tokens": 310}
{"id": "15366", "paths": ["kernel/time/clocksource.c"], "predicts": ["kernel/time/clocksource.c", "drivers/clocksource/acpi_pm.c", "drivers/clocksource/scx200_hrt.c", "drivers/clocksource/sh_cmt.c", "drivers/clocksource/sh_tmu.c", "drivers/clocksource/tcb_clksrc.c", "fs/sysfs/file.c", "include/linux/clocksource.h", "kernel/time/timekeeping.c", "arch/x86/kernel/time.c"], "input_tokens_sum": 162514, "output_tokens_sum": 1567, "description": "curr_clocksource is uninitialized if GENERIC_TIME=n\n\n# cat /sys/devices/system/clocksource/clocksource0/current_clocksource\n[  187.940000] Unable to handle kernel NULL pointer dereference at virtual address 00000000\n[  187.960000] pgd = df160000\n[  187.960000] [00000000] *pgd=bf11a031, *pte=00000000, *ppte=00000000\n[  187.970000] Internal error: Oops: 17 [#1] PREEMPT\n[  187.970000] last sysfs file: /sys/devices/system/clocksource/clocksource0/current_clocksource\n[  187.970000] Modules linked in:\n[  187.970000] CPU: 0    Not tainted  (2.6.32.8-iop32x #13)\n[  187.970000] PC is at sysfs_show_current_clocksources+0x2c/0x58\n[  187.970000] LR is at sysfs_show_current_clocksources+0x18/0x58\n[  187.970000] pc : [<c006b530>]    lr : [<c006b51c>]    psr: 60000013\n[  187.970000] sp : df0b9f10  ip : 00000000  fp : beff0cb0\n[  187.970000] r10: c043e3cc  r9 : df0eabd8  r8 : df0b9f80\n[  187.970000] r7 : 00000fff  r6 : df8be960  r5 : c042e0f8  r4 : df10b000\n[  187.970000] r3 : c0472980  r2 : c03b02d8 ", "title": "sysfs oops when reading current_clocksource if GENERIC_TIME=n", "Kernel Version": "2.6.32", "Product": "Timers", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["kernel/time/clocksource.c", "include/linux/clocksource.h"], "causes": [{"cause": "The curr_clocksource variable is not initialized when GENERIC_TIME is set to 'n', leading to a NULL pointer dereference when accessing current_clocksource.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Add a check to ensure curr_clocksource is initialized before accessing it, or provide a default initialization when GENERIC_TIME is not enabled."}, {"cause": "The sysfs_show_current_clocksources function does not handle the case where curr_clocksource is NULL, leading to an oops when attempting to read from it.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Modify sysfs_show_current_clocksources to check if curr_clocksource is NULL and return an appropriate error message or default value instead of proceeding with the dereference."}, {"cause": "The build configuration does not account for the absence of GENERIC_TIME, leading to unguarded access to clocksource-related variables.", "code_file": "include/linux/clocksource.h", "fix_solution": "Add preprocessor checks to ensure that clocksource-related functions and variables are only compiled when GENERIC_TIME is enabled, or provide alternative implementations when it is not."}], "input_tokens": 791, "output_tokens": 273}
{"id": "15303", "paths": ["drivers/platform/x86/sony-laptop.c"], "predicts": ["drivers/platform/x86/sony-laptop.c", "net/rfkill/core.c", "include/linux/rfkill.h", "include/linux/sony-laptop.h"], "input_tokens_sum": 161292, "output_tokens_sum": 1870, "description": "Keywords:\nWLAN, RF kill switch, iwl3945, sony-laptop\n\nKernel version:\nLinux version 2.6.32-13-generic (buildd@vernadsky) (gcc version 4.4.3 (Ubuntu 4.4.3-2ubuntu1) ) #18-Ubuntu SMP Wed Feb 10 21:24:20 UTC 2010\n(I was also able to confirm the problem with Ubuntu Karmic and Fedora 12)\n\nDescription:\nIf the RF kill switch is activated during booting my Sony Notebook (VGN-TX3HP) WLAN cannot be activated later. If WLAN is activated during boot it can be deactivated and reactivated without problems.\n\nI was able to narrow down the problem: If I unload the sony-laptop module before disabling the kill switch, WLAN becomes active without problems. Then I can load sony-laptop without it is causing problems.\n\nThis problem did not occur with Kernel versions <=2.6.28 (at least).\n\nSteps to reproduce the problem:\n- get a Sony Vaio laptop with iwl3945 hardware (my is a TX3HP)\n- enable RF kill switch (disable WLAN)\n- boot Linux\n- disable RF kill switch (enable WLAN)\n- WLAN does not become available  \n\nSt", "title": "WLAN cannot be activated if booted with activated RF kill switch on Sony notebook (iwl3945)", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "Platform", "Hardware": "i386 Linux", "reranked_files": ["drivers/platform/x86/sony-laptop.c", "drivers/net/wireless/iwlegacy/iwl3945.c"], "causes": [{"cause": "The RF kill switch state is not properly communicated to the iwl3945 driver when the sony-laptop module is loaded, causing the WLAN to remain disabled.", "code_file": "drivers/platform/x86/sony-laptop.c", "fix_solution": "Modify the sony-laptop module to correctly update the RF kill switch state to the iwl3945 driver upon loading, ensuring the WLAN state is synchronized."}, {"cause": "The iwl3945 driver does not correctly handle the RF kill switch state change event when the sony-laptop module is loaded after boot.", "code_file": "drivers/net/wireless/iwlegacy/iwl3945.c", "fix_solution": "Ensure that the iwl3945 driver re-evaluates the RF kill switch state upon module load and state change events, allowing it to enable WLAN if the switch is off."}, {"cause": "The RF kill switch state is not being reset or re-evaluated correctly during the boot process when the sony-laptop module is loaded.", "code_file": "drivers/platform/x86/sony-laptop.c", "fix_solution": "Implement a mechanism to re-check and update the RF kill switch state during the boot process or module initialization to ensure correct WLAN functionality."}], "input_tokens": 633, "output_tokens": 286}
{"id": "15287", "paths": ["drivers/pci/quirks.c"], "predicts": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_drv.c", "drivers/gpu/drm/radeon/radeon_device.c", "drivers/gpu/drm/radeon/radeon_irq.c", "drivers/gpu/drm/radeon/radeon_fence.c"], "input_tokens_sum": 172218, "output_tokens_sum": 2357, "description": "Using the KMS option of the radeon-driver makes the kernel segfault and reboot when starting an kde session. This happens on daves radeon-testing tree using latest mesa-git and libdrm-git. Also happens on latest linus tree. The same combination works great when using the non-kms codepath.\n\nHardware is an mobility radeon x700 pcie.\n\nlspci -vn:\n02:00.0 0300: 1002:5653 (prog-if 00 [VGA controller])\n        Subsystem: 1734:1093\n        Flags: bus master, fast devsel, latency 0, IRQ 24\n        Memory at b0000000 (64-bit, prefetchable) [size=128M]\n        Memory at feaf0000 (64-bit, non-prefetchable) [size=64K]\n        I/O ports at b000 [size=256]\n        Expansion ROM at feac0000 [disabled] [size=128K]\n        Capabilities: [50] Power Management version 2\n        Capabilities: [58] Express Endpoint, MSI 00\n        Capabilities: [80] MSI: Enable- Count=1/1 Maskable- 64bit+\n        Capabilities: [100] Advanced Error Reporting", "title": "RadeonKMS segfaults kdm on mobility radeon x700 pcie", "Kernel Version": "2.6.34-rc1", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_kms.c", "drivers/gpu/drm/radeon/radeon_memory.c", "drivers/gpu/drm/radeon/radeon_pci.c", "drivers/gpu/drm/radeon/radeon_aer.c"], "causes": [{"cause": "The Radeon KMS driver may not properly handle the initialization of the mobility Radeon X700 PCIe, leading to a segmentation fault.", "code_file": "drivers/gpu/drm/radeon/radeon_kms.c", "fix_solution": "Add a check to ensure that the initialization sequence for the mobility Radeon X700 PCIe is correctly handled, possibly by adding a specific case for this hardware in the initialization code."}, {"cause": "There might be an issue with the memory management in the Radeon KMS driver, causing incorrect memory access during the KDE session start.", "code_file": "drivers/gpu/drm/radeon/radeon_memory.c", "fix_solution": "Implement additional memory boundary checks and ensure that memory allocations are correctly handled for the mobility Radeon X700 PCIe."}, {"cause": "The PCIe configuration for the mobility Radeon X700 might not be correctly set up, leading to incorrect device communication.", "code_file": "drivers/gpu/drm/radeon/radeon_pci.c", "fix_solution": "Review and update the PCIe configuration settings specific to the mobility Radeon X700 to ensure proper device initialization and communication."}, {"cause": "The Advanced Error Reporting (AER) capabilities might be causing issues with error handling in the Radeon KMS driver.", "code_file": "drivers/gpu/drm/radeon/radeon_aer.c", "fix_solution": "Enhance the error handling logic to better manage and log errors reported by the AER capabilities, ensuring that they do not lead to a kernel segfault."}], "input_tokens": 634, "output_tokens": 351}
{"id": "15118", "paths": ["drivers/platform/x86/thinkpad_acpi.c"], "predicts": ["drivers/platform/x86/thinkpad_acpi.c"], "input_tokens_sum": 168194, "output_tokens_sum": 1779, "description": "Reported-by: Florian Zumbiehl <florz@florz.de>\n\nThe vendor (\"ThinkPad\") key on a T20 with latest T22 BIOS only works after a S3 suspend/resume cycle.  Tested with direct (no userspace script) S3 sleep.\n\nThe T20 is running a patched kernel to fix the EC DoS problem.\n\nThe key is operating in NVRAM polling mode.\n\nIt breaks again when thinkpad-acpi is unloaded and then reloaded.\n\nDriver hotkey state dump:\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_all_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_bios_enabled:0\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_bios_mask:0x0000080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_enable:1\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_poll_freq:10\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_recommended_mask:0x0088080c\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_report_mode:1\n| /sys/bus/platform/devices/thinkpad_acpi/hotkey_source_mask:0x0088", "title": "\"ThinkPad\" key on T20 only works after suspend cycle", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c"], "causes": [{"cause": "The ThinkPad key functionality is not properly initialized until after a suspend/resume cycle, possibly due to missing initialization routines in the driver.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Ensure that the initialization routine for the ThinkPad key is called during the driver's probe function, not just after a resume from suspend."}, {"cause": "The NVRAM polling mode is not correctly set up until after a suspend/resume cycle, indicating a potential issue with the initial configuration of the polling mechanism.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Add code to explicitly configure the NVRAM polling mode during the driver's initialization process."}, {"cause": "The unloading and reloading of the thinkpad-acpi module resets the hotkey state, which is not correctly restored upon reloading.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Implement a function to save and restore the hotkey state when the module is unloaded and reloaded."}, {"cause": "The hotkey mask settings are not correctly applied until after a suspend/resume cycle, possibly due to incorrect initial mask configuration.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Ensure that the hotkey mask settings are correctly applied during the driver's initialization and not just after a resume."}], "input_tokens": 677, "output_tokens": 330}
{"id": "14957", "paths": ["drivers/gpu/drm/i915/intel_lvds.c"], "predicts": ["drivers/gpu/drm/drm_crtc_helper.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/intel_display.c", "include/drm/drm_crtc_helper.h", "include/drm/i915_drm.h"], "input_tokens_sum": 169560, "output_tokens_sum": 2425, "description": "When the i915 module is loaded with modeset=1, the screen is blanked and stays that way, with the following in dmesg:\n\n[drm] DAC-6: set mode 640x480 0\n[drm] TV-14: set mode NTSC 480i 0\n------------[ cut here ]------------\nWARNING: at drivers/gpu/drm/drm_crtc_helper.c:1032 drm_helper_initial_config+0x36/0x52 [drm_kms_helper]()\nHardware name: SX20S\nNo connectors reported connected with modes\nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_intel8x0(+) firewire_ohci snd_intel8x0m(+) pcmcia snd_pcm_oss snd_ac97_codec firewire_core ac97_bus snd_mixer_oss i915(+) joydev crc_itu_t yenta_socket snd_pcm drm_kms_helper snd_timer drm rsrc_nonstatic b44 ipw2200 sdhci_pci ohci1394 snd cfbcopyarea soundcore psmouse video ssb sdhci pcmcia_core i2c_i801 libipw ieee1394 iTCO_wdt serio_raw snd_page_alloc pcspkr lib80211 iTCO_vendor_support output cfbimgblt cfbfillrect led_class mii aes_i586 aes_generic xts gf128mul\nPid: 1226, comm: modprobe Not tainted 2.6.32 #1", "title": "Blank screen with KMS enabled", "Kernel Version": "2.6.33-rc2", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/drm_crtc_helper.c", "drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/drm_kms_helper.c"], "causes": [{"cause": "The drm_helper_initial_config function is not correctly handling the case where no connectors are reported connected, leading to a blank screen.", "code_file": "drivers/gpu/drm/drm_crtc_helper.c", "fix_solution": "Modify drm_helper_initial_config to check for connected connectors and handle the case where none are found by setting a default mode or returning an error."}, {"cause": "The i915 driver may not be correctly initializing the display pipeline when modeset=1 is enabled, causing the screen to remain blank.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Ensure that the i915 driver properly initializes the display pipeline by verifying connector status and setting a valid mode during initialization."}, {"cause": "The KMS (Kernel Mode Setting) helper functions might not be correctly setting up the display modes due to incorrect assumptions about the hardware configuration.", "code_file": "drivers/gpu/drm/drm_kms_helper.c", "fix_solution": "Update the KMS helper functions to better handle cases where the hardware configuration does not match expected profiles, possibly by adding more robust error handling and fallback mechanisms."}], "input_tokens": 680, "output_tokens": 264}
{"id": "14753", "paths": ["drivers/acpi/blacklist.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/ec.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/video.h", "include/acpi/acpi.h", "drivers/acpi/power.c"], "input_tokens_sum": 202822, "output_tokens_sum": 7924, "description": "Created attachment 24058 [details]\ndmesg 2.6.32\n\nMost recent kernel where this bug did not occur: 2.6.31.6 stock from Arch Linux\nDistribution: Arch Linux\nHardware Environment: Asus Notebook X5DIJ-SX101L\nSoftware Environment: n/a\n\nProblem Description: \nSince installing the new kernel there a many ACPI Errors in dmesg:\n \nACPI Exception: AE_AML_BUFFER_LIMIT, Index (000000064) is beyond end of object (20090903/exoparg2-445)\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.STBR] (Node ffff88007d81d120), AE_AML_BUFFER_LIMIT\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.VGA_.LCDD._BCM] (Node ffff88007d8373a0), AE_AML_BUFFER_LIMIT\nACPI Error: Evaluating _BCM failed (20090903/video-528)\n\nI didn't notice any problems yet, maybe graphics in X are a bit slower but the biggest problem for me is the spam in dmesg. I found a bugreport (#9558) with ACPI errors that looks similar to mine except the part in square brackets. I have read about using a c", "title": "ACPI Errors: Index beyond end of object, parse/execution failed, _BCM failed - Asus Notebook X5DIJ-SX101L", "Kernel Version": "2.6.32", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/ec.c", "drivers/acpi/scan.c"], "causes": [{"cause": "The ACPI method _BCM (Brightness Control Method) is attempting to access a buffer index that exceeds the buffer's limit, leading to AE_AML_BUFFER_LIMIT errors.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the ACPI video driver to handle buffer limits more gracefully by checking the buffer size before accessing it, preventing out-of-bounds access."}, {"cause": "The ACPI Embedded Controller (EC) is returning a buffer that is smaller than expected, causing the method STBR to fail when accessing beyond the buffer's end.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Add validation checks in the EC driver to ensure that buffer sizes are as expected before performing operations that assume a certain buffer size."}, {"cause": "The ACPI DSDT (Differentiated System Description Table) for the Asus Notebook X5DIJ-SX101L may have incorrect or non-standard AML code that is not handled properly by the kernel.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Implement workarounds or quirks in the ACPI scan code to handle non-standard AML implementations specific to this hardware model."}], "input_tokens": 675, "output_tokens": 278}
{"id": "14686", "paths": ["drivers/net/wireless/ath/ath5k/eeprom.c"], "predicts": ["drivers/net/wireless/ath/ath5k/base.c"], "input_tokens_sum": 164378, "output_tokens_sum": 877, "description": "Created attachment 23926 [details]\nboot dmesg\n\nHi,\nSince 2.6.32-rc8 I observe the following in my dmesg:\n\nWARNING: at drivers/net/wireless/ath/ath5k/base.c:1142 ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]()\nHardware name: 2007WS4\ninvalid hw_rix: 1b\nModules linked in: vboxnetadp vboxnetflt vboxdrv usb_storage tun sco bridge stp llc bnep acpi_cpufreq cpufreq_powersave binfmt_misc uinput fuse hdaps tp_smapi thinkpad_ec cpufreq_stats cpufreq_ondemand freq_table loop dm_mod btusb snd_hda_codec_analog snd_hda_intel snd_hda_codec snd_pcm_oss snd_mixer_oss snd_pcm snd_seq_midi uhci_hcd snd_rawmidi snd_seq_midi_event snd_seq pcmcia snd_timer snd_seq_device ath5k snd psmouse ehci_hcd ath yenta_socket soundcore snd_page_alloc rsrc_nonstatic serio_raw usbcore evdev pcmcia_core\nPid: 14069, comm: rhythmbox Tainted: G        W  2.6.32-rc8 #1\nCall Trace:\n [<f8889d1a>] ? ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]\n [<f8889d1a>] ? ath5k_tasklet_rx+0x47a/0x5f0 [ath5k]\n [<c1034a2c>] warn_slowpath_common+0x6c/0xc0\n [<f8", "title": "WARNING: at drivers/net/wireless/ath/ath5k/base.c:1142 ath5k_tasklet_rx+0x47a/0x5f0", "Kernel Version": "2.6.32", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ath/ath5k/base.c"], "causes": [{"cause": "The 'invalid hw_rix' warning suggests that the hardware rate index is out of expected bounds, possibly due to incorrect handling of received frames or corrupted data.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Add a validation check for 'hw_rix' before it is used, ensuring it falls within the valid range of rate indices. If it is out of bounds, log a more descriptive error and skip processing the frame."}, {"cause": "The warning may be triggered by a race condition where the rate index is modified concurrently by another part of the driver or hardware.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Implement proper locking mechanisms around the code that accesses or modifies the rate index to prevent concurrent modifications."}, {"cause": "The rate index might be incorrectly initialized or not reset properly after use, leading to invalid values being used in subsequent operations.", "code_file": "drivers/net/wireless/ath/ath5k/base.c", "fix_solution": "Ensure that the rate index is initialized to a valid default value and reset appropriately after each use to prevent carry-over of invalid data."}], "input_tokens": 759, "output_tokens": 282}
{"id": "14597", "paths": ["drivers/platform/x86/thinkpad_acpi.c"], "predicts": ["drivers/platform/x86/thinkpad_acpi.c", "arch/x86/kernel/quirks.c", "include/linux/dmi.h"], "input_tokens_sum": 158108, "output_tokens_sum": 1047, "description": "The driver will fail to detect BIOSes that both lack the \"ThinkPad\" string in the DMI tables, and the EC version string, for ThinkPads that have the EC version string on the most up-to-date BIOSES.\n\nThis causes the driver to return -ENODEV, and the module will not load.\n\nThe problem can be worked around by giving the module the \"force_load=1\" parameter.\n\nProblem tracked down to the quirk tables used as a fallback for known-BIOS detection, they would not match if the EC version is flagged as \"unknown\".", "title": "thinkpad-acpi: driver fails to load on old BIOS for the A31, T23-T30, X30-X31", "Kernel Version": "2.6.32-rc1", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c"], "causes": [{"cause": "The driver fails to load because it does not recognize BIOSes that lack the \"ThinkPad\" string in the DMI tables and the EC version string.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Modify the detection logic to include a fallback mechanism that allows loading the driver even if the EC version string is flagged as \"unknown\"."}, {"cause": "The quirk tables used for BIOS detection do not match if the EC version is flagged as \"unknown\", causing the driver to return -ENODEV.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Update the quirk tables to include entries for older BIOS versions that lack the EC version string, allowing the driver to load correctly."}, {"cause": "The module fails to load due to strict checks on the presence of specific strings in the DMI tables.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Introduce a module parameter that allows bypassing the strict checks, similar to the \"force_load\" parameter, but integrated into the detection logic."}], "input_tokens": 490, "output_tokens": 263}
{"id": "14538", "paths": ["drivers/net/wireless/b43/rfkill.c"], "predicts": ["drivers/net/wireless/b43/main.c", "drivers/net/wireless/b43legacy/main.c", "drivers/net/wireless/iwlwifi/iwl-core.c", "net/wireless/core.c", "net/wireless/sme.c", "net/wireless/util.c", "include/linux/netdevice.h", "include/linux/wireless.h", "kernel/irq/pm.c", "kernel/power/suspend.c"], "input_tokens_sum": 160169, "output_tokens_sum": 1855, "description": "Kernel version: 2.6.32-rc6\nLast working kernel: 2.6.32-rc5\nAthlon 64 3000 single core\n64 bits version, Bluewhite64\n\nAfter a suspend to ram/resume, the wireless interface is dead and cannot reassociate anymore. Trying to restart wpa/dhcpd gives the following errors:\n\nroot@athor:/home/christian# /etc/rc.d/rc.inet1 stop\nroot@athor:/home/christian# /etc/rc.d/rc.inet1 start\nSIOCSIFFLAGS: Erreur inconnue 132\n/etc/rc.d/rc.inet1:  eth1 information: 'Any ESSID'\nError for wireless request \"Set Nickname\" (8B1C) :\n    SET failed on device eth1 ; Operation not supported.\nSIOCSIFFLAGS: Unknown error 132\nCould not set interface 'eth1' UP\nSIOCSIFFLAGS: Erreur inconnue 132\nPolling for DHCP server on interface eth1:\nerr, eth1: ioctl SIOCSIFFLAGS: Unknown error 132\n\nThe \"Set Nickame\" always occurs and is not the problem. However, the Unknown error 132 is completly new.\n\nMoreover, iwconfig says the eth1 interface is not associated anymore.", "title": "Unable to associate with AP after resume since 2.6.32-rc6", "Kernel Version": "2.6.32-rc6", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ath/ath5k/pci.c", "net/core/dev.c", "net/wireless/core.c", "drivers/net/wireless/ath/ath5k/main.c"], "causes": [{"cause": "The wireless interface fails to reinitialize properly after a suspend/resume cycle, possibly due to changes in power management handling in the wireless driver.", "code_file": "drivers/net/wireless/ath/ath5k/pci.c", "fix_solution": "Ensure that the resume function in the driver properly reinitializes the hardware state and reconfigures the interface settings."}, {"cause": "A regression in the network stack related to interface flags handling, causing the SIOCSIFFLAGS ioctl to fail with error 132.", "code_file": "net/core/dev.c", "fix_solution": "Review and correct the logic in the dev_change_flags function to ensure proper handling of interface flags during resume."}, {"cause": "Changes in the wireless stack that affect the association process after resume, possibly due to incorrect state restoration.", "code_file": "net/wireless/core.c", "fix_solution": "Add checks and reinitialization steps in the wireless core to ensure the interface can reassociate after resume."}, {"cause": "Improper handling of the wireless interface state during suspend/resume, leading to failure in setting the interface UP.", "code_file": "drivers/net/wireless/ath/ath5k/main.c", "fix_solution": "Implement additional state checks and reinitialization in the ath5k driver to ensure the interface is correctly brought up after resume."}], "input_tokens": 651, "output_tokens": 316}
{"id": "14329", "paths": ["drivers/ata/sata_nv.c"], "predicts": ["drivers/ata/sata_nv.c", "drivers/ata/libata-core.c", "drivers/ata/ahci.c", "drivers/ata/libata-eh.c", "include/linux/ata.h", "block/blk-core.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "arch/x86/power/cpu.c", "kernel/power/process.c"], "input_tokens_sum": 149792, "output_tokens_sum": 2026, "description": "Created attachment 23274 [details]\nmessages\n\nAfter suspend one of my secondary disks doesn't resume. It works ok under kernel 2.6.30.9 and previous. I have 4 disk connected to the same Nvidia sata controller: 3 identical maxtor (sda/b/c) and 1 Hitachi (sdd), and this last one doesn't wakes up.\nIn attachment the interesting lines from /var/log/messages and the output of hdparm -I.\nThank you.", "title": "Sata disk doesn't wake up after S3 suspend", "Kernel Version": "2.6.31", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/ahci.c", "drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/libata-sff.c"], "causes": [{"cause": "The SATA controller driver may not be properly handling the power management events for the Hitachi disk during the resume process.", "code_file": "drivers/ata/ahci.c", "fix_solution": "Ensure that the resume function in the AHCI driver properly reinitializes the power state of all connected disks, including any specific quirks for Hitachi drives."}, {"cause": "The power management code might not be correctly reinitializing the SATA link for the Hitachi disk after resume.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Modify the resume path to include a reset of the SATA link for all devices, ensuring that the Hitachi disk is properly re-detected and reinitialized."}, {"cause": "The disk may not be receiving the correct wake-up signal due to a missing or incorrect command sequence in the resume process.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Add or correct the command sequence sent to the disk during the resume process to ensure it receives the proper wake-up signal."}, {"cause": "There might be a regression in the power management handling specific to the Hitachi disk model introduced in kernel 2.6.31.", "code_file": "drivers/ata/libata-sff.c", "fix_solution": "Investigate and revert any changes made to the power management handling for specific disk models between kernel versions 2.6.30.9 and 2.6.31."}], "input_tokens": 458, "output_tokens": 343}
{"id": "14181", "paths": ["drivers/net/wireless/b43/main.c"], "predicts": ["drivers/ssb/main.c", "drivers/ssb/ssb_private.h", "net/mac80211/main.c", "include/linux/ieee80211.h", "include/net/mac80211.h", "net/rfkill/core.c", "include/linux/rfkill.h", "include/net/cfg80211.h"], "input_tokens_sum": 149344, "output_tokens_sum": 1819, "description": "This problem did not occur in 2.6.30 through 2.6.30.6\nThis problem does occur in 2.6.31-rc3 through 2.6.31\n\nWhen shutting down the system, a panic occurs.\n\nSystem: PowerMac G4\nDistribution: Ubuntu\nKernel is custom built / mainline.\n\nbacktrace is:\n\nssb_device_enable [ssb] (unreliable)\nb43_is_hw_radio_enabled [b43]\nb43_rfkill_poll [b43]\nieee80211_rfkill_poll [mac80211]\ncfg80211_rfkill_poll [cfg80211]\nrfkill_poll [rfkill]", "title": "b43 causes panic at ifconfig down / shutdown", "Kernel Version": "2.6.31", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/b43/main.c", "net/rfkill/rfkill.c", "drivers/ssb/main.c", "net/mac80211/rfkill.c"], "causes": [{"cause": "The b43 driver may not be properly handling the shutdown sequence, leading to a race condition or improper resource release.", "code_file": "drivers/net/wireless/b43/main.c", "fix_solution": "Ensure proper synchronization and resource cleanup during the shutdown sequence in the b43 driver."}, {"cause": "The rfkill subsystem may be incorrectly polling or accessing resources during shutdown, causing a panic.", "code_file": "net/rfkill/rfkill.c", "fix_solution": "Add checks to ensure rfkill polling does not occur during system shutdown or interface down operations."}, {"cause": "The ssb bus may not be correctly disabling devices during shutdown, leading to inconsistent states.", "code_file": "drivers/ssb/main.c", "fix_solution": "Implement additional checks and synchronization to ensure devices are properly disabled during shutdown."}, {"cause": "The mac80211 layer may be incorrectly handling rfkill events during shutdown, leading to a panic.", "code_file": "net/mac80211/rfkill.c", "fix_solution": "Modify rfkill event handling to ensure it does not interfere with shutdown processes."}], "input_tokens": 496, "output_tokens": 268}
{"id": "14143", "paths": ["block/blk-sysfs.c"], "predicts": ["drivers/md/md.c", "drivers/md/md.h", "block/blk-sysfs.c", "block/blk-core.c", "block/blk-settings.c", "include/linux/blkdev.h", "fs/block_dev.c"], "input_tokens_sum": 152143, "output_tokens_sum": 1806, "description": "Hi,\n\nEchoing any value to /sys/block/mdX/queue/nr_requests causes the kernel to OOPS and often to panic within 5-20 seconds.\n\nDoing the same for the underlaying block device works fine.\n\nReproduces easily on all the boxes I've tried.\n\nExample bt:\n[ 6336.680154] BUG: unable to handle kernel NULL pointer dereference at (null)                                                                                 \n[ 6336.680159] IP: [<ffffffff8102c8fc>] __wake_up_common+0x26/0x72                                                                                             \n[ 6336.680167] PGD 8d450067 PUD 8c91e067 PMD 0                                                                                                                 \n[ 6336.680171] Oops: 0000 [#1] PREEMPT SMP                                                                                                                     \n[ 6336.680174] last sysfs file: /sys/devices/virtual/block/md3/queue/nr_requests                                 ", "title": "OOPS when setting nr_requests for md devices", "Kernel Version": "2.6.31", "Product": "IO/Storage", "Component": "Block Layer", "Hardware": "All Linux", "reranked_files": ["drivers/md/md.c", "block/blk-sysfs.c", "drivers/md/raid5.c"], "causes": [{"cause": "The md (multiple devices) driver does not properly handle the nr_requests setting, leading to a NULL pointer dereference when attempting to wake up processes.", "code_file": "drivers/md/md.c", "fix_solution": "Add a check to ensure that the queue structure is properly initialized before accessing it in the nr_requests store function."}, {"cause": "The block layer does not correctly propagate the nr_requests setting to md devices, causing an invalid memory access.", "code_file": "block/blk-sysfs.c", "fix_solution": "Modify the sysfs nr_requests store function to verify that the target device is not an md device or handle md devices differently."}, {"cause": "The md device queue is not properly initialized or is being accessed after being freed, leading to a NULL pointer dereference.", "code_file": "drivers/md/raid5.c", "fix_solution": "Ensure that the md device queue is initialized before any operations and add checks to prevent access after the queue is freed."}], "input_tokens": 560, "output_tokens": 235}
{"id": "14053", "paths": ["net/sunrpc/clnt.c"], "predicts": ["fs/nfs/read.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/super.c", "include/linux/nfs4.h", "include/linux/nfs_fs.h", "net/sunrpc/xprtsock.c", "net/sunrpc/svc.c"], "input_tokens_sum": 128666, "output_tokens_sum": 2237, "description": "Created attachment 22838 [details]\nFedora 10 machine details (/proc/{cpuinfo,modules,ioports,iomem,scsi/scsi},lspci -vvv)\n\nWe have a Fedora 10 machine and a Sun OS machine. The Sun OS machine exports a ZFS filesystem (pool) to the Fedora 10 machine, which mounts it using a NFS v4 mount (/etc/fstab: \tmelon:/melon1   /melon1 nfs4    rw,rsize=8192,wsize=8192,timeo=14,intr). When a large file (3 GB) is read from the NFS-mounted directory on the Fedora 10 machine (/melon1) this kernel panic frequently occurs. Also, when performing a rsync to this directory this kernel panic also occurs, even being at one point was completely predictable by consistently crashing 3 times in each case after sending around 2 MB. However, the bug is not always so predictable. The Sun OS machine has apparently no ill effects.\n\nI don't know if this is a failure in the implementation of NFS 4 in Linux or in Sun OS.\n\n\nSun OS machine information:\n\nSunOS 5.10 Generic_137112-06 i86pc i386 i86pc\n\nFedora 10 machine infor", "title": "Kernel blocks during rsync to NFS-mounted directory exported from Sun OS machine", "Kernel Version": "2.6.27", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/nfs4proc.c", "fs/nfs/nfs4state.c", "fs/nfs/nfs4xdr.c", "fs/nfs/nfs4super.c"], "causes": [{"cause": "The NFS client implementation in the Linux kernel may have a bug in handling large file transfers, leading to a kernel panic.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Review and update the logic for handling large file transfers, ensuring proper memory allocation and error handling during NFS operations."}, {"cause": "There might be an issue with the NFS v4 state management, causing inconsistencies during file operations.", "code_file": "fs/nfs/nfs4state.c", "fix_solution": "Ensure proper state management and synchronization mechanisms are in place to handle concurrent file operations without causing a kernel panic."}, {"cause": "The NFS client may not be correctly handling the server's response, especially under high load conditions.", "code_file": "fs/nfs/nfs4xdr.c", "fix_solution": "Improve the parsing and handling of server responses, particularly for large data sets, to prevent misinterpretation and subsequent crashes."}, {"cause": "There could be a problem with the NFS client timeout settings, leading to premature termination of operations and kernel panic.", "code_file": "fs/nfs/nfs4super.c", "fix_solution": "Adjust timeout settings and implement better retry logic to handle network delays and prevent abrupt termination of NFS operations."}], "input_tokens": 630, "output_tokens": 306}
{"id": "14000", "paths": ["drivers/net/wireless/hostap/hostap_main.c"], "predicts": ["drivers/staging/wlan-ng/prism2mgmt.c", "drivers/staging/wlan-ng/prism2mib.c", "drivers/staging/wlan-ng/prism2sta.c", "net/wireless/core.c", "net/wireless/util.c", "include/net/wireless.h", "drivers/staging/wlan-ng/p80211netdev.c", "include/net/mac80211.h", "net/wireless/wext.c", "net/wireless/scan.c"], "input_tokens_sum": 207194, "output_tokens_sum": 10259, "description": "Prism 2.5 wireless card fails as an AP after a kernel upgrade to 2.6.30.1 and later (up to 2.6.30.5).\n\nNot tried with 2.6.30.\nNot tried as STA.\nThe card works well up to kernel 2.6.29.6\n\nTo reproduce:\n# iwconfig wlan0 mode master\n# iwconfig wlan0 chan 4\n# iwconfig wlan0 essid ea0\n# ifconfig wlan0 192.168.220.254\n>now the STA associates>\n# tcpdump -i wlan0 -n\n<now the STA pings>\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on wlan0, link-type EN10MB (Ethernet), capture size 96 bytes\n23:59:36.177209 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:36.177287 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:36.177306 ARP, Reply 192.168.220.254 is-at 00:e0:00:8d:bd:8e, length 28\n23:59:41.610114 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:41.610192 ARP, Request who-has 192.168.220.254 tell 192.168.220.88, length 28\n23:59:41.610199 ARP, Reply 192.168.220.254 is-at 00:e0:00:8", "title": "prism 2.5 broke in 2.6.30.x", "Kernel Version": "2.6.30", "Product": "Drivers", "Component": "network-wireless", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/wireless/prism2/hostap.c", "net/wireless/core.c", "net/ipv4/arp.c"], "causes": [{"cause": "The wireless card driver may have a regression in handling AP mode settings introduced in kernel version 2.6.30.x.", "code_file": "drivers/net/wireless/prism2/hostap.c", "fix_solution": "Review changes in AP mode handling between 2.6.29.6 and 2.6.30.x, and revert or adjust the logic to ensure proper initialization and configuration of AP mode."}, {"cause": "Changes in the network stack or wireless subsystem might have affected the interaction with the Prism 2.5 driver.", "code_file": "net/wireless/core.c", "fix_solution": "Investigate changes in the wireless core that could affect driver operations, and ensure compatibility with the Prism 2.5 driver by adjusting initialization or configuration sequences."}, {"cause": "Modifications in the ARP handling or network interface configuration might be causing issues with packet transmission or reception.", "code_file": "net/ipv4/arp.c", "fix_solution": "Check for changes in ARP request/reply handling and ensure that the network interface configuration is correctly set up for AP mode, possibly by adjusting ARP cache or packet handling logic."}], "input_tokens": 757, "output_tokens": 273}
{"id": "13823", "paths": ["drivers/scsi/qla2xxx/qla_gs.c"], "predicts": ["drivers/scsi/qla2xxx/qla_gs.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_isr.c", "drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_sup.c"], "input_tokens_sum": 185907, "output_tokens_sum": 13568, "description": "Whenever I insert the qla2xxx module, the kernel always oopses.  Sometimes, the driver will work and detect the drives, but it will oops again later.  I have tried this on multiple machines with different qla2200 cards and they both experience the same oopsing, sometimes resulting in a hard lock.\n\nHere is one of the oops on loading the module:\n[27287.119929] QLogic Fibre Channel HBA Driver: 8.03.00-k4\n[27287.120016] qla2xxx 0000:06:01.0: PCI INT A -> GSI 74 (level, low) -> IRQ 74\n[27287.120070] qla2xxx 0000:06:01.0: Found an ISP2200, irq 74, iobase 0xffffc20000c5c000\n[27287.120281] IRQ 74/qla2xxx: IRQF_DISABLED is not guaranteed on shared IRQs\n[27287.120309] qla2xxx 0000:06:01.0: Configuring PCI space...\n[27287.120510] qla2xxx 0000:06:01.0: Configure NVRAM parameters...\n[27287.205932] qla2xxx 0000:06:01.0: Verifying loaded RISC code...\n[27287.216038] qla2xxx 0000:06:01.0: firmware: requesting ql2200_fw.bin\n[27294.548077] qla2xxx 0000:06:01.0: Allocated (252 KB) for firmware dump...\n[27", "title": "QLA2XXX driver causes kernel oops with a qla2200", "Kernel Version": "2.6.29", "Product": "SCSI Drivers", "Component": "QLOGIC QLA2XXX", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_nvram.c", "drivers/scsi/qla2xxx/qla_dbg.c"], "causes": [{"cause": "The driver may not be handling shared IRQs correctly, leading to race conditions or improper handling of interrupts.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Ensure proper handling of shared IRQs by using spinlocks or other synchronization mechanisms to protect shared data structures."}, {"cause": "The firmware loading process might be failing or timing out, causing the driver to operate with incomplete or incorrect firmware.", "code_file": "drivers/scsi/qla2xxx/qla_init.c", "fix_solution": "Add error checking and retry mechanisms for the firmware loading process to ensure the firmware is correctly loaded before proceeding."}, {"cause": "The driver might be accessing uninitialized or invalid memory regions during the configuration of PCI space or NVRAM parameters.", "code_file": "drivers/scsi/qla2xxx/qla_nvram.c", "fix_solution": "Add checks to ensure that memory regions are valid and properly initialized before accessing them, and handle any errors gracefully."}, {"cause": "The allocation for the firmware dump might be incorrect, leading to memory corruption or access violations.", "code_file": "drivers/scsi/qla2xxx/qla_dbg.c", "fix_solution": "Verify the size and alignment of the allocated memory for the firmware dump, and ensure it matches the expected requirements."}], "input_tokens": 729, "output_tokens": 310}
{"id": "13793", "paths": ["fs/jfs/acl.c"], "predicts": ["kernel/rcupreempt.c", "kernel/rcutree.c", "include/linux/rcupreempt.h", "include/linux/rcutree.h", "kernel/rcuclassic.c", "kernel/rcupdate.c", "kernel/time/tick-oneshot.c", "arch/x86/kernel/smp.c", "lib/irq_regs.c", "mm/page_alloc.c"], "input_tokens_sum": 156588, "output_tokens_sum": 2842, "description": "Created attachment 22393 [details]\nPhoto of the screen after the crash\n\nKernel 2.6.31 does not boot on my laptop (a DELL XPS M1330). I have tried rc1, rc2, rc3 and today's daily build but none of those will boot on my laptop.\n\nI get the following call trace with today's daily build:\nrcu_do_batch+0x27/0x90\n__rcu_process_callbacks+0xc8/0x100\ntick_handle_oneshot_broadcast+0xdd/0x100\nrcu_process_callbacks+0x20/0x40\ntimer_interrupt+0x21/0x70\nhandle_IRQ_event+0x56/0x120\ndo_softirq+0x3c/0x40\nirq_exit+0x5c/0x70\ndo_IRQ+0x4f/0xc0\ncommon_interrupt+0x29/0x30\nsys_getresuid+0x3b/0x70\nacpi_idle_enter_bm+0x19a/0x1c9\ncpuidle_idle_call+0x6f/0xc0\ncpu_idle+0x42/0x80\nstart_secondary+0xae/0cd0", "title": "2.6.31 regression - boot crash in rcu_process_callbacks - DELL XPS M1330", "Kernel Version": "2.6.31-rc3", "Product": "File System", "Component": "VFS", "Hardware": "All Linux", "reranked_files": ["kernel/rcu/tree.c", "kernel/time/timer.c", "drivers/acpi/processor_idle.c", "kernel/softirq.c"], "causes": [{"cause": "The crash in rcu_process_callbacks suggests a problem with RCU (Read-Copy-Update) handling, possibly due to improper handling of RCU callbacks or a race condition.", "code_file": "kernel/rcu/tree.c", "fix_solution": "Ensure proper synchronization and ordering of RCU callbacks by adding necessary memory barriers or locks to prevent race conditions."}, {"cause": "The issue might be related to improper handling of timer interrupts, which could lead to incorrect RCU state updates.", "code_file": "kernel/time/timer.c", "fix_solution": "Review and correct the logic in timer interrupt handling to ensure that RCU state updates are performed correctly and in the right order."}, {"cause": "A potential bug in the ACPI idle handling could be causing incorrect CPU idle state transitions, affecting RCU processing.", "code_file": "drivers/acpi/processor_idle.c", "fix_solution": "Investigate and fix any issues in the ACPI idle state transitions to ensure they do not interfere with RCU callback processing."}, {"cause": "The problem might be due to incorrect handling of softirqs, which are crucial for RCU callback processing.", "code_file": "kernel/softirq.c", "fix_solution": "Ensure that softirq handling is robust and correctly prioritizes RCU callbacks to prevent missed or delayed processing."}], "input_tokens": 642, "output_tokens": 313}
{"id": "13780", "paths": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c"], "predicts": ["arch/x86/kernel/cpu/cpufreq/powernow-k8.c", "arch/x86/kernel/cpu/cpufreq/powernow-k8.h", "drivers/cpufreq/cpufreq.c", "include/linux/cpufreq.h", "arch/x86/include/asm/cpu.h"], "input_tokens_sum": 138193, "output_tokens_sum": 1544, "description": "Created attachment 22358 [details]\nkernel log\n\nHi,\n\nWhen the \"loadcpufreq\" init script loads the kernel module (powernow_k8?), I get the following error:\nkernel: [   39.822807] BUG: unable to handle kernel NULL pointer dereference at\n0000000000000024\nkernel: [   39.824035] IP: [<ffffffffa034b094>] powernowk8_cpu_init+0x30d/0xa07\n[powernow_k8]\n\nI'm using debian's kernel linux-image-2.6.30-1-amd64 2.6.30-2\n\nIf I don't start that script, I do not get the error.", "title": "NULL pointer dereference loading powernowk8", "Kernel Version": "2.6.29", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/powernow-k8.c"], "causes": [{"cause": "The powernowk8_cpu_init function is dereferencing a NULL pointer, possibly due to an uninitialized or improperly initialized data structure.", "code_file": "drivers/cpufreq/powernow-k8.c", "fix_solution": "Add a NULL check for the pointer before dereferencing it in the powernowk8_cpu_init function to ensure it is not NULL."}, {"cause": "The module may be attempting to access CPU-specific data that has not been properly set up or is not available on certain hardware configurations.", "code_file": "drivers/cpufreq/powernow-k8.c", "fix_solution": "Ensure that all necessary CPU-specific data structures are initialized before they are accessed in the powernowk8_cpu_init function."}, {"cause": "There might be a race condition where the CPU data is being accessed before it is fully initialized by another part of the kernel.", "code_file": "drivers/cpufreq/powernow-k8.c", "fix_solution": "Introduce proper locking mechanisms around the initialization and access of CPU data structures to prevent race conditions."}], "input_tokens": 509, "output_tokens": 253}
{"id": "13776", "paths": ["drivers/gpu/drm/drm_gem.c"], "predicts": ["drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_irq.c", "drivers/gpu/drm/i915/i915_mem.c", "drivers/gpu/drm/drm_irq.c", "arch/x86/pci/irq.c", "include/drm/i915_drm.h", "include/linux/interrupt.h", "arch/x86/pci/acpi.c", "arch/x86/mm/fault.c", "kernel/irq/manage.c"], "input_tokens_sum": 145925, "output_tokens_sum": 1948, "description": "i am trying kms with a intel chipset, linux-2.6.31-rc3, recent mesa-master and libdrm-master from 13.07.2009 and i am become follow error when i am inserting i915.ko:\n\n[    2.105376] i915 0000:00:02.0: power state changed by ACPI to D0\n[    2.105489] i915 0000:00:02.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16\n[    2.105598] i915 0000:00:02.0: setting latency timer to 64\n[    2.108792] BUG: unable to handle kernel NULL pointer dereference at (null)\n[    2.109046] IP: [<(null)>] (null)\n[    2.109224] *pde = 00000000\n[    2.109397] Oops: 0000 [#1] PREEMPT SMP\n[    2.109716] last sysfs file: /sys/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/type\n[    2.109856] Modules linked in: led_class ieee1394 snd_hda_intel(+) snd_hda_codec snd_pcm snd_timer snd soundcore snd_page_alloc i2c_i801 i915(+) drm ehci_hcd(+) uhci_hcd(+) i2c_algo_bit video backlight output e1000e usbcore\n[    2.111508]\n[    2.111612] Pid: 1018, comm: modprobe Not tainted (2.6.31-rc3 #1) 7667V4E\n[    2.111723] E", "title": "KMS with Intel Graphic fails", "Kernel Version": "2.6.31-rc3", "Product": "Drivers", "Component": "Video", "Hardware": "i386 Linux", "reranked_files": ["drivers/gpu/drm/i915/i915_drv.c", "drivers/gpu/drm/i915/i915_gem.c", "drivers/gpu/drm/i915/i915_suspend.c", "drivers/gpu/drm/i915/i915_irq.c"], "causes": [{"cause": "The NULL pointer dereference suggests that there might be an uninitialized or improperly handled pointer in the i915 driver code.", "code_file": "drivers/gpu/drm/i915/i915_drv.c", "fix_solution": "Ensure that all pointers are properly initialized before use, and add checks to handle NULL pointers gracefully."}, {"cause": "The error might be due to an incorrect or missing initialization of the device structure during the i915 module load.", "code_file": "drivers/gpu/drm/i915/i915_gem.c", "fix_solution": "Review the initialization sequence of the device structure and ensure all necessary fields are set up correctly before use."}, {"cause": "The issue could be related to improper handling of ACPI power state transitions, leading to an invalid state during module initialization.", "code_file": "drivers/gpu/drm/i915/i915_suspend.c", "fix_solution": "Add additional checks and handling for ACPI power state transitions to ensure the device is in a valid state before proceeding with initialization."}, {"cause": "There might be a race condition in the module initialization code that leads to accessing uninitialized data.", "code_file": "drivers/gpu/drm/i915/i915_irq.c", "fix_solution": "Implement proper locking mechanisms to prevent race conditions during module initialization and ensure data is fully initialized before access."}], "input_tokens": 769, "output_tokens": 313}
{"id": "13761", "paths": ["mm/kmemleak.c"], "predicts": ["mm/kmemleak.c", "mm/kmemleak-test.c", "include/linux/kmemleak.h", "fs/debugfs/file.c", "arch/x86/mm/fault.c"], "input_tokens_sum": 157137, "output_tokens_sum": 2219, "description": "First I mounted debugfs with \"mount -t debugfs nodev /sys/kernel/debug/\". Then I executed \"echo scan >/sys/kernel/debug/kmemleak\" and \"cat /sys/kernel/debug/kmemleak\" a few times. I get the following message:\n\n\n[ 1649.863693] BUG: unable to handle kernel paging request at 6b6b6b6b\n[ 1649.863706] IP: [<c01b2f95>] kmemleak_seq_next+0x75/0x120\n[ 1649.863718] *pde = 00000000 \n[ 1649.863723] Oops: 0000 [#1] PREEMPT \n[ 1649.863728] last sysfs file: /sys/devices/system/cpu/cpu0/cpuidle/state2/time\n[ 1649.863733] Modules linked in: gspca_sunplus gspca_main videodev v4l1_compat via drm agpgart ppdev lp ipv6 powernow_k8 cpufreq_powersave cpufreq_ondemand cpufreq_userspace cpufreq_conservative leds_clevo_mail led_class snd_via82xx snd_via82xx_modem snd_ac97_codec ac97_bus snd_pcm_oss snd_mixer_oss usbhid snd_pcm snd_mpu401_uart mousedev snd_seq_oss snd_seq_midi pcmcia snd_rawmidi firmware_class snd_seq_midi_event snd_seq snd_timer snd_seq_device serio_raw snd i2c_viapro ide_cd_mod ehci_hcd pcspkr", "title": "kmemleak + BUG: unable to handle kernel paging request", "Kernel Version": "2.6.31-rc2", "Product": "Other", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["mm/kmemleak.c"], "causes": [{"cause": "The kmemleak_seq_next function is attempting to access a memory location that has been freed or is otherwise invalid, leading to a paging request error.", "code_file": "mm/kmemleak.c", "fix_solution": "Add a check to ensure that the memory location being accessed is valid and has not been freed before dereferencing it in kmemleak_seq_next."}, {"cause": "A race condition in the kmemleak scanning process might be causing the memory to be freed while it is being accessed.", "code_file": "mm/kmemleak.c", "fix_solution": "Introduce proper locking mechanisms around the memory access in kmemleak_seq_next to prevent concurrent modifications."}, {"cause": "The kmemleak data structures might not be properly initialized or might be corrupted, leading to invalid memory access.", "code_file": "mm/kmemleak.c", "fix_solution": "Ensure that all kmemleak data structures are properly initialized and add checks to detect and handle corruption before accessing them."}], "input_tokens": 710, "output_tokens": 244}
{"id": "13710", "paths": ["arch/x86/kernel/setup.c"], "predicts": ["arch/x86/kernel/check.c", "drivers/acpi/sleep.c", "drivers/acpi/power.c", "drivers/acpi/sleep.h", "arch/x86/mm/init.c", "kernel/power/suspend.c", "kernel/power/hibernate.c", "mm/memory.c", "include/linux/memory.h", "include/linux/suspend.h"], "input_tokens_sum": 156592, "output_tokens_sum": 1965, "description": "Created attachment 22215 [details]\ndmesg\n\nIt was tested with latest linux-2.6 git and drm-linux. To make clean test i used test_suspend=mem with acpi_sleep options (s3_bios and/or s3_mode) and without acpi_sleep. Any acpi_sleep option will make my PC freeze. Without acpi_sleep it will resume but with black screen and i can access it with ssh. Disabling kms will resume with black console but Xorg will enable video. \n\nAfter resume dmesg has two traces, memory corruption and warn_slowpath_common:\n\n\n\n[   60.816159] Corrupted low memory at ffff880000004200 (4200 phys) = 00420301\n[   60.816163] ------------[ cut here ]------------\n[   60.816169] WARNING: at arch/x86/kernel/check.c:134 check_for_bios_corruption+0xe4/0xf0()\n[   60.816171] Hardware name:         \n[   60.816172] Memory corruption detected in low memory\n[   60.816173] Modules linked in: binfmt_misc kvm_intel kvm snd_hda_codec_intelhdmi snd_hda_codec_idt snd_hda_intel snd_hda_codec snd_pcm_oss snd_mixer_oss snd_pcm snd_seq_dummy s", "title": "Corrupted low memory after resume", "Kernel Version": "2.6.31-rc1", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/check.c", "drivers/acpi/sleep.c", "drivers/gpu/drm/drm_crtc.c", "kernel/power/suspend.c"], "causes": [{"cause": "The BIOS is corrupting low memory during the resume process, leading to memory corruption warnings.", "code_file": "arch/x86/kernel/check.c", "fix_solution": "Enhance the check_for_bios_corruption function to include additional checks and logging to identify and mitigate BIOS-related memory corruption during resume."}, {"cause": "ACPI sleep options are not properly handling the resume process, causing memory corruption.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Review and update the ACPI resume code to ensure proper handling of memory states and prevent corruption during the transition from sleep to wake."}, {"cause": "Kernel Mode Setting (KMS) is not correctly restoring video state after resume, leading to black screen issues.", "code_file": "drivers/gpu/drm/drm_crtc.c", "fix_solution": "Modify the KMS resume path to ensure that video state is correctly restored, preventing black screen issues after resume."}, {"cause": "The suspend/resume process is not correctly saving and restoring low memory regions, leading to corruption.", "code_file": "kernel/power/suspend.c", "fix_solution": "Implement additional checks and safeguards in the suspend/resume code to ensure low memory regions are correctly saved and restored."}], "input_tokens": 647, "output_tokens": 295}
{"id": "13621", "paths": ["fs/xfs/xfs_log.c"], "predicts": ["fs/xfs/linux-2.6/kmem.c", "fs/xfs/xfs_log.c", "fs/xfs/xfs_mount.c", "fs/xfs/xfs_trans.c", "fs/xfs/xfs_trans_ail.c"], "input_tokens_sum": 142471, "output_tokens_sum": 1949, "description": "Mounting external HD is fine, but extensive r/w (rsync) or attempting to unmount the device makes the kernel hang in the following sense: The device keeps mounted, no operations possible, every process accessing the device becomes unkillable. Apparently no major damage to the fs is caused. Log is attached.", "title": "xfs hangs with assertion failed", "Kernel Version": "2.6.30", "Product": "File System", "Component": "XFS", "Hardware": "All Linux", "reranked_files": ["fs/xfs/xfs_buf.c", "fs/xfs/xfs_trans.c", "fs/xfs/xfs_aops.c", "fs/xfs/xfs_inode.c"], "causes": [{"cause": "The XFS file system may be encountering a deadlock due to improper handling of locks during extensive read/write operations.", "code_file": "fs/xfs/xfs_buf.c", "fix_solution": "Review and adjust the lock acquisition and release logic in the buffer management code to ensure that locks are not held longer than necessary, preventing deadlocks."}, {"cause": "An assertion failure in the XFS transaction subsystem could be causing the system to hang when certain conditions are not met during file system operations.", "code_file": "fs/xfs/xfs_trans.c", "fix_solution": "Identify the specific assertion that is failing and modify the conditions or logic leading to the assertion to ensure it is only triggered under correct circumstances."}, {"cause": "Improper handling of I/O completion events might be causing processes to hang when accessing the XFS file system.", "code_file": "fs/xfs/xfs_aops.c", "fix_solution": "Ensure that I/O completion handlers correctly signal the completion of operations and release any resources or locks held during the process."}, {"cause": "The XFS inode management might be mishandling reference counts, leading to resources not being freed properly and causing hangs.", "code_file": "fs/xfs/xfs_inode.c", "fix_solution": "Audit the inode reference counting logic to ensure that inodes are properly incremented and decremented, preventing resource leaks and hangs."}], "input_tokens": 417, "output_tokens": 324}
{"id": "13581", "paths": ["arch/x86/kernel/e820.c"], "predicts": ["drivers/net/wireless/ath9k/main.c", "drivers/net/wireless/ath9k/hw.c", "drivers/net/wireless/ath9k/mac.c", "drivers/net/wireless/ath9k/recv.c", "net/mac80211/scan.c", "include/linux/wireless.h", "include/linux/ath9k_platform.h", "include/net/cfg80211.h", "net/wireless/core.c", "net/wireless/wext.c"], "input_tokens_sum": 145865, "output_tokens_sum": 2341, "description": "Upgrading from 2.6.29 to 2.6.30 the wireless stop working.\nsome infos:\n\n# wpa_supplicant -i wlan0 -D wext -c /etc/wpa_supplicant/wpa_supplicant.conf\nCTRL-EVENT-SCAN-RESULTS                                                     \nTrying to associate with 00:18:84:81:00:fd (SSID='OpenWrt' freq=2452 MHz)   \nAssociation request to the driver failed                                    \nAssociated with 00:18:84:81:00:fd                                           \nCTRL-EVENT-DISCONNECTED - Disconnect event - remove keys                    \nioctl[SIOCSIWENCODEEXT]: No such file or directory                          \nioctl[SIOCSIWSCAN]: Device or resource busy                                 \nFailed to initiate AP scan.                                                 \nAuthentication with 00:00:00:00:00:00 timed out.                            \nCTRL-EVENT-SCAN-RESULTS                                                     \nTrying to associate with 00:18:84:81:00:fd (SSID='OpenWrt' freq=2452 MHz)   \nAsso", "title": "ath9k doesn't work with newer kernels", "Kernel Version": "2.6.30", "Product": "Networking", "Component": "Wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/ath/ath9k/main.c", "drivers/net/wireless/ath/ath9k/xmit.c", "drivers/net/wireless/ath/ath9k/hw.c", "drivers/net/wireless/ath/ath9k/recv.c"], "causes": [{"cause": "The ath9k driver may not be properly handling the wireless extensions (wext) interface changes between kernel versions 2.6.29 and 2.6.30.", "code_file": "drivers/net/wireless/ath/ath9k/main.c", "fix_solution": "Ensure that the driver properly implements the updated wireless extensions API by reviewing and updating the ioctl handlers to match the new kernel requirements."}, {"cause": "The wireless stack may have introduced changes in the way encryption keys are handled, causing the ath9k driver to fail during association.", "code_file": "drivers/net/wireless/ath/ath9k/xmit.c", "fix_solution": "Update the key management functions to align with the new kernel API for setting encryption keys, ensuring compatibility with the wext interface."}, {"cause": "The scanning process might be affected by changes in the kernel's handling of concurrent operations, leading to resource busy errors.", "code_file": "drivers/net/wireless/ath/ath9k/hw.c", "fix_solution": "Implement proper locking mechanisms or update existing ones to prevent race conditions during scan operations, ensuring that resources are correctly managed."}, {"cause": "The association process might be failing due to changes in the authentication sequence or timing requirements in the newer kernel.", "code_file": "drivers/net/wireless/ath/ath9k/recv.c", "fix_solution": "Review and adjust the timing and sequence of authentication and association requests to comply with the updated kernel's wireless stack behavior."}], "input_tokens": 582, "output_tokens": 352}
{"id": "13498", "paths": ["drivers/pci/pcie/aspm.c"], "predicts": ["drivers/pci/hotplug/acpi_pcihp.c", "drivers/pci/hotplug/acpiphp_core.c", "arch/x86/pci/acpi.c", "drivers/pci/probe.c", "drivers/pci/bus.c", "drivers/pci/pci.c", "arch/x86/pci/common.c", "arch/x86/pci/init.c", "include/linux/pci.h", "arch/x86/pci/pci.h"], "input_tokens_sum": 133323, "output_tokens_sum": 2474, "description": "Created attachment 21839 [details]\nPanic screen photo\n\nCannot boot Fedora 10 using this and newer kernel versions. Last kernel version working is 2.6.27.5. I have no idea what should I try to make it work....\n\nThis is transcription of the panic screen (see attached photo of CRT):\n\n[<ffffffff811f57df>] driver_register+0xa8/0x113\n[<ffffffff815c5ada>] ? acpi_pci_root_init+0x0/0x28\n[<ffffffff8159f140>] ? early_idt_handler+0x0/0x71\n[<ffffffff811b6195>] acpi_bus_register_driver+0x3e/0x41\n[<ffffffff815c5af3>] acpi_pci_root_init+0x19/0x28\n[<ffffffff8100a047>] do_one_initcall+0x47/0x12e\n[<ffffffff8159f140>] ? early_idt_handler+0x0/0x71\n[<ffffffff81100000>] ? task_statm+0x4e/0x5b\n[<ffffffff8159f70f>] kernel_init+0x1c0/0x214\n[<ffffffff81333489>] ? trace_hardirqs_on_thunk+0x3a/0x3c\n[<ffffffff81011719>] child_rip+0xa/0x11\n[<ffffffff81010a37>] ? restore_args+0x0/0x30\n[<ffffffff8159f54f>] ? kernel_init+0x0/0x214\n[<ffffffff8101170f>] ? child_rip+0x0/0x11\n\nCode: 49 8d 7e 38 49 8d 46 28 49 89 7e 38 49 8", "title": "Kernel panic - not syncing: Attepmted to kill init! (Fedora 10)", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/pci_root.c", "drivers/base/driver.c", "arch/x86/kernel/idt.c", "init/main.c"], "causes": [{"cause": "The kernel panic is likely due to a failure in the ACPI PCI root initialization, which is causing the system to attempt to kill the init process.", "code_file": "drivers/acpi/pci_root.c", "fix_solution": "Ensure that the acpi_pci_root_init function properly checks for null pointers and handles errors gracefully to prevent kernel panic during initialization."}, {"cause": "There might be an issue with the driver registration process, possibly due to changes in the driver model or API that are not compatible with the current setup.", "code_file": "drivers/base/driver.c", "fix_solution": "Review and update the driver_register function to ensure compatibility with the latest kernel changes, and add additional error handling to prevent system crashes."}, {"cause": "The panic could be caused by an improper handling of interrupts during the early boot process, as indicated by the early_idt_handler reference.", "code_file": "arch/x86/kernel/idt.c", "fix_solution": "Investigate the early_idt_handler function to ensure it correctly sets up interrupt descriptors and handles exceptions without causing a panic."}, {"cause": "The issue might be related to the initialization sequence of the kernel, where a dependency or order of operations is not correctly managed.", "code_file": "init/main.c", "fix_solution": "Examine the do_one_initcall function to ensure that all necessary components are initialized in the correct order and that any failures are handled appropriately."}], "input_tokens": 772, "output_tokens": 333}
{"id": "13449", "paths": ["drivers/acpi/sleep.c"], "predicts": ["drivers/acpi/battery.c", "drivers/power/power_supply_core.c", "kernel/power/main.c", "arch/x86/kernel/acpi/sleep.c", "include/linux/power_supply.h", "arch/x86/power/hibernate_64.c", "arch/x86/kernel/pci/acpi.c"], "input_tokens_sum": 142250, "output_tokens_sum": 2472, "description": "Created attachment 21740 [details]\ndmesg after suspend/resume\n\nMy HP Pavilion dv4-1125br suspends and resumes correctly. However, the battery information provided by ACPI disappears.  Before suspend I can get battery information in /proc/acpi/battery/BAT0/state. After the suspend/resume, BAT0/state shows not present.\n\nThis is a fairly recent laptop, and this problem is present in Fedora kernels as early as 2.6.27. I've found bug reports of this issue for Ubunto and Arch Linux, so I don't believe it is Fedora specific.", "title": "Battery disappears after suspend/resume on HP laptop.", "Kernel Version": "2.6.30", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "x86-64 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/ec.c", "drivers/acpi/sleep.c", "drivers/acpi/acpi_bus.c"], "causes": [{"cause": "The ACPI battery driver does not reinitialize the battery information after a suspend/resume cycle.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Modify the resume function in the ACPI battery driver to reinitialize the battery information by calling the battery initialization routine."}, {"cause": "The ACPI subsystem fails to notify the battery driver of the battery's presence after resume.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Ensure that the Embedded Controller (EC) driver sends the appropriate notifications to the battery driver upon resume."}, {"cause": "The power management code does not properly restore ACPI device states after resume.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Add code to the ACPI resume path to explicitly restore the state of battery devices."}, {"cause": "The ACPI battery information is cached and not refreshed after resume.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Invalidate the ACPI battery cache on resume to force a refresh of the battery information."}], "input_tokens": 485, "output_tokens": 261}
{"id": "13394", "paths": ["drivers/acpi/processor_core.c"], "predicts": ["arch/x86/mm/ioremap.c", "arch/x86/mm/init.c", "include/linux/init.h", "mm/bootmem.c"], "input_tokens_sum": 160027, "output_tokens_sum": 2156, "description": "Created attachment 21588 [details]\ndmesg containing the warning for some context\n\n------------[ cut here ]------------\nWARNING: at arch/x86/mm/ioremap.c:603 check_early_ioremap_leak+0x48/0x5e()\nHardware name:         \nDebug warning: early ioremap leak of 1 areas detected.\nModules linked in:\nPid: 1, comm: swapper Not tainted 2.6.30-rc6-next-20090521 #3\nCall Trace:\n [<c0120648>] warn_slowpath_common+0x60/0x90\n [<c01206ac>] warn_slowpath_fmt+0x24/0x27\n [<c05d6703>] check_early_ioremap_leak+0x48/0x5e\n [<c0101137>] do_one_initcall+0x4a/0x10c\n [<c05d66bb>] ? check_early_ioremap_leak+0x0/0x5e\n [<c01427d5>] ? register_irq_proc+0x7f/0x9b\n [<c0142844>] ? init_irq_proc+0x53/0x60\n [<c05ca296>] kernel_init+0x102/0x153\n [<c05ca194>] ? kernel_init+0x0/0x153\n [<c01033df>] kernel_thread_helper+0x7/0x10\n---[ end trace 697c170438591ef6 ]---\nplease boot with early_ioremap_debug and report the dmesg.\n\nAnyone know where I'm supposed to put the \"early_ioremap_debug\"?\n\nIf you need more info, lemme know.\n\nThan", "title": "check_early_ioremap_leak warning", "Kernel Version": "2.6.30", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["arch/x86/mm/ioremap.c", "arch/x86/mm/init.c", "arch/x86/kernel/setup.c"], "causes": [{"cause": "The early ioremap mechanism is leaking memory areas, possibly due to improper initialization or cleanup during early boot stages.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Ensure that all early ioremap areas are properly released after their use by adding missing cleanup calls in the early boot code."}, {"cause": "The check_early_ioremap_leak function is detecting a leak because the early ioremap areas are not being tracked correctly.", "code_file": "arch/x86/mm/init.c", "fix_solution": "Add additional tracking and validation logic to ensure all early ioremap areas are accounted for and released appropriately."}, {"cause": "The early ioremap debug flag is not set correctly, leading to incomplete diagnostics and potential mismanagement of ioremap areas.", "code_file": "arch/x86/kernel/setup.c", "fix_solution": "Modify the setup code to ensure the early_ioremap_debug flag is set during boot, allowing for better tracking and debugging of ioremap areas."}], "input_tokens": 736, "output_tokens": 245}
{"id": "13348", "paths": ["drivers/net/macvlan.c"], "predicts": ["net/8021q/vlan_dev.c", "include/linux/if_vlan.h", "include/linux/netdevice.h"], "input_tokens_sum": 143496, "output_tokens_sum": 945, "description": "It is not possible to make clone of tagged VLAN interface to be used as\nmac-based vlan interfave.\n\nHow reproducible:\nUse any 802.1q tagged vlan interface, e.g. eth2.700 and clone it:\n\n  ip link add link eth2.700 address 00:04:75:cb:38:09 macvlan0 type macvlan\n  ip link set dev macvlan0 up\n  ip addr add 10.195.1.1/24 dev macvlan0\n\nSo far, so good. Now try to ping anything via macvlan0:\n\n  ping 10.195.1.2\n\n\nActual results:\nFor every attempted packet tx kernel writes to console:\n\n------------[ cut here ]------------\nWARNING: at net/8021q/vlan_dev.c:254 vlan_dev_hard_header+0x36/0x126 [8021q]()\nHardware name: M22ES\nModules linked in: arptable_filter arp_tables bridge veth macvlan arc4 ecb ppp_mppe ppp_async crc_ccitt ppp_generic slhc autofs4 sunrpc 8021q garp stp ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 xt_state nf_conntrack xt_tcpudp x_tables dm_mirror dm_region_hash dm_log dm_multipath dm_mod sbs sbshc lp floppy snd_intel8x0 joydev snd_seq_dummy snd_intel8x0m snd_ac97_codec ide_cd_mod", "title": "[PATCH]Unable to clone tagged VLAN interface for use with macvlan driver", "Kernel Version": "2.6.29", "Product": "Networking", "Component": "IPV4", "Hardware": "All Linux", "reranked_files": ["net/8021q/vlan_dev.c", "drivers/net/macvlan.c", "net/8021q/vlan.c"], "causes": [{"cause": "The VLAN device does not properly handle the MAC address cloning for macvlan interfaces, leading to incorrect header construction.", "code_file": "net/8021q/vlan_dev.c", "fix_solution": "Modify the vlan_dev_hard_header function to correctly handle MAC address cloning for macvlan interfaces by ensuring the MAC address is set correctly in the header."}, {"cause": "The macvlan driver does not correctly interpret the VLAN tag from the parent interface, causing packet transmission issues.", "code_file": "drivers/net/macvlan.c", "fix_solution": "Update the macvlan driver to correctly parse and handle VLAN tags from the parent interface, ensuring proper packet transmission."}, {"cause": "The VLAN interface does not propagate necessary configuration to the macvlan interface, leading to incomplete setup.", "code_file": "net/8021q/vlan.c", "fix_solution": "Ensure that the VLAN configuration, including tagging information, is propagated to the macvlan interface during its creation."}], "input_tokens": 676, "output_tokens": 237}
{"id": "13313", "paths": ["arch/x86/kernel/vm86_32.c"], "predicts": ["kernel/lockdep.c", "include/linux/lockdep.h", "lib/debug_locks.c", "kernel/sys.c", "arch/x86/kernel/process_32.c", "include/linux/debug_locks.h", "arch/x86/mm/fault.c", "include/asm-generic/bug.h", "lib/spinlock_debug.c", "kernel/lockdep_internals.h"], "input_tokens_sum": 166606, "output_tokens_sum": 6246, "description": "Created attachment 21359 [details]\n.config\n\nHello,\nhardware: ASUS f3jc\nkernel: 2.6.30-rc5-git5\n\nKernel built with\nCONFIG_DEBUG_LOCK_ALLOC=y\nCONFIG_LOCKDEP=y\n\nleads to:\n[   14.816002] general protection fault: 0000 [#1] PREEMPT SMP \n[   14.816073] last sysfs file: /sys/devices/platform/coretemp.1/temp1_input\n[   14.816110] Modules linked in: fuse sbp2 snd_hda_codec_si3054 snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_pcm serio_raw snd_seq_midi psmouse snd_rawmidi snd_seq_midi_event i2c_i801 snd_seq pcspkr snd_timer snd_seq_device rng_core snd evdev asus_laptop soundcore led_class snd_page_alloc usbhid hid sg sr_mod cdrom sd_mod ata_generic pata_acpi ata_piix ohci1394 libata ehci_hcd uhci_hcd r8169 mii ieee1394 scsi_mod ide_pci_generic usbcore\n[   14.816636] \n[   14.816659] Pid: 2379, comm: vbetool Not tainted (2.6.30-rc5-git5-fb #3) F3JC                \n[   14.816701] EIP: 0060:[<c018c967>] EFLAGS: 00013286 CPU: 0\n[   14.816738] EIP is at lockdep_sys_exit+0x7/0xa0\n[   14.816769]", "title": "vm86old oops", "Kernel Version": "2.6.30", "Product": "Platform Specific/Hardware", "Component": "i386", "Hardware": "All Linux", "reranked_files": ["kernel/locking/lockdep.c", "arch/x86/kernel/vm86_32.c", "kernel/exit.c"], "causes": [{"cause": "The general protection fault occurs due to improper handling of lockdep in the vm86old code path, possibly due to incorrect lock initialization or usage.", "code_file": "kernel/locking/lockdep.c", "fix_solution": "Ensure proper initialization and cleanup of lockdep structures in the vm86old code path, adding necessary checks to prevent accessing uninitialized data."}, {"cause": "The vm86old system call might be interacting incorrectly with the lockdep subsystem, leading to a protection fault when exiting.", "code_file": "arch/x86/kernel/vm86_32.c", "fix_solution": "Review and update the vm86old exit path to ensure it correctly interacts with lockdep, possibly by adding missing lockdep annotations or ensuring proper lock release."}, {"cause": "A potential race condition in the lockdep_sys_exit function could lead to accessing invalid memory, causing a general protection fault.", "code_file": "kernel/exit.c", "fix_solution": "Add synchronization mechanisms to prevent race conditions in lockdep_sys_exit, ensuring that all accesses to shared data are properly protected."}], "input_tokens": 716, "output_tokens": 253}
{"id": "13250", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_proc.c", "sound/pci/hda/patch_realtek.c", "include/sound/driver.h", "include/sound/hda_hwdep.h", "include/sound/core.h"], "input_tokens_sum": 145639, "output_tokens_sum": 2014, "description": "The ALSA mixer is now missing the side channel, which was present and did work with the previous kernel. I also have a ATI graphics card with HDA chip which I don't use for audio in that machine.\n\nlspci:\n\n00:1b.0 Audio device: Intel Corporation 82801H (ICH8 Family) HD Audio Controller (rev 02)\n\tSubsystem: Intel Corporation Device 2504\n\tFlags: bus master, fast devsel, latency 0, IRQ 22\n\tMemory at d0220000 (64-bit, non-prefetchable) [size=16K]\n\tCapabilities: <access denied>\n\tKernel driver in use: HDA Intel\n\tKernel modules: snd-hda-intel", "title": "Side channel of Intel HDA chip doesn't work anymore, did work with 2.6.29", "Kernel Version": "2.6.30-rc3", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_mixer.c", "sound/pci/hda/hda_controller.c"], "causes": [{"cause": "The side channel functionality might have been disabled or removed in the snd-hda-intel driver during the transition from kernel version 2.6.29 to 2.6.30-rc3.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Re-enable or restore the side channel functionality by reviewing changes between the two kernel versions and ensuring the side channel is correctly initialized and exposed in the ALSA mixer."}, {"cause": "The codec configuration for the Intel HDA chip might have been altered, leading to the side channel not being recognized or initialized properly.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Investigate the codec initialization code to ensure that the side channel is correctly identified and configured during the setup process."}, {"cause": "Changes in the ALSA mixer interface might have inadvertently hidden or removed the side channel from the mixer controls.", "code_file": "sound/pci/hda/hda_mixer.c", "fix_solution": "Review the mixer control setup to ensure that the side channel is included and properly exposed in the mixer interface."}, {"cause": "The presence of the ATI graphics card with its own HDA chip might be causing conflicts or misconfigurations in the HDA driver, affecting the Intel HDA chip's side channel.", "code_file": "sound/pci/hda/hda_controller.c", "fix_solution": "Ensure that the driver correctly distinguishes between multiple HDA devices and configures them independently without interference."}], "input_tokens": 520, "output_tokens": 352}
{"id": "13232", "paths": ["fs/inode.c"], "predicts": ["fs/ext3/fsync.c", "fs/ext3/super.c", "fs/ext4/fsync.c", "fs/ext4/super.c", "include/linux/ext3_fs.h", "include/linux/fs.h", "include/linux/jbd.h", "include/linux/jbd2.h", "mm/filemap.c", "mm/page-writeback.c"], "input_tokens_sum": 142089, "output_tokens_sum": 2545, "description": "Latest working kernel version: 2.6.28.9\nEarliest failing kernel version: 2.6.29\nDistribution: Ubuntu 8.04 LTS\nHardware Environment: Intel 875p chipset (ICH5), P4 with HT\nSoftware Environment: Postfix 2.5.1-2ubuntu1.2\n\nProblem Description:\n\nWith its queue directory on an ext3 or journalled ext4 file\nsystem, mounted with the 'sync' option (or with the 'S' attribute\non the individual queue directories, which is a config option for\nthe Ubuntu package), sending more than a few messages in quick\nsuccession through Postfix causes Postfix and any other process\nattempting to modify the file system afterwards (e.g. by updating\nthe atime when listing a directory) to hang in uninterruptible\nsleep.  sync(1) will also hang afterwards.  If the FS is mounted\nnoatime, it is still possible to read from it, although trying to\nlist the affected queue directories still causes ls to hang (the\nlist of affected directories seems to vary, but may include at\nleast \"active\" and \"maildrop\").\n\nThis happens whether", "title": "ext3/4 with synchronous writes gets wedged by Postfix", "Kernel Version": "2.6.29", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/ext3/sync.c", "fs/ext4/inode.c", "fs/ext3/file.c", "fs/ext4/super.c"], "causes": [{"cause": "The synchronous write operations in ext3/ext4 with the 'sync' mount option may be causing excessive locking, leading to processes hanging in uninterruptible sleep.", "code_file": "fs/ext3/sync.c", "fix_solution": "Optimize the locking mechanism for synchronous writes to reduce contention and prevent processes from hanging."}, {"cause": "The handling of the 'sync' attribute on directories may be causing excessive journal commits, leading to a bottleneck in the filesystem operations.", "code_file": "fs/ext4/inode.c", "fix_solution": "Modify the journal commit logic to batch operations more effectively when the 'sync' attribute is set, reducing the frequency of commits."}, {"cause": "The interaction between the 'sync' mount option and the atime updates may be causing unnecessary synchronous writes, leading to system hangs.", "code_file": "fs/ext3/file.c", "fix_solution": "Implement a mechanism to defer atime updates when the filesystem is mounted with 'sync', reducing the number of synchronous writes."}, {"cause": "The ext3/ext4 filesystem may not be handling concurrent synchronous writes efficiently, leading to deadlocks or resource contention.", "code_file": "fs/ext4/super.c", "fix_solution": "Improve the concurrency handling in the filesystem code to better manage simultaneous synchronous write operations."}], "input_tokens": 612, "output_tokens": 307}
{"id": "13134", "paths": ["drivers/input/mouse/alps.c"], "predicts": ["drivers/input/mouse/alps.c", "drivers/input/mouse/alps.h", "drivers/input/serio/i8042.c", "drivers/input/mouse/psmouse.h", "include/linux/i8042.h", "include/linux/input.h", "include/linux/libps2.h", "include/linux/serio.h"], "input_tokens_sum": 165666, "output_tokens_sum": 7813, "description": "Created attachment 21037 [details]\ndmesg with i8042.debug kernel option\n\nI'm using an ALPS Touchpad in my Toshiba Satellite Pro M10.\n\"Advanced features\" in X like vertical/horizontal scrolling don't work\nbecause kernel doesn't recognize the mouse as a touchpad but as a \"PS/2\nGeneric Mouse\". I've looked in launchpad/google/debian bugtrack systems\nand this problem affects a lot of distros/hardware. All points it's a\nproblem with the input subsystem. I've seen reports of people that say\nadding i8042.nomux=1 on boot fixes it for them. It doesn't for me. It's\nnot a hardware error (at least in my case) because touchpad works\nflawless in windows.", "title": "ALPS Touchpad not getting recognized anymore", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/input/mouse/alps.c", "drivers/input/serio/i8042.c", "drivers/input/mouse/psmouse-base.c"], "causes": [{"cause": "The ALPS touchpad is being incorrectly identified as a generic PS/2 mouse due to a lack of proper detection logic for ALPS devices in the kernel's input subsystem.", "code_file": "drivers/input/mouse/alps.c", "fix_solution": "Add specific detection logic for ALPS touchpads by checking the device ID and implementing a handler to correctly identify and initialize ALPS touchpad features."}, {"cause": "The i8042 controller is not properly initializing the ALPS touchpad, possibly due to incorrect multiplexing settings or initialization sequences.", "code_file": "drivers/input/serio/i8042.c", "fix_solution": "Modify the initialization sequence for the i8042 controller to ensure that ALPS touchpads are correctly initialized, possibly by adding a quirk for Toshiba Satellite Pro M10 models."}, {"cause": "The kernel's input subsystem lacks support for advanced ALPS touchpad features, leading to fallback to basic PS/2 mouse functionality.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Enhance the psmouse driver to include support for advanced ALPS touchpad features such as multi-finger gestures and scrolling by adding specific protocol handling."}], "input_tokens": 510, "output_tokens": 280}
{"id": "12971", "paths": ["drivers/net/tg3.c"], "predicts": ["drivers/net/tg3.c", "net/sched/sch_generic.c", "net/core/dev.c", "drivers/net/phy/broadcom.c"], "input_tokens_sum": 142249, "output_tokens_sum": 1590, "description": "I have laptop - HP compaq 6715s with broadcom lan card (from lspci):\n10:00.0 Ethernet controller: Broadcom Corporation NetLink BCM5906M Fast Ethernet PCI Express (rev 02). I am using slackware 12.2. I compiled kernel 2.6.29 from kernel.org. \n\nWhen I try to copy a file trough the LAN from this laptop with a command like this:\nscp test.bin 192.168.0.1:/tmp\n\nSome MBytes are copied and the transmit stops and there is some messages in dmesg:\n\nWARNING: at net/sched/sch_generic.c:226 dev_watchdog+0x1c2/0x1d0()\nHardware name: HP Compaq 6715s (GR897ES#ABB)\nNETDEV WATCHDOG: eth0 (tg3): transmit timed out\nModules linked in: snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_devic\ne snd_pcm_oss snd_mixer_oss ipv6 cpufreq_stats powernow_k8 freq_table ppdev lp parpor\nt_pc parport fuse snd_hda_codec_analog pcmcia snd_hda_intel snd_hda_codec tg3 fan yen\nta_socket snd_hwdep video rsrc_nonstatic rtc_cmos snd_pcm thermal output rtc_core pcm\ncia_core ati_agp processor libphy rtc_lib psmouse i2c_", "title": "\"tg3 transmit timed out\" when transmitting at high bitrate", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/broadcom/tg3.c", "net/core/dev.c", "drivers/pci/pcie/aspm.c"], "causes": [{"cause": "The tg3 driver may not be handling transmit timeouts correctly, leading to a failure in recovering from a stalled transmission.", "code_file": "drivers/net/ethernet/broadcom/tg3.c", "fix_solution": "Implement a more robust timeout recovery mechanism in the tg3 driver, ensuring that the driver resets the hardware and clears any pending transmit descriptors."}, {"cause": "The network stack may be experiencing congestion or buffer overflow, causing the transmit timeout.", "code_file": "net/core/dev.c", "fix_solution": "Adjust the network stack to better handle high bitrate transmissions, possibly by increasing buffer sizes or optimizing the scheduling of network packets."}, {"cause": "The PCI Express interface may not be configured optimally for the Broadcom NetLink BCM5906M, leading to transmission delays.", "code_file": "drivers/pci/pcie/aspm.c", "fix_solution": "Review and adjust the PCI Express Active State Power Management (ASPM) settings to ensure optimal performance for the network card."}, {"cause": "The tg3 driver may not be correctly handling interrupts, leading to missed or delayed processing of transmit completions.", "code_file": "drivers/net/ethernet/broadcom/tg3.c", "fix_solution": "Ensure that the interrupt handling code in the tg3 driver is correctly configured to process transmit completions promptly, possibly by verifying the interrupt mask settings."}], "input_tokens": 656, "output_tokens": 320}
{"id": "12969", "paths": ["drivers/net/b44.c"], "predicts": ["lib/scatterlist.c", "include/linux/dma-mapping.h", "kernel/dma.c", "kernel/dma-coherent.c", "drivers/dma/dmaengine.c", "include/linux/dma-attrs.h", "drivers/dma/ioat.c", "drivers/dma/fsldma.c", "drivers/dma/mv_xor.c", "drivers/dma/dw_dmac.c"], "input_tokens_sum": 148069, "output_tokens_sum": 2424, "description": "------------[ cut here ]------------                                                                                                          \nWARNING: at lib/dma-debug.c:539 check_sync+0xe9/0x341() (Not tainted)                                                                         \nHardware name: HP Compaq nx6110 (PY501EA#AB9)                                                                                                 \nb44 0000:02:0e.0: DMA-API: device driver tries to sync DMA memory it has not allocated [device address=0x0000000075941040] [size=1566 bytes]  \nModules linked in: llc bnep l2cap bluetooth autofs4 lm90 hwmon i2c_i801 sunrpc ipv6 cpufreq_ondemand acpi_cpufreq uinput snd_intel8x0m snd_intel8x0 snd_ac97_codec snd_seq_dummy ac97_bus snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device snd_pcm_oss snd_mixer_oss snd_pcm b44 ssb firewire_ohci snd_timer ipw2200 iTCO_wdt mii firewire_core snd iTCO_vendor_support libipw yenta_socket crc_itu_t lib80211 rsrc_nonstatic soundcore", "title": "WARNING: at lib/dma-debug.c:539 check_sync+0xe9/0x341() (Not tainted)", "Kernel Version": "2.6.29", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/broadcom/b44.c"], "causes": [{"cause": "The b44 network driver is attempting to sync DMA memory that it did not allocate, possibly due to incorrect handling of DMA buffer allocation or synchronization.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Ensure that the DMA buffer is properly allocated before attempting to sync it. Add checks to verify the buffer's allocation status before calling dma_sync_single_for_cpu or dma_sync_single_for_device."}, {"cause": "The DMA API usage in the b44 driver might be incorrect, leading to attempts to sync memory that was not allocated for DMA operations.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Review and correct the DMA API usage in the driver, ensuring that all DMA operations are performed on properly allocated and mapped memory regions."}, {"cause": "There might be a mismatch in the size of the DMA buffer being synced, causing the warning due to an incorrect size parameter.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Verify that the size parameter used in DMA sync operations matches the actual size of the allocated DMA buffer."}, {"cause": "The driver might be using a stale or invalid device address for DMA operations, leading to the warning.", "code_file": "drivers/net/ethernet/broadcom/b44.c", "fix_solution": "Ensure that the device address used for DMA operations is valid and corresponds to the currently allocated DMA buffer."}], "input_tokens": 618, "output_tokens": 343}
{"id": "12961", "paths": ["arch/x86/kernel/hpet.c"], "predicts": ["arch/x86/kernel/io_apic.c", "arch/x86/kernel/apic.c", "arch/x86/kernel/mpparse.c", "drivers/acpi/pci_irq.c", "kernel/irq/chip.c", "kernel/irq/manage.c", "kernel/time/timer_list.c", "kernel/timer.c", "init/calibrate.c", "init/main.c"], "input_tokens_sum": 157457, "output_tokens_sum": 5272, "description": "Created attachment 20718 [details]\ndmesg with acpi=debug\n\nLast working kernel version: 2.6.29-rc8-gitsomething\n\nHardware:\n\nTyan K8W Motherboard with 2 1.8GHz Dual Core Opterons with 2GB Ram for each node. The Motherboard uses the AMD 8xxx chipsets for AGP, PCI-X and Southbridge.\n\nSoftware: Debian unstable, 64bit.\n\nThe kernel crashes with the following message (and a backtrace afterwards):\n\n[    0.008000] ENABLING IO-APIC IRQs\n[    0.008000] ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=0 pin2=0\n[    0.008000] ..MP-BIOS bug: 8254 timer not connected to IO-APIC\n[    0.008000] ...trying to set up timer (IRQ0) through the 8259A ...\n[    0.008000] ..... (found apic 0 pin 0) ...\n[    0.008000] ....... failed.\n[    0.008000] ...trying to set up timer as Virtual Wire IRQ...\n[    0.008000] ..... failed.\n[    0.008000] ...trying to set up timer as ExtINT IRQ...\n[    0.008000] ..... failed :(.\n[    0.008000] Kernel panic - not syncing: IO-APIC + timer doesn't work!  Boot with apic=debug and send a r.", "title": "Kernel panics in early boot: IO-APIC + timer doesn't work", "Kernel Version": "2.6.29", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/apic/io_apic.c", "arch/x86/kernel/mpparse.c", "arch/x86/kernel/time.c", "arch/x86/kernel/apic/apic.c"], "causes": [{"cause": "The 8254 timer is not properly connected to the IO-APIC, causing the system to fail in setting up the timer interrupts.", "code_file": "arch/x86/kernel/apic/io_apic.c", "fix_solution": "Modify the IO-APIC initialization code to correctly map the 8254 timer to the appropriate IO-APIC pin, ensuring proper interrupt routing."}, {"cause": "The MP-BIOS is providing incorrect or incomplete information about the timer's connection to the IO-APIC.", "code_file": "arch/x86/kernel/mpparse.c", "fix_solution": "Enhance the parsing logic to handle cases where the MP-BIOS provides incomplete or incorrect timer information, possibly by adding a fallback mechanism."}, {"cause": "The system is failing to fall back to a working timer setup method after the initial setup attempts fail.", "code_file": "arch/x86/kernel/time.c", "fix_solution": "Implement a more robust fallback mechanism that attempts alternative timer configurations when the primary setup fails, ensuring at least one method succeeds."}, {"cause": "The APIC timer vector is not being correctly initialized, leading to a failure in setting up the timer interrupts.", "code_file": "arch/x86/kernel/apic/apic.c", "fix_solution": "Ensure that the APIC timer vector is correctly initialized and mapped to the appropriate interrupt vector, allowing the timer to function correctly."}], "input_tokens": 709, "output_tokens": 326}
{"id": "12914", "paths": ["drivers/serial/pmac_zilog.c"], "predicts": ["drivers/serial/pmac_zilog.c", "drivers/serial/pmac_zilog.h", "arch/powerpc/kernel/irq.c", "arch/powerpc/platforms/powermac/pmac.h", "arch/powerpc/kernel/setup-common.c", "include/linux/serial.h"], "input_tokens_sum": 133228, "output_tokens_sum": 1928, "description": "Latest working kernel version: 2.6.11\nEarliest failing kernel version: 2.6.27\nDistribution: OpenSUSE 11.1\nHardware Environment: powerpc ( macintosh Powerbook G3 \"wallstreet\")\nSoftware Environment: gcc 4.3.2\nProblem Description: \n\nAfter upgrade to 2.6.28.8, the internal serial modem\nis no longer configured and /dev/ttyPZ2 does not respond.\n\nThe following is the truncated output of dmesg:\n\nUsing PowerMac machine description\nTotal memory = 160MB; using 512kB for hash table (at c9f80000)\nLinux version 2.6.28.8 (sadd@corinth) (gcc version 4.3.2 [gcc-4_3-branch revisio\nn 141291] (SUSE Linux) ) #1 Thu Mar 19 03:25:12 CDT 2009\nFound a Gatwick mac-io controller, rev: 1, mapped at 0xff780000\nFound a Heathrow mac-io controller, rev: 1, mapped at 0xff700000\nPowerMac motherboard: PowerBook Wallstreet\nPMU driver v2 initialized for PowerBook G3 Series, firmware: 0a\nconsole [udbg0] enabled\nFound Grackle (MPC106) PCI host bridge at 0x0000000080000000. Firmware bus numbe\nr: 0->0\n[...]\npmac_zilog: serial", "title": "pmac_zilog fails to find IRQ for internal serial modem", "Kernel Version": "2.6.28", "Product": "Platform Specific/Hardware", "Component": "PPC-32", "Hardware": "All Linux", "reranked_files": ["drivers/tty/serial/pmac_zilog.c", "arch/powerpc/platforms/powermac/serial.c", "drivers/tty/tty_io.c", "arch/powerpc/kernel/irq.c"], "causes": [{"cause": "The pmac_zilog driver may not be correctly mapping the IRQ for the internal serial modem due to changes in the IRQ handling code between kernel versions.", "code_file": "drivers/tty/serial/pmac_zilog.c", "fix_solution": "Ensure that the IRQ is correctly requested and mapped by verifying the IRQ resource allocation and handling in the pmac_zilog driver."}, {"cause": "Changes in the device tree or platform-specific initialization code might have affected the detection of the internal serial modem.", "code_file": "arch/powerpc/platforms/powermac/serial.c", "fix_solution": "Review and update the device tree parsing and platform initialization code to ensure the internal serial modem is correctly detected and initialized."}, {"cause": "The serial port registration process might have been altered, affecting the creation of device nodes like /dev/ttyPZ2.", "code_file": "drivers/tty/tty_io.c", "fix_solution": "Check the serial port registration logic to ensure that device nodes are correctly created for all detected serial ports."}, {"cause": "Interrupt handling changes in the PowerPC architecture code could have impacted the IRQ delivery to the pmac_zilog driver.", "code_file": "arch/powerpc/kernel/irq.c", "fix_solution": "Investigate and adjust the IRQ handling code to ensure that interrupts are correctly routed to the pmac_zilog driver."}], "input_tokens": 689, "output_tokens": 324}
{"id": "12646", "paths": ["drivers/w1/slaves/w1_therm.c"], "predicts": ["drivers/w1/slaves/w1_therm.c", "drivers/w1/w1.c", "drivers/w1/w1_family.c", "drivers/w1/w1_io.c", "drivers/w1/w1_int.c"], "input_tokens_sum": 136404, "output_tokens_sum": 1181, "description": "Latest working kernel version:Unknown\nEarliest failing kernel version:2.6.29-rc3\nDistribution:FC-8\nHardware Environment:i386, DS18B20 slave, DS9490R master.\nSoftware Environment:\nProblem Description:When the temperature exceeds 32767 milli-degrees the temperature overflows to -32768 millidegrees. These are bothe well within the -55 - +125 degree range for the sensor.\n\nSteps to reproduce: Put your thumb on the sensor while periodically inspecting /sys/devices/w1\\ bus\\ master/*/w1_slave", "title": "w1_therm overflows for temperatures greater that 32.767 Celsius", "Kernel Version": "2.6.29-rc3", "Product": "Drivers", "Component": "W1", "Hardware": "All Linux", "reranked_files": ["drivers/w1/slaves/w1_therm.c"], "causes": [{"cause": "The temperature value is being stored in a signed 16-bit integer, which causes overflow when the value exceeds 32767 milli-degrees.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Change the data type used to store the temperature from a signed 16-bit integer to a signed 32-bit integer to accommodate the full range of the sensor."}, {"cause": "The conversion function for the temperature reading does not correctly handle values above 32767 milli-degrees, leading to incorrect sign extension.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Modify the conversion function to correctly handle values above 32767 milli-degrees by ensuring proper sign extension for the temperature data."}, {"cause": "The temperature reading logic does not account for the sensor's full range, leading to incorrect interpretation of the raw data.", "code_file": "drivers/w1/slaves/w1_therm.c", "fix_solution": "Update the logic to correctly interpret the raw data from the sensor, ensuring that the full range of -55 to +125 degrees Celsius is supported."}], "input_tokens": 485, "output_tokens": 269}
{"id": "12632", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/power/power_supply_core.c", "drivers/power/power_supply.h", "include/linux/power_supply.h"], "input_tokens_sum": 147114, "output_tokens_sum": 2093, "description": "Latest working kernel version: None\nEarliest failing kernel version: Everything since ACPI moved to using the power_supply class\nDistribution: Fedora rawhide\nHardware Environment: Lenovo T61\nSoftware Environment: Fedora rawhide\nProblem Description:\n\nOn hardware like the T61 it can take a couple of seconds for the battery\nto start charging after the power is connected, and we incorrectly tell\nuserspace that we are fully charged, and then go back to charging.\n\nOnly mark a battery as fully charged when the preset charge matches either\nthe last full charge, or the design charge.\n\nSteps to reproduce:\n\nCharge battery to 50%. Watch /sys/class/power_supply/BAT*/status, and observe that when the power is disconnected, the status goes from charging->fully_charged->discharging. This also happens when going from battery to AC. This greatly confuses userspace.", "title": "don't assume we are fully charged when not charging or discharging", "Kernel Version": "2.6.29-rc3", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/power/supply/power_supply_core.c", "drivers/acpi/battery.c", "drivers/power/supply/power_supply_sysfs.c"], "causes": [{"cause": "The battery status is incorrectly set to 'fully charged' when the battery is neither charging nor discharging, due to a delay in the charging state update.", "code_file": "drivers/power/supply/power_supply_core.c", "fix_solution": "Modify the logic to only set the status to 'fully charged' when the present charge matches the last full charge or the design charge, ensuring the status is not prematurely set."}, {"cause": "The transition logic between charging states does not account for the delay in hardware state changes, leading to incorrect status reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Introduce a delay or a check to confirm the charging state before updating the status to 'fully charged', preventing premature status updates."}, {"cause": "The power supply class does not handle intermediate states correctly, causing confusion in userspace about the battery status.", "code_file": "drivers/power/supply/power_supply_sysfs.c", "fix_solution": "Update the sysfs interface to ensure that the status reflects the actual battery state by adding checks for intermediate states before reporting 'fully charged'."}], "input_tokens": 543, "output_tokens": 263}
{"id": "12592", "paths": ["drivers/firewire/fw-card.c"], "predicts": ["drivers/firewire/fw-card.c", "drivers/firewire/fw-ohci.c", "drivers/firewire/fw-ohci.h"], "input_tokens_sum": 137728, "output_tokens_sum": 1221, "description": "Latest working kernel version:  never\nEarliest failing kernel version:  always\nDistribution:  Debian\nHardware Environment:  Two \"FireWire (IEEE 1394): Texas Instruments TSB43AB23 IEEE-1394a-2000 Controller (PHY/Link)\" devices in one box, with on-board device ill...\nSoftware Environment:  New FW stack\nProblem Description:\n\nWhen Vista boots on the hardware, it does something bad to the on-board firewire adapter, so it starts failing to enable card:\n\nfirewire_ohci 0000:01:09.0: PCI INT A -> Link[APC4] -> GSI 19 (level, low) -> IRQ 19\nfirewire_ohci 0000:01:09.0: setting latency timer to 64\nfirewire_ohci: failed to set phy reg bits.\nfirewire_ohci 0000:01:09.0: PCI INT A disabled\nfirewire_ohci: probe of 0000:01:09.0 failed with error -5\n\nWhen that happens, fw_add_card adds card to the list of all devices, but then returns an error.  Caller then thinks that things went wrong, and releases card structure.  Then when fw_add_card is invoked for second device, kernel reports linked list corruptio", "title": "fw_card_add adds card to the list even on enable failure", "Kernel Version": "2.6.29-rc3", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "All Linux", "reranked_files": ["drivers/firewire/core-card.c", "drivers/firewire/ohci.c"], "causes": [{"cause": "The function fw_card_add does not properly handle the failure of enabling the card, leading to the card being added to the list even when initialization fails.", "code_file": "drivers/firewire/core-card.c", "fix_solution": "Modify the fw_card_add function to ensure that the card is not added to the list if enabling the card fails. This can be done by checking the return value of the card enabling function and only adding the card to the list if the operation is successful."}, {"cause": "The error handling in the firewire_ohci driver does not properly clean up resources when initialization fails, leading to potential linked list corruption.", "code_file": "drivers/firewire/ohci.c", "fix_solution": "Enhance the error handling in the firewire_ohci_probe function to ensure that all resources are properly released and the card is not added to the global list if initialization fails."}, {"cause": "The card structure is being released by the caller even though it has been added to the global list, leading to use-after-free issues.", "code_file": "drivers/firewire/core-card.c", "fix_solution": "Ensure that the card structure is not released by the caller if it has been added to the global list, or remove it from the list before releasing it."}], "input_tokens": 641, "output_tokens": 295}
{"id": "12567", "paths": ["drivers/net/wireless/rtl8187_dev.c"], "predicts": ["drivers/net/wireless/rtl8187_dev.c"], "input_tokens_sum": 129047, "output_tokens_sum": 2243, "description": "The rtl8187 module driver doesn't work properly on hight traffic. When foe example I am downloading torrents the card doesn't respond an the connection is lost. I have to unload and load the module again. I only happens with me when the torrents are on.", "title": "The rtl-8187b card stops responding and connection is lost on hight trafic (torrent protocol).", "Kernel Version": "2.6.28", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/rtl818x/rtl8187/dev.c", "drivers/net/wireless/rtl818x/rtl8187/rx.c", "drivers/net/wireless/rtl818x/rtl8187/power.c", "drivers/net/wireless/rtl818x/rtl8187/error.c"], "causes": [{"cause": "The rtl8187 driver may not handle high traffic scenarios properly, leading to buffer overflow or resource exhaustion.", "code_file": "drivers/net/wireless/rtl818x/rtl8187/dev.c", "fix_solution": "Implement flow control mechanisms to manage high traffic scenarios, such as limiting the number of packets processed simultaneously or increasing buffer sizes."}, {"cause": "The interrupt handling in the rtl8187 driver may not be efficient under high load, causing missed interrupts and loss of connection.", "code_file": "drivers/net/wireless/rtl818x/rtl8187/rx.c", "fix_solution": "Optimize the interrupt handling logic to ensure all interrupts are processed promptly, possibly by prioritizing critical interrupts or using tasklets."}, {"cause": "The power management settings in the rtl8187 driver might be causing the device to enter a low-power state during high traffic, leading to connection loss.", "code_file": "drivers/net/wireless/rtl818x/rtl8187/power.c", "fix_solution": "Adjust power management settings to prevent the device from entering low-power states during high traffic conditions, ensuring continuous operation."}, {"cause": "The driver may not properly handle error conditions or recover from them, leading to a loss of connection under stress.", "code_file": "drivers/net/wireless/rtl818x/rtl8187/error.c", "fix_solution": "Enhance error handling and recovery mechanisms to ensure the driver can recover from errors without requiring a module reload."}], "input_tokens": 419, "output_tokens": 342}
{"id": "12360", "paths": ["drivers/acpi/dock.c"], "predicts": ["drivers/acpi/dock.c", "drivers/acpi/button.c", "drivers/acpi/glue.c", "include/linux/acpi.h", "arch/x86/pci/acpi.c", "include/linux/pci_hotplug.h", "drivers/acpi/video.c", "drivers/acpi/pci_bind.c", "arch/x86/pci/fixup.c", "mm/memory_hotplug.c"], "input_tokens_sum": 130914, "output_tokens_sum": 2343, "description": "Latest working kernel version:2.6.26.2\nEarliest failing kernel version:2.6.28\nDistribution:Debian SID\nHardware Environment: Dell D43\nSoftware Environment: only kernel\nProblem Description: after upgrade kernel and undocking kernel prints info about undock but after while docking  again.See atached dmesg. After this I lost keyboard and mouse. Sometime I get it back.\n\nSteps to reproduce:\ncompile 2.6.28 and undock", "title": "with 2.6.28 undock/dock work bad or freeze computer - Dell D430", "Kernel Version": "2.6.28", "Product": "ACPI", "Component": "Config-Hotplug", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/dock.c", "drivers/input/input.c", "drivers/acpi/hotplug.c", "drivers/acpi/power.c"], "causes": [{"cause": "The ACPI docking station support may have a regression in handling dock/undock events, causing incorrect state transitions.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Review and update the event handling logic to ensure proper state management during dock and undock operations."}, {"cause": "The kernel's input subsystem may not be correctly reinitializing input devices after a docking event, leading to loss of keyboard and mouse functionality.", "code_file": "drivers/input/input.c", "fix_solution": "Ensure that input devices are properly reinitialized and re-registered after docking events."}, {"cause": "The ACPI hotplug configuration might not be correctly updating the device tree, causing inconsistencies in device availability.", "code_file": "drivers/acpi/hotplug.c", "fix_solution": "Add checks and updates to the device tree during dock/undock events to maintain accurate device status."}, {"cause": "The kernel's power management subsystem may not be handling power state transitions correctly during docking operations.", "code_file": "drivers/acpi/power.c", "fix_solution": "Review and adjust power state transition logic to ensure devices are correctly powered on/off during dock/undock."}], "input_tokens": 473, "output_tokens": 285}
{"id": "12310", "paths": ["drivers/cpufreq/cpufreq_ondemand.c"], "predicts": ["drivers/cpufreq/cpufreq_ondemand.c", "kernel/time/tick-sched.c", "include/cpufreq.h"], "input_tokens_sum": 132378, "output_tokens_sum": 1483, "description": "Latest working kernel version: Don't think it ever worked well with NOHZ, but got worse after 2.6.26\nEarliest failing kernel version:\nDistribution:\nHardware Environment: Everex notebook, AMD 64 dual-core\nSoftware Environment: \nProblem Description:\n\n  [this bug is a tickless+ondemand interaction: the problem may be in the cpufreq_ondemand code]\n\n  I'm running boinc, which will cheerfully keep both cores loaded with niced processes if I let it. In the past, meaning for the last six months or more, I managed to stop the niced processes from upping the frequency by setting up_threshhold to 50 or more and letting boinc use only 80% CPU, but with 2.6.28 nothing I did mattered.\n\n I got to looking around the ondemand code and noticed that it would try to call\nget_cpu_idle_time_us() and then calculate idle time differently if that failed, which would happen if NOHZ is turned off. I rebooted with 'nohz=off' and the ondemand code behaves completely to spec according to how I set ignore_nice_load ", "title": "NOHZ appears to cause ondemand to effectively ignore 'ignore_nice_load'", "Kernel Version": "2.6.28", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq_ondemand.c", "kernel/time/tick-sched.c", "kernel/sched/fair.c"], "causes": [{"cause": "The ondemand governor does not correctly account for niced processes when NOHZ is enabled, leading to incorrect frequency scaling decisions.", "code_file": "drivers/cpufreq/cpufreq_ondemand.c", "fix_solution": "Modify the ondemand governor to correctly handle the ignore_nice_load parameter when NOHZ is enabled by ensuring that the idle time calculation accounts for niced processes."}, {"cause": "The get_cpu_idle_time_us() function may not be returning accurate idle time when NOHZ is enabled, affecting the ondemand governor's decision-making.", "code_file": "kernel/time/tick-sched.c", "fix_solution": "Ensure that get_cpu_idle_time_us() correctly calculates idle time even when NOHZ is enabled, possibly by adjusting how idle time is tracked in a tickless environment."}, {"cause": "The interaction between NOHZ and the ondemand governor's frequency scaling logic may not be properly synchronized, leading to misinterpretation of CPU load.", "code_file": "kernel/sched/fair.c", "fix_solution": "Review and adjust the load calculation logic in the scheduler to ensure it accurately reflects the CPU load when NOHZ is enabled, particularly in relation to niced processes."}], "input_tokens": 600, "output_tokens": 280}
{"id": "12302", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/video.c", "drivers/acpi/power.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/pci/acpi.c", "arch/x86/video/fbdev.c", "include/acpi/acpi_bus.h", "include/acpi/acpi_drivers.h", "kernel/power/power.h", "fs/sysfs/file.c", "lib/kobject.c"], "input_tokens_sum": 133762, "output_tokens_sum": 2048, "description": "Latest working kernel version: 2.6.27.10\nEarliest failing kernel version: 2.6.28\nDistribution: all\nHardware Environment: Notebook asus X51L\nSoftware Environment: all\nProblem Description:backward brigthess level\n\nSteps to reproduce: start Kpowersave and select brigthess level \n\nAsus X51L backward brigthess trouble.\n\n/proc/acpi/video/VGA/LCDD/brightness - work fine 0-min 15-max\n/sys/class/backlight/acpi_video0/brightness - trouble 0-max 15-min\n\nKpowersave work bad - 100%-min 1%-max\n\nIn dmesg:\n\nDec 25 23:47:08 sfstudio kernel: \nACPI: Please implement acpi_video_bus_ROM_seq_show\nDec 26 01:34:14 sfstudio kernel: asus-laptop: Asus Laptop Support version 0.42\nDec 26 01:34:14 sfstudio kernel: asus-laptop:   X51L model detected\nDec 26 01:34:14 sfstudio kernel: asus-laptop: Brightness ignored, must be\ncontrolled by ACPI video driver\nDec 26 01:34:14 sfstudio kernel: Registered led device: asus::mail\nDec 26 01:37:29 sfstudio kernel: asus-laptop: Asus Laptop Support version 0.42\nDec 26 01:37:29 sfs", "title": "Backward brigthess level", "Kernel Version": "2.6.28", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c", "drivers/platform/x86/asus-laptop.c", "drivers/video/backlight/backlight.c"], "causes": [{"cause": "The ACPI video driver is interpreting brightness levels in reverse order, causing the brightness control to behave incorrectly.", "code_file": "drivers/acpi/video.c", "fix_solution": "Modify the brightness level mapping logic to ensure that the levels are interpreted in the correct order, matching the expected 0-min to 15-max range."}, {"cause": "The asus-laptop driver is not correctly delegating brightness control to the ACPI video driver, leading to conflicting brightness level interpretations.", "code_file": "drivers/platform/x86/asus-laptop.c", "fix_solution": "Ensure that the asus-laptop driver properly defers brightness control to the ACPI video driver by removing or adjusting any conflicting brightness handling code."}, {"cause": "The sysfs interface for backlight control is not correctly initialized, causing the brightness levels to be inverted.", "code_file": "drivers/video/backlight/backlight.c", "fix_solution": "Adjust the initialization of the sysfs backlight interface to ensure that the brightness levels are set up in the correct order, matching the expected behavior."}], "input_tokens": 667, "output_tokens": 251}
{"id": "12286", "paths": ["drivers/misc/tc1100-wmi.c"], "predicts": ["drivers/misc/tc1100-wmi.c", "include/linux/acpi.h"], "input_tokens_sum": 118727, "output_tokens_sum": 773, "description": "Latest working kernel version: 2.6.22\nEarliest failing kernel version: 2.6.25\nDistribution: Ubuntu\n\nProblem Description:\nThe tc1100-wmi driver should print the current states of wireless LAN and jogdial brightness control when \"cat /sys/devices/platform/tc1100-wmi/wireless\" and \"cat /sys/devices/platform/tc1100-wmi/jogdial\" are executed, respectively. What actually happens is that both of those commands print 0 regardless of the hardware state. The cause is that wmi_query_block returns an ACPI_TYPE_INTEGER rather than ACPI_TYPE_BUFFER as the driver assumes. Additionally, the driver intends to return a jogdial state that is inverted with respect to the commands required to set it (e.g. it intends to return 1 after the jogdial file was written with 0).", "title": "[Patch] tc1100-wmi: sysfs entries always 0", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/tc1100-wmi.c"], "causes": [{"cause": "The tc1100-wmi driver incorrectly assumes that wmi_query_block returns an ACPI_TYPE_BUFFER, but it actually returns an ACPI_TYPE_INTEGER, leading to incorrect sysfs output.", "code_file": "drivers/platform/x86/tc1100-wmi.c", "fix_solution": "Modify the handling of the return value from wmi_query_block to correctly interpret ACPI_TYPE_INTEGER and update the sysfs entries accordingly."}, {"cause": "The jogdial state is inverted in the driver logic, causing the sysfs entry to return the opposite state of what was set.", "code_file": "drivers/platform/x86/tc1100-wmi.c", "fix_solution": "Adjust the logic for reading and writing the jogdial state to ensure the sysfs entry reflects the correct state."}], "input_tokens": 540, "output_tokens": 186}
{"id": "12270", "paths": ["drivers/acpi/resources/rscreate.c"], "predicts": ["drivers/acpi/pci_irq.c", "drivers/acpi/pci_link.c", "drivers/acpi/pci_root.c", "drivers/acpi/power.c", "drivers/acpi/processor_core.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/cstate.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/sleep.c", "include/acpi/acpi.h"], "input_tokens_sum": 127525, "output_tokens_sum": 2483, "description": "Latest working kernel version:kernel 2.6.24\n\nEarliest failing kernel version: kernel 2.6.27\n\nDistribution: Mandriva\nHardware Environment: Atlon AMD 1800+,\n\nSoftware Environment: KDE\n\nProblem Description: As said in the summary, with kernel 2-6-27 and 2-6-28 (thos ones are availables in mandriva repositories), all my devices are not recognized by the kernel. So, I have no printers, no internet, no webcam.....\nWith kernel 2-6-24, everything is fine. The bug is not due to patched  mandriva kernel since I used a pure linux version kernel.\n\nSteps to reproduce:Just boot the kernel", "title": "Almost all my devices are not recongnized by  kernel-2.6.27, 2.6-28", "Kernel Version": "2.6.27", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/bus.c", "drivers/acpi/acpica/namespace.c", "drivers/acpi/tables.c", "drivers/acpi/interrupt.c", "drivers/acpi/power.c"], "causes": [{"cause": "Changes in ACPI subsystem between kernel versions 2.6.24 and 2.6.27 may have introduced issues with device enumeration.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Review and revert any changes related to device enumeration logic introduced in the ACPI subsystem between these kernel versions."}, {"cause": "The ACPICA-Core component may have introduced a regression affecting device recognition.", "code_file": "drivers/acpi/acpica/namespace.c", "fix_solution": "Investigate changes in ACPICA-Core namespace handling and ensure compatibility with older device recognition methods."}, {"cause": "Potential issues with the ACPI table parsing logic affecting device initialization.", "code_file": "drivers/acpi/tables.c", "fix_solution": "Examine the ACPI table parsing logic for regressions and ensure proper initialization of devices as per ACPI specifications."}, {"cause": "Interrupt handling changes in the ACPI subsystem may be causing devices to not be recognized.", "code_file": "drivers/acpi/interrupt.c", "fix_solution": "Check for changes in interrupt handling and restore previous behavior that ensured proper device recognition."}, {"cause": "Changes in the ACPI power management code may be preventing devices from being powered on correctly.", "code_file": "drivers/acpi/power.c", "fix_solution": "Review power management code changes and ensure devices are powered on correctly during boot."}], "input_tokens": 525, "output_tokens": 334}
{"id": "12239", "paths": ["mm/swapfile.c"], "predicts": ["kernel/power/swap.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "mm/swap.c", "mm/swapfile.c", "drivers/base/power/main.c", "arch/x86/power/hibernate_64.c", "arch/x86/power/hibernate_32.c", "include/linux/swap.h", "include/linux/pm.h"], "input_tokens_sum": 129363, "output_tokens_sum": 2293, "description": "Distribution: Ubuntu 8.10\nHardware Environment: x86-64\nProblem Description:\n\nIf there is not enough swap to hibernate sucessfuly, and you try to hibernate twice in a row, the status of swap partitions is corrupted.\n\nSteps to reproduce:\n\n1) Conspire to ensure insufficient swap space for hibernation\n2) Attempt to hibernate, and fail\n3) Attempt to hibernate *again*, and fail\n4) try swapoff\n\nOutcome:\n\n# swapoff /dev/sda6\nswapoff: /dev/sda6: Invalid argument\n# cat /proc/swaps\nFilename                                Type            Size    Used   \nPriority\n/dev/sda6                               partition       1494004 1350564 -1\n\nMore details about the resulting behaviour:\n\nIncidentally \"swapoff -a\" fails silently, which I think is a bug in\nswapoff (i.e. it should report the error).\n\nI don't see any backtraces in dmesg; the only errors it shows is the\nfailure to hibernate\n\nIf I free up some memory and try to hibernate again, I get a different\nerror - \"Cannot find swap device, try swapon -a.", "title": "Swap breaks after 2x hibernation failure due to lack of swap", "Kernel Version": "2.6.27", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["kernel/power/swap.c", "mm/swapfile.c", "kernel/power/hibernate.c", "mm/swap_state.c"], "causes": [{"cause": "The swap partition state is not properly reset after a failed hibernation attempt, leading to corruption when hibernation is attempted again.", "code_file": "kernel/power/swap.c", "fix_solution": "Ensure that the swap partition state is correctly reset after a failed hibernation attempt by adding a cleanup routine in the hibernation failure path."}, {"cause": "The swapoff operation does not handle corrupted swap states correctly, resulting in an invalid argument error.", "code_file": "mm/swapfile.c", "fix_solution": "Add checks and error handling in the swapoff function to detect and manage corrupted swap states, providing a more informative error message."}, {"cause": "The hibernation process does not verify the availability of swap space before attempting to hibernate, leading to repeated failures.", "code_file": "kernel/power/hibernate.c", "fix_solution": "Implement a pre-check in the hibernation process to verify sufficient swap space is available before proceeding with hibernation."}, {"cause": "The swap partition priority is incorrectly set or managed after a failed hibernation attempt, causing issues with swapoff.", "code_file": "mm/swap_state.c", "fix_solution": "Ensure that swap partition priorities are correctly reset or managed after a failed hibernation attempt to prevent swapoff errors."}], "input_tokens": 615, "output_tokens": 311}
{"id": "12216", "paths": ["drivers/gpu/drm/radeon/radeon_irq.c"], "predicts": ["drivers/gpu/drm/drm_irq.c", "drivers/gpu/drm/radeon/radeon_irq.c", "arch/x86/kernel/irq.c", "kernel/irq/handle.c", "kernel/irq/spurious.c", "kernel/irq/manage.c", "include/linux/irq.h", "include/linux/irqreturn.h", "include/drm/drm.h", "include/drm/drmP.h"], "input_tokens_sum": 164513, "output_tokens_sum": 4847, "description": "Latest working kernel version: maybe 2.6.28-rc6\nEarliest failing kernel version: 2.6.28-rc8\nDistribution: Gentoo\nHardware Environment: Acer Travelmate 4001 Lmi, ATI Radeon Mobility 9700\nSoftware Environment:\nProblem Description:\n\nSteps to reproduce:\n\nWhen the drm module is loaded during X startup, I get the following error:\n\n[   55.642188] [drm] Initialized drm 1.1.0 20060810\n[   55.757559] [drm] Initialized radeon 1.29.0 20080528 on minor 0\n[   56.920297] agpgart-intel 0000:00:00.0: AGP 2.0 bridge\n[   56.920314] agpgart-intel 0000:00:00.0: putting AGP V2 device into 4x mode\n[   56.920347] pci 0000:01:00.0: putting AGP V2 device into 4x mode\n[   57.686654] irq 6: nobody cared (try booting with the \"irqpoll\" option)\n[   57.686660] Pid: 7472, comm: X Not tainted 2.6.28-rc8-git #22\n[   57.686663] Call Trace:\n[   57.686671]  [<c0453414>] __report_bad_irq+0x24/0x90\n[   57.686675]  [<c04535e9>] note_interrupt+0x169/0x1b0\n[   57.686679]  [<c0452575>] handle_IRQ_event+0x25/0x60\n[   57.686683] ", "title": "Error when drm is loaded", "Kernel Version": "2.6.28-rc8", "Product": "Drivers", "Component": "Video", "Hardware": "All Linux", "reranked_files": ["drivers/gpu/drm/radeon/radeon_irq.c", "drivers/char/agp/intel-agp.c", "drivers/gpu/drm/drm_drv.c", "drivers/pci/probe.c"], "causes": [{"cause": "The 'nobody cared' message indicates that an interrupt was not handled by any driver, which could be due to incorrect IRQ routing or a missing IRQ handler in the DRM or AGP code.", "code_file": "drivers/gpu/drm/radeon/radeon_irq.c", "fix_solution": "Ensure that the IRQ handler is correctly registered and that the handler function properly acknowledges and handles the interrupt."}, {"cause": "The AGP bridge might not be correctly configured, leading to improper communication between the GPU and the system, causing the interrupt issue.", "code_file": "drivers/char/agp/intel-agp.c", "fix_solution": "Verify and correct the AGP mode setup and ensure that the AGP bridge is properly initialized and configured for the Radeon GPU."}, {"cause": "The DRM initialization might be incomplete or incorrect, leading to improper setup of the graphics hardware and resulting in unhandled interrupts.", "code_file": "drivers/gpu/drm/drm_drv.c", "fix_solution": "Review the DRM initialization sequence to ensure all necessary components are initialized and that the hardware is correctly configured."}, {"cause": "The PCI device configuration might be incorrect, leading to issues with interrupt handling for the Radeon GPU.", "code_file": "drivers/pci/probe.c", "fix_solution": "Check the PCI configuration space setup for the Radeon device and ensure that the correct IRQ is assigned and enabled."}], "input_tokens": 755, "output_tokens": 325}
{"id": "12061", "paths": ["sound/pci/hda/patch_sigmatel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_generic.c", "sound/pci/hda/hda_local.h", "include/sound/driver.h", "include/sound/hda_hwdep.h"], "input_tokens_sum": 129492, "output_tokens_sum": 1642, "description": "Latest working kernel version: 2.6.27.6\nEarliest failing kernel version: 2.6.28-rc? (I'm thinking that it works sometime ago with 2.6.28)\nDistribution: Gentoo\nHardware Environment: Dell Latitude D830\nProblem Description:\nIf power_save is greater 0 the speakers make a cracking noise on powerdown after the specified timeout\n\nSteps to reproduce:\nload snd_hda_intel with power_save=5\nPlay a sound and wait 5 secs.\n\n\n---------------------------\n# cat /proc/asound/cards\n 0 [Intel          ]: HDA-Intel - HDA Intel\n                      HDA Intel at 0xf6adc000 irq 21\n\n# cat /proc/asound/pcm\n00-00: STAC92xx Analog : STAC92xx Analog : playback 1 : capture 2", "title": "snd_hda_intel: power_save: sound cracks on powerdown", "Kernel Version": "2.6.28-rc5", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c", "sound/pci/hda/patch_sigmatel.c"], "causes": [{"cause": "The power_save feature in the snd_hda_intel driver is not properly handling the powerdown sequence, leading to a cracking noise when the codec is powered down.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Introduce a delay or mute the audio output before powering down the codec to prevent the cracking noise."}, {"cause": "The codec power management does not properly mute the audio output before the powerdown sequence, causing residual audio signals to produce noise.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the audio output is muted before initiating the powerdown sequence in the power_save routine."}, {"cause": "The power management logic does not account for the specific hardware characteristics of the STAC92xx codec, leading to improper handling during power transitions.", "code_file": "sound/pci/hda/patch_sigmatel.c", "fix_solution": "Add specific handling for the STAC92xx codec in the power management code to ensure smooth power transitions without noise."}], "input_tokens": 543, "output_tokens": 250}
{"id": "11957", "paths": ["drivers/isdn/hardware/avm/b1isa.c"], "predicts": ["drivers/isdn/capi/kcapi_proc.c", "drivers/isdn/hardware/avm/b1isa.c", "drivers/isdn/capi/kcapi.c", "drivers/isdn/capi/capidrv.c", "drivers/isdn/capi/capilib.c"], "input_tokens_sum": 140570, "output_tokens_sum": 5531, "description": "Latest working kernel version: unknown\nEarliest failing kernel version: unknown\nDistribution: debian, kernel self-built\nHardware Environment: x86 system with B1 ISA ISDN controller\nSoftware Environment: debian unstable\nProblem Description: oops on reading /proc/capi/controller after rmmod b1isa\n\nSteps to reproduce:\n- verify a B1 ISA is shown in /proc/capi/controller\n- rmmod b1isa\n- cat /proc/capi/controller", "title": "oops on reading /proc/capi/controller after removing b1isa", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "ISDN", "Hardware": "All Linux", "reranked_files": ["drivers/isdn/capi/capi.c", "drivers/isdn/hardware/eicon/b1isa.c"], "causes": [{"cause": "The /proc/capi/controller file is accessed after the b1isa module is removed, leading to a null pointer dereference because the associated data structures have been freed.", "code_file": "drivers/isdn/capi/capi.c", "fix_solution": "Add a check in the /proc/capi/controller read function to verify if the b1isa module is still loaded before accessing its data structures."}, {"cause": "The proc entry for the CAPI controller is not properly removed when the b1isa module is unloaded, leading to stale pointers being accessed.", "code_file": "drivers/isdn/capi/capi.c", "fix_solution": "Ensure that the proc entry for the CAPI controller is removed in the module exit function of the b1isa driver."}, {"cause": "The reference counting for the b1isa module is not handled correctly, allowing the module to be removed while it is still in use by the /proc interface.", "code_file": "drivers/isdn/hardware/eicon/b1isa.c", "fix_solution": "Implement proper reference counting to prevent the b1isa module from being unloaded while it is still being accessed by the /proc interface."}], "input_tokens": 460, "output_tokens": 276}
{"id": "11926", "paths": ["drivers/net/sis190.c"], "predicts": ["drivers/net/sis190.c", "include/linux/phy.h", "include/linux/netdevice.h"], "input_tokens_sum": 146622, "output_tokens_sum": 1282, "description": "Latest working kernel version: unknown\nEarliest failing kernel version: tested with 2.6.27.2 (vanilla), it fails, also other version tested was now old 2.6.24, same issue\nDistribution: Mandriva\nHardware Environment: Clevo M540SS\nSoftware Environment:\n\nProblem Description:\nFor the sis190 I have here it doesn't report link change inside interrupt handler after removing ethernet cable. This makes ethernet cable detection to not work correctly. Network works fine, if you don't remove ethernet cable after first connection, keep it removed for some time, and reconnect.\n\nSteps to reproduce:\n- Remove ethernet cable (after booting with it plugged, or after plugging it after boot). Driver doesn't detect link change.\n\nThis is shown on kernel log after sis190 module is loaded with cable connected:\nsis190 Gigabit Ethernet driver 1.2 loaded.\nsis190 0000:00:04.0: PCI INT A -> GSI 19 (level, low) -> IRQ 19\nsis190 0000:00:04.0: setting latency timer to 64\n0000:00:04.0: Read MAC address from EEPROM\n0000", "title": "[PATCH]sis190 doesn't detect ethernet cable removal (Realtek PHY)", "Kernel Version": "2.6.30.1", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/sis/sis190.c", "drivers/net/phy/phy.c", "net/core/dev.c"], "causes": [{"cause": "The interrupt handler for the sis190 driver does not correctly handle link status changes when the ethernet cable is removed.", "code_file": "drivers/net/ethernet/sis/sis190.c", "fix_solution": "Modify the interrupt handler to check the PHY status register for link changes and update the network interface status accordingly."}, {"cause": "The PHY polling mechanism in the sis190 driver may not be correctly configured to detect link status changes.", "code_file": "drivers/net/phy/phy.c", "fix_solution": "Ensure that the PHY polling mechanism is enabled and correctly configured to periodically check the link status and trigger updates."}, {"cause": "The sis190 driver may not be correctly initializing the PHY device, leading to missed link status changes.", "code_file": "drivers/net/ethernet/sis/sis190.c", "fix_solution": "Review and correct the PHY initialization sequence to ensure that the PHY device is properly configured to detect link status changes."}, {"cause": "The network stack may not be correctly processing link status change notifications from the sis190 driver.", "code_file": "net/core/dev.c", "fix_solution": "Verify that the network stack is correctly handling link status change notifications and updating the network interface status."}], "input_tokens": 607, "output_tokens": 291}
{"id": "11879", "paths": ["drivers/ata/ata_piix.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/libata-sff.c", "drivers/ata/libata-scsi.c", "drivers/ata/libata.h", "kernel/power/disk.c", "kernel/power/swsusp.c", "arch/x86/power/hibernate_32.c", "arch/x86/power/hibernate_64.c", "arch/x86/pci/acpi.c"], "input_tokens_sum": 128913, "output_tokens_sum": 2129, "description": "Latest working kernel version:\nEarliest failing kernel version:\nDistribution: Ubuntu 8.10rc\nHardware Environment: Acer One A110L (Intel 945GSE / ICH7-M), SSD (Samsung P-SSD1800), BIOS v0.3109\nSoftware Environment: Ubuntu 8.10rc, Linux 2.6.27-7-generic\nProblem Description:\n\nBootup machine, no problem with ATA interfacing, full speed connection (leading to\n~40MB/s with hdparm):\n\n[    5.631156] ata1: SATA max UDMA/133 cmd 0x1f0 ctl 0x3f6 bmdma 0x60a0 irq 14\n[    5.631168] ata2: PATA max UDMA/100 cmd 0x170 ctl 0x376 bmdma 0x60a8 irq 15\n[    5.852225] usb 5-5: new high speed USB device using ehci_hcd and address 2\n[    5.961673] ata2.00: ATA-5: P-SSD1800, Ver2.Y0C, max UDMA/66\n[    5.961683] ata2.00: 15761088 sectors, multi 0: LBA \n[    5.969597] ata2.00: configured for UDMA/66\n[    5.969915] scsi 1:0:0:0: Direct-Access     ATA      P-SSD1800        Ver2 PQ: 0 ANSI: 5\n\n\nSuspend to RAM, then resume, witness:\n[  968.980271] ata2.00: ACPI cmd ef/03:0c:00:00:00:a0 filtered out\n[  968.980278] at", "title": "Improper ATA cable detection after S2R _only_:  \"limited to UDMA/33 due to 40-wire cable\"", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-acpi.c", "drivers/ata/libata-eh.c"], "causes": [{"cause": "The ATA cable detection logic does not correctly handle the state transition during Suspend to RAM (S2R), leading to incorrect cable type detection.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Modify the resume function to reinitialize the cable detection logic to ensure it correctly identifies the cable type after resume."}, {"cause": "ACPI commands are being filtered incorrectly during resume, causing the ATA device to be misconfigured.", "code_file": "drivers/ata/libata-acpi.c", "fix_solution": "Adjust the ACPI command filtering logic to ensure necessary commands for proper ATA configuration are not filtered out during resume."}, {"cause": "The ATA device configuration is not being restored correctly after resume, leading to fallback to a lower UDMA mode.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Ensure that the error handling path during resume correctly restores the ATA device configuration to its pre-suspend state."}], "input_tokens": 770, "output_tokens": 230}
{"id": "11865", "paths": ["drivers/net/e100.c"], "predicts": ["drivers/net/e100.c", "drivers/net/phy/phy.c", "drivers/net/phy/phy_device.c", "include/linux/pm.h", "kernel/power/main.c"], "input_tokens_sum": 128726, "output_tokens_sum": 1603, "description": "Latest working kernel version: 2.6.27\nEarliest failing kernel version: 2.6.27\nDistribution: Gentoo\nHardware Environment: 2x750P3 1G RAM w/ \n\n00:14.0 Ethernet controller: Intel Corporation 82557/8/9 [Ethernet Pro 100] (rev 08)\n\nProblem Description:\nAs of kernel version 2.6.27, WOL has stopped working.  The box no longer powers on after the magic packet has been sent.  Rebooting using kernel-2.6.26*, WOL *does* work!\n\nSteps to reproduce:\n(Not needed.  Self Explanatory.)\n\n\nI noticed 3 lines of code in e100.c added/modified since 2.6.26*, however, I reversed 2 lines of code to 2.6.26 and the other line was just added an additional pointer, for which I left alone.  Recompiled, rebooted and WOL still didn't work using 2.6.27.  I'm guessing, the source of this bug lies elsewhere.", "title": "WOL for E100 Doesn't Work Anymore", "Kernel Version": "2.6.27", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/intel/e100.c", "drivers/net/ethernet/intel/e100_pm.c", "drivers/pci/pci.c"], "causes": [{"cause": "The Wake-on-LAN (WOL) functionality might be disabled or improperly configured in the e100 driver initialization sequence.", "code_file": "drivers/net/ethernet/intel/e100.c", "fix_solution": "Ensure that the WOL settings are correctly initialized and enabled in the e100_probe function. Check for any changes in the initialization sequence that might disable WOL and revert them."}, {"cause": "Changes in the power management code might have affected the WOL functionality, preventing the network card from waking up the system.", "code_file": "drivers/net/ethernet/intel/e100_pm.c", "fix_solution": "Review and adjust the suspend and resume functions to ensure that WOL settings are preserved across power state transitions."}, {"cause": "The magic packet detection logic might have been altered, causing the network card to not recognize the WOL packet.", "code_file": "drivers/net/ethernet/intel/e100.c", "fix_solution": "Verify the logic responsible for detecting magic packets and ensure it is correctly implemented. Revert any changes that might have affected this logic."}, {"cause": "A regression in the PCI configuration space handling might have affected the WOL capability of the network card.", "code_file": "drivers/pci/pci.c", "fix_solution": "Check the PCI configuration space handling for the network card and ensure that the WOL-related bits are correctly set during initialization."}], "input_tokens": 586, "output_tokens": 328}
{"id": "11742", "paths": ["drivers/ide/ide-cd.c"], "predicts": ["drivers/ide/ide-dma.c", "drivers/ide/ide.c", "block/blk-core.c", "drivers/ata/ata_piix.c", "drivers/ata/libata-core.c", "drivers/ata/libata-sff.c", "kernel/dma.c"], "input_tokens_sum": 128015, "output_tokens_sum": 2170, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version:2.6.27\nDistribution: Debian Unstable\nHardware Environment: Laptop Acer 5920G with a Samsung CDDVDW TS-L632H connected through IDE \nSoftware Environment: KDE 3.5.9; k3b 1.0.5; Brasero\nProblem Description: I have compiled the 2.6.27 kernel using make oldconf, thus almost copying the passed 2.6.26.5 configuration. Since then, when I burn a CD the internal buffer in my DVD burner reaches 0% obliging k3b and brasero to slow down the writing speed. It happens even if I don't run any other application. I have noticed that the device buffer runs out even if the software buffer is full, like there was not a fast transfer from the software buffer to the device buffer. In the end, k3b reports a big amount of buffer under-runs (> 100).Everything works as expected with an older 2.6.26.5 kernel. What I need to do to help solving this bug? See you\n\nValerio\n\nSteps to reproduce: Using 2.6.27 kernel and k3b or brasero to burn a CD. It", "title": "Device buffer on a DVD multi standard writer runs out burning a CD", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "IDE", "Hardware": "All Linux", "reranked_files": ["drivers/ide/ide-cd.c", "block/elevator.c", "drivers/ide/ide-dma.c", "drivers/cdrom/cdrom.c"], "causes": [{"cause": "The IDE driver may have introduced changes in the data transfer mechanism that affect buffer management, leading to buffer underruns.", "code_file": "drivers/ide/ide-cd.c", "fix_solution": "Review and adjust the data transfer logic to ensure that the buffer is filled adequately before writing to the device, possibly by increasing the buffer size or optimizing the transfer rate."}, {"cause": "Changes in the I/O scheduler or its configuration might be causing inefficient data transfer rates to the DVD writer.", "code_file": "block/elevator.c", "fix_solution": "Investigate and modify the I/O scheduling algorithm or parameters to ensure timely data delivery to the device buffer, potentially reverting to the previous scheduler settings used in 2.6.26."}, {"cause": "The DMA settings for the IDE interface might have been altered, affecting the data throughput to the DVD writer.", "code_file": "drivers/ide/ide-dma.c", "fix_solution": "Check and restore the DMA configuration to ensure optimal data transfer rates, possibly by reverting to the DMA settings from the 2.6.26 kernel."}, {"cause": "A regression in the buffer management code for CD/DVD writing could be causing inefficient buffer usage.", "code_file": "drivers/cdrom/cdrom.c", "fix_solution": "Examine the buffer management logic and ensure that the buffer is being utilized efficiently, potentially by reverting recent changes or optimizing the buffer handling code."}], "input_tokens": 630, "output_tokens": 334}
{"id": "11735", "paths": ["drivers/ide/pci/delkin_cb.c"], "predicts": ["drivers/ide/pci/delkin_cb.c", "drivers/ide/ide.c", "kernel/power/disk.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "mm/page_io.c", "arch/x86/mm/ioremap.c"], "input_tokens_sum": 129024, "output_tokens_sum": 2111, "description": "Distribution:\ngentoo\nHardware Environment:\nx86 (Dell laptop, yenta cardbus), \"02:00.0 Mass storage controller [0180]: Workbit Corporation Device [1145:f021] (rev 01)\"\nProblem Description:\nThe delkin_cb driver works with ~3 mb/s performance, top shows the CPU in 98% wait state with heavy I/O. If you suspend to ram or disk, the system comes up but any further I/O to a CF card in the adapter will not complete, top shows ~100% wait state but commands to read from the card do not complete. pata_ninja32 not tested because it performs much worse than delkin_cb (~1 mb/s).\nSteps to reproduce: \n1. boot, mount a CF card through the adapter (or have root on the CF card, as I do)\n2. echo mem > /sys/power/state\n3. resume from sleep\n4. do I/O from the card, say \"ls /mnt/card\"\n5. <crickets chirp> ... top shows 100% wait state", "title": "delkin_cb fails after resume", "Kernel Version": "2.6.27", "Product": "IO/Storage", "Component": "IDE", "Hardware": "All Linux", "reranked_files": ["drivers/ide/delkin_cb.c", "drivers/pcmcia/yenta_socket.c", "drivers/ide/ide-pm.c", "drivers/ide/ide-cs.c"], "causes": [{"cause": "The delkin_cb driver does not properly reinitialize the hardware or driver state after a resume from suspend, leading to I/O operations hanging.", "code_file": "drivers/ide/delkin_cb.c", "fix_solution": "Add a resume function in the delkin_cb driver to reinitialize the hardware and reset any necessary state after a resume from suspend."}, {"cause": "The cardbus controller does not correctly re-enable the card after resume, causing the delkin_cb driver to fail in accessing the card.", "code_file": "drivers/pcmcia/yenta_socket.c", "fix_solution": "Ensure that the cardbus controller is properly reset and the card is re-enabled during the resume process."}, {"cause": "The power management callbacks for the delkin_cb driver are not correctly implemented, leading to improper handling of suspend/resume cycles.", "code_file": "drivers/ide/ide-pm.c", "fix_solution": "Implement or correct the power management callbacks for the delkin_cb driver to handle suspend and resume operations properly."}, {"cause": "The CF card is not being properly re-detected or re-initialized after resume, causing the I/O operations to hang.", "code_file": "drivers/ide/ide-cs.c", "fix_solution": "Modify the card detection and initialization logic to ensure the CF card is correctly re-detected and initialized after resume."}], "input_tokens": 576, "output_tokens": 322}
{"id": "11568", "paths": ["arch/x86/kernel/acpi/sleep.c"], "predicts": ["arch/x86/kernel/acpi/sleep.c", "arch/x86/kernel/reboot.c", "drivers/acpi/sleep/main.c", "kernel/power/main.c", "kernel/power/swsusp.c", "arch/x86/power/hibernate_64.c", "drivers/acpi/reboot.c", "kernel/power/poweroff.c"], "input_tokens_sum": 124366, "output_tokens_sum": 1980, "description": "Latest working kernel version: 2.6.26.5\nEarliest failing kernel version: 2.6.27-rc2 (haven't tested earlier versions)\nDistribution: Debian unstable\nHardware Environment: MSI AMD Socket 754 with VIA K8T800 and AMI BIOS\nSoftware Environment:\nProblem Description: Resume from S3 causes machine to reset itself.  \n\nSteps to reproduce:\nEnter S3 with \"echo mem > /sys/power/state\"\nTry to resume.", "title": "spontaneous reboot on resume with 2.6.27", "Kernel Version": "2.6.27-rc2", "Product": "Platform Specific/Hardware", "Component": "x86-64", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/acpi/sleep.c", "drivers/acpi/sleep.c", "arch/x86/kernel/reboot.c", "arch/x86/kernel/irq.c"], "causes": [{"cause": "The ACPI resume path might not be properly restoring the CPU state, leading to a reset.", "code_file": "arch/x86/kernel/acpi/sleep.c", "fix_solution": "Ensure that the CPU state is fully restored during the resume process by adding additional checks and state restoration code in the ACPI resume path."}, {"cause": "The power management code might not be correctly handling the transition from S3, causing a reset.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Review and update the power management transition code to ensure all necessary hardware states are correctly restored during resume."}, {"cause": "The BIOS might not be correctly reinitializing hardware components on resume, leading to a reset.", "code_file": "arch/x86/kernel/reboot.c", "fix_solution": "Add a workaround in the kernel to reinitialize critical hardware components that the BIOS fails to handle properly during resume."}, {"cause": "The kernel might not be correctly handling interrupts during the resume process, causing a reset.", "code_file": "arch/x86/kernel/irq.c", "fix_solution": "Ensure that all interrupts are properly re-enabled and handled during the resume process to prevent unexpected resets."}], "input_tokens": 464, "output_tokens": 286}
{"id": "11520", "paths": ["drivers/misc/eeepc-laptop.c"], "predicts": ["drivers/misc/eeepc-laptop.c"], "input_tokens_sum": 132962, "output_tokens_sum": 1983, "description": "Hardware Environment: EeePC\nProblem Description:\n\nThe hwmon sysfs-interface of the eeepc_laptop module doesn't provide the mandatory attribute \"name\", causing lm-sensors to ignore it.", "title": "eeepc_laptop hwmon missing name", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/eeepc-laptop.c", "drivers/hwmon/hwmon.c", "drivers/base/core.c"], "causes": [{"cause": "The eeepc_laptop module does not implement the 'name' attribute in its hwmon sysfs interface, which is required for proper detection by lm-sensors.", "code_file": "drivers/platform/x86/eeepc-laptop.c", "fix_solution": "Add a 'name' attribute to the hwmon device registration in the eeepc_laptop module, ensuring it is correctly exposed in the sysfs interface."}, {"cause": "The hwmon registration in the eeepc_laptop module might be missing the initialization of the 'name' field in the hwmon_device structure.", "code_file": "drivers/hwmon/hwmon.c", "fix_solution": "Ensure that the 'name' field is initialized during the hwmon device registration process for the eeepc_laptop module."}, {"cause": "The sysfs interface for the eeepc_laptop module might not be correctly set up to include the 'name' attribute.", "code_file": "drivers/base/core.c", "fix_solution": "Modify the sysfs attribute setup to include the 'name' attribute for hwmon devices, specifically for the eeepc_laptop module."}], "input_tokens": 395, "output_tokens": 271}
{"id": "11399", "paths": ["drivers/watchdog/ib700wdt.c"], "predicts": ["drivers/watchdog/ib700wdt.c"], "input_tokens_sum": 127179, "output_tokens_sum": 955, "description": "Problem Description:\n\nSteps to a possible buffer_underflow bug in ib700wdt.c, function ibwdt_ioctl:\n\n1. new margin is loaded using get_user(new_margin, p) in case WDIOC_SETTIMEOUT in the function ibwdt_ioctl. Important: assume that new_margin == 30\n2. ibwdt_set_heartbeat(new_margin) is called\n3. the check \"if ((t < 0) || (t > 30))\" in ibwdt_set_heartbeat is not going to fail because t == 30 (t is new_margin)\n4. in the loop, the check wd_times[i] > t is never going to be true because none of the wd_times are greater than the value of t (i.e. 30)\n5. we are exiting the loop with i == -1 and therefore setting wd_margin to -1 in the line wd_margin = i;\n6. we are returning from ibwdt_set_heartbeat and wd_margin is -1\n7. we fall through to case WDIOC_GETTIMEOUT\n8. we access the wd_times array with wd_margin == -1 on line \"return put_user(wd_times[wd_margin], p);\"\n\nI found this bug using my own static checker for low-level systems software whose codename is Smack, which I am developing as a pa", "title": "(patch queued)possible buffer underflow in ib700wdt.c", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Watchdog", "Hardware": "All Linux", "reranked_files": ["drivers/watchdog/ib700wdt.c"], "causes": [{"cause": "The function ibwdt_set_heartbeat does not handle the case where no valid wd_times entry is greater than the new_margin, leading to wd_margin being set to -1.", "code_file": "drivers/watchdog/ib700wdt.c", "fix_solution": "Modify ibwdt_set_heartbeat to ensure that wd_margin is set to a valid index or handle the case where no valid index is found, preventing it from being set to -1."}, {"cause": "The function ibwdt_ioctl does not validate the value of wd_margin before using it to access the wd_times array, leading to a potential buffer underflow.", "code_file": "drivers/watchdog/ib700wdt.c", "fix_solution": "Add a check in ibwdt_ioctl to ensure wd_margin is within valid bounds before accessing the wd_times array."}], "input_tokens": 639, "output_tokens": 198}
{"id": "11391", "paths": ["kernel/nsproxy.c"], "predicts": ["arch/x86/kernel/process.c", "arch/x86/kernel/signal_64.c", "arch/x86/kernel/signal_32.c", "kernel/signal.c", "kernel/exit.c"], "input_tokens_sum": 129977, "output_tokens_sum": 2004, "description": "Latest working kernel version: 2.6.26.3\n\nEarliest failing kernel version: 2.6.25.4 (didn't test with former kernels)\n\nDistribution: CentOS 5.1 (with Vanilla kernel from kernel.org)\n\nHardware Environment: several x86_64 plattforms (AMD Opteron, Intel Xeon)\n\nProblem Description:\n-------------------------------------\nBUG: unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\nIP: [<ffffffff8023d5d0>] do_notify_parent+0x66/0x194\nPGD 0\nOops: 0000 [1] SMP\nCPU 1\nModules linked in: ipv6 autofs4 hidp rfcomm l2cap bluetooth sunrpc dm_mirror dm_\nlog dm_multipath dm_mod video output sbs sbshc battery acpi_memhotplug ac lp sg\nfloppy button tg3 serio_raw parport_pc parport k8temp hwmon i2c_amd756 i2c_amd81\n11 i2c_core amd_rng shpchp pcspkr usb_storage 3w_9xxx sata_sil libata sd_mod scs\ni_mod raid456 async_xor async_memcpy async_tx xor ext3 jbd ehci_hcd ohci_hcd uhc\ni_hcd\nPid: 3800, comm: sshd Not tainted 2.6.26.3 #1\nRIP: 0010 [<ffffffff8023d5d0>]  [<ffffffff8023d5d0>] d", "title": "Kernel NULL pointer dereference in do_notify_parent()", "Kernel Version": "2.6.26", "Product": "Process Management", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["kernel/signal.c", "kernel/exit.c", "kernel/fork.c"], "causes": [{"cause": "The NULL pointer dereference in do_notify_parent() is likely due to a missing check for a NULL task_struct pointer when accessing the parent process.", "code_file": "kernel/signal.c", "fix_solution": "Add a check to ensure the task_struct pointer is not NULL before accessing its members in do_notify_parent()."}, {"cause": "The issue might be caused by a race condition where the parent process is being accessed after it has been freed.", "code_file": "kernel/exit.c", "fix_solution": "Implement proper locking mechanisms to ensure the parent process is not accessed after it has been freed."}, {"cause": "Improper handling of process exit leading to a stale pointer being used in do_notify_parent().", "code_file": "kernel/fork.c", "fix_solution": "Ensure that the task_struct is properly cleaned up and references are cleared during process exit."}], "input_tokens": 691, "output_tokens": 212}
{"id": "11331", "paths": ["drivers/misc/thinkpad_acpi.c"], "predicts": ["drivers/misc/thinkpad_acpi.c", "drivers/acpi/fan.c", "arch/x86/kernel/acpi/sleep.c", "kernel/power/swsusp.c", "kernel/power/snapshot.c", "drivers/acpi/processor_idle.c", "drivers/acpi/power.c", "kernel/power/main.c", "kernel/power/process.c", "arch/x86/power/hibernate_32.c"], "input_tokens_sum": 126982, "output_tokens_sum": 1473, "description": "Distribution: Debian unstable\nHardware Environment: Thinkpad X31\nSoftware Environment: Debian unstable\nProblem Description:\nAfter waking the system from suspend to disk/ram, the fan speed is reset to the default value. As I understand things, the value should be cached and re-set to what I last set it to.\n\nSteps to reproduce:\n\n# echo \"options thinkpad_acpi fan_control=1\" >> /etc/modprobe.d/options\n# shutdown -r now\n\n# echo level 7 >! /proc/acpi/ibm/fan #fan will spin on fastest level, you will hear this\n# cat /proc/acpi/ibm/fan\nstatus:         enabled\nspeed:          4107\nlevel:          7\ncommands:       level <level> (<level> is 0-7, auto, disengaged, full-speed)\ncommands:       enable, disable\ncommands:       watchdog <timeout> (<timeout> is 0 (off), 1-120 (seconds))\ncommands:       speed <speed> (<speed> is 0-65535)\n# s2ram || s2disk\npress Fn-F4 or power button to wake system\n\n# cat /proc/acpi/ibm/fan\nstatus:         enabled\nspeed:          0\nlevel:          auto\ncommands:       le", "title": "Fan speed setting reset after suspend to disk/ram on Thinkpad X31", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Platform", "Hardware": "All Linux", "reranked_files": ["drivers/platform/x86/thinkpad_acpi.c", "drivers/acpi/fan.c", "kernel/power/suspend.c"], "causes": [{"cause": "The fan speed setting is not being cached and restored after suspend due to missing implementation in the suspend/resume handling of the thinkpad_acpi driver.", "code_file": "drivers/platform/x86/thinkpad_acpi.c", "fix_solution": "Implement caching of the fan speed setting before suspend and restore it during resume in the thinkpad_acpi driver."}, {"cause": "The ACPI fan control interface does not properly handle the restoration of fan settings after suspend/resume cycles.", "code_file": "drivers/acpi/fan.c", "fix_solution": "Add logic to save the current fan settings before suspend and restore them after resume in the ACPI fan control interface."}, {"cause": "The suspend/resume process does not trigger the necessary hooks to restore custom fan settings.", "code_file": "kernel/power/suspend.c", "fix_solution": "Ensure that the suspend/resume process calls the appropriate functions in the thinkpad_acpi driver to restore fan settings."}], "input_tokens": 638, "output_tokens": 231}
{"id": "11329", "paths": ["drivers/hwmon/hwmon-vid.c"], "predicts": ["drivers/hwmon/w83627ehf.c", "drivers/hwmon/w83781d.c", "drivers/hwmon/w83791d.c", "include/linux/hwmon-sysfs.h", "drivers/watchdog/w83627hf_wdt.c"], "input_tokens_sum": 124382, "output_tokens_sum": 1485, "description": "Latest working kernel version: 2.6.27-rc2-git1\nEarliest failing kernel version: 2.6.27-rc2-git2\nDistribution: Debian Sid\nHardware Environment: Athlon 64 x2 4200+\nSoftware Environment: X86_64\nProblem Description: in git1 and previous, cpu0_vid is reported as 1475 (which is correct). Since git2, it is reported as 725\n\nSteps to reproduce: see in /sys/devices/platform/w83627hf.656/cpu0_vid\n\nAccording to this value, the sensors command reports ccpu0_vid as +0.725V\n\nThis problem occurs in rc2-git2 and was not present in rc2-git1, it is still present in rc3-git1\n\nRegards\n\nJean-Luc", "title": "Incorrect value in /sys/devices/platform/w83627hf.656/cpu0_vid", "Kernel Version": "2.6.27-rc3", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/hwmon/w83627hf.c", "arch/x86/platform.c"], "causes": [{"cause": "The voltage reading conversion logic might have been altered between the two kernel versions, leading to incorrect scaling or interpretation of the raw sensor data.", "code_file": "drivers/hwmon/w83627hf.c", "fix_solution": "Review and correct the conversion formula or lookup table used to translate raw sensor data to voltage values, ensuring it matches the expected format for the hardware."}, {"cause": "A change in the initialization or configuration of the sensor chip might have occurred, causing it to report incorrect values.", "code_file": "drivers/hwmon/w83627hf.c", "fix_solution": "Check the initialization sequence and configuration settings for the sensor chip to ensure they are correctly set up for the specific hardware model."}, {"cause": "A regression in the handling of sysfs attributes for the w83627hf driver could have led to incorrect data being exposed.", "code_file": "drivers/hwmon/w83627hf.c", "fix_solution": "Verify the sysfs attribute handling code to ensure that the correct data is being read from the hardware and exposed to user space."}, {"cause": "Changes in the platform data or device tree bindings might have affected how the driver interprets the hardware configuration.", "code_file": "arch/x86/platform.c", "fix_solution": "Ensure that the platform data or device tree bindings are correctly defined and that the driver is interpreting them properly for the specific hardware."}], "input_tokens": 542, "output_tokens": 325}
{"id": "11323", "paths": ["block/genhd.c"], "predicts": ["block/genhd.c", "fs/proc/base.c", "fs/proc/proc_misc.c", "block/blk-core.c", "crypto/proc.c", "block/blk-sysfs.c", "include/linux/genhd.h", "include/linux/blkdev.h", "fs/block_dev.c", "kernel/power/disk.c"], "input_tokens_sum": 124543, "output_tokens_sum": 1741, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version: 2.6.27-rc1\nDistribution: Debian\nHardware Environment: Dell\nSoftware Environment:\nProblem Description: /proc/diskstats does not contain all the block devices it should. /sys/block has all the devices, but /proc/diskstats does not.\n\nSteps to reproduce: boot a system with >9 (10?) disk devices (24 block devices?)", "title": "/proc/diskstats does not contain all disk devices", "Kernel Version": "2.6.27-rc1", "Product": "File System", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["fs/proc/proc_misc.c", "block/genhd.c", "block/blk-core.c"], "causes": [{"cause": "The function responsible for populating /proc/diskstats may have a limit on the number of devices it can handle, which was inadvertently introduced or modified in the 2.6.27-rc1 kernel version.", "code_file": "fs/proc/proc_misc.c", "fix_solution": "Review and increase the limit on the number of devices that can be processed in the function responsible for populating /proc/diskstats, ensuring it matches or exceeds the number of devices supported by /sys/block."}, {"cause": "A change in the way block devices are registered or iterated over might have caused some devices to be skipped when populating /proc/diskstats.", "code_file": "block/genhd.c", "fix_solution": "Ensure that the iteration logic over block devices correctly includes all devices, possibly by revisiting the loop or conditionals that determine which devices are added to /proc/diskstats."}, {"cause": "A regression in the initialization or update mechanism for /proc/diskstats, possibly due to changes in the block layer or related subsystems.", "code_file": "block/blk-core.c", "fix_solution": "Investigate and correct any changes in the initialization or update routines for /proc/diskstats, ensuring that all block devices are accounted for during these operations."}], "input_tokens": 455, "output_tokens": 299}
{"id": "11242", "paths": ["drivers/accessibility/braille/braille_console.c"], "predicts": ["drivers/char/keyboard.c", "drivers/input/keyboard/atkbd.c", "drivers/video/console/fbcon.c", "drivers/input/input.c", "drivers/input/serio/i8042.c"], "input_tokens_sum": 127445, "output_tokens_sum": 1982, "description": "Latest working kernel version: 2.6.25.10\nEarliest failing kernel version: 2.6.26\nDistribution: Debian unstable\nHardware Environment: IBM Thinkpad X31\nSoftware Environment: Debian unstable\nProblem Description:\n\nI'm running my system without X11 in a fbcon console. Since the update to 2.6.26 the INSERT key is no longer working properly. It seems to lead to a very strange internal \"lock\": If INSERT is pressed, the arrow keys are no longer accepted. If I press INSERT again, the arrow keys work again. This bug is fairly annoying.\nIn X11 the INSERT key is handled properly. 2.6.25 works just fine. \n\nSteps to reproduce:\nRun elinks with an arbitary web site; scroll a few lines up with the INSERT key.", "title": "Regression with handling the DEL key on Thinkpad X31", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Console/Framebuffers", "Hardware": "All Linux", "reranked_files": ["drivers/tty/vt/vt.c", "drivers/video/console/fbcon.c", "drivers/input/keyboard/atkbd.c"], "causes": [{"cause": "The regression may be due to changes in the keyboard input handling in the console driver, specifically related to key mapping or state management.", "code_file": "drivers/tty/vt/vt.c", "fix_solution": "Review and adjust the keymap handling logic to ensure the INSERT key does not interfere with the state of other keys like arrow keys."}, {"cause": "Changes in the framebuffer console input processing might have introduced a bug affecting key state transitions.", "code_file": "drivers/video/console/fbcon.c", "fix_solution": "Investigate the input event handling for the framebuffer console and ensure that key state transitions are correctly managed without locking other keys."}, {"cause": "The issue might be related to incorrect handling of keyboard scancodes or keycodes in the input subsystem.", "code_file": "drivers/input/keyboard/atkbd.c", "fix_solution": "Verify the scancode to keycode mapping for the INSERT key and ensure it does not inadvertently affect other keys like arrow keys."}], "input_tokens": 529, "output_tokens": 232}
{"id": "11212", "paths": ["drivers/hwmon/abituguru3.c"], "predicts": ["drivers/hwmon/abituguru3.c", "include/linux/hwmon.h"], "input_tokens_sum": 178738, "output_tokens_sum": 4962, "description": "Latest working kernel version: 2.6.25\nEarliest failing kernel version: 2.6.26\nDistribution: Debian lenny\nHardware Environment: ABit IP35-pro Bios rev 16 (2008-march-18)\nSoftware Environment: Linux 2.6.26 #2 SMP i686\nabituguru3 is the first module loaded on boot (added in /etc/modules)\n\nProblem Description:\nuguru3 is not recognized on boot since i upgraded to kernel 2.6.26\nbut it works after force.\n\nSteps to reproduce:\n$ modprobe abituguru3 ; dmesg | tail -1\nabituguru3: no Abit uGuru3 found, data = 0x00, cmd = 0x4C\n$ modprobe abituguru3 ; dmesg | tail -2\nabituguru3: Assuming Abit uGuru3 is present because of \"force\" parameter\nabituguru3: found Abit uGuru3, motherboard ID: 001A (Abit IP35 Pro)\n$ rmmod abituguru3\n$ modprobe abituguru3 ; dmesg | tail -1\nabituguru3: found Abit uGuru3, motherboard ID: 001A (Abit IP35 Pro)", "title": "PROBLEM: abituguru3 module does not recognize my ip35 pro since 2.6.26", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Hardware Monitoring", "Hardware": "All Linux", "reranked_files": ["drivers/hwmon/abituguru3.c"], "causes": [{"cause": "The abituguru3 module may not be correctly initializing the hardware detection sequence during the initial boot, possibly due to changes in the initialization order or timing in kernel 2.6.26.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Ensure that the initialization sequence for detecting the uGuru3 hardware is correctly synchronized with the rest of the system initialization. This may involve adding a delay or reordering the initialization steps to ensure the hardware is ready to be detected."}, {"cause": "The detection logic for the Abit uGuru3 hardware might have been altered or become more stringent in kernel 2.6.26, causing it to fail without the 'force' parameter.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Review and potentially relax the detection criteria in the abituguru3 module to ensure it correctly identifies the hardware without needing the 'force' parameter. This could involve adjusting the checks for specific motherboard IDs or hardware states."}, {"cause": "Changes in the kernel's module loading mechanism or order might be affecting the abituguru3 module's ability to detect the hardware on the first attempt.", "code_file": "drivers/hwmon/abituguru3.c", "fix_solution": "Modify the module's initialization function to include a retry mechanism or additional checks to ensure the hardware is detected even if the initial attempt fails."}], "input_tokens": 641, "output_tokens": 326}
{"id": "11178", "paths": ["drivers/pci/msi.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "kernel/power/disk.c", "kernel/power/swsusp.c", "drivers/ata/ata_piix.c", "arch/x86/power/hibernate_64.c", "arch/x86/pci/acpi.c", "block/blk-core.c", "kernel/power/snapshot.c"], "input_tokens_sum": 128493, "output_tokens_sum": 2403, "description": "Latest working kernel version: 2.6.26\nEarliest failing kernel version: 2.6.27-rc1\nDistribution: Ubuntu Hardy (8.04)\nHardware Environment:Intel C2D.  Two hard drives.\nSoftware Environment:64 bit kernel & userspace.\nProblem Description:\n\nDuring hibernation I get errors on the second hard drive, including\n\nata3 revalidation failed errno=-5\n\nHibernation continues anyway (the swap partition is on the first hard drive).  I think these messages don't show up in dmesg afterwards because they happen too late in the hibernation process.\n\nI get much the same errors on resume as well, which do show up in dmesg.\n\nSteps to reproduce:\nBoot in \"rescue mode\" (didn't try init=/bin/bash) and use \"echo disk > /sys/power/state\"", "title": "Secondary hard drive fails during both hibernation and resume.", "Kernel Version": "2.6.27-rc1", "Product": "Drivers", "Component": "PCI", "Hardware": "All Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/pci/pci.c", "kernel/power/main.c"], "causes": [{"cause": "Changes in the ATA subsystem between kernel versions 2.6.26 and 2.6.27-rc1 may have introduced a regression affecting the handling of secondary hard drives during power state transitions.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Review and adjust the error handling logic in the ATA revalidation process to ensure proper handling of secondary drives during hibernation and resume."}, {"cause": "The PCI subsystem may not be correctly managing power states for devices, leading to improper initialization of the secondary hard drive during resume.", "code_file": "drivers/pci/pci.c", "fix_solution": "Ensure that the PCI power management code correctly restores device states, particularly for secondary hard drives, during resume from hibernation."}, {"cause": "The power management code may not be correctly synchronizing the state of the secondary hard drive, causing errors during hibernation and resume.", "code_file": "kernel/power/main.c", "fix_solution": "Add additional checks and synchronization mechanisms to ensure that all hard drives are properly managed during power state transitions."}], "input_tokens": 539, "output_tokens": 256}
{"id": "11154", "paths": ["net/sunrpc/xprtsock.c"], "predicts": ["fs/nfs/delegation.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "fs/nfs/super.c", "net/sunrpc/clnt.c", "net/sunrpc/socklib.c", "net/sunrpc/svc.c", "net/sunrpc/svcsock.c", "net/sunrpc/xprt.c"], "input_tokens_sum": 121272, "output_tokens_sum": 2107, "description": "Latest working kernel version: 2.6.24\nEarliest failing kernel version: 2.6.25\nDistribution: debian etch\nProblem Description:\n\nI'm getting frequent NFS hangs when running 2.6.25 or 2.6.26 on my NFS clients, while 2.6.24 seems to work fine. The hangs most commonly (but not always) happen after a suspend/resume cycle on the client. The client is pingable from the server during the hangs, but the clients can't access their NFS mounted rootfs. 2.6.25 based clients always recover after some time (varies from just seconds to 5 or 10 minutes). 2.6.26 based clients apparently never recover.\n\nHere are a few more details about my setup:\n\n* The NFS server is a linux host (x86-64) running 2.6.22.19;\n\n* I have two diskless clients using different hardware, one is an old\n  AMD K7 with intel pro/100 adapter, the other is x86-64 with on-board\n  intel e1000e networking.\n\n* The clients boot from a small initrd and mount their rootfs using\n  NFS3 over TCP. The initial mounting is done with \"nfsmount -o ro", "title": "NFS hangs with 2.6.25/2.6.26 despite server being reachable", "Kernel Version": "2.6.25", "Product": "File System", "Component": "NFS", "Hardware": "All Linux", "reranked_files": ["fs/nfs/nfs3proc.c", "fs/nfs/nfs3client.c", "fs/nfs/nfs3xdr.c", "fs/nfs/nfs3state.c"], "causes": [{"cause": "The NFS client may not be properly handling network interface state changes after a suspend/resume cycle, leading to a hang.", "code_file": "fs/nfs/nfs3proc.c", "fix_solution": "Ensure that the NFS client properly reinitializes its network state and re-establishes connections after a suspend/resume cycle."}, {"cause": "The NFS client may not be correctly handling TCP reconnections after a network disruption, causing prolonged hangs.", "code_file": "fs/nfs/nfs3client.c", "fix_solution": "Implement a more robust TCP reconnection strategy that quickly detects and recovers from network disruptions."}, {"cause": "There might be an issue with the NFS client's timeout and retry logic, causing it to hang indefinitely in some cases.", "code_file": "fs/nfs/nfs3xdr.c", "fix_solution": "Adjust the timeout and retry logic to ensure that the client does not hang indefinitely and can recover more quickly."}, {"cause": "The NFS client may not be properly handling server-side state changes, such as file locks or session states, after a suspend/resume.", "code_file": "fs/nfs/nfs3state.c", "fix_solution": "Ensure that the client correctly re-establishes any necessary server-side state after a suspend/resume cycle."}], "input_tokens": 642, "output_tokens": 312}
{"id": "11141", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "drivers/power/power_supply_core.c", "include/linux/power_supply.h", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/pci_root.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "init/main.c"], "input_tokens_sum": 162758, "output_tokens_sum": 6832, "description": "Latest working kernel version:2.6.26-git8\nEarliest failing kernel version:2.6.26-git1\nDistribution:Slackware\nHardware Environment:Dell i1501\nSoftware Environment:\nProblem Description:\nhere is my full dmesg:\n[    0.000000] Linux version 2.6.26-g6-+-05253-g14b395e (grissiom@grissiom_slackware) (gcc version 4.2.3) #35 SMP PREEMPT Mon Jul 21 22:04:52 CST 2008\n[    0.000000] BIOS-provided physical RAM map:\n[    0.000000]  BIOS-e820: 0000000000000000 - 000000000009dc00 (usable)\n[    0.000000]  BIOS-e820: 000000000009dc00 - 00000000000a0000 (reserved)\n[    0.000000]  BIOS-e820: 00000000000ce000 - 0000000000100000 (reserved)\n[    0.000000]  BIOS-e820: 0000000000100000 - 0000000037e70000 (usable)\n[    0.000000]  BIOS-e820: 0000000037e70000 - 0000000037e80000 (ACPI data)\n[    0.000000]  BIOS-e820: 0000000037e80000 - 0000000037f00000 (ACPI NVS)\n[    0.000000]  BIOS-e820: 0000000037f00000 - 0000000040000000 (reserved)\n[    0.000000]  BIOS-e820: 00000000e0000000 - 00000000f0000000 (reserved)\n[    0", "title": "no battery or DC status - Dell i1501", "Kernel Version": "2.6.26", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/acpi_bus.c", "drivers/acpi/power.c", "drivers/acpi/events.c"], "causes": [{"cause": "The ACPI battery driver may not be correctly initializing or detecting the battery status on the Dell i1501.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the ACPI battery driver properly initializes and checks for battery presence by adding additional checks or reinitializing the battery status during boot."}, {"cause": "The ACPI subsystem might not be correctly parsing the ACPI tables provided by the BIOS, leading to incorrect power status reporting.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Modify the ACPI table parsing logic to handle any quirks or non-standard implementations found in the Dell i1501 BIOS."}, {"cause": "There could be a regression in the ACPI power management code that affects the detection of power sources.", "code_file": "drivers/acpi/power.c", "fix_solution": "Review recent changes in the ACPI power management code and revert or adjust any changes that could have introduced the regression."}, {"cause": "The ACPI event handling might not be correctly processing power-related events, leading to a failure in updating the power status.", "code_file": "drivers/acpi/events.c", "fix_solution": "Enhance the event handling logic to ensure that power-related events are correctly captured and processed, updating the power status accordingly."}], "input_tokens": 766, "output_tokens": 310}
{"id": "11139", "paths": ["arch/sparc64/kernel/time.c"], "predicts": ["drivers/cpufreq/cpufreq.c", "include/linux/cpufreq.h", "arch/sparc64/kernel/us2e_cpufreq.c", "arch/sparc64/kernel/power.c", "kernel/notifier.c", "init/main.c"], "input_tokens_sum": 128144, "output_tokens_sum": 1827, "description": "Latest working kernel version: 2.6.24.2\nEarliest failing kernel version: 2.6.26\nDistribution: Debian Sid\nHardware Environment: Sun E450/2x CPU 400Mhz/1GB Ram\nSoftware Environment: Sid\nProblem Description:\nAfter I compile 2.6.26 an boots I get this:\n------------[ cut here ]------------                                            \nWARNING: at drivers/cpufreq/cpufreq.c:1391 cpufreq_register_notifier+0x50/0x60()\nModules linked in:                                                              \nCall Trace:                                                                     \n [0000000000605270] cpufreq_register_notifier+0x58/0x60                         \n [00000000007708e0] start_kernel+0x1f0/0x324                                    \n [0000000000680e08] auxio_probe+0x0/0xe8                                        \n [0000000000000000] 0x8                                                         \n---[ end trace 139ce121c98e96c9 ]---\n\nSteps to reproduce:\nCompile kernel with cpufreq enabled and boot.", "title": "warning in cpufreq.c on E450", "Kernel Version": "2.6.26", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq.c"], "causes": [{"cause": "The warning is triggered due to a missing or incorrect notifier block registration in the cpufreq subsystem.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Ensure that the notifier block is properly initialized and registered before being used. Add checks to verify the notifier block's state before registration."}, {"cause": "The cpufreq_register_notifier function might be called with an invalid or NULL pointer, leading to the warning.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Add validation checks for the input parameters of cpufreq_register_notifier to ensure they are not NULL or invalid before proceeding with registration."}, {"cause": "There might be a race condition where the notifier is being registered while the cpufreq subsystem is not fully initialized.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Introduce synchronization mechanisms to ensure that the cpufreq subsystem is fully initialized before any notifier registration is attempted."}], "input_tokens": 590, "output_tokens": 243}
{"id": "11104", "paths": ["net/mac80211/mlme.c"], "predicts": ["drivers/net/wireless/iwlwifi/iwl3945-base.c", "drivers/net/wireless/iwlwifi/iwl-3945.c", "drivers/net/wireless/iwlwifi/iwl-debugfs.c", "drivers/net/wireless/iwlwifi/iwl-core.h", "drivers/net/wireless/iwlwifi/iwl-helpers.h", "net/ieee80211/ieee80211_crypt_wep.c", "net/mac80211/wep.c", "kernel/printk.c", "lib/ratelimit.c", "net/wireless/wext.c"], "input_tokens_sum": 129494, "output_tokens_sum": 2790, "description": "Latest working kernel version: 2.6.25.4\nEarliest failing kernel version: 2.6.26\nDistribution: Debian Sid\nHardware Environment: Fujitsu-Siemens Lifebook E8110, T2400, IWL3945\nSoftware Environment: Gnome 2.22\nProblem Description:\n\nAfter configuring the interface to Ad-hoc mode and WEP, when the remote station tries to connect, the dmesg gets flooded by iwlwifi, and shortly afterwards the remote client disconnects.\n\nSteps to reproduce:\n\n/sbin/iwconfig $WIFI mode ad-hoc \n/sbin/iwconfig $WIFI essid $SSID channel 3\n/sbin/iwconfig $WIFI key s:$PASS", "title": "iwlwifi: printk flood in ad-hoc mode + WEP", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "network-wireless", "Hardware": "All Linux", "reranked_files": ["drivers/net/wireless/intel/iwlwifi/iwl3945.c", "drivers/net/wireless/intel/iwlwifi/iwl-commands.c", "drivers/net/wireless/intel/iwlwifi/iwl-tx.c", "net/wireless/ieee80211.c"], "causes": [{"cause": "The iwlwifi driver may be incorrectly handling WEP encryption in ad-hoc mode, leading to excessive logging and connection issues.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl3945.c", "fix_solution": "Modify the logging level for WEP-related operations in ad-hoc mode to reduce verbosity and ensure proper handling of encryption keys."}, {"cause": "A regression in the handling of ad-hoc mode connections in the iwlwifi driver, possibly due to changes in the network stack or wireless configuration.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-commands.c", "fix_solution": "Review and update the command handling logic for ad-hoc mode to ensure compatibility with the latest kernel changes, focusing on connection establishment and maintenance."}, {"cause": "Incorrect or excessive error handling in the iwlwifi driver when processing WEP keys, leading to a flood of printk messages.", "code_file": "drivers/net/wireless/intel/iwlwifi/iwl-tx.c", "fix_solution": "Refine the error handling mechanism for WEP key processing to prevent unnecessary logging and ensure smooth operation in ad-hoc mode."}, {"cause": "Potential misconfiguration or bug in the wireless stack affecting ad-hoc mode operations with WEP encryption.", "code_file": "net/wireless/ieee80211.c", "fix_solution": "Investigate and adjust the wireless stack configuration for ad-hoc mode with WEP to ensure proper initialization and operation, reducing unnecessary log output."}], "input_tokens": 517, "output_tokens": 359}
{"id": "10976", "paths": ["fs/jbd/checkpoint.c"], "predicts": ["fs/ext3/ext3_jbd.c", "fs/jbd/commit.c", "fs/ext3/balloc.c", "fs/ext3/inode.c", "fs/ext3/super.c", "kernel/softlockup.c"], "input_tokens_sum": 125498, "output_tokens_sum": 2284, "description": "Distribution: Debian sid (unstable)\nHardware Environment: qemu x86\nSoftware Environment: Minimal Debian sid\nProblem Description:\n\nMounting one of the attached intentionally corrupted ext3 filesystems and accessing it causes a soft lockup. I believe they probably are the same bug (both happen in __log_wait_for_space()), but the backtraces vary quite a bit so I attach two test cases.\n\nMy kernel is 2.6.25.8 + three patches posted by Duane Griffin for #10882, namely (I hope I understand the git terminology right, at least you can grep lkml archives for these):\n  - 6ae4ecf..8019bf2\n  - 7712682..bc030f4\n  - 0b8cf80..ea0236b\n\n\n\nSteps to reproduce:\n\n1. bunzip2 one of the filesystem images\n2. mount fs.img /mnt\n3. ls /mnt", "title": "Soft lockup on (intentionally) corrupted filesystem", "Kernel Version": "2.6.25", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/ext3/journal.c", "fs/ext3/super.c", "fs/jbd/transaction.c"], "causes": [{"cause": "The function __log_wait_for_space() in the ext3 journaling code may not handle corrupted filesystem images properly, leading to a soft lockup when waiting for journal space.", "code_file": "fs/ext3/journal.c", "fix_solution": "Add checks to ensure that the journal space request is valid and handle cases where the filesystem is corrupted to prevent infinite loops or excessive waiting."}, {"cause": "The ext3 filesystem code may not correctly handle corrupted metadata, causing the journal to enter a state where it cannot proceed, leading to a soft lockup.", "code_file": "fs/ext3/super.c", "fix_solution": "Implement additional validation and error handling for filesystem metadata during mount operations to detect and handle corruption early."}, {"cause": "The ext3 journaling layer may not properly handle edge cases in corrupted filesystems, leading to a deadlock situation in __log_wait_for_space().", "code_file": "fs/jbd/transaction.c", "fix_solution": "Introduce timeout mechanisms or alternative paths in the journaling code to break out of potential deadlock situations when dealing with corrupted filesystems."}], "input_tokens": 553, "output_tokens": 256}
{"id": "10860", "paths": ["drivers/ata/sata_uli.c"], "predicts": ["drivers/ata/sata_uli.c", "drivers/ata/libata-core.c", "drivers/ata/libata-sff.c", "block/blk-core.c", "block/genhd.c", "drivers/ata/libata-eh.c", "kernel/irq/handle.c", "kernel/softirq.c", "arch/x86/kernel/pci-dma.c", "arch/x86/pci/legacy.c"], "input_tokens_sum": 129020, "output_tokens_sum": 2054, "description": "Latest working kernel version:2.6.25.4\nEarliest failing kernel version:2.6.24-rc4\nalso fails with -rc5 I was wating for, previous rcs not tested\nDistribution: Bluewhite64 (64 bits slackware)\nHardware Environment: Athlon64 X2 / Ali 1689 north 1563 south\n+ bt848 v4l + PATA and SATA disk (SATA on sata_uli)\nSeems to be related to sata disk detection (see below).\n\nSoftware Environment:\nnone\n\nProblem Description:\nthe computer freeze totally at boot after SATA disk detection.\nI append 2.6.25.4 dmesg, lspci and lsusb.\nThe CPU is not 100% (otherwise I could hear the fan going crazy), the keayboard is dead (unable to scroll the console up or down). Nothings happen.\n\nThe console shows somethings similar to the 2.6.25.4 logs, but hangs after those lines:\nhda: cache flushes not supported\n hda: hda1 hda2\nhdd: ATAPI 40X DVD-ROM DVD-R-RAM CD-R/RW drive, 2048kB Cache\nUniform CD-ROM driver Revision: 3.20\nDriver 'sd' needs updating - please use bus_type methods\nsata_uli 0000:00:0e.1: version 1.3\nACPI: PC", "title": "total system freeze at boot with 2.6.26-rc", "Kernel Version": "2.6.26-rc2", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/sata_uli.c", "drivers/scsi/sd.c", "drivers/acpi/scan.c", "drivers/ata/libata-core.c"], "causes": [{"cause": "The SATA ULI driver may not be properly initializing the hardware, leading to a system freeze during disk detection.", "code_file": "drivers/ata/sata_uli.c", "fix_solution": "Ensure proper initialization of the SATA controller by adding necessary delay or reordering initialization steps in the sata_uli driver."}, {"cause": "The 'Driver sd needs updating' message indicates that the SCSI disk driver may not be fully compatible with the new kernel version, causing a hang.", "code_file": "drivers/scsi/sd.c", "fix_solution": "Update the SCSI disk driver to use the new bus_type methods as recommended, ensuring compatibility with the latest kernel changes."}, {"cause": "ACPI interactions with the SATA controller might be causing the system to hang during boot.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Review and update the ACPI handling code to ensure it correctly interacts with the SATA controller, possibly by adding or adjusting ACPI resource management."}, {"cause": "The PATA and SATA disk handling might be conflicting, leading to improper resource allocation and a system freeze.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Ensure that PATA and SATA resources are correctly allocated and managed, possibly by refining the resource allocation logic in the libata core."}], "input_tokens": 672, "output_tokens": 313}
{"id": "10836", "paths": ["drivers/input/serio/serio.c"], "predicts": ["drivers/input/touchscreen/elo.c", "kernel/module.c", "include/linux/module.h", "lib/kobject.c", "lib/klist.c"], "input_tokens_sum": 120503, "output_tokens_sum": 1301, "description": "Latest working kernel version: n/a\nEarliest failing kernel version:  2.6.26-rc4-git2\nDistribution: opensuse 10.1\nHardware Environment: x86 / p4 /gigabyte mobo\nSoftware Environment:\nProblem Description:\n\nelo driver seems to have issues when unloading - at least on system without elo touchscreen attached\n\n[  119.319962] BUG: unable to handle kernel paging request at f8cabfcc\n[  119.319962] IP: [<c0269171>] driver_attach+0x3/0x16\n[  119.319962] *pde = 37e08067 *pte = 00000000\n[  119.319962] Oops: 0000 [#1] SMP\n[  119.319962] Modules linked in: psmouse vboxdrv ipv6 button battery ac loop dm _mod md_mod mousedev evdev rtc_cmos rtc_core rtc_lib 8250_pnp e100 mii ehci_hcd uhci_hcd intel_agp usbcore agpgart i2c_i801 rng_core i2c_core iTCO_wdt iTCO_vend or_support parport_pc lp parport 8250 serial_core edd fan thermal processor ther mal_sys hwmon sg megaraid_mbox sr_mod cdrom megaraid_mm ata_piix libata dock sd_ mod scsi_mod [last unloaded: elo]\n[  119.319962]\n[  119.319962] Pid: 121, comm: kse", "title": "ELO serial touchscreen driver unload issue", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "Serial", "Hardware": "All Linux", "reranked_files": ["drivers/input/touchscreen/elo.c"], "causes": [{"cause": "The elo driver does not properly handle the detachment of the driver when no touchscreen is attached, leading to a null pointer dereference.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Add a check in the driver detach function to ensure that the device is present before attempting to detach the driver."}, {"cause": "The elo driver might not correctly unregister its input device during the module unload process, causing a dangling pointer.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Ensure that the input device is properly unregistered and all resources are freed during the module exit function."}, {"cause": "Improper handling of device resources during the module unload process, leading to a use-after-free scenario.", "code_file": "drivers/input/touchscreen/elo.c", "fix_solution": "Implement proper cleanup routines in the module exit function to release all allocated resources and ensure no further access to them."}], "input_tokens": 689, "output_tokens": 229}
{"id": "10695", "paths": ["drivers/acpi/ac.c"], "predicts": ["drivers/acpi/ac.c", "drivers/acpi/battery.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "arch/x86/kernel/acpi/processor.c"], "input_tokens_sum": 118287, "output_tokens_sum": 1668, "description": "Latest working kernel version:2.6.22\nEarliest failing kernel version:\nDistribution: Mandriva\nHardware Environment: Sony vaio fz315s\nProblem Description:\nWhen the ac_adapter is disconnected, acpi in theory should generate 2 events, \n\nac_adapter AC 00000080 00000000\nbattery BAT0 00000080 00000001\n\nbut in my case it only generates the BAT0 event.\n\nSteps to reproduce:\nInstall a 2.6.24 kernel, execute acpi_listen and plug/unplug the ac_adapter.", "title": "no AC status notification", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/events/evxface.c", "drivers/acpi/ac.c", "drivers/acpi/acpi_driver.c", "drivers/acpi/acpi_bus.c"], "causes": [{"cause": "The ACPI event handler for the AC adapter is not being triggered correctly due to a missing or incorrect event registration.", "code_file": "drivers/acpi/events/evxface.c", "fix_solution": "Ensure that the AC adapter event is correctly registered and handled by adding or correcting the event registration logic in the ACPI event handler."}, {"cause": "The AC adapter status change is not being propagated to the user space due to a missing notification mechanism.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Add a notification mechanism to propagate the AC adapter status change to user space, ensuring that the event is visible to tools like acpi_listen."}, {"cause": "The ACPI driver for the AC adapter is not correctly interpreting the hardware signals indicating a change in AC status.", "code_file": "drivers/acpi/acpi_driver.c", "fix_solution": "Review and update the ACPI driver logic to correctly interpret and handle hardware signals for AC status changes."}, {"cause": "The ACPI subsystem is not correctly initializing or managing the AC adapter device node, leading to missed events.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Ensure proper initialization and management of the AC adapter device node within the ACPI subsystem to prevent missed events."}], "input_tokens": 470, "output_tokens": 305}
{"id": "10590", "paths": ["drivers/net/usb/rndis_host.c"], "predicts": ["include/linux/usb/rndis_host.h", "drivers/usb/core/usb.c", "drivers/usb/core/hcd.c", "drivers/usb/class/cdc-acm.c", "drivers/usb/core/hub.c", "include/linux/netdevice.h"], "input_tokens_sum": 125768, "output_tokens_sum": 1845, "description": "Latest working kernel version: ???\nEarliest failing kernel version: ???, but fails with 2.6.24 too\nDistribution: Debian unstable\nHardware Environment: AMD64 Sempron on a VIA board, HTC P3600 \"phone\" with Samsung SC32442B processor\nSoftware Environment: SynCE 0.11 (host), Microsoft\u00ae Windows Mobile\u00ae 5.0 (phone)\n\nProblem Description: When I connect my hype phone thingy to my computer, the rdnis_host driver is loaded, but registration of the device fails, with the following logs:\n\n[17069.106611] usb 2-1: new full speed USB device using uhci_hcd and address 7\n[17069.228636] usb 2-1: configuration #1 chosen from 1 choice\n[17069.232878] usb 2-1: New USB device found, idVendor=0bb4, idProduct=0b05\n[17069.232884] usb 2-1: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[17069.232887] usb 2-1: Product: Generic RNDIS\n[17069.232890] usb 2-1: Manufacturer: HTC\n[17069.232892] usb 2-1: SerialNumber: ********-****-****-****-************\n[17069.367902] usbcore: registered new interface driver ", "title": "rndis_host fails to register HTC P3600 device", "Kernel Version": "2.6.25", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/usb/rndis_host.c", "drivers/usb/core/config.c"], "causes": [{"cause": "The rndis_host driver may not be correctly handling the initialization sequence for the HTC P3600 device.", "code_file": "drivers/net/usb/rndis_host.c", "fix_solution": "Ensure that the initialization sequence for the HTC P3600 is correctly implemented by adding specific handling for the device's USB descriptors."}, {"cause": "The USB device ID for the HTC P3600 might not be correctly recognized by the rndis_host driver.", "code_file": "drivers/net/usb/rndis_host.c", "fix_solution": "Add the specific USB device ID (idVendor=0bb4, idProduct=0b05) to the list of supported devices in the rndis_host driver."}, {"cause": "There might be a mismatch in the expected USB configuration or interface settings for the HTC P3600.", "code_file": "drivers/usb/core/config.c", "fix_solution": "Verify and adjust the USB configuration parsing logic to ensure compatibility with the HTC P3600's USB descriptors."}, {"cause": "The rndis_host driver might not be correctly handling the network interface registration process.", "code_file": "drivers/net/usb/rndis_host.c", "fix_solution": "Review and correct the network interface registration logic to ensure that the device is properly registered and initialized."}], "input_tokens": 665, "output_tokens": 306}
{"id": "10507", "paths": ["drivers/ata/ahci.c"], "predicts": ["drivers/ata/libata-core.c", "drivers/ata/libata-eh.c", "drivers/ata/ahci.c", "drivers/ata/ata_generic.c", "drivers/ata/ata_piix.c", "include/linux/libata.h", "include/linux/ata.h"], "input_tokens_sum": 121060, "output_tokens_sum": 2168, "description": "Latest working kernel version: 2.6.22.9 and 2.6.23.17\n\nEarliest failing kernel version: 2.6.24\n\nDistribution: Ubuntu x86_64\n\nHardware Environment: Asus M2R32-MVP 580X SB600 (AM2)\n                      AMD X2 4000+\n                      4GB DDR2\n                      SATAII HDD\n                      SATA DVD R/W\n\nSoftware Environment: Ubuntu Gutsy w/ distribution kernel (2.6.22-14)\n\nProblem Description: All 2.6.24 and 2.6.25 kernels fail to boot properly, with the following error looping indefinitely:\n\nata1.00: failed to IDENTIFY (I/O error, err_mask=0x4)\nata2.00: failed to IDENTIFY (I/O error, err_mask=0x4)\n\nThe above correspond to my two SATA physical drives.  All 2.6.22 and 2.6.23 kernels work perfectly on this same machine.  Was there some type of change starting with the 2.6.24 kernels that is rendering my PC inoperable?  \nI have tried looking for similar reports on this, and so far I have only found one entry on the mailing list that deals with the same issue.  The problem was app", "title": "Kernel fails to properly identify SATA drives", "Kernel Version": "2.6.24", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/ahci.c", "drivers/ata/libata-core.c", "drivers/ata/sata_sil.c", "drivers/ata/libata-eh.c"], "causes": [{"cause": "The SATA controller driver for the SB600 chipset may have been altered or improperly configured in the 2.6.24 kernel, leading to identification failures.", "code_file": "drivers/ata/ahci.c", "fix_solution": "Review and update the device ID table and initialization routines for the SB600 chipset to ensure proper detection and configuration of SATA devices."}, {"cause": "Changes in the error handling mechanism for SATA devices might have introduced stricter checks or incorrect error masking, causing the IDENTIFY command to fail.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Examine and adjust the error handling logic to ensure that the IDENTIFY command errors are correctly interpreted and handled, possibly by refining the err_mask conditions."}, {"cause": "A regression in the SATA link initialization process could be causing the drives to not be properly recognized during boot.", "code_file": "drivers/ata/sata_sil.c", "fix_solution": "Investigate and correct any changes in the link initialization sequence that might prevent proper communication with SATA devices, ensuring compatibility with the SB600 chipset."}, {"cause": "The power management settings for SATA devices might have been modified, leading to improper power states during device initialization.", "code_file": "drivers/ata/libata-eh.c", "fix_solution": "Review and adjust the power management code to ensure that SATA devices are in the correct power state during initialization, especially for the SB600 chipset."}], "input_tokens": 632, "output_tokens": 337}
{"id": "10486", "paths": ["drivers/scsi/qla2xxx/qla_os.c"], "predicts": ["drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/qla2xxx/qla_attr.c", "drivers/scsi/qla2xxx/qla_def.h", "drivers/scsi/qla2xxx/qla_gbl.h", "drivers/scsi/qla2xxx/qla_settings.h", "include/scsi/scsi_host.h", "include/scsi/scsi_transport_fc.h", "block/scsi_ioctl.c", "block/ioctl.c", "block/ll_rw_blk.c"], "input_tokens_sum": 123041, "output_tokens_sum": 1977, "description": "Latest working kernel version: 2.6.23\nEarliest failing kernel version: 2.6.24\nDistribution: gentoo\nHardware Environment: opteron\nSoftware Environment: x86_64\nProblem Description:\n\nWith 2.6.24 and 25 there are troubles with qla2xxx module. 4G FC\narrays (Infortrend) are not working properly, while 2G FC are OK. \n\nDetecting 4G array gives:\n sd 8:0:0:0: [sdc] Very big device. Trying to use READ CAPACITY(16).\n sd 8:0:0:0: [sdc] 44918798336 512-byte hardware sectors (22998425 MB)\n sd 8:0:0:0: [sdc] Write Protect is off\n sd 8:0:0:0: [sdc] Mode Sense: 8f 00 00 08\n sd 8:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn't support\nDPO or FUA\n sd 8:0:0:0: [sdc] Very big device. Trying to use READ CAPACITY(16).\n sd 8:0:0:0: [sdc] 44918798336 512-byte hardware sectors (22998425 MB)\n sd 8:0:0:0: [sdc] Write Protect is off\n sd 8:0:0:0: [sdc] Mode Sense: 8f 00 00 08\n sd 8:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn't support\nDPO or FUA\n sdc: sdc1\n sd 8:0:0:0: [sdc] Attache", "title": "kernel 2.6.24  4G FC arrays don't work properly with qla2xxx driver", "Kernel Version": "2.6.24", "Product": "SCSI Drivers", "Component": "QLOGIC QLA2XXX", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/qla2xxx/qla_os.c", "drivers/scsi/qla2xxx/qla_init.c", "drivers/scsi/scsi_lib.c", "drivers/scsi/qla2xxx/qla_target.c"], "causes": [{"cause": "The qla2xxx driver may not properly handle 4G FC arrays due to incorrect handling of READ CAPACITY(16) commands.", "code_file": "drivers/scsi/qla2xxx/qla_os.c", "fix_solution": "Ensure that the driver correctly interprets and processes READ CAPACITY(16) responses for large devices, possibly by updating the logic that handles capacity calculations."}, {"cause": "The driver might not be correctly setting or interpreting the device's capabilities, such as write cache settings, for 4G FC arrays.", "code_file": "drivers/scsi/qla2xxx/qla_init.c", "fix_solution": "Review and update the initialization code to correctly detect and configure device capabilities for 4G FC arrays, ensuring compatibility with the new hardware."}, {"cause": "There could be an issue with the SCSI mid-layer interaction with the qla2xxx driver when handling large capacity devices.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Investigate and adjust the SCSI mid-layer code to ensure it properly supports large capacity devices when interfacing with the qla2xxx driver."}, {"cause": "The qla2xxx driver may not be correctly handling mode sense data for 4G FC arrays, leading to incorrect device configuration.", "code_file": "drivers/scsi/qla2xxx/qla_target.c", "fix_solution": "Modify the mode sense handling logic to ensure that the driver correctly interprets and applies mode sense data for 4G FC arrays."}], "input_tokens": 771, "output_tokens": 354}
{"id": "10403", "paths": ["fs/ext3/super.c"], "predicts": ["fs/ext3/ext3_jbd.c", "fs/ext3/inode.c", "fs/ext3/super.c", "fs/dquot.c", "fs/quota_v2.c", "include/linux/ext3_fs.h", "include/linux/ext3_fs_i.h"], "input_tokens_sum": 125918, "output_tokens_sum": 1524, "description": "Latest working kernel version: none\nEarliest failing kernel version: 2.6.25-rc8\nDistribution: Gentoo\nHardware Environment: x86 (both 32 and 64 bits)\nSoftware Environment: GNU\nProblem Description:\n\nNew quota data is not read (from aquota.user file) after quota enabling\non ext3 FS mounted with \"data=journal\".\nNOTE: data=ordered (default) and data=writeback - are OK.\nThe problem is with quota v2 (old format is not tested).\n\n\nSteps to reproduce:\n\nThe problem is always recreatable.\nJust create an ext3 FS and mount it with \"data=journal\".\nHere is the howto:\n\n# dd if=/dev/zero of=TEST.ext3.fs bs=1M count=1 seek=99\n# mkfs.ext3 TEST.ext3.fs\n# mkdir -p /mnt/1\n# modprobe loop\n# mount TEST.ext3.fs /mnt/1 -ousrquota,data=journal,loop\n# quotacheck /dev/loop0\n# quotaon -a\n\n//  Set quotas for some user (john) both soft and hard (to something like 80000)\n# edquota john\n\n// Put some data into the FS\n# cp -a /usr/src/linux/kernel /mnt/1\n\n// Owned by user john\n# chown -R john:john /mnt/1/kernel\n\n# quota j", "title": "Quotas problem on ext3 FS mounted with data=journal", "Kernel Version": "2.6.25", "Product": "File System", "Component": "ext3", "Hardware": "All Linux", "reranked_files": ["fs/ext3/super.c", "fs/quota/dquot.c", "fs/jbd/journal.c"], "causes": [{"cause": "The quota subsystem may not be properly handling the journaled data mode, leading to incorrect reading of quota information.", "code_file": "fs/ext3/super.c", "fix_solution": "Ensure that the quota subsystem is correctly initialized and reads the quota files when the filesystem is mounted with data=journal. This may involve adding or modifying hooks in the ext3 mount process to ensure quota files are read correctly."}, {"cause": "The quota initialization process might not be compatible with the data=journal mode, causing it to skip reading the quota files.", "code_file": "fs/quota/dquot.c", "fix_solution": "Modify the quota initialization code to ensure it properly handles filesystems mounted with data=journal, possibly by adding checks or additional logic to handle this specific mode."}, {"cause": "The journal mode might interfere with the timing or order of operations in the quota subsystem, leading to the quota files not being read.", "code_file": "fs/jbd/journal.c", "fix_solution": "Adjust the journaling code to ensure that quota operations are correctly ordered and synchronized, possibly by adding synchronization points or ensuring that quota operations are completed before journal commits."}], "input_tokens": 657, "output_tokens": 270}
{"id": "10389", "paths": ["drivers/acpi/asus_acpi.c"], "predicts": ["drivers/acpi/asus_acpi.c", "drivers/acpi/bus.c", "arch/x86/kernel/acpi/boot.c", "arch/x86/kernel/acpi/processor.c", "arch/x86/kernel/acpi/cstate.c", "drivers/acpi/events/evevent.c", "drivers/acpi/events/evxfevnt.c", "drivers/acpi/glue.c", "include/acpi/acpi.h", "include/acpi/acinterp.h"], "input_tokens_sum": 121702, "output_tokens_sum": 2025, "description": "Latest working kernel version: 2.6.22-3\nEarliest failing kernel version: 2.6.24-1\nDistribution: debian testing (lenny)\nHardware Environment: Toshiba Satellite L40-17R laptop\nSoftware Environment: gnome\nProblem Description:\nAfter upgading to kernel 2.6.24-1 I noticed, that my system started to dump the same lines to /var/log/acpid, slowing down overall performance. Here is beginning of log:\n\n[Thu Apr  3 19:36:36 2008] starting up\n[Thu Apr  3 19:36:36 2008] 75 rules loaded\n[Thu Apr  3 19:36:40 2008] client connected from 3185[107:110]\n[Thu Apr  3 19:36:40 2008] 1 client rule loaded\n[Thu Apr  3 19:36:43 2008] received event \"hotkey ATKD 0000005f 00000000\"\n[Thu Apr  3 19:36:43 2008] notifying client 3185[107:110]\n[Thu Apr  3 19:36:43 2008] executing action \"/etc/acpi/asus-wireless.sh on\"\n[Thu Apr  3 19:36:43 2008] BEGIN HANDLER MESSAGES\n[Thu Apr  3 19:36:43 2008] END HANDLER MESSAGES\n[Thu Apr  3 19:36:43 2008] action exited with status 0\n[Thu Apr  3 19:36:43 2008] completed event \"hotkey A", "title": "kernel 2.6.24-1 doesn't detect my laptop correctly", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/osl.c", "drivers/acpi/events/evgpe.c", "drivers/platform/x86/toshiba_acpi.c", "drivers/acpi/acpica/evmisc.c"], "causes": [{"cause": "The ACPI hotkey event handling for Toshiba laptops may have been altered or broken in the 2.6.24 kernel, causing repeated event logging.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Modify the event handling logic to correctly filter or debounce repeated hotkey events for Toshiba laptops."}, {"cause": "The ACPI subsystem might be incorrectly interpreting or handling the hotkey events due to changes in the ACPI DSDT parsing.", "code_file": "drivers/acpi/events/evgpe.c", "fix_solution": "Adjust the GPE (General Purpose Event) handling to ensure that hotkey events are not misinterpreted or redundantly processed."}, {"cause": "The ACPI driver for Toshiba laptops may not be correctly initialized, leading to incorrect event handling.", "code_file": "drivers/platform/x86/toshiba_acpi.c", "fix_solution": "Ensure proper initialization and configuration of the Toshiba ACPI driver to handle hotkey events correctly."}, {"cause": "Changes in the ACPI core might have introduced a regression affecting the handling of specific ACPI events.", "code_file": "drivers/acpi/acpica/evmisc.c", "fix_solution": "Review and correct any recent changes in the ACPI core that could affect event dispatching and handling."}], "input_tokens": 732, "output_tokens": 308}
{"id": "10246", "paths": ["arch/x86/kvm/vmx.c"], "predicts": ["arch/x86/kernel/ioport.c", "arch/x86/kvm/x86.c", "arch/x86/kvm/mmu.c", "arch/x86/kvm/irq.c", "include/asm-x86/io.h", "include/asm-x86/kvm.h", "include/linux/kvm.h", "virt/kvm/kvm_main.c", "virt/kvm/ioapic.c", "virt/kvm/ioapic.h"], "input_tokens_sum": 126382, "output_tokens_sum": 1637, "description": "Latest working kernel version: N/A\nEarliest failing kernel version: 2.6.24\nDistribution: Ubuntu, but tested with mainline\nHardware Environment: intel mobo, Intel(R) Core(TM)2 Quad CPU Q6600@2.40GHz\nSoftware Environment: kvm 62 (x86_64)\nProblem Description:\n\nAfter a successful ioperm() call, otherwise valid \"in\" instructions will segv if a kvm VM has started.\n\nSteps to reproduce:\n\n1) run attached reproducer prior to starting a kvm VM, results are:\n# ./ioperm\ngetting 0x3b4-0x3df permission...\nfetching 0x3cc...\nok: 1\n\n2) start a kvm VM (bug exists only after actually starting a guest VM)\n\n3) run reproducer, which now fails:\n# ./ioperm\ngetting 0x3b4-0x3df permission...\nfetching 0x3cc...\nSegmentation fault (core dumped)\n\nNote that it does not always fail.  Running within gdb seems to reduce the chances that it will fail.  But when it does, it is clearly the \"in\" that is failing:\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00000000004006e4 in inb ()\n(gdb) x/1i $pc\n0x4006e4 <inb+1", "title": "\"in\" after successful ioperm() results in SEGV after kvm use", "Kernel Version": "2.6.25-rc5", "Product": "Virtualization", "Component": "kvm", "Hardware": "All Linux", "reranked_files": ["arch/x86/kernel/ioport.c", "arch/x86/kvm/x86.c", "virt/kvm/kvm_main.c", "arch/x86/kvm/vmx/vmx.c"], "causes": [{"cause": "The ioperm() function may not properly restore I/O permissions after a KVM VM is started, leading to invalid access during \"in\" instructions.", "code_file": "arch/x86/kernel/ioport.c", "fix_solution": "Ensure that the I/O permission bitmap is correctly restored after KVM VM operations by adding checks or reinitializing the bitmap in the ioperm() implementation."}, {"cause": "KVM may alter the CPU state or I/O permission settings, causing conflicts with the ioperm() settings.", "code_file": "arch/x86/kvm/x86.c", "fix_solution": "Modify KVM initialization and teardown code to ensure it does not interfere with existing I/O permissions set by ioperm()."}, {"cause": "The KVM module might not correctly handle context switching between host and guest, affecting I/O operations.", "code_file": "virt/kvm/kvm_main.c", "fix_solution": "Implement additional context management to ensure I/O permissions are preserved across VM start and stop operations."}, {"cause": "There might be a race condition between KVM VM operations and ioperm() calls, leading to inconsistent I/O permissions.", "code_file": "arch/x86/kvm/vmx/vmx.c", "fix_solution": "Introduce locking mechanisms or synchronization points to prevent race conditions affecting I/O permissions during VM operations."}], "input_tokens": 668, "output_tokens": 315}
{"id": "10201", "paths": ["drivers/net/sis900.c"], "predicts": ["drivers/net/sis900.c", "include/linux/netdevice.h", "include/linux/pci.h", "drivers/net/mii.c"], "input_tokens_sum": 120502, "output_tokens_sum": 1455, "description": "Latest working kernel version:  2.6.23.15-137.fc8.i686\nEarliest failing kernel version: 2.6.24.3-12.fc8.i686\nDistribution:  Fedora Core 8\nHardware Environment:  PC\nSoftware Environment:  Following YUM update\nProblem Description:  After reboot following YUM update to new kernel - SiS 900 PCI Fast Ethernet (driver sis900) can not ifconfig eth0.  Configuration fails with  message \"SIOCSIFFLAGS: Invalid argument\".  System does boot.  SO  To recover, insert FC8 DVD and copy original kernel RPM's to the hard drive.  Then install the old Kernel with \"rpm -ivh --force --hash *.rpm\" and reboot.  System comes up and configures the sis900 eth0 correctly at startup.\n\nSteps to reproduce:  A machine with a SiS 900 PCI Fast Ethernet installed.  INstall RC8 and apply the updates.  After 2.6.24.3, reboot and notice the trouble.\n\n\nDan", "title": "Yum update of Kernel broke sis900 ethernet driver", "Kernel Version": "2.6.24", "Product": "Drivers", "Component": "Network", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/sis/sis900.c"], "causes": [{"cause": "The sis900 driver may not be properly initializing the network interface due to changes in the kernel's network stack initialization sequence.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Ensure that the network interface is correctly initialized by reviewing and updating the initialization sequence in the sis900_open function."}, {"cause": "Changes in the kernel's handling of network device flags might be causing the SIOCSIFFLAGS error.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Review and update the handling of network device flags in the sis900_set_multicast_list function to ensure compatibility with the new kernel version."}, {"cause": "The PCI device initialization might be failing due to changes in the PCI subsystem.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Check the PCI initialization code in the sis900_probe function and ensure it aligns with the updated PCI subsystem requirements."}, {"cause": "The driver may not be correctly handling changes in the kernel's power management or suspend/resume operations.", "code_file": "drivers/net/ethernet/sis/sis900.c", "fix_solution": "Update the power management functions, such as sis900_suspend and sis900_resume, to ensure they are compatible with the new kernel power management framework."}], "input_tokens": 580, "output_tokens": 320}
{"id": "10077", "paths": ["drivers/char/nozomi.c"], "predicts": ["arch/x86/mm/ioremap.c", "drivers/char/nozomi.c", "include/asm-x86/pci.h", "include/linux/pci.h", "kernel/irq/chip.c", "mm/memory.c"], "input_tokens_sum": 128064, "output_tokens_sum": 2168, "description": "Earliest failing kernel version: 2.6.23 with gregkh patches\nDistribution: Gentoo Linux\nHardware Environment: Option N.V. Qualcomm MSM6275 UMTS chip [1931:000c]\n\nProblem Description:\n\nWhen I boot my system with the Option card inserted I get the following in my syslog:\n\npccard: CardBus card inserted into slot 0\nInitializing Nozomi driver 2.1d (build date: Feb 22 2008 21:34:48)\nnozomi 0000:03:00.0: Init, new card found\nnozomi 0000:03:00.0: Card type is: 2048\nPCI: Enabling device 0000:03:00.0 (0000 -> 0002)\nACPI: PCI Interrupt 0000:03:00.0[A] -> GSI 18 (level, low) -> IRQ 18\n------------[ cut here ]------------\nWARNING: at arch/x86/mm/ioremap.c:137 __ioremap+0x1c2/0x1e3()\nModules linked in: nozomi(+) evdev isofs zlib_inflate loop yenta_socket rsrc_nonstatic pcmcia pcmcia_core firewire_ohci firewire_core crc_itu_t arc4 ecb ohci1394 ieee1394 snd_hda_intel snd_pcm snd_timer snd soundcore sdhci snd_page_alloc mmc_core tifm_7xx1 hci_usb tifm_core iwl3945 mac80211 bluetooth cfg80211 tpm_infineo", "title": "nozomi (driver for Qualcomm 3G PCMCIA adapter) crashes", "Kernel Version": "2.6.25", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "All Linux", "reranked_files": ["arch/x86/mm/ioremap.c", "drivers/char/nozomi.c"], "causes": [{"cause": "The crash is likely due to improper handling of memory mapping for the device, as indicated by the warning in ioremap.c.", "code_file": "arch/x86/mm/ioremap.c", "fix_solution": "Ensure that the memory region being mapped is valid and does not overlap with reserved areas. Add checks to validate the address range before calling __ioremap."}, {"cause": "The driver may not be correctly initializing the PCI device, leading to incorrect memory access.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Review and update the initialization sequence for the PCI device, ensuring all necessary resources are allocated and configured correctly before use."}, {"cause": "The IRQ handling for the device might be misconfigured, causing unexpected behavior during device initialization.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Verify the IRQ setup in the driver, ensuring that the correct IRQ is assigned and properly handled during device operations."}, {"cause": "The driver might be using deprecated or incorrect API calls for memory mapping, leading to instability.", "code_file": "drivers/char/nozomi.c", "fix_solution": "Update the driver to use the latest kernel APIs for memory mapping and resource management, ensuring compatibility with newer kernel versions."}], "input_tokens": 698, "output_tokens": 297}
{"id": "10042", "paths": ["drivers/acpi/namespace/nsxfeval.c"], "predicts": ["drivers/acpi/video.c", "include/acpi/acpi_drivers.h", "drivers/acpi/power.c", "arch/x86/video/fbdev.c", "arch/x86/pci/acpi.c", "arch/x86/kernel/quirks.c", "arch/x86/kernel/irq_64.c", "kernel/power/pm.c", "kernel/power/main.c", "include/acpi/acpi.h"], "input_tokens_sum": 121484, "output_tokens_sum": 2193, "description": "Distribution:Gentoo\nHardware Environment:Fujitsu-Siemens Amilo Pi 2515\n\nProblem Description:When video module is loaded, /sys/class/backlight/acpi_video0/ entries are created. Dmesg output is ACPI: Video Device [GFX0] (multi-head: yes  rom: no  post: no) \nThe values, however, are strange. actual_brightness is always a big integer like e.g. 2102324320 (changes every time module is loaded, remains unchanged afterwards regardless of brightness level).\nInitial value of acpi_video0/brightness is 0 (although the display is at maximum brightness). max_brightness is set to 100. \nI am able to change the brightness if I echo 25,50 or 75. Any other value makes my display return to maximum brightness. \nActually, the display is supposed to have brightness levels from 1 to 7, AFAIK.\nIf I load with ACPI_DEBUG, initial value of brightness is also a great number such as 2099887552.\n\nSteps to reproduce:always", "title": "Unreal actual_brightness and other strange behavior of video module on FSC Amilo Pi 2515", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Power-Video", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c"], "causes": [{"cause": "The ACPI video driver is incorrectly interpreting the brightness levels reported by the hardware, leading to unrealistic values for actual_brightness.", "code_file": "drivers/acpi/video.c", "fix_solution": "Adjust the parsing logic in the ACPI video driver to correctly interpret the brightness levels reported by the hardware, ensuring they fall within the expected range."}, {"cause": "The mapping between the hardware brightness levels and the ACPI video driver's brightness levels is incorrect, causing unexpected behavior when setting brightness.", "code_file": "drivers/acpi/video.c", "fix_solution": "Implement a proper mapping function that translates the hardware-specific brightness levels to the standardized levels expected by the ACPI video driver."}, {"cause": "The initialization of the brightness values in the ACPI video driver is not correctly setting the initial state, leading to incorrect initial brightness values.", "code_file": "drivers/acpi/video.c", "fix_solution": "Ensure that the initial brightness values are correctly initialized based on the current hardware state during the module load process."}, {"cause": "The ACPI video driver is not correctly handling the maximum brightness level, causing it to default to maximum brightness for unsupported values.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add validation checks to ensure that only supported brightness levels are accepted and correctly applied, preventing fallback to maximum brightness."}], "input_tokens": 594, "output_tokens": 313}
{"id": "9843", "paths": ["kernel/sched_fair.c"], "predicts": ["kernel/sched_fair.c", "fs/cifs/file.c", "fs/cifs/connect.c", "kernel/sched.c", "include/linux/sched.h", "kernel/cgroup.c", "include/linux/cgroup.h", "kernel/cpuset.c", "fs/cifs/ioctl.c", "fs/cifs/dir.c"], "input_tokens_sum": 123986, "output_tokens_sum": 2084, "description": "Latest working kernel version: 2.6.23.14\nEarliest failing kernel version: 2.6.24\nDistribution: Debian/Sid\nHardware Environment: AMD K7 (x86_32)\nSoftware Environment:\nProblem Description:\n\nWith 2.6.23.14, uploading 'linux-2.6.24.tar.bz2' to a CIFS mount takes 5 s. (~ 9.5 MB/s), which is ok for a 100Mbps network:\n\nuser1@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n\nreal    0m4.784s\nuser    0m0.000s\nsys     0m0.090s\n\n\nWith 2.6.24 and CONFIG_FAIR_GROUP_SCHED=y, the same test can take up to 28 s :\n\n* Test #1\n\n# idle CPU (no process running other than 'cp')\n=> 5 s.\n\n* Test #2\n\n(same user)\nuser1@client$ while do :; do :; done # priority: 0\nuser1@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n=> 5 s.\n\n* Test #3\n\n(different user)\nuser1@client$ while do :; do :; done # priority: 19\nuser2@client$ time cp linux-2.6.24.tar.bz2 /cifs_srv\n=> 28 s.\n\nI consider it's a bug because one process only wants network bandwidth (and very few CPU cycles) and the other one only wants the remaining CPU resource", "title": "CIFS doesn't like the new fair group CPU scheduler", "Kernel Version": "2.6.24", "Product": "File System", "Component": "CIFS", "Hardware": "All Linux", "reranked_files": ["kernel/sched/fair.c", "fs/cifs/file.c", "fs/cifs/connect.c"], "causes": [{"cause": "The fair group CPU scheduler may be causing priority inversion, where a lower priority process is affecting the performance of a higher priority process due to CPU scheduling decisions.", "code_file": "kernel/sched/fair.c", "fix_solution": "Adjust the scheduler to better handle priority inversion by ensuring that I/O-bound tasks like CIFS operations are not adversely affected by CPU-bound tasks with lower priority."}, {"cause": "The fair group scheduler might not be correctly accounting for I/O-bound processes, leading to inefficient CPU allocation for CIFS operations.", "code_file": "fs/cifs/file.c", "fix_solution": "Implement a mechanism to prioritize I/O-bound tasks within the CIFS module, possibly by hinting the scheduler about the nature of the task."}, {"cause": "The interaction between the CIFS module and the fair group scheduler may not be optimized, causing delays in network operations when CPU resources are constrained.", "code_file": "fs/cifs/connect.c", "fix_solution": "Optimize the CIFS connection handling to ensure that network operations are prioritized appropriately, possibly by adjusting task scheduling hints or priorities."}], "input_tokens": 704, "output_tokens": 252}
{"id": "9779", "paths": ["kernel/sched.c"], "predicts": ["kernel/sched.c", "kernel/sched_fair.c", "kernel/cpuset.c", "kernel/sysctl.c", "arch/x86/mach-generic/probe.c", "fs/proc/base.c", "init/main.c", "include/linux/sched.h", "include/asm-x86/signal.h", "include/linux/cpumask.h"], "input_tokens_sum": 120601, "output_tokens_sum": 2224, "description": "Distribution: Ubuntu\nHardware Environment: amd64, x86 kernel\nProblem Description:\n\nThe following command locks up my system:\necho 1 | sudo tee /sys/kernel/uids/`id -u`/cpu_share\n\nWhile I have not reproduced it for this command, it locked up my system twice when trying it with the uid of my system user \"boinc\".\n\nOthers on the IRC channel ##kernel could not confirm it (using virtual machines on 64bit and 32bit), but I think it's grave enough to report it anyway.\n\nI'm using the 2.6.24 kernel from Ubuntu (but someone on ##kernel could not confirm it using the ubuntu-server kernel).\n\nMy CPU is AMD64 3000+.\n\nPlease ask for any details you need to understand the problem.\n\n\nSteps to reproduce:\necho 1 | sudo tee /sys/kernel/uids/`id -u`/cpu_share", "title": "Setting cpu_share to 1 freezes system", "Kernel Version": "2.6.24", "Product": "Process Management", "Component": "Scheduler", "Hardware": "All Linux", "reranked_files": ["kernel/sched.c", "kernel/sched_fair.c", "kernel/sched_rt.c", "kernel/sched/core.c"], "causes": [{"cause": "The cpu_share setting might not be properly validated, leading to incorrect scheduling behavior and system freeze.", "code_file": "kernel/sched.c", "fix_solution": "Add validation checks for cpu_share values to ensure they are within acceptable limits before applying them."}, {"cause": "The cpu_share setting might be causing a division by zero or other arithmetic error in the scheduler code.", "code_file": "kernel/sched_fair.c", "fix_solution": "Ensure that cpu_share values are checked to prevent division by zero or other invalid arithmetic operations."}, {"cause": "The cpu_share setting might be causing an infinite loop or deadlock in the scheduler due to improper handling of task priorities.", "code_file": "kernel/sched_rt.c", "fix_solution": "Review and adjust the logic for handling task priorities when cpu_share is set to low values to prevent infinite loops or deadlocks."}, {"cause": "The cpu_share setting might be interacting incorrectly with other scheduler parameters, leading to resource starvation and system freeze.", "code_file": "kernel/sched/core.c", "fix_solution": "Implement checks to ensure cpu_share settings do not conflict with other scheduler parameters, potentially causing resource starvation."}], "input_tokens": 540, "output_tokens": 280}
{"id": "9761", "paths": ["drivers/acpi/video.c"], "predicts": ["drivers/acpi/utilities/utglobal.c", "drivers/acpi/video.c", "arch/x86/kernel/acpi/boot.c", "drivers/acpi/bus.c", "include/acpi/aclocal.h", "include/acpi/acpi.h", "include/acpi/actypes.h"], "input_tokens_sum": 152057, "output_tokens_sum": 5404, "description": "Latest working kernel version: unknown\nEarliest failing kernel version:unknown\nDistribution: Mandriva 2008.1 Alpha 2\nHardware Environment: Samsung R70 (BIOS UE6)\nSoftware Environment: 64Bit\nProblem Description:\nWhen booting up my system, I can see this error in my dmesg.\nAs requested on the linux-acpi mailing list, I'm opening that bug.\n\nHere come the dmesg :\n\nACPI Error (utglobal-0126): Unknown exception code: 0xFFFFFFFE [20070126]\nPid: 1952, comm: modprobe Not tainted 2.6.24-laptop-0.rc7.2mdv #1\n\nCall Trace:\n [<ffffffff8038bd2e>] acpi_ut_update_ref_count+0x50/0x9d\n [<ffffffff8038c1d9>] acpi_format_exception+0x2c/0x35\n [<ffffffff8038af73>] acpi_ut_exception+0x25/0x8c\n [<ffffffff803765cc>] acpi_evaluate_integer+0xb6/0xc7\n [<ffffffff881dcd0a>] :video:acpi_video_bus_add+0xcc9/0xce2\n [<ffffffff802c46a8>] ifind+0x58/0xd0\n [<ffffffff8038f2e8>] acpi_device_probe+0x43/0x91\n [<ffffffff803c321c>] driver_probe_device+0x9c/0x1b0\n [<ffffffff803c34e9>] __driver_attach+0xc9/0xd0\n [<ffffffff803c3420>", "title": "unsupported ACPI video device - Samsung R70", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/video.c", "drivers/acpi/bus.c", "drivers/acpi/utglobal.c"], "causes": [{"cause": "The ACPI video driver is attempting to evaluate an ACPI method that is not supported or incorrectly implemented by the BIOS, leading to an unknown exception code.", "code_file": "drivers/acpi/video.c", "fix_solution": "Add a check to ensure the ACPI method being evaluated is supported by the BIOS, and handle unsupported methods gracefully by logging a warning instead of an error."}, {"cause": "The ACPI video bus add function is not handling exceptions properly, resulting in an unhandled exception code being propagated.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Modify the acpi_video_bus_add function to catch and handle specific ACPI exceptions, providing a fallback mechanism or default behavior when an exception occurs."}, {"cause": "The ACPI utility function acpi_ut_update_ref_count is being called with invalid parameters, leading to an exception.", "code_file": "drivers/acpi/utglobal.c", "fix_solution": "Validate the parameters passed to acpi_ut_update_ref_count to ensure they are within expected ranges and types, and add error handling for invalid inputs."}], "input_tokens": 718, "output_tokens": 257}
{"id": "9751", "paths": ["arch/alpha/math-emu/math.c"], "predicts": ["arch/alpha/math-emu/math.c", "include/asm-alpha/fpu.h"], "input_tokens_sum": 109657, "output_tokens_sum": 1686, "description": "Latest working kernel version: none\nEarliest failing kernel version: tested on 2.6.18, but should not work anywhere\nDistribution: Debian\nHardware Environment: alphaev56, alphaev68\nSoftware Environment: mathemu=y\nProblem Description: conversion from denormal float to double is wrong\n\nSteps to reproduce:\n\nCompile with -O0 -mieee or -O2 -mieee:\n\n#include <stdio.h>\nfloat x = 1.0;\ndouble y;\n\nint g(float z)\n{\n  printf (\"%g\\n\", z);\n}\n\nint main()\n{\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 65536.0f);\n  x *= (1.0f / 32.0f);\n  g(x);\n  y = x;\n  g(y);\n}\n\nCorrect value should be:\n\n1.4013e-45\n1.4013e-45\n\nActual value is:\n\n2.65249e-315\n2.65249e-315\n\nor\n\n2.65249e-315\n0\n\nThe right value is 2-149, that is 1.4013e-45, but the alpha does not do it.  The architecture handbook says \"A trap handler can convert an S_ floating denor", "title": "conversion of denormal floats to double is wrong", "Kernel Version": "2.6.18", "Product": "Platform Specific/Hardware", "Component": "Alpha", "Hardware": "All Linux", "reranked_files": ["arch/alpha/kernel/traps.c", "arch/alpha/math-emu/math.c", "arch/alpha/include/asm/fpu.h"], "causes": [{"cause": "The Alpha architecture does not handle denormalized floating-point numbers correctly due to missing trap handler support for conversion.", "code_file": "arch/alpha/kernel/traps.c", "fix_solution": "Implement a trap handler for denormalized floating-point numbers to ensure correct conversion from float to double."}, {"cause": "The floating-point emulation code does not correctly handle denormalized numbers, leading to incorrect conversion results.", "code_file": "arch/alpha/math-emu/math.c", "fix_solution": "Modify the floating-point emulation logic to correctly handle denormalized numbers during conversion operations."}, {"cause": "The IEEE floating-point compliance is not fully implemented for the Alpha architecture, causing incorrect handling of denormalized numbers.", "code_file": "arch/alpha/include/asm/fpu.h", "fix_solution": "Ensure IEEE compliance by updating the floating-point unit definitions to handle denormalized numbers correctly."}], "input_tokens": 747, "output_tokens": 219}
{"id": "9747", "paths": ["drivers/acpi/processor_throttling.c"], "predicts": ["drivers/acpi/processor_throttling.c", "arch/x86/kernel/acpi/processor.c", "include/acpi/processor.h", "drivers/acpi/processor_core.c", "fs/proc/base.c", "kernel/cpu.c"], "input_tokens_sum": 124059, "output_tokens_sum": 2127, "description": "Latest working kernel version: Unsure.  Later than 2.6.24-rc2\nEarliest failing kernel version: 2.6.24-rc6 (possibly earlier)\nDistribution: Debian\nHardware Environment: Toshiba Portege r500\nSoftware Environment:\nProblem Description:\n\nWhen I boot laptop-mode fires up and tries to write to /proc/acpi/processor/CPU0/throttling which contains <not supported>\n\nI don't quite know what I've done to get it to contain <not supported> but anyway that'll be more fun to track down I'm sure.\n\nIn any case, in this configuration I get this oops even if all I do is\necho stuff >/proc/acpi/processor/CPU0/throttling\n\n[   32.378673] Unable to handle kernel NULL pointer dereference at 0000000000000\n000 RIP: \n[   32.378761]  [<0000000000000000>] _stext+0x7fdf7000/0x1a\n[   32.378965] PGD 37bb3067 PUD 37b2a067 PMD 0 \n[   32.379182] Oops: 0010 [1] SMP \n[   32.379350] CPU 0 \n[   32.379466] Modules linked in: rfcomm l2cap bluetooth acpi_cpufreq cpufreq_st\nats cpufreq_userspace cpufreq_powersave cpufreq_ondemand f", "title": "Oops on boot from laptop mode writing to /proc/acpi/processor/CPU0/throttling", "Kernel Version": "2.6.24-rc7", "Product": "ACPI", "Component": "Config-Processors", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/processor_throttling.c", "drivers/acpi/processor_core.c", "drivers/acpi/processor_driver.c"], "causes": [{"cause": "The ACPI processor throttling interface is not properly handling unsupported states, leading to a NULL pointer dereference when accessed.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Add a check in the write handler for the throttling interface to ensure that it returns an error if the throttling feature is not supported, preventing further processing."}, {"cause": "The /proc/acpi/processor/CPU0/throttling file is being accessed without verifying if the CPU supports throttling, leading to an invalid memory access.", "code_file": "drivers/acpi/processor_core.c", "fix_solution": "Introduce a validation step in the initialization code to set the throttling file state to 'unsupported' and prevent access if the CPU does not support throttling."}, {"cause": "The laptop-mode script is attempting to write to a non-existent or unsupported throttling interface, causing a kernel oops.", "code_file": "drivers/acpi/processor_driver.c", "fix_solution": "Modify the processor driver to return a more informative error message when the throttling interface is not available, and ensure that the script handles this gracefully."}], "input_tokens": 693, "output_tokens": 269}
{"id": "9704", "paths": ["drivers/acpi/processor_throttling.c"], "predicts": ["drivers/acpi/processor_throttling.c", "drivers/acpi/processor_core.c", "include/acpi/processor.h"], "input_tokens_sum": 135791, "output_tokens_sum": 3026, "description": "Most recent kernel where this bug did not occur: None\nDistribution: FC8\nHardware Environment: All\nSoftware Environment: All\nProblem Description: \nWhen echo some invalid values to /proc/acpi/processor/*/throttling,\nthere isn't any error info returned, on the contray, it sets\nthrottling value to some T* successfully, obviously, this is incorrect,\na correct way should be to let it fail and return error info.\n\nSteps to reproduce:\n\n[root@localhost /]# echo \"2xxxx\" > /proc/acpi/processor/CPU0/throttling\n[root@localhost /]# cat /proc/acpi/processor/CPU0/throttling\nstate count:             8\nactive state:            T2\nstate available: T0 to T7\nstates:\n    T0:                  100%\n    T1:                  87%\n   *T2:                  75%\n    T3:                  62%\n    T4:                  50%\n    T5:                  37%\n    T6:                  25%\n    T7:                  12%\n[root@localhost /]# echo \"\" > /proc/acpi/processor/CPU0/throttling\n[root@localhost /]# cat /proc/acpi/processor/CP", "title": "ACPI: processor throttling set error", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Config-Processors", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/processor_throttling.c"], "causes": [{"cause": "The input validation for the throttling value is missing or inadequate, allowing invalid values to be set without error.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Add input validation to check if the provided throttling value is within the valid range and format before setting it. Return an error if the validation fails."}, {"cause": "The code responsible for parsing the input value does not correctly handle non-numeric input, leading to incorrect throttling state assignment.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Enhance the parsing logic to ensure that only valid numeric input is accepted, and return an error for any non-numeric input."}, {"cause": "The function responsible for writing to the throttling file does not return an error code when invalid input is detected.", "code_file": "drivers/acpi/processor_throttling.c", "fix_solution": "Modify the write function to return an appropriate error code when invalid input is detected, ensuring the user is informed of the failure."}], "input_tokens": 627, "output_tokens": 246}
{"id": "9699", "paths": ["drivers/media/radio/radio-sf16fmr2.c"], "predicts": ["drivers/media/radio/radio-sf16fmr2.c", "kernel/resource.c", "arch/x86/kernel/ioport_32.c", "kernel/module.c", "drivers/media/radio/radio-sf16fmi.c", "arch/x86/mach-generic/probe.c", "drivers/media/radio/radio-aimslab.c", "drivers/media/radio/radio-aztech.c", "drivers/media/radio/radio-maestro.c", "kernel/irq/autoprobe.c"], "input_tokens_sum": 123350, "output_tokens_sum": 1887, "description": "Most recent kernel where this bug did not occur: not known\n\nDistribution: OpenSuSE 10.3 with suse kernel & vanilla 2.6.24rc6,  grml (live-cd) daily build\n\nHardware Environment: running inside VMware Workstation 6.x on FSC Lifebook e-series, running native on older FSC Lifebook\n\nSoftware Environment: ???\n\nProblem Description:\nloading radio-sf16fmr2 on a system without that hardware leaves the system in an inconsistent state after probe, leading to weird behaviour or even system crash\n\nSteps to reproduce:\n\neither:\nopensuse103:~ # modprobe radio-sf16fmr2\nFATAL: Error inserting radio_sf16fmr2 (/lib/modules/2.6.24-rc6/kernel/drivers/media/radio/radio-sf16fmr2.ko): Device or resource busy\nopensuse103:~ # cat /proc/ioports\nSegmentation fault\n\nor:\nopensuse103:~ # modprobe radio-sf16fmr2\nFATAL: Error inserting radio_sf16fmr2 (/lib/modules/2.6.24-rc6/kernel/drivers/media/radio/radio-sf16fmr2.ko): Device or resource busy\n\nopensuse103:~ # modprobe esp\n<system freeze>\n\n\ndmesg after cat /proc/ioport", "title": "radio-sf16fmr2 probably buggy - system inconsistent after probe", "Kernel Version": "2.6.24", "Product": "v4l-dvb", "Component": "radio", "Hardware": "All Linux", "reranked_files": ["drivers/media/radio/radio-sf16fmr2.c"], "causes": [{"cause": "The radio-sf16fmr2 driver does not properly handle the absence of the hardware, leading to uninitialized or improperly cleaned up resources.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Add checks to ensure that resources are properly initialized and cleaned up if the hardware is not present. Implement error handling to gracefully exit the probe function without leaving the system in an inconsistent state."}, {"cause": "The driver may be incorrectly registering I/O ports or memory regions even when the hardware is not present, causing conflicts.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Ensure that the driver only registers I/O ports or memory regions after confirming the presence of the hardware. Add checks to verify hardware presence before resource allocation."}, {"cause": "The driver might be leaving dangling pointers or not properly releasing resources on failure, leading to segmentation faults.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Review the error paths in the probe function to ensure all allocated resources are freed and pointers are nullified on failure."}, {"cause": "The driver may not be correctly handling module load errors, leading to system instability.", "code_file": "drivers/media/radio/radio-sf16fmr2.c", "fix_solution": "Implement comprehensive error handling and cleanup routines in the module initialization and exit functions to ensure system stability even if the module fails to load."}], "input_tokens": 647, "output_tokens": 351}
{"id": "9643", "paths": ["drivers/acpi/sleep/proc.c"], "predicts": ["drivers/acpi/utils.c", "drivers/acpi/power.c", "drivers/acpi/bus.c", "drivers/acpi/glue.c", "drivers/acpi/scan.c", "fs/proc/base.c", "include/linux/acpi.h", "include/acpi/acpi.h", "crypto/proc.c", "mm/util.c"], "input_tokens_sum": 121296, "output_tokens_sum": 1362, "description": "Most recent kernel where this bug did not occur: none\nDistribution: FC8\nHardware Environment: All\nSoftware Environment: All\nProblem Description: after echo \"2007 12\" > /proc/acpi/alarm, you'll get 2007-12-12 12:12:12 by cat /proc/acpi/alarm, obviously it is wrong, it should consider \"2007 12\" as an invalid input.\n\nSteps to reproduce:\n\n[root@localhost /]# echo \"2006 09\" > /proc/acpi/alarm\n[root@localhost /]# cat /proc/acpi/alarm\n2007-12-09 09:09:09\n[root@localhost /]# echo \"2006 04\" > /proc/acpi/alarm\n[root@localhost /]# cat /proc/acpi/alarm\n2007-12-04 04:04:04", "title": "/proc/acpi/alarm set error", "Kernel Version": "2.6.24", "Product": "ACPI", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/proc.c", "drivers/acpi/alarm.c"], "causes": [{"cause": "The input parsing logic for /proc/acpi/alarm does not properly validate the input format, allowing incomplete or malformed dates to be accepted.", "code_file": "drivers/acpi/proc.c", "fix_solution": "Add input validation to ensure the date string is complete and correctly formatted before processing it."}, {"cause": "The function responsible for setting the alarm date does not check for the number of fields in the input, leading to default values being used for missing fields.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Modify the function to check the number of fields in the input and return an error if the input is incomplete."}, {"cause": "The default values for time fields are being used when the input is incomplete, leading to incorrect alarm settings.", "code_file": "drivers/acpi/alarm.c", "fix_solution": "Ensure that all time fields are explicitly set by the user input, and return an error if any field is missing."}], "input_tokens": 543, "output_tokens": 232}
{"id": "9385", "paths": ["drivers/hid/hid-input.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/quirks.c", "drivers/input/mouse/sermouse.c", "include/linux/hid.h", "include/linux/input.h", "include/linux/hid-debug.h", "drivers/usb/class/usblp.c", "arch/i386/kernel/setup.c", "arch/i386/kernel/irq.c", "sound/usb/usbquirks.h"], "input_tokens_sum": 118598, "output_tokens_sum": 1560, "description": "Scroll wheel on BTC 8193 keyboard is not working in Linux. On another keyboard (Genius SlimStar Pro) and the scroll wheel works there.\n\nWhen I rotate or click the wheel, nothing happens, nothing is appearing in the relevant /dev/input/eventNN file, nothing bad in dmesg.\n\nHere's the hardware info I was able to collect:\n\n# dmesg | tail -n 6 \nusb 1-6.1.2: new low speed USB device using ehci_hcd and address 16\nusb 1-6.1.2: configuration #1 chosen from 1 choice\ninput: USB-compliant keyboard as /class/input/input18\ninput: USB HID v1.10 Keyboard [USB-compliant keyboard] on usb-0000:00:1a.7-6.1.2\ninput: USB-compliant keyboard as /class/input/input19\ninput: USB HID v1.10 Device [USB-compliant keyboard] on usb-0000:00:1a.7-6.1.2\n\n# /sbin/lsusb | grep KEY\nBus 001 Device 016: ID 0518:0002 EzKEY Corp. \n\n# /sbin/lsusb -d 0518:0002 -v\nBus 001 Device 016: ID 0518:0002 EzKEY Corp. \nDevice Descriptor:\n  bLength                18\n  bDescriptorType         1\n  bcdUSB               1.10\n  bDeviceClass     ", "title": "scroll wheel on BTC 8193 doesn't work", "Kernel Version": "2.6.23", "Product": "Drivers", "Component": "Input Devices", "Hardware": "All Linux", "reranked_files": ["drivers/hid/hid-core.c", "drivers/input/input.c", "drivers/usb/core/config.c"], "causes": [{"cause": "The USB HID driver does not recognize the specific scroll wheel events from the BTC 8193 keyboard.", "code_file": "drivers/hid/hid-core.c", "fix_solution": "Add a quirk or specific handling for the EzKEY Corp device ID 0518:0002 to properly interpret the scroll wheel events."}, {"cause": "The input subsystem does not map the scroll wheel events correctly for this specific device.", "code_file": "drivers/input/input.c", "fix_solution": "Ensure that the input mapping for the device includes the scroll wheel events by adding a specific handler for the device ID 0518:0002."}, {"cause": "The device descriptor parsing does not correctly identify the scroll wheel capabilities of the BTC 8193 keyboard.", "code_file": "drivers/usb/core/config.c", "fix_solution": "Modify the USB device descriptor parsing to correctly identify and handle the scroll wheel capabilities for the device ID 0518:0002."}], "input_tokens": 676, "output_tokens": 229}
{"id": "9374", "paths": ["sound/pci/hda/hda_codec.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/pci/hda/hda_codec.c", "sound/core/control.c", "sound/core/pcm.c"], "input_tokens_sum": 130368, "output_tokens_sum": 3424, "description": "Most recent kernel where this bug did not occur: 2.6.23\nDistribution: Debian\n\nHardware Environment:\nx86_64 Pentium D system; ICH7 chipset\n00:1b.0 Audio device [0403]: Intel Corporation 82801G (ICH7 Family) High Definition Audio Controller [8086:27d8] (rev 01)\n\nSoftware Environment: Debian Unstable, KDE Desktop\n\nProblem Description:\nIf I change the volume using the master control slider in KDE, the sound will first go down to a very low volume (almost muted with slider at 2/3 _up_) and then, in about 10 seconds, come slowly back up to its \"normal\" volume for the position of the slider. The volume does vary while I move the slider, but even at the very top it is very low at first.\nThis only happens with the master slider, the PCM and front sliders behave normally.\n\nThere were some changes from 2.6.23 to 2.6.24. During first boot of .24 I get:\nSetting up ALSA...warning: 'alsactl restore' failed with error message '\nalsactl: set_control:989: warning: name mismatch (Capture Volume/Input Sou", "title": "[ICH7 snd_hda_intel] Volume control broken", "Kernel Version": "2.6.24-rc2", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["sound/pci/hda/hda_codec.c", "sound/pci/hda/hda_intel.c", "sound/core/control.c", "sound/core/init.c"], "causes": [{"cause": "The volume control logic for the master slider in the snd_hda_intel driver may have been altered, causing incorrect initialization or handling of volume levels.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Review and adjust the initialization and handling of the master volume control to ensure it correctly reflects the slider position immediately without delay."}, {"cause": "A regression in the ALSA control interface might be causing a mismatch in the expected control names or indices, leading to incorrect volume settings.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Ensure that the control names and indices are correctly mapped and initialized, particularly for the master volume control, to prevent mismatches."}, {"cause": "Changes in the ALSA mixer control handling between kernel versions could have introduced a delay in applying volume changes.", "code_file": "sound/core/control.c", "fix_solution": "Investigate and correct any logic that introduces delays in applying volume changes, ensuring immediate response to slider adjustments."}, {"cause": "The alsactl restore process might be failing to correctly restore the mixer settings, leading to incorrect initial volume levels.", "code_file": "sound/core/init.c", "fix_solution": "Fix the alsactl restore logic to ensure that all mixer settings, especially for the master control, are correctly restored on boot without errors."}], "input_tokens": 618, "output_tokens": 321}
{"id": "9327", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "drivers/acpi/acpi_memhotplug.c", "arch/x86/pci/acpi.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h", "drivers/acpi/ac.c", "drivers/acpi/processor_idle.c", "drivers/acpi/utils.c", "arch/x86/pci/irq.c", "kernel/irq/manage.c"], "input_tokens_sum": 122147, "output_tokens_sum": 1885, "description": "Most recent kernel where this bug did not occur: 2.6.24-rc1\nDistribution: Ubuntu Feisty\nHardware Environment: Laptop Toshiba Satellite U305-S5077\nProblem Description:\n\nAfter the ACPI changes between 2.6.24-rc1 and -rc2 I have my logs\n\"spammed\" (every 2-3 seconds) by: \n\n[  423.112903] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  423.113020] ACPI: EC: non-query interrupt received, switching to interrupt mode\n[  426.078972] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  426.079645] ACPI: EC: non-query interrupt received, switching to interrupt mode\n[  426.622773] ACPI: EC: missing IBF_1 confirmations,switch off interrupt mode.\n[  426.622889] ACPI: EC: non-query interrupt received, switching to interrupt mode\n\nIt seems that no harm is done, apart (but it could be another thing)\nthat gnome-panel is much slower on startup.", "title": "2.6.24-rc2 (esthetic?) regression: auto select interrupt bouncing", "Kernel Version": "2.6.24-rc2", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/ec.c"], "causes": [{"cause": "The ACPI Embedded Controller (EC) driver may have introduced changes in interrupt handling between 2.6.24-rc1 and 2.6.24-rc2, causing frequent switching between interrupt modes due to missing IBF_1 confirmations.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Review and adjust the logic for handling IBF_1 confirmations to ensure stable interrupt mode without frequent switching."}, {"cause": "The EC driver might be incorrectly interpreting non-query interrupts, leading to unnecessary mode switches.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Improve the handling of non-query interrupts to prevent unnecessary switching to interrupt mode."}, {"cause": "Changes in the EC driver may have affected the timing or sequence of operations, causing the gnome-panel to slow down due to excessive logging.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Optimize the logging mechanism to reduce the frequency of log messages and improve performance."}], "input_tokens": 618, "output_tokens": 236}
{"id": "9272", "paths": ["drivers/md/raid5.c"], "predicts": ["drivers/md/raid5.c", "include/linux/raid/raid5.h", "drivers/md/md.c", "kernel/panic.c", "lib/bug.c", "drivers/md/raid6algos.c", "drivers/md/raid6recov.c", "init/do_mounts_md.c", "kernel/printk.c", "drivers/md/dm-raid1.c"], "input_tokens_sum": 123203, "output_tokens_sum": 916, "description": "Most recent kernel where this bug did not occur:\n2.6.23.1\n\nDistribution: Debian Etch 4.0\n\nHardware Environment:\nIntel P-III-800 EB (x86_32)\n512 MB RAM\nAIC7xxx SCSI Controller for RAID-1 RootFS\nsata_sil Controller (3114) with 4x 300GB SATA Disks as RAID-5\n\nSoftware Environment:\nmdadm version 2.5.6\n\nProblem Description:\nshortly after the raid5 array is initialized the kernel stops with\nkernel BUG at drivers/md/raid5.c:143!\ninvalid opcode: 0000 [#1]\nModules linked in: xfs tcp_cubic raid456 async_xor async_memcpy async_tx xor deadline_iosched w83781d hwmon_vid hwmon eeprom netconsole configfs e1000 3c59x mii sata_sil button ata_piix uhci_hcd parport_pc i2c_i801 8250_pnp 8250 serial_core parport evdev usbcore libata i2c_core rng_core intel_agp agpgart pcspkr rtc sg st sr_mod cdrom ch dm_mirror dm_snapshot thermal processor fan unix ext3 jbd mbcache raid1 md_mod sd_mod dm_mod aic7xxx scsi_transport_spi scsi_mod\n\nPid: 1666, comm: md2_raid5 Not tainted (2.6.24-rc1-git10 #1)\nEIP: 0060:[<e0b019e", "title": "kernel BUG at drivers/md/raid5.c:143", "Kernel Version": "2.6.24-rc1", "Product": "IO/Storage", "Component": "MD", "Hardware": "All Linux", "reranked_files": ["drivers/md/raid5.c"], "causes": [{"cause": "The bug is likely caused by an uninitialized or improperly initialized data structure in the RAID-5 code, leading to an invalid operation.", "code_file": "drivers/md/raid5.c", "fix_solution": "Ensure that all data structures are properly initialized before use, particularly those related to the RAID-5 array setup and management."}, {"cause": "There might be a race condition in the RAID-5 initialization code, causing inconsistent state leading to the invalid opcode error.", "code_file": "drivers/md/raid5.c", "fix_solution": "Add appropriate locking mechanisms to ensure that the RAID-5 array initialization is thread-safe and free from race conditions."}, {"cause": "A possible miscalculation or incorrect handling of array boundaries or indices in the RAID-5 code, leading to an out-of-bounds access.", "code_file": "drivers/md/raid5.c", "fix_solution": "Review and correct any array index calculations or boundary checks to prevent out-of-bounds access."}, {"cause": "The error might be due to a mismatch in the expected and actual data layout or structure size, causing an invalid operation.", "code_file": "drivers/md/raid5.c", "fix_solution": "Verify and update the data structure definitions and ensure they match the expected layout and size."}], "input_tokens": 687, "output_tokens": 304}
{"id": "9206", "paths": ["drivers/md/bitmap.c"], "predicts": ["drivers/md/bitmap.c", "drivers/md/md.c", "drivers/md/raid5.c", "include/linux/raid/bitmap.h", "include/linux/raid/md.h"], "input_tokens_sum": 119394, "output_tokens_sum": 1658, "description": "Most recent kernel where this bug did not occur: 2.6.22\nDistribution: gentoo (vanilla k.o kernel)\nHardware Environment: pentium4\nSoftware Environment: gentoo stable\nProblem Description: \nI believe is directly related to \"[PATCH 007 of 7] md: Change bitmap_unplug and others to void functions.\"\n\nI have confirmed that this problem occurs during initial creation of the MD device with mdadm 2.6.4.\n\nThe specific error I am getting is \nmd3: bitmap initialized from disk: read 28/28 pages, set 0 bits\ncreated bitmap (442 pages) for device md3\nmd3: disabling internal bitmap due to errors\nmd3: failed to create bitmap (-5)\nmd: pers->run() failed ...\n\nsuperblock information from mdstat\nmdadm -E /dev/sx8/0p5\n/dev/sx8/0p5:\n          Magic : a92b4efc\n        Version : 01\n    Feature Map : 0x1\n     Array UUID : b772776b:e2810279:bf64284e:65700530\n           Name : data2\n  Creation Time : Wed Jul 18 11:21:56 2007\n     Raid Level : raid6\n   Raid Devices : 12\n\n  Used Dev Size : 462671664 (220.62 GiB 236.89", "title": "Negative internal write-intent bitmap offset with metadata 1.0 REDUX in raid 6: kernel refuses to start the array", "Kernel Version": "2.6.23", "Product": "IO/Storage", "Component": "MD", "Hardware": "All Linux", "reranked_files": ["drivers/md/bitmap.c", "drivers/md/md.c", "drivers/md/raid6.c"], "causes": [{"cause": "The bitmap initialization logic may not correctly handle the offset calculation for metadata version 1.0, leading to a negative offset.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Ensure that the offset calculation for the bitmap is correctly handled for metadata version 1.0 by adding checks to prevent negative offsets."}, {"cause": "The function responsible for creating the bitmap might not properly handle error conditions, leading to the disabling of the bitmap.", "code_file": "drivers/md/md.c", "fix_solution": "Improve error handling in the bitmap creation function to ensure that it can recover from or report errors more gracefully."}, {"cause": "Changes in the function signatures to void might have removed necessary error checking or return value handling, causing the bitmap creation to fail.", "code_file": "drivers/md/bitmap.c", "fix_solution": "Reintroduce error checking and handling in functions that were changed to void, ensuring that any errors during bitmap operations are properly managed."}, {"cause": "The RAID6 initialization process might not correctly account for the bitmap size and page calculations, leading to incorrect bitmap setup.", "code_file": "drivers/md/raid6.c", "fix_solution": "Review and correct the logic for calculating bitmap size and pages during RAID6 initialization to ensure accurate setup."}], "input_tokens": 671, "output_tokens": 303}
{"id": "9133", "paths": ["drivers/scsi/aacraid/aachba.c"], "predicts": ["drivers/scsi/aacraid/aachba.c", "drivers/scsi/aacraid/commctrl.c", "drivers/scsi/aacraid/comminit.c", "drivers/scsi/aacraid/rx.c", "drivers/scsi/aacraid/sa.c", "include/scsi/scsi.h", "include/scsi/scsi_eh.h", "include/scsi/scsi_host.h", "include/scsi/scsi_transport.h", "include/scsi/scsi_transport_spi.h"], "input_tokens_sum": 118931, "output_tokens_sum": 2036, "description": "Most recent kernel where this bug did not occur: 2.6.20.4 (see description)\nDistribution: PLD Linux Distribution 2.0 (Ac)\n\nHardware Environment:\nDell PowerEdge 1650 with Dell PowerEdge Expandable RAID Controller 3/Di (rev 01), 2 disks, mirror, PCI ID 1028:000a\n\nProblem Description:\n\nSystem does not boot at all using aacraid SCSI driver with Dell PERC 3/Di controller. Machine is currently running kernel 2.6.20.4 and it works perfectly. Few days ago I was trying upgrade to 2.6.22.9 and system failed to boot.\n\nDriver correctly detects controller and then following messages are displayed on console:\n\nscsi 0:0:0:0 Direct-Access DELL mirror V1.0 PQ: 0 ANSI: 2\nAAC:AAC received an unrecognized command [601]\naacraid: Host adapter abort request (0,1,0,0)\naacraid: Host adapter abort request (0,1,0,0)\naacraid: Host adapter reset request. SCSI hang ?\nscsi 0:1:0:0 scsi: Device offlined - not ready after error recovery\n\n... and so on for every scsi id and scsi host (0:1:1:0, 0:1:2:0, ... , 0:2:15:0).", "title": "aacraid driver fails with Dell PowerEdge Expandable RAID Controller 3/Di", "Kernel Version": "2.6.22", "Product": "SCSI Drivers", "Component": "AACRAID", "Hardware": "All Linux", "reranked_files": ["drivers/scsi/aacraid/commsup.c", "drivers/scsi/aacraid/aachba.c", "drivers/scsi/aacraid/linit.c", "drivers/scsi/aacraid/rx.c"], "causes": [{"cause": "The aacraid driver may not correctly handle certain SCSI commands for the Dell PERC 3/Di controller, leading to unrecognized command errors.", "code_file": "drivers/scsi/aacraid/commsup.c", "fix_solution": "Update the command handling logic to correctly interpret and process the SCSI commands specific to the Dell PERC 3/Di controller."}, {"cause": "The driver might not be properly initializing or configuring the hardware, causing abort and reset requests.", "code_file": "drivers/scsi/aacraid/aachba.c", "fix_solution": "Ensure that the initialization sequence for the Dell PERC 3/Di controller is correctly implemented, possibly by adding specific configuration settings or delays."}, {"cause": "The error recovery mechanism in the aacraid driver may not be robust enough to handle certain error conditions with this hardware.", "code_file": "drivers/scsi/aacraid/linit.c", "fix_solution": "Enhance the error recovery logic to better handle and recover from the specific errors encountered with the Dell PERC 3/Di controller."}, {"cause": "The driver may not be correctly identifying or setting up the SCSI devices, leading to device offline errors.", "code_file": "drivers/scsi/aacraid/rx.c", "fix_solution": "Review and correct the device identification and setup process to ensure all SCSI devices are properly recognized and initialized."}], "input_tokens": 670, "output_tokens": 329}
{"id": "8995", "paths": ["kernel/power/disk.c"], "predicts": ["drivers/acpi/glue.c", "drivers/acpi/power.c", "drivers/acpi/sleep/proc.c", "kernel/power/pm.c", "kernel/power/swsusp.c", "kernel/time/timekeeping.c", "arch/x86_64/kernel/time.c", "include/asm-x86_64/mc146818rtc.h"], "input_tokens_sum": 118897, "output_tokens_sum": 2183, "description": "Most recent kernel where this bug did not occur:2.6.20\nDistribution: FC6\nHardware Environment: ASUS A8N-SLI mobo, Athlon 64 3200+, PATA Disk\nSoftware Environment: FC6, MythTV 0.20.2-164\nProblem Description:\nChange in kernel code from support for /proc/acpi/alarm to /sys/class/rtc/rtc0/wakealarm and supporting code borked working system.  Will no longer wake at set time.\nTime set <> time reported by cat /sys.../wakealarm.  Return value off by large constant.  Note: Mobo doesn't support month, day, or year in alarm setting.\n\nSteps to reproduce:\nBefore upgrade from 2.6.20 to 2.6.22.2, suspend-to-disk with powerdown to standby would wake at time echoed into /proc/acpi/alarm.  Change of wakeup time setting code to echo 0 to /sys/class/rtc/rtc0/wakealarm followed by echo of seconds since epoch of desired wakeup time under 2.6.22.2 does not work.  System will not wake up at specified time.  Will wake by keyboard keystroke, such as Ctrl+Esc.  Tried enabling APM (BIOS) alarm setting and all ent", "title": "/proc/acpi/alarm worked; update to 2.6.22.2 and /sys/class/rtc/rtc0/wakealarm don't", "Kernel Version": "2.6.22", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["drivers/rtc/interface.c", "drivers/rtc/rtc-cmos.c", "kernel/time/rtc.c", "drivers/acpi/sleep.c"], "causes": [{"cause": "The transition from /proc/acpi/alarm to /sys/class/rtc/rtc0/wakealarm may have introduced a mismatch in the expected time format or handling of the RTC alarm, leading to incorrect wake-up times.", "code_file": "drivers/rtc/interface.c", "fix_solution": "Ensure that the time conversion logic from seconds since epoch to RTC alarm format is correctly implemented, taking into account the hardware limitations of not supporting month, day, or year."}, {"cause": "The RTC driver might not correctly handle the hardware's inability to set month, day, or year, leading to incorrect alarm settings.", "code_file": "drivers/rtc/rtc-cmos.c", "fix_solution": "Modify the RTC driver to correctly handle alarms on hardware that does not support full date settings, ensuring only supported fields are used."}, {"cause": "There might be a regression in the RTC subsystem that affects how wake alarms are set or read, causing discrepancies in the reported and actual wake-up times.", "code_file": "kernel/time/rtc.c", "fix_solution": "Review and correct the logic for setting and reading wake alarms to ensure consistency and accuracy in the reported times."}, {"cause": "The system's power management settings might not be correctly interfacing with the RTC wakealarm functionality, leading to failures in waking up at the specified time.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the power management code correctly interfaces with the RTC subsystem to set and handle wake alarms, especially during suspend-to-disk operations."}], "input_tokens": 662, "output_tokens": 357}
{"id": "8848", "paths": ["drivers/ata/pata_hpt37x.c"], "predicts": ["drivers/ata/pata_hpt37x.c", "drivers/ata/libata-core.c", "drivers/ata/libata.h", "include/linux/libata.h", "include/linux/ata.h"], "input_tokens_sum": 113271, "output_tokens_sum": 1314, "description": "Most recent kernel where this bug did not occur: 2.6.17\n\nDistribution: Linux Debian 3.1 Sarge\n\nHardware Environment: \nm/b ABIT BE6-II ( HPT BIOS updated for LBA48), HDD Seagate ST3160212A 160GB PATA firmware version 3AAJ\n\nSoftware Environment: GRUB boot loader\n\nProblem Description:\nHPT370 max UDMA mode is UDMA66 with the IDE (non-experimantal) driver, and UDMA44 with the LibATA (experimantal) one.\n\nSteps to reproduce:\n\njust boot with kernel newer than 2.6.17. The drive is bootable.\n\nThe GIT versions of kernel ( containing some HPT patches ) don't fix the problem.", "title": "(pata HPT370) UDMA100 mode isn't available since LibATA has been incorporated to the kernel", "Kernel Version": "2.6.22", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "All Linux", "reranked_files": ["drivers/ata/pata_hpt.c", "drivers/ata/libata-core.c", "drivers/ata/ata_piix.c", "drivers/ata/ata_generic.c"], "causes": [{"cause": "The LibATA driver does not properly configure the UDMA mode for the HPT370 controller, defaulting to a lower UDMA mode.", "code_file": "drivers/ata/pata_hpt.c", "fix_solution": "Modify the HPT370 driver initialization code to correctly detect and set the UDMA100 mode for compatible drives."}, {"cause": "The HPT370 controller is not correctly identified or configured by the LibATA subsystem, leading to incorrect mode settings.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Update the device identification and configuration logic to ensure the HPT370 controller is set to the correct UDMA mode."}, {"cause": "The transition from the IDE driver to the LibATA driver may have missed specific configurations required for the HPT370 controller.", "code_file": "drivers/ata/ata_piix.c", "fix_solution": "Add specific configuration settings for the HPT370 controller to ensure it operates at UDMA100 mode."}, {"cause": "The LibATA driver may not be correctly reading or applying the BIOS settings for the HPT370 controller, affecting UDMA mode.", "code_file": "drivers/ata/ata_generic.c", "fix_solution": "Ensure that the LibATA driver reads and applies the BIOS settings for the HPT370 controller to enable UDMA100 mode."}], "input_tokens": 529, "output_tokens": 316}
{"id": "8838", "paths": ["fs/ocfs2/file.c"], "predicts": ["fs/nfs/write.c", "fs/nfs/file.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "fs/nfsd/nfssvc.c", "include/linux/nfs_fs.h", "include/linux/nfs4.h", "include/linux/nfs_fs_sb.h", "net/sunrpc/clnt.c", "net/sunrpc/svc.c"], "input_tokens_sum": 116917, "output_tokens_sum": 1948, "description": "Most recent kernel where this bug did not occur: 2.6.21.6\nDistribution: very custom based on slackware (quite old glibc 2.3 gcc 3.4)\nHardware Environment:\nMB: 2 opteron X64  raid controler 3com series 95XX\nSoftware Environment:\nOCFS2 over DRBD 8.0.4 (active/active) over hardware raid volume\nNFS servers (version 1.1 from source)\nProblem Description:\nNFS shares ocfs2 file systems. \nProblem appears on NFS3 and NFS4 (both over tcp )\n\nWhen I write to file over NFS - content of the file is destroyed and contains random bytes. Size of file is preserved. Kernel report no errors.  Read works correctly. \nFile written directly on nfs server is OK (I can read it on server and client station). \nOn the same server NFS over reiserfs works correctly.\n\n\nSteps to reproduce:\ntry to mount nfs share on client workstation, and execute echo \"test\" >> mytestfile", "title": "Random data in files created on NFS (over OCFS2 over DRBD)", "Kernel Version": "2.6.22", "Product": "File System", "Component": "Other", "Hardware": "All Linux", "reranked_files": ["fs/nfs/write.c", "fs/ocfs2/file.c", "fs/nfs/nfs3proc.c", "drivers/block/drbd/drbd_main.c", "fs/nfs/super.c"], "causes": [{"cause": "Data corruption during write operations over NFS due to improper handling of file system synchronization between OCFS2 and DRBD.", "code_file": "fs/nfs/write.c", "fix_solution": "Ensure proper synchronization and locking mechanisms are in place when writing data to OCFS2 over DRBD to prevent data corruption."}, {"cause": "Inconsistent caching behavior between NFS and OCFS2 leading to stale or corrupted data being written.", "code_file": "fs/ocfs2/file.c", "fix_solution": "Implement or enhance cache invalidation logic to ensure data consistency between NFS and OCFS2."}, {"cause": "Race conditions in the NFS client code when handling write operations over a distributed file system like OCFS2.", "code_file": "fs/nfs/nfs3proc.c", "fix_solution": "Introduce additional locking or atomic operations to handle concurrent write operations safely."}, {"cause": "Improper handling of write operations in the DRBD layer, causing data to be incorrectly mirrored or corrupted.", "code_file": "drivers/block/drbd/drbd_main.c", "fix_solution": "Review and correct the write operation logic in DRBD to ensure data integrity during replication."}, {"cause": "Incompatibility or misconfiguration between NFS and the underlying OCFS2/DRBD stack, leading to unexpected behavior.", "code_file": "fs/nfs/super.c", "fix_solution": "Add configuration checks and compatibility layers to ensure NFS operates correctly with OCFS2 and DRBD."}], "input_tokens": 590, "output_tokens": 356}
{"id": "8721", "paths": ["sound/sound_core.c"], "predicts": ["lib/kobject.c", "sound/core/device.c", "include/linux/errno.h", "drivers/base/core.c", "drivers/base/class.c", "drivers/base/dd.c", "drivers/base/driver.c", "drivers/base/sys.c", "sound/core/sound.c", "include/sound/core.h"], "input_tokens_sum": 113438, "output_tokens_sum": 1524, "description": "Most recent kernel where this bug did not occur: dunno - jumped from 2.4.34.5 to 2.6.21.5\nDistribution: Debian 3.1\nHardware Environment: pc\nSoftware Environment: Linux 2.6.21.5 + patch suspend2-2.2.10\nProblem Description: trace dump loading module snd-pcm-oss\n\nSteps to reproduce: load the module\n\nhere's the dmesg dump:\n\nSoftware Watchdog Timer: 0.07 initialized. soft_noboot=0 soft_margin=60 sec (nowayout= 0)\nDevice driver i2c-9191 lacks bus and class support for being resumed.\nPCI driver via686a lacks driver specific resume support.\ninput: Power Button (FF) as /class/input/input3\nACPI: Power Button (FF) [PWRF]\ninput: Power Button (CM) as /class/input/input4\nACPI: Power Button (CM) [PWRB]\ni2c /dev entries driver\nDevice driver i2c-0 lacks bus and class support for being resumed.\nPCI driver vt596_smbus lacks driver specific resume support.\nit87: Found IT8712F chip at 0x290, revision 5\nCapability LSM initialized\nkobject_add failed for audio with -EEXIST, don't try to register things with t", "title": "trace dump: \"kobject_add failed for audio with -EEXIST, ...\"", "Kernel Version": "2.6.21", "Product": "Drivers", "Component": "Sound", "Hardware": "All Linux", "reranked_files": ["drivers/base/core.c", "sound/core/init.c", "kernel/module.c", "kernel/power/suspend.c"], "causes": [{"cause": "The kobject_add function is being called with a name that already exists, leading to an -EEXIST error.", "code_file": "drivers/base/core.c", "fix_solution": "Ensure that the kobject name is unique before calling kobject_add by checking if the kobject already exists and handling it appropriately."}, {"cause": "The snd-pcm-oss module is attempting to register a device or subsystem that has already been registered, causing a conflict.", "code_file": "sound/core/init.c", "fix_solution": "Modify the module initialization code to check for existing registrations and avoid re-registering the same device or subsystem."}, {"cause": "A race condition during module loading is causing multiple attempts to register the same kobject.", "code_file": "kernel/module.c", "fix_solution": "Implement locking mechanisms around the kobject registration code to prevent concurrent registrations of the same object."}, {"cause": "The suspend2 patch may have introduced changes that affect the kobject registration process, leading to conflicts.", "code_file": "kernel/power/suspend.c", "fix_solution": "Review and adjust the suspend2 patch to ensure it does not interfere with the kobject registration process, particularly for audio devices."}], "input_tokens": 651, "output_tokens": 288}
{"id": "8709", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ec.c", "drivers/acpi/battery.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/processor.c", "drivers/acpi/power.c", "include/acpi/acpi.h", "include/acpi/acglobal.h", "drivers/acpi/system.c", "arch/i386/pci/acpi.c", "include/acpi/acpi_bus.h"], "input_tokens_sum": 123152, "output_tokens_sum": 2523, "description": "Most recent kernel where this bug did not occur:\nBattery and other ACPI-related features used to work in 2.6.20\n\nDistribution: Ubuntu (7.04 with 2.6.20 - works, alpha 7.10 with 2.6.22-rc - does not work)\n\nHardware Environment:\nASUS M6r\n\nProblem Description:\n2.6.22-rc kernels are unable to check battery status. \nThe following errors show up in dmesg at boot:\n\nACPI: EC: acpi_ec_wait timeout, status = 255, expect_event = 2\nACPI: EC: input buffer is not empty, aborting transaction\nACPI Exception (evregion-0420): AE_TIME, Returned by Handler for [EmbeddedControl] [20070126]\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.RDC3] (Node ddf07f04), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\ECIO] (Node ddf0975c), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\_SB_.PCI0.SBRG.EC0_.ACPS] (Node ddf07f68), AE_TIME\nACPI Error (psparse-0537): Method parse/execution failed [\\ACPS] (Node ddf04c70), AE_TIME\nACPI Error (psparse-0537", "title": "regression: EmbeddedControl AE_TIME errors, /proc/acpi/battery/* not present", "Kernel Version": "2.6.23-rc3", "Product": "ACPI", "Component": "EC", "Hardware": "All Linux", "reranked_files": ["drivers/acpi/ec.c", "drivers/acpi/acpica/evregion.c", "drivers/acpi/acpica/hwregs.c"], "causes": [{"cause": "The ACPI Embedded Controller (EC) driver may have timing issues due to changes in the EC polling mechanism introduced in newer kernels.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Increase the timeout value for EC transactions to accommodate slower hardware response times."}, {"cause": "The ACPI EC driver may not be handling input buffer states correctly, leading to aborted transactions.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Add additional checks and handling for input buffer states to ensure transactions are not prematurely aborted."}, {"cause": "Changes in the ACPI method execution path may have introduced delays or errors in EC method execution.", "code_file": "drivers/acpi/acpica/evregion.c", "fix_solution": "Optimize the execution path for ACPI methods related to the EC to reduce execution time and prevent timeouts."}, {"cause": "The ACPI EC driver may not be correctly synchronizing with the hardware, causing timeouts during method execution.", "code_file": "drivers/acpi/acpica/hwregs.c", "fix_solution": "Implement better synchronization mechanisms between the EC driver and hardware to ensure timely method execution."}], "input_tokens": 692, "output_tokens": 279}
{"id": "8671", "paths": ["drivers/cpufreq/cpufreq.c"], "predicts": ["drivers/cpufreq/cpufreq_conservative.c", "arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c", "kernel/power/swsusp.c", "drivers/acpi/sleep/main.c", "kernel/power/pm.c"], "input_tokens_sum": 114854, "output_tokens_sum": 1901, "description": "Most recent kernel where this bug did not occur: unkown\nDistribution: Gentoo Linux\nHardware Environment: IBM Thinkpad T43\nSoftware Environment:\nProblem Description: cpufreq_conservative doesn't scale CPU frequency anymore after wakeup from suspend to disk, instead CPU runs always with the highest available frequency. Scaling driver is acpi-cpufreq.\n\nSteps to reproduce: Choose cpufreq_conservative as scaling driver and execute \"echo disk > /sys/power/state\".", "title": "CPU frequency always on highest frequency after wakeup from suspend to disk", "Kernel Version": "2.6.22", "Product": "Power Management", "Component": "cpufreq", "Hardware": "All Linux", "reranked_files": ["drivers/cpufreq/cpufreq_conservative.c", "drivers/cpufreq/acpi-cpufreq.c", "kernel/power/suspend.c"], "causes": [{"cause": "The cpufreq_conservative governor does not reinitialize properly after waking up from suspend to disk, causing it to fail to adjust the CPU frequency.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Ensure that the governor's state is reinitialized correctly in the resume callback by adding a call to reinitialize the frequency scaling parameters."}, {"cause": "The ACPI cpufreq driver does not correctly restore the CPU frequency settings after waking up from suspend to disk.", "code_file": "drivers/cpufreq/acpi-cpufreq.c", "fix_solution": "Modify the resume function to restore the CPU frequency settings by reapplying the last known good configuration or resetting the frequency scaling policy."}, {"cause": "The suspend to disk process does not save and restore the CPU frequency governor state, leading to incorrect behavior after resume.", "code_file": "kernel/power/suspend.c", "fix_solution": "Add code to save the current CPU frequency governor state before suspending and restore it after resuming from disk."}], "input_tokens": 458, "output_tokens": 253}
{"id": "8667", "paths": ["drivers/net/sky2.c"], "predicts": ["drivers/net/sky2.c", "drivers/net/sky2.h", "drivers/base/power/resume.c", "drivers/base/power/suspend.c", "arch/i386/kernel/acpi/sleep.c", "arch/x86_64/kernel/suspend.c", "kernel/power/pm.c", "kernel/power/swsusp.c"], "input_tokens_sum": 175004, "output_tokens_sum": 7174, "description": "Distribution: Debian Etch\nHardware Environment: Laptop Toshiba M45-S355\n\nProblem Description:\nSuspend to ram work fine in my Toshiba M45-S355, but when laptop return (from RAM), my network connection crash, and I need unload and load again my sky2 module.\n\nMy NIC is:\nMarvell Technology Group Ltd. 88E8036 PCI-E Fast Ethernet Controller (rev 10)\n\nRafael J. Wysocki (from LKML) recommend open this issue on this category (Power Management).\n\nkernel: sky2 eth1: disabling interface\nkernel: sky2 eth1: enabling interface\nkernel: sky2 eth1: ram buffer 4K\nkernel: ADDRCONF(NETDEV_UP): eth1: link is not ready\nkernel: uhci_hcd 0000:00:1d.3: remove, state 4\nkernel: usb usb4: USB disconnect, address 1\nkernel: uhci_hcd 0000:00:1d.3: USB bus 4 deregistered\nkernel: ACPI: PCI interrupt for device 0000:00:1d.3 disabled\nkernel: uhci_hcd 0000:00:1d.2: remove, state 4\nkernel: usb usb3: USB disconnect, address 1\nkernel: uhci_hcd 0000:00:1d.2: USB bus 3 deregistered\nkernel: ACPI: PCI interrupt for device 0000:0", "title": "sky2 crash when return from resume to ram", "Kernel Version": "2.6.21", "Product": "Power Management", "Component": "Hibernation/Suspend", "Hardware": "All Linux", "reranked_files": ["drivers/net/ethernet/marvell/sky2.c", "drivers/pci/pci-driver.c", "drivers/acpi/pci_irq.c", "net/core/dev.c"], "causes": [{"cause": "The sky2 driver does not properly handle the resume from suspend, leading to the network interface not being reinitialized correctly.", "code_file": "drivers/net/ethernet/marvell/sky2.c", "fix_solution": "Ensure that the sky2_resume function properly reinitializes the network interface by resetting the hardware and reconfiguring the network settings."}, {"cause": "The PCI device state is not correctly restored during resume, causing the network interface to fail to reinitialize.", "code_file": "drivers/pci/pci-driver.c", "fix_solution": "Modify the PCI resume function to ensure that all device states, including power and configuration registers, are correctly restored."}, {"cause": "The ACPI subsystem does not correctly re-enable the PCI interrupts for the network device after resume.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Ensure that the ACPI resume path correctly re-enables PCI interrupts for all devices, particularly the network interface."}, {"cause": "The network stack does not correctly handle the transition from a suspended state, leading to the network interface being marked as not ready.", "code_file": "net/core/dev.c", "fix_solution": "Update the network device resume logic to ensure that the link state is correctly checked and updated after a resume from suspend."}], "input_tokens": 674, "output_tokens": 307}
{"id": "8569", "paths": ["drivers/input/serio/i8042-x86ia64io.h"], "predicts": ["drivers/input/mouse/psmouse-base.c", "drivers/input/mouse/synaptics.c", "drivers/input/input.c", "include/linux/input.h"], "input_tokens_sum": 111246, "output_tokens_sum": 1695, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18\nDistribution: gentoo\nHardware Environment: amd64\nProblem Description: \ni can't find a touchpad in /proc/bus/input/devices since kernel 2.6.18 anymore.\ni've tried kernel 2.6.19 to 2.6.22-rc3 (suspend2, gentoo & vanilla).\nevdev and psmouse modules are loaded. i don't think it's a configuration issue,\nsince recent livecd distros work neither. a clue?\n\noutput of /proc/bus/input/devices on kernel 2.6.18:\nI: Bus=0011 Vendor=0001 Product=0001 Version=ab41\nN: Name=\"AT Translated Set 2 keyboard\"\nP: Phys=isa0060/serio0/input0\nS: Sysfs=/class/input/input0\nH: Handlers=kbd\nB: EV=120013\nB: KEY=402000000 3802078f840d001 feffffdfffefffff fffffffffffffffe\nB: MSC=10\nB: LED=7\n\nI: Bus=0011 Vendor=0002 Product=0007 Version=0000\nN: Name=\"SynPS/2 Synaptics TouchPad\"\nP: Phys=isa0060/serio1/input0\nS: Sysfs=/class/input/input1\nH: Handlers=mouse0\nB: EV=b\nB: KEY=6420 70000 0 0 0 0\nB: ABS=11000003\n\n\noutput of /proc/bus/input/devices on kernel 2.6.21:\nI: Bus", "title": "no touchpad since kernel 2.6.18", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/input/mouse/synaptics.c", "drivers/input/serio/serio.c", "drivers/input/input.c", "drivers/input/mouse/psmouse-base.c"], "causes": [{"cause": "The Synaptics touchpad driver may not be properly initialized or recognized in newer kernel versions due to changes in the serio or input subsystem.", "code_file": "drivers/input/mouse/synaptics.c", "fix_solution": "Ensure that the initialization sequence for the Synaptics touchpad is correctly implemented and compatible with the changes in the serio subsystem. This may involve adding or modifying the detection logic to ensure the touchpad is recognized."}, {"cause": "Changes in the serio subsystem might have affected the detection of the touchpad device.", "code_file": "drivers/input/serio/serio.c", "fix_solution": "Review and update the serio port handling to ensure that all connected devices, including the Synaptics touchpad, are correctly detected and initialized."}, {"cause": "The input device registration process might have been altered, affecting the touchpad's registration.", "code_file": "drivers/input/input.c", "fix_solution": "Check the input device registration logic to ensure that all devices, particularly the Synaptics touchpad, are properly registered and appear in /proc/bus/input/devices."}, {"cause": "A regression in the psmouse driver could be preventing the touchpad from being recognized.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Investigate recent changes in the psmouse driver and ensure that the Synaptics protocol is correctly supported and initialized."}], "input_tokens": 720, "output_tokens": 333}
{"id": "8559", "paths": ["drivers/acpi/sbs.c"], "predicts": ["drivers/acpi/sbs.c", "drivers/acpi/battery.c", "drivers/acpi/i2c_ec.c", "drivers/acpi/ec.c", "include/acpi/acpi.h", "include/linux/i2c-dev.h"], "input_tokens_sum": 111003, "output_tokens_sum": 1617, "description": "Most recent kernel where this bug did *NOT* occur: none\nDistribution: Fedora 6\nHardware Environment: Kontron Revolution Weatherproof Laptop\nSoftware Environment: Stock standard environment.  All modules are Fedora\ndistribution. Updated to latest.\nProblem Description: No samrtbattery entry in /proc/acpi/battery\n\nHave a specialised weatherproof laptop with a smartbattery running FC6\nlatest kernel. I cannot get battey monitoring going. Have loaded\nmodules i2c_ec and sbs with out any errors.\n\nlog/messages indicate that the EC driver loads with\nACPI: EC HC smbus [SMB1]\n\nThere is nothing from the sbs module though it is loaded and\nthe /proc/acpi/battery directory is empty.\n\nThe smartbattery can be recognized. If I run the following command ...\n\n   smartbattery 1             (1 is to specify the i2c dev,\n                            needs i2c-dev module loaded)\n\nthen I get battery status, which behaves properly (changes if I unplug\nAC etc). It shows Battery name, status , charge or discharge c", "title": "no smartbattery status on Laptop", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/sbs.c", "drivers/acpi/ec.c", "drivers/acpi/battery.c"], "causes": [{"cause": "The sbs module is not properly initializing or registering with the ACPI subsystem, leading to the absence of smartbattery entries in /proc/acpi/battery.", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Ensure that the sbs module properly registers with the ACPI subsystem by adding appropriate initialization code and checking for successful registration."}, {"cause": "The i2c_ec module might not be correctly interfacing with the smart battery, preventing the sbs module from accessing battery information.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Verify and correct the communication between the i2c_ec module and the smart battery by ensuring proper SMBus transactions and error handling."}, {"cause": "The ACPI battery subsystem might not be correctly creating the battery entries in /proc/acpi/battery due to missing or incorrect ACPI table parsing.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add or correct the parsing logic for ACPI tables related to the battery to ensure that the battery entries are created in /proc/acpi/battery."}, {"cause": "The smart battery might require additional configuration or parameters that are not being set by default in the sbs module.", "code_file": "drivers/acpi/sbs.c", "fix_solution": "Add support for additional configuration parameters or options in the sbs module to ensure compatibility with the smart battery."}], "input_tokens": 579, "output_tokens": 330}
{"id": "8535", "paths": ["drivers/usb/host/ehci-sched.c"], "predicts": ["drivers/hid/usbhid/hid-core.c", "drivers/usb/core/hub.c", "drivers/usb/core/hcd.c", "arch/i386/kernel/irq.c", "include/linux/hid.h", "include/asm-i386/irq.h"], "input_tokens_sum": 118112, "output_tokens_sum": 1416, "description": "Most recent kernel where this bug did *NOT* occur: pre 2.6.21 mm kernels, non-mm\n2.6.22-rc2\nDistribution: Fedora Devel\nHardware Environment: EHCI input on external powered hub with CK804 mainboard\nSoftware Environment: Nothing specific\nProblem Description:\n\nAfter a few hours of activity 2.6.22-rc1-mm1 and 2.6.22-rc2-mm1 will lose USB\nHID INPUT (keyboard or mice with no priority), then the system will freeze\n\nIf the mouse/tackball is lost first switching to the console and moving the ball\nwill output random text. Restarting gpm will rescue the mouse (but the system\nwill lock up soon after anyway)\n\nSame system with similar config works fine with mainline or older mm kernels\n\nLast trace capture in logs before lockup:\n\nKernel:\ndrivers/hid/usbhid/hid-core.c: input irq status -75 received\n\nXorg:\nProcXCloseDevice to close or not ?\nProcXCloseDevice to close or not ?\n(II) nek4k-enhanced-usb-0000:00:02.1-8.1/input1: Off\n(II) track-expl-usb-0000:00:02.1-8.3/input0: Off\n\n\nSteps to reproduce:\nJust ", "title": "USB input death then system freeze", "Kernel Version": "2.6.23-rc1", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/hid/usbhid/hid-core.c", "drivers/usb/host/ehci-hcd.c", "drivers/usb/core/hub.c", "mm/page_alloc.c"], "causes": [{"cause": "The USB HID input devices are experiencing an interrupt request (IRQ) error, indicated by the status -75, which corresponds to EOVERFLOW. This suggests that the USB controller is receiving more data than it can handle, leading to input loss and eventual system freeze.", "code_file": "drivers/hid/usbhid/hid-core.c", "fix_solution": "Implement a check for IRQ status -75 and handle the overflow condition gracefully by resetting the USB endpoint or reinitializing the device to prevent system freeze."}, {"cause": "The EHCI driver may not be handling certain edge cases correctly when dealing with external powered hubs, leading to data overflow or mismanagement of USB transactions.", "code_file": "drivers/usb/host/ehci-hcd.c", "fix_solution": "Add additional error handling and recovery mechanisms for transaction errors and overflows in the EHCI driver to ensure robust communication with external hubs."}, {"cause": "The USB input subsystem might not be correctly managing power states or handling suspend/resume cycles, especially with external hubs, leading to device disconnection.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Enhance the power management logic to ensure that devices connected through external hubs are correctly managed during power state transitions."}, {"cause": "There might be a regression in the mm patches applied to the kernel, affecting the USB subsystem's stability and causing unexpected behavior.", "code_file": "mm/page_alloc.c", "fix_solution": "Review and revert specific mm patches that could be affecting USB subsystem stability, focusing on memory allocation and management changes."}], "input_tokens": 639, "output_tokens": 364}
{"id": "8450", "paths": ["include/net/ip6_fib.h"], "predicts": ["net/ipv6/exthdrs.c", "net/ipv6/ip6_input.c", "include/net/ipv6.h", "include/net/ip6_route.h", "net/ipv6/protocol.c", "net/ipv6/raw.c", "include/net/ip6_tunnel.h", "include/linux/netfilter_ipv6.h"], "input_tokens_sum": 115790, "output_tokens_sum": 1601, "description": "Most recent kernel where this bug did *NOT* occur: had this since 2.6.20, didnt\ntest earlier versions\nDistribution: gentoo\nHardware Environment: p3\nSoftware Environment: gcc 4.1.2\nProblem Description:\n\nrunning ip6sic with the following seed\n\nip6sic -i lo -d ::1 -p 2000 -r 32321\n\ncauses this oops\n\n[   69.293000] Oops: 0000 [#1]\n[   69.293000] PREEMPT \n[   69.293000] Modules linked in:\n[   69.293000] CPU:    0\n[   69.293000] EIP:    0060:[<c0548b76>]    Not tainted VLI\n[   69.293000] EFLAGS: 00010282   (2.6.21-ga989705c #7)\n[   69.293000] EIP is at ipv6_hop_jumbo+0x26/0x180\n[   69.293000] eax: 00000000   ebx: ce61bc08   ecx: 00000001   edx: 00000103\n[   69.293000] esi: ce750166   edi: 000000fd   ebp: c0773ed8   esp: c0773ec0\n[   69.293000] ds: 007b   es: 007b   fs: 0000  gs: 0033  ss: 0068\n[   69.293000] Process ip6sic (pid: 4607, ti=c0773000 task=cf332070\ntask.ti=cf002000)\n[   69.293000] Stack: c06c4ccc 000000fb c0773ef8 00000246 c071ae9c 0000002a\nc0773f08 c054837f \n[   69.293000]      ", "title": "ip6sic causes bug during interrupt handling", "Kernel Version": "2.6.21", "Product": "Networking", "Component": "IPV6", "Hardware": "i386 Linux", "reranked_files": ["net/ipv6/exthdrs.c", "net/ipv6/ip6_input.c"], "causes": [{"cause": "The function ipv6_hop_jumbo is not handling certain edge cases correctly, leading to an invalid memory access during interrupt handling.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Add additional checks in the ipv6_hop_jumbo function to ensure that the memory access is valid and handle any potential edge cases that could lead to an invalid access."}, {"cause": "The input parameters to the ipv6_hop_jumbo function are not being validated properly, which can lead to unexpected behavior and a kernel oops.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Implement input validation for the parameters passed to ipv6_hop_jumbo to ensure they are within expected ranges and formats."}, {"cause": "A race condition in the handling of IPv6 packets with jumbo payloads, causing inconsistent state during interrupt handling.", "code_file": "net/ipv6/ip6_input.c", "fix_solution": "Introduce locking mechanisms or atomic operations to ensure that the state is consistent when handling IPv6 packets with jumbo payloads."}, {"cause": "Improper handling of IPv6 extension headers, leading to incorrect parsing and processing of packets.", "code_file": "net/ipv6/exthdrs.c", "fix_solution": "Review and correct the logic for parsing IPv6 extension headers to ensure that all headers are processed correctly and in the right order."}], "input_tokens": 797, "output_tokens": 332}
{"id": "8381", "paths": ["drivers/net/forcedeth.c"], "predicts": ["drivers/net/forcedeth.c", "kernel/power/swsusp.c", "net/core/ethtool.c", "include/linux/ethtool.h"], "input_tokens_sum": 112906, "output_tokens_sum": 1315, "description": "Distribution: debian unstable\nHardware Environment: Athlon 3000+ on a K8N-E-Deluxe\nSoftware Environment: Linux 2.6.21-rc5\nProblem Description: The integrated NIC of my motherboard supports wol propertly\nwhen I hald my computer. But when I use suspend to ram or suspend to disk, wol\ndoesn't work anymore. \n\nSteps to reproduce:\n\nSteps that works :\n\n1/ power on the computer\n2/ boot linux\n3/ execute \"ethtool -s eth0 wol g\"\n4/ halt\n5/ send a magic packet with wakeonlan from another computer\n\nSteps that doesn't work :\n\n1/ power on the computer\n2/ boot linux\n3/ execute \"ethtool -s eth0 wol g\"\n4/ cat mem > /sys/power/state\n5/ send a magic packet with wakeonlan from another computer\n\nSame thing with s2disk.\n\nI'd like to use wol + suspend to ram.\n\n#lspci\nserver:/home/matthieu# lspci\n00:00.0 Host bridge: nVidia Corporation nForce3 250Gb Host Bridge (rev a1)\n00:01.0 ISA bridge: nVidia Corporation nForce3 250Gb LPC Bridge (rev a2)\n00:01.1 SMBus: nVidia Corporation nForce 250Gb PCI System Management (", "title": "(net forcedeth) doesn't wol on suspend", "Kernel Version": "2.6.21", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/nvidia/forcedeth.c"], "causes": [{"cause": "The forcedeth driver does not properly handle wake-on-LAN (WoL) settings during suspend to RAM or disk.", "code_file": "drivers/net/ethernet/nvidia/forcedeth.c", "fix_solution": "Ensure that the WoL settings are saved before suspend and restored after resume by adding appropriate suspend and resume callbacks in the forcedeth driver."}, {"cause": "The network interface is not being properly re-initialized with WoL settings after resuming from suspend.", "code_file": "drivers/net/ethernet/nvidia/forcedeth.c", "fix_solution": "Modify the resume function to explicitly re-enable WoL settings using ethtool operations after the device is brought back up."}, {"cause": "The power management code in the forcedeth driver does not account for WoL settings during the suspend process.", "code_file": "drivers/net/ethernet/nvidia/forcedeth.c", "fix_solution": "Add logic in the suspend function to ensure that WoL settings are preserved and properly configured before the device enters a low power state."}], "input_tokens": 649, "output_tokens": 249}
{"id": "8374", "paths": ["drivers/acpi/thermal.c"], "predicts": ["drivers/acpi/fan.c", "drivers/acpi/thermal.c", "drivers/acpi/power.c", "drivers/acpi/ec.c", "arch/i386/kernel/acpi/processor.c", "include/acpi/acpi.h", "include/acpi/processor.h", "arch/i386/pci/acpi.c", "arch/x86_64/kernel/acpi/sleep.c", "kernel/power/pm.c"], "input_tokens_sum": 112470, "output_tokens_sum": 1515, "description": "Most recent kernel where this bug did *NOT* occur: None\nDistribution: Debian 4.0 - Etch (Final)\nHardware Environment: HP/Compaq nc6000 (laptop), Pentium M 1.6 GHz, Intel ICH4,\nATI Radeon Mobility 9600, 512 MB RAM, newest available BIOS\nSoftware Environment: Debian Etch, no self-compiled tools but the kernel\nProblem Description: This is gonna be quite a long but hopefully equally useful\ndescription:\nShortly after I bought the laptop and installed Linux on it, I noticed that it\nsometimes turned itself off while I was away and did not turn off the computer.\nIt took me quite a while to figure out what was wrong until the laptop shut down\nby itself while I was using it.\nThe kernel printed a message that a ACPI critical trip point was reached and\nshut the system down to prevent damage. After I knew there was a temperature\nproblem I wrote a script to log the temperatures and after it happend again I\nsaw that the temperatures suddenly started to rise from about 40", "title": "ACPI: Unable to turn cooling device [c146aec8] 'on'", "Kernel Version": "2.6.21", "Product": "ACPI", "Component": "Power-Fan", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/thermal.c", "drivers/acpi/processor_thermal.c", "drivers/acpi/acpica/evrgnini.c", "drivers/acpi/thermal_zone.c"], "causes": [{"cause": "The ACPI cooling device is not being properly initialized or controlled, leading to failure in activating the cooling mechanism.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Ensure that the ACPI thermal zone initialization properly registers and enables the cooling device by checking the return values of ACPI method evaluations and adding error handling to retry or log detailed errors."}, {"cause": "The ACPI critical trip point is being reached due to incorrect thermal zone configuration or missing cooling device activation logic.", "code_file": "drivers/acpi/processor_thermal.c", "fix_solution": "Add logic to verify and correct the thermal zone configuration during initialization, ensuring that the cooling device is activated before reaching critical temperatures."}, {"cause": "The ACPI DSDT (Differentiated System Description Table) might have incorrect or unsupported methods for controlling the cooling device.", "code_file": "drivers/acpi/acpica/evrgnini.c", "fix_solution": "Implement additional checks and fallbacks for unsupported or failing ACPI methods related to cooling devices, possibly by adding custom handlers for known problematic DSDT entries."}, {"cause": "The ACPI subsystem might not be correctly interpreting or applying the thermal policies defined by the firmware.", "code_file": "drivers/acpi/thermal_zone.c", "fix_solution": "Review and update the thermal policy application logic to ensure it aligns with the firmware's expectations, adding debug logs to trace policy application steps."}], "input_tokens": 593, "output_tokens": 336}
{"id": "8269", "paths": ["drivers/pnp/pnpacpi/core.c"], "predicts": ["drivers/pnp/core.c", "drivers/pnp/manager.c", "drivers/acpi/power.c", "drivers/acpi/processor_core.c", "kernel/power/pm.c", "arch/i386/power/suspend.c", "kernel/power/swsusp.c", "net/irda/irda_device.c", "include/acpi/acpi.h", "include/acpi/acpi_bus.h"], "input_tokens_sum": 111063, "output_tokens_sum": 1546, "description": "Most recent kernel where this bug did *NOT* occur: did occur since S3 works on P35\nDistribution: Gentoo 2006.1\nHardware Environment: Samsung P35 XVM 1600 III\nSoftware Environment:\nProblem Description:\nAfter doing the 2nd resume cycle after S3 dmesg shows this:\n\n1st S3:\npnp: Device 00:08 disabled.\npnp: Device 00:06 disabled.\n1st Resume:\nBoth gets activated.\n\n2nd S3:\npnp: Device 00:08 disabled.\npnp: Device 00:06 disabled.\n2nd Resume:\npnp: Evaluate _CRS failed\npnp: Failed to activate device 00:06.\npnp: Evaluate _CRS failed\npnp: Failed to activate device 00:08.\npnp: Device 00:09 does not support activation.\npnp: Failed to activate device 00:0a.\n\nFor every S3 & Resume again the last messages are there again.\nAlso my irda (nsc_ircc) does not work anymore after second resume as the chip\ntype is wrong now, at first boot its all ok.\n\nSteps to reproduce:\n\nTake a P35 and do two S3 & Resume Cycles. Happens all the time.\n\nkind regards\n\nTorsten", "title": "pnp: Failed to activate device 00:0a - Samsung P35 XVM 1600 III", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/pnpacpi/core.c", "drivers/pnp/manager.c", "drivers/net/irda/nsc-ircc.c"], "causes": [{"cause": "The ACPI subsystem fails to correctly evaluate the _CRS (Current Resource Settings) method for certain PNP devices after the second resume from S3, leading to device activation failures.", "code_file": "drivers/acpi/pnpacpi/core.c", "fix_solution": "Ensure that the ACPI _CRS method is correctly re-evaluated and resources are properly reallocated during the resume process. This may involve adding additional checks or reinitializing certain ACPI structures after resume."}, {"cause": "The PNP subsystem does not correctly handle the reactivation of devices after multiple suspend/resume cycles, possibly due to improper state management or resource allocation.", "code_file": "drivers/pnp/manager.c", "fix_solution": "Modify the PNP manager to ensure that device states are correctly saved and restored across suspend/resume cycles, and that resources are properly reallocated during device reactivation."}, {"cause": "The irda (nsc_ircc) driver fails to correctly reinitialize the hardware after the second resume, possibly due to incorrect handling of hardware state or configuration.", "code_file": "drivers/net/irda/nsc-ircc.c", "fix_solution": "Add additional initialization steps in the irda driver to ensure that the hardware is correctly configured and operational after resume, including resetting the chip type if necessary."}], "input_tokens": 647, "output_tokens": 304}
{"id": "8262", "paths": ["drivers/pcmcia/cs.c"], "predicts": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/pcmcia_resource.c", "drivers/pcmcia/rsrc_mgr.c", "include/pcmcia/cs.h", "include/pcmcia/ss.h", "Documentation/pcmcia/crc32hash.c"], "input_tokens_sum": 112813, "output_tokens_sum": 1635, "description": "Most recent kernel where this bug did *NOT* occur: I don't know any.\nDistribution: Debian Etch\nHardware Environment: Thinkpad T41p\nSoftware Environment: pccardctl eject\nProblem Description: \n\nThe command \"pccardctl eject\" gives the following warning:\n\nkernel: PCMCIA: socket f793c428: *** DANGER *** unable to remove socket power\n\nIt seems that this warning is wrong, because the pcmcia-card is offline. (LED \nis off.)\n\nSteps to reproduce:\nInserting a pcmcia-card (I use the merlin u740.) and after this use \"pccardctl \neject\". If I remove the card without pccardctl eject I get no warning from the \nkernel.\n\ncat /proc/iomem  | grep -C1 yenta\nb0000000-b0000fff : 0000:02:00.0\n  b0000000-b0000fff : yenta_socket\nb1000000-b1000fff : 0000:02:00.1\n  b1000000-b1000fff : yenta_socket\n\nlspci -vv  | grep -A14 Card\n02:00.0 CardBus bridge: Texas Instruments PCI4520 PC card Cardbus Controller \n(rev 01)\n        Subsystem: IBM Unknown device 0552\n        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGAS", "title": "PCMCIA: socket *** DANGER *** unable to remove socket power", "Kernel Version": "2.6.20", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/pcmcia_core.c", "drivers/pcmcia/cs.c"], "causes": [{"cause": "The PCMCIA socket power removal logic may not correctly handle the power state transition, leading to a false warning.", "code_file": "drivers/pcmcia/yenta_socket.c", "fix_solution": "Review and update the power state transition logic to ensure it accurately reflects the actual power state of the socket."}, {"cause": "The warning message may be triggered due to incorrect handling of the card removal process in the PCMCIA subsystem.", "code_file": "drivers/pcmcia/pcmcia_core.c", "fix_solution": "Add additional checks to verify the card's power state before issuing the warning message during the eject process."}, {"cause": "The PCMCIA subsystem might not correctly update the socket's status after a card is ejected, leading to a misleading warning.", "code_file": "drivers/pcmcia/cs.c", "fix_solution": "Ensure the socket status is properly updated after a card is ejected to prevent false warnings."}], "input_tokens": 668, "output_tokens": 227}
{"id": "8110", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/thermal.c", "drivers/acpi/ec.c", "drivers/acpi/bus.c", "arch/i386/kernel/acpi/processor.c", "include/acpi/acpi_drivers.h", "include/linux/acpi.h", "arch/i386/kernel/irq.c", "arch/i386/kernel/time.c", "drivers/acpi/system.c", "kernel/printk.c"], "input_tokens_sum": 110636, "output_tokens_sum": 1972, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.2\nDistribution: Debian/SID\nHardware Environment: HP/Compaq nx8220 (and nc6000, nc8000)\nSoftware Environment:\nProblem Description:\n\nSince I'm using kernel 2.6.20, on some fresh start-ups ACPI reports insanely\nhigh temperatures of some thousand degrees C for thermal zone TZ3. I don't\nexactly know what this sensor does - TZ1 is CPU temperature, TZ2 graphics chip,\nTZ4 shows speed of CPU fan in % - I guess TZ3 shows some kind of case\ntemperature. Normal values for TZ3 are about 32C.\n\nAnother user on some forum has the same problem using a nc6000, yet another one\nuses a nc8000 and kernel 2.6.19 (which I personally never installed/used). So I\nguess the problem began with 2.6.19.\n\nAs I'm using powersaved, the system immediately shuts down on boot time, when\npowersaved starts. Messages in syslog are sth. like:\n\nACPI: Critical trip point\nCritical temperature reached (3264 C), shutting down.\n\nThe temperature shown is always different, most", "title": "insanely high temperature on bootup (e.g. 3517 C) - HP/Compaq nx8220, nc6000, nc8000 - 2.6.19 regression", "Kernel Version": "2.6.19", "Product": "ACPI", "Component": "EC", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/thermal.c", "drivers/acpi/ec.c", "drivers/acpi/thermal_zone.c", "drivers/acpi/hardware.c"], "causes": [{"cause": "Incorrect reading or interpretation of ACPI thermal zone data leading to erroneous temperature values.", "code_file": "drivers/acpi/thermal.c", "fix_solution": "Add validation checks for temperature readings to ensure they fall within a reasonable range before processing."}, {"cause": "Regression in the ACPI EC (Embedded Controller) driver causing incorrect data to be read from thermal sensors.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Review and revert changes made to the EC driver between versions 2.6.18.2 and 2.6.19 that could affect sensor data reading."}, {"cause": "Improper initialization of ACPI thermal zones during boot, leading to invalid temperature readings.", "code_file": "drivers/acpi/thermal_zone.c", "fix_solution": "Ensure thermal zones are properly initialized and calibrated during the ACPI setup phase."}, {"cause": "Faulty interaction between the ACPI subsystem and the specific hardware models (HP/Compaq nx8220, nc6000, nc8000).", "code_file": "drivers/acpi/hardware.c", "fix_solution": "Introduce model-specific quirks or workarounds to handle known issues with these hardware models."}], "input_tokens": 641, "output_tokens": 287}
{"id": "7950", "paths": ["drivers/net/forcedeth.c"], "predicts": ["drivers/net/forcedeth.c", "drivers/net/mii.c", "drivers/net/phy/phy.c", "net/core/dev.c", "net/core/ethtool.c", "net/ipv4/protocol.c", "arch/i386/kernel/irq.c", "drivers/pci/pci.c", "include/linux/netdevice.h", "include/linux/netfilter.h"], "input_tokens_sum": 106449, "output_tokens_sum": 1336, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.6\n\nDistribution: CentOS 4.4\n\nHardware Environment:\n\nASUS M2N-E (nForce 570 chipset)\nAMD64 X2 Dual Core 5200+\nBuilt in nic hooked up to a HP ProCurve 2428 gigabit switch.\n\nSoftware Environment:\nUsing a plain kernel without any distro patches.\nUsing forcedeth network driver.\nNo nVidia binary drivers what so ever.\nIP tables is turned off.\n\nProblem Description:\nAt random all network traffic just stops without apparent reason.\nRunning tcpdump shows outgoing packets but no incoming packets.\nIfconfig does not show any rx or tx errors.\nNo error messages show up in dmesg.\nTransfering data at high speed triggers the problem almost right away.\nWhen running an interactive session in ssh it tends to happen after 5-10 \nminutes.\nKernel 2.6.19.2 has the same problem as well.\n\nDoing a ifdown eth0 + ifup eth0 makes things work again for a while, but sooner \nor later it happens again.\nWhen hooking it up to a 100 megabit switch it works perfectly.\n", "title": "Network traffic stops inexplicably when running at gigabit speed.", "Kernel Version": "2.6.20", "Product": "Networking", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/nvidia/forcedeth.c", "net/core/dev.c", "drivers/pci/quirks.c", "drivers/net/phy/phy.c"], "causes": [{"cause": "The forcedeth driver may have issues handling gigabit speeds due to incorrect handling of buffer sizes or descriptors.", "code_file": "drivers/net/ethernet/nvidia/forcedeth.c", "fix_solution": "Review and adjust buffer sizes and descriptor handling in the forcedeth driver to ensure compatibility with gigabit speeds."}, {"cause": "The network stack may not be properly handling high-speed data transfers, leading to dropped packets or buffer overruns.", "code_file": "net/core/dev.c", "fix_solution": "Implement additional checks and handling for high-speed data transfers to prevent buffer overruns and ensure packet integrity."}, {"cause": "The nForce chipset may have specific quirks that are not properly addressed in the current driver implementation.", "code_file": "drivers/pci/quirks.c", "fix_solution": "Add chipset-specific quirks and workarounds to ensure stable operation at gigabit speeds."}, {"cause": "The network interface may not be correctly negotiating gigabit speeds with the switch, leading to connectivity issues.", "code_file": "drivers/net/phy/phy.c", "fix_solution": "Enhance the PHY negotiation logic to ensure proper speed and duplex settings are established with the switch."}], "input_tokens": 602, "output_tokens": 285}
{"id": "7942", "paths": ["drivers/ieee1394/nodemgr.c"], "predicts": ["drivers/ieee1394/ohci1394.c", "drivers/ieee1394/ohci1394.h", "drivers/ieee1394/hosts.c", "drivers/ieee1394/ieee1394_core.c", "drivers/ieee1394/nodemgr.c"], "input_tokens_sum": 113242, "output_tokens_sum": 1859, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.19\nDistribution: Fedora Core 5\nHardware Environment: 4-processor IWill H8502 (2.8GHz single core Opterons) w/\n10GB of RAM installed 4/2/2/2 across 4 nodes.\nSoftware Environment:\n\nThis is from the working kernel.  All have been built with the same versions of\nsoftware:\n\nLinux bubba.tuc.us.ray.com 2.6.19_00 #2 SMP PREEMPT Mon Feb 5 15:20:05 MST 2007\nx86_64 x86_64 x86_64 GNU/Linux\n\nGnu C                  4.1.1\nGnu make               3.80\nbinutils               2.16.91.0.6\nutil-linux             2.13-pre6\nmount                  2.13-pre6\nmodule-init-tools      3.2-pre9\ne2fsprogs              1.38\nquota-tools            3.13.\nPPP                    2.4.3\nLinux C Library        > libc.2.4\nDynamic linker (ldd)   2.4\nProcps                 3.2.6\nNet-tools              1.60\nKbd                    1.12\nSh-utils               5.93\nudev                   084\nModules Loaded         raw1394 ohci1394 ieee1394 tg3\n\n\nProblem Description:\n\nLooks lik", "title": "ohci1394 module broken and cannot be removed", "Kernel Version": "2.6.20", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/firewire/ohci.c", "drivers/firewire/core-transaction.c", "drivers/firewire/core-cdev.c", "drivers/firewire/core-device.c"], "causes": [{"cause": "The ohci1394 module may have a reference count issue preventing it from being removed.", "code_file": "drivers/firewire/ohci.c", "fix_solution": "Ensure that the module reference count is decremented properly when the module is unloaded."}, {"cause": "There might be a problem with the cleanup function not releasing resources properly.", "code_file": "drivers/firewire/core-transaction.c", "fix_solution": "Review and correct the cleanup function to ensure all allocated resources are freed when the module is removed."}, {"cause": "The module might be holding onto a lock that is not released during removal.", "code_file": "drivers/firewire/core-cdev.c", "fix_solution": "Check for any locks held by the module and ensure they are released in the module exit function."}, {"cause": "There could be a dependency issue with other loaded modules preventing ohci1394 from being removed.", "code_file": "drivers/firewire/core-device.c", "fix_solution": "Verify module dependencies and ensure that ohci1394 can be safely removed without affecting other modules."}], "input_tokens": 680, "output_tokens": 257}
{"id": "7838", "paths": ["drivers/scsi/sd.c"], "predicts": ["drivers/scsi/libata-core.c", "drivers/scsi/ata_piix.c", "drivers/scsi/libata-scsi.c", "include/linux/libata.h", "arch/i386/kernel/reboot.c", "kernel/power/disk.c", "kernel/power/poweroff.c"], "input_tokens_sum": 80739, "output_tokens_sum": 2273, "description": "Problem Description:\n\nThe Linux kernel does not handle device_shutdown() for the libata buses.  The\nbus has no .shutdown method.  The devices have no .shutdown handlers.\n\nTherefore, device caches are not flushed prior to a system restart, system sleep\nor system powerdown, and device heads are not unloaded before a system sleep or\npowerdown, be it a transition to ACPI S3, S4 or S5 state, APM sleep/poweroff, or\nnon-PM-poweroff (the one that just asks the user to powerdown the machine).\n\nThis causes:\n  * Potential data loss if userspace does not manage to flush caches using the\npassthrough\n  * The need for the userspace halt(8) utility to try to avoid the above\nmentioned data loss (incidently, the lack of a proper high-level kernel\ninterface to do device cache flushes or device head unloads also means the\nuserspace code to do it is disgusting)\n  * Uneeded device wear (disk head assembly) if userspace or ACPI BIOS firmware\ndoes not unload heads prior to power off.\n\nThe disk's \"head auto-pa", "title": "Missing important feature: libata bus shutdown and device shutdown", "Kernel Version": "2.6.20", "Product": "IO/Storage", "Component": "Serial ATA", "Hardware": "i386 Linux", "reranked_files": ["drivers/ata/libata-core.c", "drivers/ata/libata-scsi.c", "include/linux/libata.h"], "causes": [{"cause": "The libata subsystem lacks a .shutdown method for the bus, preventing proper device shutdown procedures.", "code_file": "drivers/ata/libata-core.c", "fix_solution": "Implement a .shutdown method in the libata bus structure to ensure device caches are flushed and heads are unloaded during shutdown."}, {"cause": "Individual ATA devices do not have .shutdown handlers, leading to potential data loss and device wear.", "code_file": "drivers/ata/libata-scsi.c", "fix_solution": "Add .shutdown handlers for ATA devices to perform necessary cache flushes and head unloads during system shutdown or sleep transitions."}, {"cause": "The lack of a high-level kernel interface for device cache flushes and head unloads forces userspace utilities to handle these tasks inadequately.", "code_file": "include/linux/libata.h", "fix_solution": "Define a high-level interface in the kernel for cache flushes and head unloads, allowing consistent and reliable device shutdown operations."}], "input_tokens": 600, "output_tokens": 228}
{"id": "7800", "paths": ["drivers/ieee1394/sbp2.c"], "predicts": ["drivers/ieee1394/sbp2.c", "drivers/ieee1394/ieee1394_core.c", "include/linux/cdrom.h", "block/ioctl.c", "block/scsi_ioctl.c"], "input_tokens_sum": 111526, "output_tokens_sum": 1575, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18 (to my best knowledge)\nDistribution: Archlinux\nHardware Environment: 1 IDE disk, 1 IDE CD-RW (plextor), 1 IEEE1394 DVD-RW\nSoftware Environment: Using udev, 2.6.19.1 with modules sg, sbp2, sr_mod, ieee1394 \nProblem Description: \n\nMy DVD drive is being detected as a CD-ROM drive and seems to only be able to\nplay CDs. I can produce the error when I have the device plugged in via firewire\nand modprobe sbp2. This creates (using udev rules) sr0, sg0 and cdrom1 (cdrom0\nis IDE CD-RW) nodes in /dev. Udev is not getting the message that it is a DVD.\nHowever, even if I manually link /dev/dvd (for the DVD players) to /dev/sr0, I\nget the following errors:\n\nJan  9 19:01:27 neptune end_request: I/O error, dev sr0, sector 15557132\nJan  9 19:01:27 neptune end_request: I/O error, dev sr0, sector 15557128\n\nThis has started happening since I upgraded to 2.6.19. \n\nJan  9 18:54:56 neptune ieee1394: sbp2: Logged out of SBP-2 device\nJan  9 18:55:04 nep", "title": "Unable to read DVDs on external IEEE1394 DVD-RW", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/firewire/sbp2.c", "drivers/scsi/sr.c", "drivers/udev/udev.c", "drivers/firewire/core-transaction.c"], "causes": [{"cause": "The sbp2 driver may not be correctly identifying the device type, leading to misclassification of the DVD-RW as a CD-ROM.", "code_file": "drivers/firewire/sbp2.c", "fix_solution": "Modify the device identification logic to correctly recognize and classify DVD-RW devices connected via IEEE1394."}, {"cause": "The sr_mod module might not be handling the SCSI commands correctly for DVD media, causing I/O errors.", "code_file": "drivers/scsi/sr.c", "fix_solution": "Ensure that the SCSI command set for DVD media is correctly implemented and that the module can handle DVD-specific commands."}, {"cause": "The udev rules might not be correctly interpreting the device capabilities, leading to incorrect device node creation.", "code_file": "drivers/udev/udev.c", "fix_solution": "Update the udev rules to correctly interpret and create device nodes for DVD-RW devices connected via IEEE1394."}, {"cause": "The ieee1394 subsystem might not be correctly initializing the device, leading to improper communication with the DVD-RW.", "code_file": "drivers/firewire/core-transaction.c", "fix_solution": "Review and update the initialization sequence for IEEE1394 devices to ensure proper setup and communication with DVD-RW drives."}], "input_tokens": 688, "output_tokens": 305}
{"id": "7657", "paths": ["net/ieee80211/softmac/ieee80211softmac_assoc.c"], "predicts": ["net/ieee80211/softmac/ieee80211softmac_scan.c", "net/ieee80211/softmac/ieee80211softmac_priv.h", "net/ieee80211/softmac/ieee80211softmac_module.c", "drivers/net/wireless/bcm43xx/bcm43xx_main.c", "drivers/net/wireless/bcm43xx/bcm43xx_debugfs.c"], "input_tokens_sum": 108499, "output_tokens_sum": 1746, "description": "Most recent kernel where this bug did *NOT* occur: 2.6.18.x\nDistribution: Ubuntu Dapper\n\nHardware Environment: \nModel: Compaq r4000\nCPU: AMD Athlon64 3200+\nWireless Controller: BCM4306\n\nlspci:\n0000:00:00.0 Host bridge: ATI Technologies Inc RS480 Host Bridge\n0000:00:01.0 PCI bridge: ATI Technologies Inc: Unknown device 5a3f\n0000:00:04.0 PCI bridge: ATI Technologies Inc: Unknown device 5a36\n0000:00:13.0 USB Controller: ATI Technologies Inc IXP SB400 USB Host Controller\n0000:00:13.1 USB Controller: ATI Technologies Inc IXP SB400 USB Host Controller\n0000:00:13.2 USB Controller: ATI Technologies Inc IXP SB400 USB2 Host\nController0000:00:14.0 SMBus: ATI Technologies Inc IXP SB400 SMBus Controller\n(rev 10)\n0000:00:14.1 IDE interface: ATI Technologies Inc Standard Dual Channel PCI IDE\nController ATI\n0000:00:14.3 ISA bridge: ATI Technologies Inc IXP SB400 PCI-ISA Bridge\n0000:00:14.4 PCI bridge: ATI Technologies Inc IXP SB400 PCI-PCI Bridge\n0000:00:14.5 Multimedia audio controller: ATI Technolog", "title": "BUG: NULL pointer dereference in ieee80211softmac_get_network_by_bssid_locked", "Kernel Version": "2.6.19", "Product": "Networking", "Component": "Wireless", "Hardware": "i386 Linux", "reranked_files": ["net/ieee80211/softmac/ieee80211softmac.c"], "causes": [{"cause": "The ieee80211softmac_get_network_by_bssid_locked function is dereferencing a NULL pointer, likely due to a missing check for a NULL return value from a function that retrieves network information.", "code_file": "net/ieee80211/softmac/ieee80211softmac.c", "fix_solution": "Add a NULL check for the network pointer returned by the function that retrieves network information before dereferencing it."}, {"cause": "The network list or data structure used by ieee80211softmac_get_network_by_bssid_locked might not be properly initialized or might be corrupted, leading to a NULL pointer dereference.", "code_file": "net/ieee80211/softmac/ieee80211softmac.c", "fix_solution": "Ensure that the network list or data structure is properly initialized and validated before being accessed."}, {"cause": "A race condition might be causing the network data to be freed or modified by another thread while ieee80211softmac_get_network_by_bssid_locked is accessing it.", "code_file": "net/ieee80211/softmac/ieee80211softmac.c", "fix_solution": "Implement proper locking mechanisms around the access to the network data to prevent concurrent modifications."}, {"cause": "The function that updates or manages the network list might be incorrectly removing or failing to add network entries, leading to unexpected NULL values.", "code_file": "net/ieee80211/softmac/ieee80211softmac.c", "fix_solution": "Review and correct the logic in functions that modify the network list to ensure entries are correctly added and removed."}], "input_tokens": 666, "output_tokens": 373}
{"id": "7601", "paths": ["arch/i386/kernel/acpi/boot.c"], "predicts": ["arch/i386/kernel/io_apic.c", "arch/i386/kernel/irq.c", "include/asm-i386/io_apic.h", "include/asm-i386/irq.h", "kernel/irq/manage.c", "kernel/irq/spurious.c", "drivers/acpi/pci_irq.c", "drivers/pci/setup-irq.c", "arch/i386/pci/acpi.c", "include/linux/irq.h"], "input_tokens_sum": 111795, "output_tokens_sum": 2108, "description": "Most recent kernel where this bug did *NOT* occur:\n2.6.18.3\n\nDistribution:\nFedora Core 6\n\nHardware Environment:\n00:00.0 Host bridge: Intel Corporation 82815 815 Chipset Host Bridge and Memory\nController Hub (rev 02)\n00:01.0 PCI bridge: Intel Corporation 82815 815 Chipset AGP Bridge (rev 02)\n00:1e.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 05)\n00:1f.0 ISA bridge: Intel Corporation 82801BA ISA Bridge (LPC) (rev 05)\n00:1f.1 IDE interface: Intel Corporation 82801BA IDE U100 (rev 05)\n00:1f.2 USB Controller: Intel Corporation 82801BA/BAM USB (Hub #1) (rev 05)\n00:1f.3 SMBus: Intel Corporation 82801BA/BAM SMBus (rev 05)\n00:1f.4 USB Controller: Intel Corporation 82801BA/BAM USB (Hub #2) (rev 05)\n01:00.0 VGA compatible controller: nVidia Corporation NV34 [GeForce FX 5200]\n(rev a1)\n02:09.0 FireWire (IEEE 1394): Texas Instruments TSB12LV23 IEEE-1394 Controller\n02:0a.0 Multimedia video controller: Brooktree Corporation Bt848 Video Capture\n(rev 12)\n02:0b.0 USB Controller: NEC Corporation ", "title": "irq 18: nobody cared - Intel STL2 SCI INT_SRC_OVR", "Kernel Version": "2.6.19", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/pci_irq.c", "drivers/acpi/osl.c", "kernel/irq/chip.c", "drivers/pci/pci-driver.c"], "causes": [{"cause": "The IRQ 18 is not properly handled due to incorrect ACPI configuration or interrupt routing.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Ensure that the IRQ routing table is correctly initialized and mapped for the affected hardware, possibly by adding a quirk for the specific chipset."}, {"cause": "The ACPI SCI interrupt is not correctly configured, leading to the \"nobody cared\" message.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Modify the ACPI interrupt setup to ensure that the SCI interrupt is correctly registered and handled by the kernel."}, {"cause": "The kernel does not correctly handle shared interrupts, causing the \"nobody cared\" message when an interrupt is not serviced.", "code_file": "kernel/irq/chip.c", "fix_solution": "Improve the shared interrupt handling logic to ensure that all devices sharing an IRQ are correctly serviced."}, {"cause": "The interrupt handler for the specific device is not correctly implemented, leading to unhandled interrupts.", "code_file": "drivers/pci/pci-driver.c", "fix_solution": "Review and correct the interrupt handler logic for the specific device to ensure it properly acknowledges and handles interrupts."}], "input_tokens": 689, "output_tokens": 283}
{"id": "7527", "paths": ["drivers/char/isicom.c"], "predicts": ["drivers/serial/icom.c", "drivers/serial/icom.h", "include/linux/isicom.h"], "input_tokens_sum": 104993, "output_tokens_sum": 858, "description": "Most recent kernel where this bug did *NOT* occur:\nDistribution: Redhat EL 4\nHardware Environment: Intel x86\nSoftware Environment:\nProblem Description: Unable to access Modem\n\nSteps to reproduce:\n\n[root@dialin-0 ~]# setserial -g /dev/ttyM0\nSegmentation fault\n[root@dialin-0 ~]#\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: Oops: 0000 [#1]\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: SMP\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: CPU:    0\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: EIP is at isicom_close+0x12/0x1ab [isicom]\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: eax: f5f14000   ebx: 00000000   ecx: f8922cf0   edx: f7f7fa40\n\nMessage from syslogd@dialin-0 at Tue Nov 14 14:41:38 2006 ...\ndialin-0 kernel: esi: 00000000   edi: 00000000   ebp: f5f14000   esp: f5fc7e08\n\nMessage from syslogd@dialin-0 at Tue Nov 14 1", "title": "isicom segmentation fault", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "Serial", "Hardware": "i386 Linux", "reranked_files": ["drivers/char/isicom.c"], "causes": [{"cause": "Dereferencing a null pointer in the isicom_close function, leading to a segmentation fault.", "code_file": "drivers/char/isicom.c", "fix_solution": "Add a null check for the pointer before dereferencing it in the isicom_close function."}, {"cause": "Improper handling of device resources during the close operation, possibly due to uninitialized or freed memory.", "code_file": "drivers/char/isicom.c", "fix_solution": "Ensure proper initialization and cleanup of resources in the isicom_close function, including checks for valid memory allocation."}, {"cause": "Race condition in the isicom driver when accessing shared resources, leading to inconsistent state and segmentation fault.", "code_file": "drivers/char/isicom.c", "fix_solution": "Implement locking mechanisms to protect shared resources in the isicom_close function."}], "input_tokens": 735, "output_tokens": 202}
{"id": "7517", "paths": ["drivers/net/r8169.c"], "predicts": ["drivers/net/r8169.c"], "input_tokens_sum": 142424, "output_tokens_sum": 3549, "description": "Most recent kernel where this bug did not occur: N/A\nDistribution: Debian (but stock vanilla kernel.org kernel tree)\nHardware Environment: Intel Core 2 Duo E6300 on Gigabyte GA-945GM-S2 mainboard,\nNIC under test running 100Mbps, full duplex\nSoftware Environment: Debian testing installation (last updated early Nov 2006)\nProblem Description: About 2/3 of received packet data corrupted when using the\nr8169 driver to operate the onboard Realtek 8111B gigabit ethernet chip\n\nSteps to reproduce:\nmodprobe r8169, configure appropriate for operation on your ethernet\nping the NIC from another machine\nNotice that over 60% of the pings don't return\n\nAn examination of the traffic with wireshark running on the test machine reveals\nthat the machine is not returning most of the pings because the received packet\ndata is being corrupted.  The nature of the corruption is that the first 4 bytes\nof the corrupted packet data is simply missing (and there's 4 bytes of garbage\nappended at the end so the overall", "title": "r8169: Packet corruption on receive for 8111B chip", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/realtek/r8169.c"], "causes": [{"cause": "The r8169 driver may not be correctly handling the descriptor ring buffer, leading to misalignment and corruption of received packets.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Ensure that the descriptor ring buffer is correctly aligned and that the driver properly handles the buffer wrap-around logic."}, {"cause": "The driver might be incorrectly setting up the DMA for the receive path, causing data corruption due to incorrect memory access.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Review and correct the DMA setup code to ensure that the memory regions are correctly mapped and accessed."}, {"cause": "The Realtek 8111B chip might require specific initialization sequences that are not being correctly applied by the driver.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Add or correct the initialization sequence for the 8111B chip to ensure proper operation."}, {"cause": "The driver may not be correctly handling the interrupt service routine, leading to incomplete or corrupted packet processing.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Review and fix the interrupt handling code to ensure that all packets are processed correctly and in order."}, {"cause": "There might be an issue with the checksum offloading feature, causing packets to be incorrectly processed.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Disable checksum offloading for the 8111B chip or ensure that the offloading is correctly implemented."}], "input_tokens": 585, "output_tokens": 385}
{"id": "7487", "paths": ["drivers/net/sundance.c"], "predicts": ["drivers/net/sundance.c"], "input_tokens_sum": 110720, "output_tokens_sum": 1013, "description": "Most recent kernel where this bug did not occur: Don't know. Only began checking\non 2.6.17, and it didn't work there.\n\nDistribution: Linux from Scratch\n\nHardware Environment: PIII 500.\n\n$ lspci\n00:00.0 Host bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX Host bridge\n(rev 03)\n00:01.0 PCI bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX AGP bridge\n(rev 03)\n00:07.0 ISA bridge: Intel Corporation 82371AB/EB/MB PIIX4 ISA (rev 02)\n00:07.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)\n00:07.2 USB Controller: Intel Corporation 82371AB/EB/MB PIIX4 USB (rev 01)\n00:07.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 02)\n00:0c.0 Multimedia audio controller: Yamaha Corporation YMF-724F [DS-1 Audio\nController] (rev 03)\n00:0e.0 USB Controller: NEC Corporation USB (rev 43)\n00:0e.1 USB Controller: NEC Corporation USB (rev 43)\n00:0e.2 USB Controller: NEC Corporation USB 2.0 (rev 04)\n00:0f.0 Ethernet controller: D-Link System Inc DL10050 Sundance Ethernet (rev 12)\n0", "title": "(net sundance) driver fails to recognize carrier status", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/sundance.c"], "causes": [{"cause": "The driver may not be correctly checking the link status register of the Sundance Ethernet controller.", "code_file": "drivers/net/ethernet/sundance.c", "fix_solution": "Ensure that the driver reads the correct register for link status and updates the carrier status accordingly."}, {"cause": "The driver might not be handling interrupts correctly, leading to missed carrier status changes.", "code_file": "drivers/net/ethernet/sundance.c", "fix_solution": "Review and correct the interrupt handling logic to ensure that link status changes trigger the appropriate updates."}, {"cause": "There could be an issue with the initialization sequence of the network interface, causing the carrier status to be ignored.", "code_file": "drivers/net/ethernet/sundance.c", "fix_solution": "Verify and adjust the initialization sequence to ensure that the carrier status is checked and set during interface startup."}, {"cause": "The driver may not be properly configuring the PHY, leading to incorrect carrier status reporting.", "code_file": "drivers/net/ethernet/sundance.c", "fix_solution": "Add or correct the PHY configuration code to ensure that the link status is accurately reported."}], "input_tokens": 698, "output_tokens": 272}
{"id": "7462", "paths": ["sound/pci/hda/hda_intel.c"], "predicts": ["sound/pci/hda/hda_intel.c", "sound/core/memalloc.c", "sound/core/pcm_memory.c", "sound/core/sgbuf.c", "sound/core/pcm_lib.c"], "input_tokens_sum": 105283, "output_tokens_sum": 1182, "description": "Most recent kernel where this bug did not occur:\nDistribution:\nHardware Environment:\nSoftware Environment:\nProblem Description:\nhda_intel driver from ALSA up to 1.0.13 allocates insufficient memory for buffer\nSteps to reproduce:", "title": "hda_intel: insufficient memory for buffer", "Kernel Version": "2.6.19", "Product": "Drivers", "Component": "Sound", "Hardware": "i386 Linux", "reranked_files": ["sound/pci/hda/hda_intel.c", "sound/core/pcm_memory.c", "sound/pci/hda/hda_codec.c"], "causes": [{"cause": "The hda_intel driver allocates a buffer size that is smaller than required for certain audio operations, leading to memory allocation issues.", "code_file": "sound/pci/hda/hda_intel.c", "fix_solution": "Increase the buffer size allocation in the hda_intel.c file to ensure it meets the requirements for all supported audio operations."}, {"cause": "The buffer size calculation does not account for all possible configurations and scenarios, leading to insufficient memory allocation.", "code_file": "sound/core/pcm_memory.c", "fix_solution": "Modify the buffer size calculation logic to include additional checks and balances for different configurations, ensuring adequate memory allocation."}, {"cause": "The default buffer size set in the driver is too small for certain hardware configurations, causing memory allocation failures.", "code_file": "sound/pci/hda/hda_codec.c", "fix_solution": "Adjust the default buffer size in the hda_codec.c file to a larger value that accommodates a wider range of hardware configurations."}], "input_tokens": 403, "output_tokens": 237}
{"id": "7385", "paths": ["fs/nfs/super.c"], "predicts": ["fs/nfs/super.c", "fs/nfs/inode.c", "fs/nfs/proc.c", "net/sunrpc/auth.c", "net/sunrpc/svc.c", "net/sunrpc/xprt.c", "net/sunrpc/sched.c", "include/linux/nfsd/interface.h", "include/linux/nfsd/state.h", "include/linux/nfsd/syscall.h"], "input_tokens_sum": 110240, "output_tokens_sum": 2024, "description": "Most recent kernel where this bug did not occur: 2.6.18\nDistribution: gentoo (vanilla_sources)\nHardware Environment: \nSoftware Environment: nfs-utils 1.0.10, vanilla-sources 2.6.19\nProblem Description:\nIt is not possible to mount a nfs4 export. It fails with the error message can't\nread superblock.\nSteps to reproduce:\ninstall gentoo with vanilla-sources 2.6.19_rc1 or rc2 and nfs-utils 1.0.10 and\nunmask the necessary dependencies\n\nentries in /etc/export\n/export *(rw,fsid=0,insecure,no_subtree_check,sync)\n/export/bla *(rw,nohide,root_squash,insecure,no_subtree_check,async)\n/export/user *(rw,nohide,root_squash,insecure,no_subtree_check,async\n\n/export and /export/bla have group and owner root and chmod 0777\n\ncommands:\nmodprobe nfs\n/etc/init.d/nfs start\n/etc/init.d/nfsmount start\nmount -t nfs4 127.0.0.1:/bla /bla\n\nWatch the computer hanging and then responding with an error in\n/var/log/messages that the server wouldn't respond and mount responding with\n\"... can't read superblock\".\n\nThe prob", "title": "nfs4 broken in vanilla-sources 2.6.19", "Kernel Version": "2.6.19-rc2", "Product": "File System", "Component": "NFS", "Hardware": "i386 Linux", "reranked_files": ["fs/nfs/super.c", "fs/nfs/nfs4proc.c", "fs/nfs/nfs4state.c"], "causes": [{"cause": "The NFSv4 client code may not be correctly handling the superblock read operation, leading to a failure in mounting.", "code_file": "fs/nfs/super.c", "fix_solution": "Ensure that the NFSv4 superblock read operation correctly initializes and validates the superblock structure before attempting to mount."}, {"cause": "There might be an issue with the NFSv4 protocol version negotiation or compatibility with the server, causing the mount operation to fail.", "code_file": "fs/nfs/nfs4proc.c", "fix_solution": "Review and update the NFSv4 protocol negotiation logic to ensure compatibility with the server and correct handling of protocol versions."}, {"cause": "The NFSv4 client may not be correctly handling the server's response, leading to a failure in interpreting the superblock data.", "code_file": "fs/nfs/nfs4state.c", "fix_solution": "Improve the handling and parsing of server responses to ensure that the superblock data is correctly interpreted and validated."}, {"cause": "The mount operation might be failing due to incorrect handling of NFSv4-specific mount options or parameters.", "code_file": "fs/nfs/super.c", "fix_solution": "Verify and correct the handling of NFSv4-specific mount options to ensure they are properly processed and applied during the mount operation."}], "input_tokens": 642, "output_tokens": 318}
{"id": "7306", "paths": ["arch/powerpc/kernel/pci-common.c"], "predicts": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/yenta_socket.h", "drivers/pcmcia/cistpl.c", "drivers/pcmcia/pcmcia_resource.c", "drivers/pcmcia/rsrc_mgr.c", "include/pcmcia/cisreg.h", "include/pcmcia/cistpl.h", "include/pcmcia/cs.h", "include/pcmcia/cs_types.h", "include/pcmcia/ss.h"], "input_tokens_sum": 124942, "output_tokens_sum": 2072, "description": "Most recent kernel where this bug did not occur: 2.6.12\nDistribution: Gentoo 2006.1\nHardware Environment: Apple PowerBook G3 (Lombard)\nSoftware Environment: Gentoo Linux 2006.1 (GCC 4.1.1)\nProblem Description: Machine panics with \"Oops: ...machine check...\" message on insertion of (also if card \nis already in slot on boot) any PCMCIA card with Yenta-socket driver, either as module, or compiled in.  \nFailure appears to be caused by pcmcia_read_cis_mem call according to stacktrace.\n\nSteps to reproduce: Compile yenta-socket support either into kernel or as module and insert PCMCIA card.", "title": "Yenta-socket causes oops on insertion of any PCMCIA card", "Kernel Version": "2.6.26", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/pcmcia/yenta_socket.c", "drivers/pcmcia/cistpl.c", "drivers/pcmcia/rsrc_nonstatic.c", "drivers/pcmcia/pcmcia_resource.c"], "causes": [{"cause": "The Yenta-socket driver may not be correctly handling the memory mapping for the PCMCIA card, leading to an invalid memory access during the pcmcia_read_cis_mem call.", "code_file": "drivers/pcmcia/yenta_socket.c", "fix_solution": "Ensure proper memory mapping and error checking before accessing the CIS memory. Add checks to validate the memory region before reading."}, {"cause": "The PCMCIA subsystem might not be correctly initializing the card's CIS (Card Information Structure), leading to an unhandled machine check exception.", "code_file": "drivers/pcmcia/cistpl.c", "fix_solution": "Add additional validation and error handling in the CIS initialization code to prevent invalid memory accesses."}, {"cause": "The PowerBook G3 hardware may have specific quirks that are not being handled by the Yenta-socket driver, causing incorrect operations on card insertion.", "code_file": "drivers/pcmcia/rsrc_nonstatic.c", "fix_solution": "Introduce hardware-specific checks and workarounds for the PowerBook G3 in the resource allocation and management code."}, {"cause": "The machine check exception might be triggered by an incorrect interrupt handling routine when a PCMCIA card is inserted.", "code_file": "drivers/pcmcia/pcmcia_resource.c", "fix_solution": "Review and update the interrupt handling logic to ensure it correctly manages the PCMCIA card events without causing machine checks."}], "input_tokens": 516, "output_tokens": 333}
{"id": "7303", "paths": ["drivers/acpi/dock.c"], "predicts": ["drivers/acpi/dock.c", "arch/i386/pci/acpi.c", "kernel/sched.c", "include/asm-i386/atomic.h", "include/asm-i386/hardirq.h", "kernel/irq/manage.c", "kernel/power/pm.c", " mm/memory_hotplug.c", "arch/i386/kernel/process.c", "drivers/acpi/ec.c"], "input_tokens_sum": 103370, "output_tokens_sum": 1820, "description": "Distribution: Debian Unstable\nHardware Environment: Thinkpad T40p and ThinkPad Dock II\nSoftware Environment: ACPI dock driver from vanilla 2.6.18\nProblem Description: If I dock my notebook to the dockingstation, I get the\nattached 'Scheduling while atomic BUG' in my dmesg.\n\nI can still work with this machine afterwards.\n\nSteps to reproduce: Dock the Thinkpad. I tested this with undocking first until\nnow. If you like, I can boot the notebook outside the dock, dock it and see if\nit gives the same result.", "title": "Dock driver: Scheduling while atomic BUG during docking.", "Kernel Version": "2.6.18", "Product": "ACPI", "Component": "Config-Hotplug", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/dock.c"], "causes": [{"cause": "The ACPI dock driver is performing operations that require sleeping while in an atomic context, leading to a 'Scheduling while atomic' bug.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Ensure that any operations that may sleep are moved out of atomic context, possibly by deferring them to a workqueue."}, {"cause": "Improper locking mechanism in the ACPI dock driver, causing atomic context violations during docking operations.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Review and adjust the locking strategy to ensure that locks are not held during operations that may sleep."}, {"cause": "Incorrect use of spinlocks or mutexes in the ACPI dock driver, leading to scheduling issues during docking.", "code_file": "drivers/acpi/dock.c", "fix_solution": "Replace spinlocks with mutexes where appropriate to allow sleeping, or ensure spinlocks are used correctly without sleeping operations."}], "input_tokens": 479, "output_tokens": 225}
{"id": "7234", "paths": ["drivers/i2c/i2c-core.c"], "predicts": ["drivers/i2c/i2c-core.c", "drivers/i2c/busses/i2c-via.c", "drivers/i2c/busses/i2c-viapro.c", "include/linux/i2c.h", "arch/cris/arch-v10/drivers/i2c.c", "arch/cris/arch-v32/drivers/i2c.c", "sound/i2c/i2c.c", "include/asm-i386/spinlock.h", "lib/kernel_lock.c", "lib/spinlock_debug.c"], "input_tokens_sum": 106604, "output_tokens_sum": 1922, "description": "Most recent kernel where this bug did not occur:\n2.6.18_rc2-mm1\nKernel that have this bug:\nMM-Kernel from 2.6.18_rc6-mm1\n2.6.18-git11 also has this bug\nDistribution: Gentoo-2006.1\nHardware Environment: \n00:00.0 Host bridge: VIA Technologies, Inc. VT8363/8365 [KT133/KM133] (rev 03)\n00:01.0 PCI bridge: VIA Technologies, Inc. VT8363/8365 [KT133/KM133 AGP]\n00:07.0 ISA bridge: VIA Technologies, Inc. VT82C686 [Apollo Super South] (rev \n22)\n00:07.1 IDE interface: VIA Technologies, Inc. \nVT82C586A/B/VT82C686/A/B/VT823x/A/C PIPC Bus Master IDE (rev 10)\n00:07.2 USB Controller: VIA Technologies, Inc. VT82xxxxx UHCI USB 1.1 \nController (rev 10)\n00:07.3 USB Controller: VIA Technologies, Inc. VT82xxxxx UHCI USB 1.1 \nController (rev 10)\n00:07.4 Host bridge: VIA Technologies, Inc. VT82C686 [Apollo Super ACPI] (rev \n30)\n00:07.5 Multimedia audio controller: VIA Technologies, Inc. VT82C686 AC97 Audio \nController (rev 20)\n00:07.6 Communication controller: VIA Technologies, Inc. AC'97 Modem Controller \n(re", "title": "bttv initialisation hang, may be i2c locking deadlock", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "I2C", "Hardware": "i386 Linux", "reranked_files": ["drivers/media/pci/bt8xx/bttv-driver.c", "drivers/i2c/i2c-core.c", "drivers/media/pci/bt8xx/bttv-i2c.c", "drivers/i2c/i2c-dev.c"], "causes": [{"cause": "The bttv driver initialization may be causing a deadlock due to improper locking mechanisms in the I2C subsystem.", "code_file": "drivers/media/pci/bt8xx/bttv-driver.c", "fix_solution": "Review and update the locking mechanisms around I2C operations to ensure proper lock acquisition and release, preventing deadlocks."}, {"cause": "Changes in the I2C core locking strategy between kernel versions may have introduced a deadlock scenario during device initialization.", "code_file": "drivers/i2c/i2c-core.c", "fix_solution": "Ensure that the I2C core properly handles concurrent access by reviewing and potentially revising the locking strategy to avoid deadlocks."}, {"cause": "The I2C adapter used by the bttv driver may not be correctly initialized, leading to a hang during the setup phase.", "code_file": "drivers/media/pci/bt8xx/bttv-i2c.c", "fix_solution": "Verify the initialization sequence of the I2C adapter and ensure that all necessary setup steps are completed before use."}, {"cause": "A recent change in the I2C subsystem may have altered the behavior of lock handling, causing a deadlock when multiple devices are initialized simultaneously.", "code_file": "drivers/i2c/i2c-dev.c", "fix_solution": "Audit recent changes in the I2C subsystem for potential issues with lock handling and adjust the code to prevent deadlocks during device initialization."}], "input_tokens": 698, "output_tokens": 341}
{"id": "7206", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "include/acpi/acpi.h", "drivers/acpi/utils.c", "arch/i386/kernel/acpi/processor.c", "arch/i386/kernel/acpi/sleep.c", "arch/x86_64/kernel/acpi/processor.c", "arch/x86_64/kernel/acpi/sleep.c", "kernel/power/main.c", "kernel/power/pm.c"], "input_tokens_sum": 110051, "output_tokens_sum": 2665, "description": "On start of my notebook, with kde, Klaptop not display my residual charge.\n\nStart with only battery:\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/info\npresent:                 no\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/state\npresent:                 no\n\nAfter i insert and disconnect AC Power Supply:\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/state\npresent:                 yes\ncapacity state:          ok\ncharging state:          discharging\npresent rate:            2240 mA\nremaining capacity:      1731 mAh\npresent voltage:         12321 mV\n\nconfix@portatile ~ $ cat /proc/acpi/battery/BAT1/info\npresent:                 yes\ndesign capacity:         4000 mAh\nlast full capacity:      3089 mAh\nbattery technology:      rechargeable\ndesign voltage:          9600 mV\ndesign capacity warning: 400 mAh\ndesign capacity low:     123 mAh\ncapacity granularity 1:  64 mAh\ncapacity granularity 2:  64 mAh\nmodel number:            PC-VP-WP66/OP-570-76620\nserial number:\nbattery type:   ", "title": "acpi not recognize residual charge on packard bell easynote S5011", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/ec.c"], "causes": [{"cause": "The ACPI battery driver may not be correctly initializing the battery status on startup, leading to incorrect reporting of battery presence.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the battery status is correctly initialized during the ACPI battery driver initialization process by adding a check and update for battery presence in the acpi_battery_init function."}, {"cause": "The ACPI event handling might not be triggering a battery status update when the system starts on battery power.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Modify the event handling logic to force a battery status update on system startup by adding a call to update the battery status in the acpi_ec_start function."}, {"cause": "The ACPI battery information might not be correctly read from the hardware on initial boot, causing the battery to appear absent.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Add a retry mechanism in the acpi_battery_get_info function to ensure that battery information is correctly read from the hardware on initial boot."}, {"cause": "The ACPI battery driver might not be correctly handling the transition from AC power to battery power, leading to incorrect status reporting.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Implement a state transition handler in the acpi_battery_notify function to correctly update the battery status when transitioning from AC to battery power."}], "input_tokens": 640, "output_tokens": 332}
{"id": "7201", "paths": ["drivers/usb/net/rndis_host.c"], "predicts": ["drivers/usb/class/cdc-acm.c", "drivers/usb/net/rndis_host.c", "include/linux/usb/usb.h", "include/linux/usb/serial.h", "include/linux/usb/cdc.h", "include/linux/netdevice.h", "net/core/dev.c"], "input_tokens_sum": 107243, "output_tokens_sum": 1653, "description": "Most recent kernel where this bug did not occur: None I know\nDistribution: Debian unstable, but my own kernel compile off kernel.org\nHardware Environment: Toshiba R100, with docking station\nSoftware Environment: Debian unstable\nProblem Description:\n\nI connect the nokia E70 (a symbian S60 3rd edition device) to the USB, and\nselect \"PC Suite\". The kernel spews the following:\n\nSep 25 16:16:52 r100 kernel: usb 1-3.4: new full speed USB device using ehci_hcd\nand address 9\nSep 25 16:16:52 r100 kernel: usb 1-3.4: configuration #1 chosen from 1 choice\nSep 25 16:16:53 r100 kernel: cdc_acm 1-3.4:1.12: ttyACM0: USB ACM device\nSep 25 16:16:53 r100 kernel: usbcore: registered new driver cdc_acm\nSep 25 16:16:53 r100 kernel: drivers/usb/class/cdc-acm.c: v0.25:USB Abstract\nControl Model driver for USB modems and ISDN adapters\nSep 25 16:16:53 r100 kernel: usbcore: registered new driver cdc_ether\nSep 25 16:16:53 r100 kernel: usb%%d: unregister 'rndis_host'\nusb-0000:00:1d.7-3.4, RNDIS device\nSep 25 16:16", "title": "Connecting Nokia E70 via USB - unregistering non-registered device?", "Kernel Version": "2.6.18", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/class/cdc-acm.c", "drivers/usb/core/usb.c", "drivers/net/usb/rndis_host.c"], "causes": [{"cause": "The RNDIS host driver is being unregistered unexpectedly, possibly due to a conflict between the cdc_acm and rndis_host drivers when the device is connected.", "code_file": "drivers/usb/class/cdc-acm.c", "fix_solution": "Ensure proper reference counting and device registration checks to prevent unregistering a device that was not registered. Add checks to verify if the device is already registered before attempting to unregister it."}, {"cause": "The USB core might be incorrectly handling the device registration and unregistration process, leading to a race condition.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Implement locking mechanisms around the device registration and unregistration code to prevent race conditions and ensure that devices are not unregistered while still in use."}, {"cause": "The cdc_ether driver might be interfering with the rndis_host driver, causing it to unregister unexpectedly.", "code_file": "drivers/net/usb/rndis_host.c", "fix_solution": "Add additional checks in the rndis_host driver to ensure that it only unregisters when it is safe to do so, possibly by checking the device state or reference count."}], "input_tokens": 691, "output_tokens": 272}
{"id": "7200", "paths": ["drivers/acpi/battery.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/ec.c", "drivers/acpi/acpi_ksyms.c", "arch/ia64/kernel/acpi.c", "arch/ia64/kernel/acpi-ext.c"], "input_tokens_sum": 79769, "output_tokens_sum": 1802, "description": "Most recent kernel where this bug did not occur:\nDistribution: fedora/ubuntu/suse\nHardware Environment: nec versa p550\nSoftware Environment: fedora core <= 5.90, ubuntu <= 6.06, suse 10\nProblem Description: The battery is not found after booting. But when I plugin  \nthe power cord or remove it then the battery is and remains detected.\n\nSteps to reproduce: \nBoot and see: battery not present.\n\nacpi version: 1.04\n\nBattery info after plugging in the cable:\n$ cat /proc/acpi/battery/BAT1/info\npresent:                 yes\ndesign capacity:         4800 mAh\nlast full capacity:      3507 mAh\nbattery technology:      rechargeable\ndesign voltage:          14800 mV\ndesign capacity warning: 400 mAh\ndesign capacity low:     140 mAh\ncapacity granularity 1:  64 mAh\ncapacity granularity 2:  64 mAh\nmodel number:            PC-VP-WP66/OP-570-76620\nserial number:\nbattery type:            LION\nOEM info:                NEC", "title": "battery not detected on laptop - nec versa p550", "Kernel Version": "2.6.20", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/ec.c", "drivers/acpi/power.c", "drivers/acpi/scan.c"], "causes": [{"cause": "The ACPI battery driver may not be initializing the battery status correctly during boot.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that the battery status is explicitly checked and updated during the ACPI initialization process, possibly by adding a call to update the battery status after the initial ACPI setup."}, {"cause": "The ACPI event handler might not be triggering the battery status update correctly on boot.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Modify the event handler to ensure that battery status events are correctly processed during the initial boot sequence, potentially by forcing a battery status check on boot."}, {"cause": "The ACPI power management code may not be correctly handling the initial power state transitions.", "code_file": "drivers/acpi/power.c", "fix_solution": "Add logic to handle power state transitions more robustly, ensuring that the battery status is updated when the system transitions from the boot state to a running state."}, {"cause": "The ACPI subsystem might not be correctly probing the battery device at boot time.", "code_file": "drivers/acpi/scan.c", "fix_solution": "Enhance the device probing logic to ensure that all battery devices are detected and initialized during the initial system scan."}], "input_tokens": 603, "output_tokens": 300}
{"id": "7180", "paths": ["arch/x86_64/kernel/pci-calgary.c"], "predicts": ["arch/x86_64/kernel/pci-calgary.c", "drivers/parisc/sba_iommu.c", "drivers/parisc/iommu-helpers.h", "include/asm-i386/pci.h", "include/linux/pci.h", "include/scsi/scsi_host.h", "mm/ioremap.c"], "input_tokens_sum": 113601, "output_tokens_sum": 2757, "description": "Most recent kernel where this bug did not occur: 2.6.17\nDistribution: Ubuntu 6.06\nHardware Environment: IBM x366, 4x 3.16GHz Xeon, 8G RAM, aic94xx SAS controller,\n6x 36G SAS disks, Calgary IOMMU\nSoftware Environment: netbooted Ubuntu mutant.\nProblem Description: aic94xx driver NMIs the system if calgary iommu is enabled.\n\nSteps to reproduce:\n1. Clone linux-2.6 and add in scsi-misc, scsi-rc-fixes and aic94xx from\ngit.kernel.org.\n2. Build a netbootable \"allmodconfig\" kernel with attached config file.\n3. Calgary IOMMU code activates\n4. Subsequent loading of the aic94xx driver causes the service processor to log\na PCI SERR with a split completion timeout, followed by an NMI, followed by a\nreboot.\n\nNote that disabling the Calgary IOMMU for the bus that the SAS controller is\nconnected to (either via kconfig or iommu=none or calgary=disable=1) will make\nthe problem go away.", "title": "aic94xx driver locks up on IBM x366 with Calgary IOMMU enabled", "Kernel Version": "2.6.18", "Product": "SCSI Drivers", "Component": "AIC94XX", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/pci-calgary.c", "drivers/scsi/aic94xx/aic94xx_core.c", "drivers/pci/probe.c"], "causes": [{"cause": "The Calgary IOMMU is not correctly handling DMA mappings for the aic94xx driver, leading to PCI SERR and NMIs.", "code_file": "arch/x86/kernel/pci-calgary.c", "fix_solution": "Ensure proper initialization and handling of DMA mappings for devices using the Calgary IOMMU, possibly by adding checks or adjustments specific to the aic94xx driver."}, {"cause": "The aic94xx driver is not correctly interacting with the Calgary IOMMU, causing split completion timeouts.", "code_file": "drivers/scsi/aic94xx/aic94xx_core.c", "fix_solution": "Modify the driver to correctly configure DMA operations when Calgary IOMMU is enabled, ensuring compatibility with the IOMMU settings."}, {"cause": "Incorrect handling of IOMMU settings in the PCI configuration for the SAS controller.", "code_file": "drivers/pci/probe.c", "fix_solution": "Add specific handling or configuration adjustments for the SAS controller when Calgary IOMMU is enabled to prevent PCI errors."}], "input_tokens": 616, "output_tokens": 244}
{"id": "7153", "paths": ["drivers/char/ipmi/ipmi_si_intf.c"], "predicts": ["drivers/char/ipmi/ipmi_si_intf.c", "drivers/char/ipmi/ipmi_msghandler.c"], "input_tokens_sum": 121790, "output_tokens_sum": 3420, "description": "On a system *without* ipmi:\n- modprobe ipmi_si (it'll load also ipmi_msghandler)\n- the ipmi_si module returns of course -ENODEV\n- rmmod ipmi_msghandler\n- watch the kernel oopsing\n\nThe cause of this bug is a forgotten step in the error path. The ipmi_si module\nnever calls driver_unregister in his error path. \nA fix will be provided in the next comment :)", "title": "oops on ipmi_msghandler removal for non ipmi systems", "Kernel Version": "2.6.17", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/char/ipmi/ipmi_si_intf.c", "drivers/char/ipmi/ipmi_msghandler.c"], "causes": [{"cause": "The ipmi_si module does not call driver_unregister in its error path when it fails to initialize, leading to a kernel oops when ipmi_msghandler is removed.", "code_file": "drivers/char/ipmi/ipmi_si_intf.c", "fix_solution": "Add a call to driver_unregister in the error path of the ipmi_si module initialization function to ensure proper cleanup."}, {"cause": "The ipmi_msghandler module is not properly handling the case where ipmi_si fails to initialize, leading to a dangling reference that causes a kernel oops on removal.", "code_file": "drivers/char/ipmi/ipmi_msghandler.c", "fix_solution": "Ensure that ipmi_msghandler properly checks and handles the case where ipmi_si fails to initialize, possibly by adding checks before cleanup operations."}], "input_tokens": 458, "output_tokens": 195}
{"id": "7062", "paths": ["arch/i386/kernel/hpet.c"], "predicts": ["arch/i386/kernel/hpet.c", "arch/i386/kernel/time_hpet.c", "include/asm-i386/hpet.h", "arch/i386/kernel/time.c", "kernel/time/clocksource.c", "include/linux/timer.h", "kernel/timer.c"], "input_tokens_sum": 106474, "output_tokens_sum": 1659, "description": "Most recent kernel where this bug did not occur:\n2.6.17.3\nI did not test 2.6.17.11 yet but I'm pretty sure the bug was introduced in\n2.6.18-rc1\n\nDistribution:\nDebian unstable\n\nHardware Environment:\nThinkpad Z61m\nIt has a Pentium M CoreDuo. /proc/cpuinfo says:\nGenuine Intel(R) CPU           T2500  @ 2.00GHz\n\nProblem Description:\nWhen CONFIG_HPET_TIMER is enabled any call to nanosleep blocks indefinitely. \nFor me that's in a initramfs during udevsettle. Alt+PrintScreen+T says \nsomething about nanosleep. replaceing udevsettle with \"busybox sleep 1\" blocks \nas well with similar results for Alt+PrintScreen+T. The waiting process can be \nkilled with Alt+PrintScreen+I and the boot process continues until the next \nnanosleep.\nWhen CONFIG_HPET_TIMER is disabled the problem does not occur.\n\nI have tested 2.6.18-rc1 - 2.6.18-rc4 and several 2.6.18-rc?-mm? kernels. The \nproblem occurs for all of them. I assume the bug was intoduced with the big \ni386 timer related patches.\n\"indefinitely\" is of cou", "title": "nanosleep blocks indefinitely when CONFIG_HPET_TIMER is enabled", "Kernel Version": "2.6.18-rc4", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/hpet.c", "kernel/time/clocksource.c", "kernel/time/timer.c", "arch/x86/kernel/timer.c"], "causes": [{"cause": "The HPET timer configuration may not be correctly initializing or handling the timer interrupts, causing nanosleep to block indefinitely.", "code_file": "arch/x86/kernel/hpet.c", "fix_solution": "Ensure that the HPET timer is properly initialized and that interrupts are correctly configured and handled. Check for missing or incorrect interrupt handling logic."}, {"cause": "The clock source selection logic might be incorrectly prioritizing HPET over other stable clock sources, leading to issues with nanosleep.", "code_file": "kernel/time/clocksource.c", "fix_solution": "Review and adjust the clock source selection logic to ensure that HPET is only used when it is stable and correctly configured. Add checks to fallback to other clock sources if HPET is not reliable."}, {"cause": "There might be a regression in the timer management code that affects how nanosleep calculates the sleep duration when HPET is enabled.", "code_file": "kernel/time/timer.c", "fix_solution": "Investigate the timer management code for changes introduced in 2.6.18-rc1 that could affect sleep duration calculations. Ensure that the timer values are correctly computed and updated."}, {"cause": "The HPET timer frequency might be incorrectly set, causing timing functions like nanosleep to misbehave.", "code_file": "arch/x86/kernel/timer.c", "fix_solution": "Verify and correct the HPET timer frequency settings. Ensure that the frequency is accurately set according to the hardware specifications."}], "input_tokens": 650, "output_tokens": 340}
{"id": "6965", "paths": ["drivers/md/md.c"], "predicts": ["drivers/md/raid1.c", "drivers/md/md.c", "drivers/md/bitmap.c", "include/linux/raid/md_p.h", "init/do_mounts_md.c"], "input_tokens_sum": 107182, "output_tokens_sum": 1856, "description": "Most recent kernel where this bug did not occur: 2.6.18-rc2\nDistribution: Slackintosh-Current\nHardware Environment:\n\nMac-Mini (ppc) : Internal Harddisk (rootfs) mirrored to an external\nUSB2 Harddrive\n\nProblem Description:\n\nThe internal harddrive of my MacMini is mirrored to an external\nUSB2-Harddrive via md-raid1.\n\nBecause the kernel doesn't attach the usb-device (sda2) to my\nraid (md0) itself (after a reboot) i'm using something like this in my\n/etc/rc.d/rc.local:\n\n> #!/bin/sh\n> postfix start  (<-- note: postfix ist started before attaching sda2)\n> /sbin/mdadm --manage /dev/md0 --add /dev/sda2\n\nThis worked well with kernels below 2.6.18-rc2 :\nA full sync from hda3 -> sda2 was started after each reboot.\n\nBeginning with 2.6.18-rc2 the kernel didn't sync\nthe drive after attaching it: It was added to the raid without\na full resync.\n\nAccording to 'iostat' the kernel does write to both devices\n*after* mdadm attached the harddrive but it seems like everything\nwritten to md0 before attaching ", "title": "Kernel doesn't re-sync usb-raid1 after running mdadm --add", "Kernel Version": "2.6.18-rc3", "Product": "IO/Storage", "Component": "MD", "Hardware": "i386 Linux", "reranked_files": ["drivers/md/md.c", "drivers/usb/core/usb.c", "block/blk-core.c", "include/linux/raid/md_p.h"], "causes": [{"cause": "The kernel's MD subsystem may not be triggering a full resync when a device is added to an existing RAID1 array.", "code_file": "drivers/md/md.c", "fix_solution": "Modify the code to ensure that a full resync is triggered when a device is added to a RAID1 array, possibly by checking the state of the array and initiating a resync if necessary."}, {"cause": "The USB device may not be fully initialized or recognized by the kernel before being added to the RAID array, leading to incomplete synchronization.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Ensure that the USB device is fully initialized and recognized by the kernel before it is added to the RAID array, possibly by adding a delay or a check for device readiness."}, {"cause": "Changes in the block device layer might have affected how devices are added to RAID arrays, leading to the omission of a full resync.", "code_file": "block/blk-core.c", "fix_solution": "Review and adjust the block device layer to ensure that devices added to RAID arrays trigger the necessary synchronization processes."}, {"cause": "The mdadm tool might not be correctly interfacing with the kernel to trigger a full resync upon adding a device.", "code_file": "include/linux/raid/md_p.h", "fix_solution": "Ensure that the mdadm tool correctly communicates with the kernel to initiate a full resync when a device is added to a RAID1 array."}], "input_tokens": 638, "output_tokens": 342}
{"id": "6921", "paths": ["drivers/block/cpqarray.c"], "predicts": ["drivers/block/cpqarray.c", "drivers/block/cpqarray.h", "kernel/module.c", "init/do_mounts_initrd.c"], "input_tokens_sum": 94469, "output_tokens_sum": 877, "description": "Most recent kernel where this bug did not occur: 2.6.14\nDistribution: Debian (etch)\nHardware Environment: Compaq Proliant DL360\nSoftware Environment: n/a\nProblem Description: When built as a module, cpqarray, since 2.6.15, is unable \nto detect arrays. Built into the kernel it works fine. The errors are as \nfollows:\ncpqarray: Finding drives on ida0\ncpqarray: ida0: idaSendPciCmd Timeout out, No command list address returned!\ncpqarray: error sending ID Controller\n\nSteps to reproduce: Boot with a Compaq Smart Array card (shows up as \"raid \ncontroller lsi logic/symbios logic 53C1510 (rev 2)\" in lspci) and a valid \narray. If the kernel is built with cpqarray as a module that is loaded in an \ninitrd, the module is loaded and the array can not be found. If the array \ncontains the root partition, the system (obviously) becomes unbootable.", "title": "cpqarray fails to detect array when built as a module", "Kernel Version": "2.6.16", "Product": "IO/Storage", "Component": "SCSI", "Hardware": "i386 Linux", "reranked_files": ["drivers/block/cpqarray.c"], "causes": [{"cause": "The cpqarray module may not be initializing the PCI device properly when loaded as a module, leading to a timeout in command list address retrieval.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Ensure proper initialization of the PCI device in the module_init function, including setting up necessary resources and configurations that are otherwise handled when built into the kernel."}, {"cause": "The module may not be correctly handling the timing or order of operations required for detecting the array, which is managed differently when built into the kernel.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Add checks and synchronization mechanisms in the module initialization code to ensure that the device is ready before attempting to send commands."}, {"cause": "There might be missing dependencies or incorrect module parameters when cpqarray is loaded as a module, affecting its ability to communicate with the hardware.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Review and update the module parameters and dependencies, ensuring all required resources are available and correctly configured when the module is loaded."}, {"cause": "The module may not be correctly registering the device with the kernel, leading to failures in command execution.", "code_file": "drivers/block/cpqarray.c", "fix_solution": "Ensure that the device registration process in the module is identical to the built-in version, including any necessary callbacks and handlers."}], "input_tokens": 586, "output_tokens": 322}
{"id": "6706", "paths": ["drivers/ieee1394/nodemgr.c"], "predicts": ["drivers/ieee1394/ohci1394.c", "drivers/ieee1394/nodemgr.c", "drivers/ieee1394/hosts.c", "kernel/module.c", "arch/i386/kernel/module.c"], "input_tokens_sum": 98006, "output_tokens_sum": 1644, "description": "Most recent kernel where this bug did not occur: unknown\nDistribution: Mandrake 10.1\nHardware Environment: x86 K7 uniprocessor\ntwo FireWire host adapters (0: TI based, 1394b, 1: VIA based, 1394a)\nSoftware Environment: gcc 3.4.1, kernel.org's kernel\nProblem Description:\n\nWhen \"modprobe ohci1394\" is followed shortly by \"modprobe -r ohci1394\" (e.g. 1\nsecond after the previous modprobe finished), one of the following may happen:\n\n - kernel panic due to exception in interrupt\n   (happened on 2.6.15.x preempt uniprocessor)\n\n   or\n\n - modprobe -r hangs in D state, as does knodemgrd_0\n   (happened on 2.6.16.x preempt SMP on a uniprocessor machine,\n   with original drivers as well as with 1394 drivers equivalent\n   to 2.6.17-rc6-mm2 --- i.e. 2.6.17 will also be affected).\n\n   The knodemgrd_1 slept interruptibly (S state) while the other\n   slept uninterruptibly (D state) right after modprobe -r was\n   issued. This happens with or without other nodes attached to\n   the FireWire ports, with or wi", "title": "modprobe -r ohci1394 hangs or panics", "Kernel Version": "2.6.15", "Product": "Drivers", "Component": "IEEE1394", "Hardware": "i386 Linux", "reranked_files": ["drivers/firewire/ohci.c", "drivers/firewire/core-device.c", "drivers/firewire/core-transaction.c", "drivers/firewire/core-topology.c"], "causes": [{"cause": "Race condition between module removal and interrupt handling, leading to kernel panic or hang.", "code_file": "drivers/firewire/ohci.c", "fix_solution": "Add proper synchronization mechanisms such as mutexes or spinlocks around critical sections to ensure safe module removal."}, {"cause": "Improper handling of device removal leading to resources not being freed correctly, causing hangs.", "code_file": "drivers/firewire/core-device.c", "fix_solution": "Ensure that all resources are properly freed and references are released during module removal."}, {"cause": "Interrupts not being disabled correctly during module removal, causing unexpected behavior.", "code_file": "drivers/firewire/core-transaction.c", "fix_solution": "Disable interrupts properly during module removal to prevent any pending transactions from causing issues."}, {"cause": "Incorrect state management of FireWire nodes during module removal, leading to inconsistent states.", "code_file": "drivers/firewire/core-topology.c", "fix_solution": "Implement checks and state management to ensure nodes are in a consistent state before and after module removal."}], "input_tokens": 661, "output_tokens": 254}
{"id": "6455", "paths": ["drivers/acpi/ec.c"], "predicts": ["drivers/acpi/ac.c", "drivers/acpi/battery.c", "drivers/acpi/power.c", "arch/i386/kernel/acpi/processor.c", "arch/i386/kernel/apm.c"], "input_tokens_sum": 100451, "output_tokens_sum": 1384, "description": "Most recent kernel where this bug did not occur: not known\nDistribution: Gentoo Linux\nHardware Environment: HP Compaq nx6125 laptop with AMD Turion 64 CPU, BIOS F.0E\nSoftware Environment: KDE 3.5.2\nProblem Description:\nAt some point battery and AC status just stops updating. This happens when I\nunplug the AC cable and when I start my laptop withiut being connected to AC\npower. I think that it is more likely to happen when I do something that uses a\nlot of CPU or Graphics power.\n\nSteps to reproduce:\nI can't tell you the exact steps as I didn't figure out what causes it to stop\nupdating. Most of the time it stops working when I power on my laptop while\ntravelling by train to the work and then at some point it justs stops updating.\nIt also happens at one point when if keep plugginh and unplugging the laptop\nfrom AC power. High CPU usage at that time may help in causing this bug.", "title": "battery and AC status stops updating - HP Compaq nx6125", "Kernel Version": "2.6.17", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "drivers/acpi/ac.c", "drivers/acpi/events.c", "drivers/power/supply/power_supply_core.c"], "causes": [{"cause": "The ACPI subsystem may not be correctly handling AC and battery status updates due to race conditions or improper event handling when the system is under high load.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Ensure that ACPI events are properly synchronized and handled by adding appropriate locking mechanisms or using atomic operations to prevent race conditions during status updates."}, {"cause": "The ACPI driver might not be correctly re-evaluating the power source status when the system is under high CPU or graphics load, leading to missed updates.", "code_file": "drivers/acpi/ac.c", "fix_solution": "Add additional checks and re-evaluation logic in the ACPI power source handler to ensure that status updates are not missed during high system load."}, {"cause": "The ACPI event handler might not be correctly processing or queuing events when the system is under stress, leading to missed or delayed updates.", "code_file": "drivers/acpi/events.c", "fix_solution": "Improve the event handling logic to ensure that all ACPI events are processed in a timely manner, possibly by increasing the priority of the event handler or optimizing the event queue processing."}, {"cause": "The power management subsystem might not be correctly interfacing with the ACPI subsystem, leading to incorrect status reporting.", "code_file": "drivers/power/supply/power_supply_core.c", "fix_solution": "Review and enhance the interface between the power management and ACPI subsystems to ensure accurate and timely status updates, possibly by adding additional validation checks."}], "input_tokens": 573, "output_tokens": 352}
{"id": "6200", "paths": ["fs/nfs/inode.c"], "predicts": ["fs/nfs/file.c", "fs/nfs/inode.c", "kernel/sched.c", "arch/i386/kernel/smp.c", "drivers/net/e1000/e1000_main.c", "drivers/net/tg3.c", "net/core/dev.c", "kernel/softirq.c", "init/main.c", "mm/page_alloc.c"], "input_tokens_sum": 68224, "output_tokens_sum": 1866, "description": "We are running Linux Kernel 2.4.32 and have been experiencing hangs every 1-4\ndays.  Sometimes, we can get multiple hangs in a single day.  We cannot\ndetermine the precise steps to reproduce the hang, but we have replaced the\nserver three times, and each time the problem continues to reoccur.  The\nfirst server had Intel server board SE7501WV2A.  The second system was a Dell\nPrecision WorkStation 450 (Intel 7505 chipset).  The last system was a Dell\nPowerEdge 1750 box (Intel ServerWorks GC LE chipset). All systems have Dual\nXeon, 4 gb memory.  The first two systems were using on-board Intel e1000, which\nI was suspicious was the cause of the problem, but the last system was running\ndual Broadcom gigabit and using the tg3 driver, so this was not an issue.  The\nusers logging into the server are accessing their home directories from our NFS\nserver.\n\nWhen the server hangs, the monitor on the console screen goes black, yet the\nmachine remains pingable.  An nmap on the machine reveals the port", "title": "Linux 2.4.32 keeps hanging", "Kernel Version": "2.4.32", "Product": "IO/Storage", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["fs/nfs/nfs3proc.c", "drivers/net/tg3.c", "mm/vmscan.c", "arch/i386/kernel/smp.c", "kernel/sched.c"], "causes": [{"cause": "The server hangs might be related to NFS client issues, possibly due to improper handling of network file system operations.", "code_file": "fs/nfs/nfs3proc.c", "fix_solution": "Review and improve the error handling and timeout mechanisms in NFS operations to prevent hangs during network file system access."}, {"cause": "The issue could be related to the handling of network interfaces, particularly with the tg3 driver for Broadcom gigabit cards.", "code_file": "drivers/net/tg3.c", "fix_solution": "Investigate and fix potential race conditions or deadlocks in the tg3 driver that could lead to system hangs."}, {"cause": "The problem might be related to memory management issues, especially with high memory usage scenarios.", "code_file": "mm/vmscan.c", "fix_solution": "Optimize memory reclaim strategies and ensure proper handling of memory pressure situations to prevent system hangs."}, {"cause": "The hanging issue could be due to improper handling of SMP (Symmetric Multiprocessing) configurations on dual Xeon systems.", "code_file": "arch/i386/kernel/smp.c", "fix_solution": "Review and improve SMP synchronization mechanisms to ensure stable operation on multi-processor systems."}, {"cause": "The server hangs might be related to issues in the kernel's process scheduling, particularly under heavy load conditions.", "code_file": "kernel/sched.c", "fix_solution": "Enhance the scheduler to better handle high load scenarios and prevent potential deadlocks or starvation."}], "input_tokens": 604, "output_tokens": 352}
{"id": "5992", "paths": ["drivers/net/r8169.c"], "predicts": ["drivers/net/r8169.c/r8169.c", "include/linux/etherdevice.h/etherdevice.h", "include/linux/netdevice.h/netdevice.h", "net/ethernet/eth.c/eth.c"], "input_tokens_sum": 98570, "output_tokens_sum": 1426, "description": "Most recent kernel where this bug did not occur: None found yet, seems to affect\nall recent 2.6.x kernels on my system\n\nDistribution: Ubuntu (Breezy)\n\nHardware Environment: Foxconn motherboard with r8169 integrated (gigabit\nethernet version). lspci -vvv output supplied.\n\nSoftware Environment: Linux kernel 2.6.15.1 (with Ubuntu Breezy). Output from\ndmesg supplied.\n\nProblem Description: r8169 gets a bad MAC address. After that occurs, no network\nconnectivity is possible. Attempting to use ifconfig to reconfigure the\ninterface causes a hang. System also hangs at \"deconfiguring network interfaces\"\nphase of shutdown.\n\nSteps to reproduce: Boot my system. Networking simply doesn't work.\n\nMore information:\n\nr8169 driver and Linux kernel 2.6.15.1 fails to work with my Realtek 8169\nethernet controller. This is the gigabit ethernet-capable embedded version which\nis integrated into a Foxconn 925A01-8EKRS2 motherboard.\n\nWhenever the system boots, the r8169 driver does not pick up the MAC\naddress fo", "title": "r8169 driver - no network connection, hang at shutdown", "Kernel Version": "2.6.15", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/realtek/r8169.c"], "causes": [{"cause": "The r8169 driver fails to correctly read the MAC address from the hardware registers, leading to an invalid MAC address being set.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Ensure that the MAC address is correctly read from the hardware registers by adding a check and retry mechanism if the read value is invalid."}, {"cause": "The driver does not handle the shutdown sequence properly, causing a hang when deconfiguring network interfaces.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Implement proper shutdown and cleanup routines to ensure that the network interface is correctly deconfigured without causing a hang."}, {"cause": "The driver initialization sequence might not be setting up the hardware registers correctly, leading to network connectivity issues.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Review and correct the initialization sequence to ensure all necessary hardware registers are configured properly during driver initialization."}, {"cause": "The driver might not be compatible with the specific version of the Realtek 8169 chip used on the Foxconn motherboard, leading to incorrect operation.", "code_file": "drivers/net/ethernet/realtek/r8169.c", "fix_solution": "Add specific chip version checks and handling to ensure compatibility with the embedded version of the Realtek 8169 chip."}], "input_tokens": 601, "output_tokens": 328}
{"id": "5553", "paths": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c"], "predicts": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c/speedstep-smi.c", "arch/i386/kernel/cpu/cpufreq/speedstep-lib.c/speedstep-lib.c", "arch/i386/kernel/cpu/cpufreq/speedstep-lib.h/speedstep-lib.h", "drivers/cpufreq/cpufreq.c/cpufreq.c", "kernel/module.c/module.c", "scripts/kconfig/conf.c/conf.c", "scripts/kconfig/confdata.c/confdata.c"], "input_tokens_sum": 95940, "output_tokens_sum": 2133, "description": "Most recent kernel where this bug did not occur:\n 2.6.14\nDistribution:\n Debian GNU/Linux Etch\nHardware Environment:\n IBM ThinkPad T22, Pentium III (Coppermine), i440BX\nSoftware Environment:\nProblem Description:\n\ncpufreq used to work with 2.6.8 and 2.6.11 kernels, but doesn't work with 2.6.12\nand 2.6.14 for me. I've found that it actually works with 2.6.14 but only if\nkernel is compiled with CONFIG_CPU_FREQ_DEBUG option set.\n\nSteps to reproduce:\n\nCompile kernel with all allmodconfig and clear the CONFIG_CPU_FREQ_DEBUG.\n\nThen the following happens (otherwise it works):\n\n# modprobe speedstep-lib relaxed_check=1\n# modprobe speedstep-smi\nFATAL: Error inserting speedstep_smi\n(/lib/modules/2.6.14/kernel/arch/i386/kernel/cpu/cpufreq/speedstep-smi.ko): No\nsuch device", "title": "speedstep-smi fails to load if CONFIG_CPU_FREQ_DEBUG is not set", "Kernel Version": "2.6.14", "Product": "Power Management", "Component": "cpufreq", "Hardware": "i386 Linux", "reranked_files": ["arch/i386/kernel/cpu/cpufreq/speedstep-smi.c"], "causes": [{"cause": "The speedstep-smi module fails to load because it relies on debug information that is only available when CONFIG_CPU_FREQ_DEBUG is set.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep-smi.c", "fix_solution": "Add conditional checks to ensure that the module can load without requiring debug information, possibly by initializing necessary variables or structures when CONFIG_CPU_FREQ_DEBUG is not set."}, {"cause": "The module initialization may be failing due to missing or incorrect handling of hardware-specific checks that are bypassed when debug mode is enabled.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep-smi.c", "fix_solution": "Refactor the initialization code to ensure that all necessary hardware checks are performed correctly regardless of the debug configuration."}, {"cause": "The error handling path in the speedstep-smi module might be incorrectly assuming the presence of debug information, leading to a failure when CONFIG_CPU_FREQ_DEBUG is not set.", "code_file": "arch/i386/kernel/cpu/cpufreq/speedstep-smi.c", "fix_solution": "Review and update the error handling paths to ensure they do not depend on debug-specific information and handle errors gracefully in all configurations."}], "input_tokens": 578, "output_tokens": 285}
{"id": "5475", "paths": ["drivers/usb/input/hid-core.c"], "predicts": ["drivers/usb/input/usbmouse.c/usbmouse.c", "drivers/usb/core/devio.c/devio.c", "drivers/usb/core/hub.c/hub.c", "drivers/usb/core/usb.c/usb.c", "include/linux/usb.h/usb.h"], "input_tokens_sum": 94430, "output_tokens_sum": 2169, "description": "Most recent kernel where this bug did not occur: 2.6.10\nDistribution: Ubuntu\nHardware Environment: AMD Athlpn 1300, Nvidia GeForce2, Logitech Optical USB Mouse\nSoftware Environment: Ubuntu 5.04/Ubuntu 5.10\nProblem Description: \n\nBooting into Gnome and reading webpages. Not using the mouse for a while. When I\ngrab the mouse and want to move the pointer, the mouse is frozen. I have to\nswitch terminals (Ctrl+Alt+F1) and back to F7 to get the mouse working again.\n\nSteps to reproduce:\n\n1. Boot, log into Gnome.\n2. Use your computer for a while (eg. type in a bugreport on kernel.org)\n3. Move the mouse pointer. It appears frozen.\n\nThis did not appear in kernel 2.6.10. The problem is apparent also in 2.6.12.", "title": "USB mouse freezes in X", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/hub.c", "drivers/hid/usbhid/hid-core.c", "drivers/usb/core/usb.c", "drivers/input/mouse/usbmouse.c"], "causes": [{"cause": "The USB mouse driver may not be handling power management correctly, causing the device to become unresponsive after a period of inactivity.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Ensure that the USB hub driver properly handles power state transitions and reinitializes the device upon wake-up."}, {"cause": "The USB input subsystem might not be correctly processing input events after a period of inactivity, leading to the mouse freeze.", "code_file": "drivers/hid/usbhid/hid-core.c", "fix_solution": "Add logic to reset the input device state or reinitialize the input queue when the device is detected as idle for too long."}, {"cause": "A regression in the USB core driver could be causing improper handling of USB interrupts, leading to missed input events.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Review and correct the interrupt handling logic to ensure all input events are processed correctly."}, {"cause": "The X server might not be correctly reinitializing the USB mouse after a period of inactivity due to changes in the kernel's input handling.", "code_file": "drivers/input/mouse/usbmouse.c", "fix_solution": "Modify the mouse driver to ensure it sends a wake-up signal to the X server or reinitializes the device state upon activity detection."}], "input_tokens": 543, "output_tokens": 314}
{"id": "5366", "paths": ["arch/i386/kernel/timers/timer_tsc.c"], "predicts": ["arch/i386/kernel/timers/timer_tsc.c", "arch/i386/kernel/timers/timer.c", "arch/i386/kernel/time.c", "arch/x86_64/kernel/timers/timer_tsc.c", "arch/x86_64/kernel/timers/timer.c", "arch/x86_64/kernel/time.c", "include/asm-i386/timer.h", "include/asm-x86_64/io_apic.h", "kernel/time.c", "kernel/timer.c"], "input_tokens_sum": 88890, "output_tokens_sum": 1687, "description": "Most recent kernel where this bug did not occur: Unknown -- long ago, probably\nDistribution:\nHardware Environment: i386 and x86_64\nSoftware Environment:\nProblem Description:\n\nI verified this in 2.6.11 since it was handy on lxr.linux.no, but it\nprobably exists in most kernel versions.  Also, the bug appears to be\npresent in both the i386 and x86_64 arch even though it's in\narch-specific code.\n\nThe basic problem is that (in some system configurations) the timer\ninterrupt handler uses the TSC to determine whether some ticks have\nbeen lost, but the kernel synchronizes the TSCs by zeroing them all\n*after* timer interrupts have been started.  Thus at the next timer\ninterrupt, lost ticks are computed as a value from after the reset\n(near 0) minus a value from before the reset.  This overflows and\nproduces a garbage value that can be either positive or negative (the\ndetails of the arithmetic differ between x86_64 and i386, but the\nvalue is garbage on both).  If it's positive, it looks like a l", "title": "synchronize_tsc_bp can zero the TSC during a lost ticks measurement", "Kernel Version": "2.6.11", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/time.c", "arch/x86/kernel/timer.c", "arch/x86/kernel/tsc.c"], "causes": [{"cause": "The TSC (Time Stamp Counter) is being reset to zero after the timer interrupts have started, leading to incorrect calculations of lost ticks.", "code_file": "arch/x86/kernel/time.c", "fix_solution": "Ensure that the TSC synchronization occurs before the timer interrupts are initialized, or adjust the lost ticks calculation to account for TSC resets."}, {"cause": "The calculation of lost ticks does not handle the overflow correctly when the TSC is reset, resulting in garbage values.", "code_file": "arch/x86/kernel/timer.c", "fix_solution": "Implement a check to detect TSC resets and adjust the lost ticks calculation to prevent overflow and handle the reset scenario."}, {"cause": "The timer interrupt handler is not aware of the TSC reset, leading to incorrect timekeeping.", "code_file": "arch/x86/kernel/tsc.c", "fix_solution": "Modify the timer interrupt handler to be aware of TSC resets and adjust its logic to correctly calculate time intervals across resets."}], "input_tokens": 601, "output_tokens": 238}
{"id": "5151", "paths": ["drivers/input/mouse/alps.c"], "predicts": ["drivers/usb/core/devio.c", "drivers/usb/core/hub.c", "drivers/usb/core/usb.c"], "input_tokens_sum": 95129, "output_tokens_sum": 1799, "description": "Most recent kernel where this bug did not occur: 2.6.11\nDistribution: Debian 3.1\nHardware Environment: Toshiba satellite 2410\nSoftware Environment: KDE\nProblem Description:\n\nSince the kernel 2.6.12, i have a problem with my touchpad. In Kde, the menus\ndisappear. In thunderbird, if i go to my last message and that i use my\ntouchpad, it returns at the beginning.\n\nBut when i put these lines in comments, all is correct. But not the scroll.\n(Option         \"ZAxisMapping\"          \"4 5\")\n\nSection \"InputDevice\"\n        Identifier      \"Configured Mouse\"\n        Driver          \"mouse\"\n        Option          \"CorePointer\"\n        Option          \"Device\"                \"/dev/psaux\"\n        Option          \"Protocol\"              \"ImPS/2\"\n        #Option         \"ZAxisMapping\"          \"4 5\"\nEndSection\nSection \"InputDevice\"\n        Identifier      \"Generic Mouse\"\n        Driver          \"mouse\"\n        Option          \"SendCoreEvents\"        \"true\"\n        Option          \"Device\"             ", "title": "Driver Mouse - Toshiba touchpad after kernel 2.6.11", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "Input Devices", "Hardware": "i386 Linux", "reranked_files": ["drivers/input/mouse/psmouse-base.c", "drivers/input/input.c", "drivers/input/mouse/psmouse.c"], "causes": [{"cause": "The touchpad driver may have introduced changes in handling ZAxisMapping, causing incorrect behavior in applications.", "code_file": "drivers/input/mouse/psmouse-base.c", "fix_solution": "Review and adjust the handling of ZAxisMapping in the psmouse driver to ensure it correctly interprets scroll events."}, {"cause": "Changes in the input subsystem might have affected the way touchpad events are processed, leading to unexpected behavior.", "code_file": "drivers/input/input.c", "fix_solution": "Investigate the event processing logic for touchpad inputs and ensure compatibility with older configurations."}, {"cause": "The protocol handling for ImPS/2 devices might have been altered, affecting touchpad functionality.", "code_file": "drivers/input/mouse/psmouse.c", "fix_solution": "Verify the ImPS/2 protocol handling and restore any previous logic that ensured correct touchpad operation."}], "input_tokens": 596, "output_tokens": 215}
{"id": "5105", "paths": ["arch/x86_64/kernel/time.c"], "predicts": ["kernel/timer.c", "arch/x86_64/kernel/time.c", "arch/x86_64/kernel/irq.c", "drivers/cpufreq/cpufreq.c", "init/calibrate.c", "arch/x86_64/kernel/apic.c", "include/asm-i386/timer.h", "arch/x86_64/kernel/smp.c", "kernel/cpu.c", "kernel/sched.c"], "input_tokens_sum": 91230, "output_tokens_sum": 1979, "description": "Distribution: Slamd64\nHardware Environment:\n\nAMD Athlon64 X2 4800+\nGigabyte GA-K8NXP-SLI motherboard\neVGA NVIDIA 6600GT PCI express\n\nSoftware Environment:\nx86_64 kernel target compiled from vanilla 2.6.12.5 kernel source\nx.org, nv driver (open source NVIDIA 2D accelerator driver)\n\nProblem Description:\nThe clock begins to run fast as soon as the CPU is loaded with a mathematical\ncalculation.  Kernel dmesg gives different messages depending on if in X windows\nor just at the console.  At the console the message is:\n\nLosing some ticks... checking if CPU frequency changed.\n\nIn X-Windows an additional message is\n\nwarning: many lost ticks.\nYour time source seems to be instable or some driver is hogging interupts\nrip default_idle+0x20/0x30\n\nIt might be possible to get that second message while only in console\neventually, but I haven't been able to do it.\n\nAlso, if hangcheck is turned on then I get a huge number of Hangcheck messages.\n\nAt first glance this might just sound like an annoying prob", "title": "lost ticks - hang check - after loading the CPU", "Kernel Version": "2.6.12", "Product": "Timers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/cpu/cpufreq.c", "kernel/time/timer.c", "drivers/char/nv.c", "arch/x86/kernel/process.c"], "causes": [{"cause": "The CPU frequency scaling is not properly synchronized with the timer interrupt, causing lost ticks when the CPU load changes.", "code_file": "arch/x86/kernel/cpu/cpufreq.c", "fix_solution": "Ensure that the CPU frequency scaling code properly updates the timer frequency when the CPU frequency changes, possibly by adding a call to update the timekeeping subsystem."}, {"cause": "The system timer interrupt is being delayed or missed due to high CPU load, leading to instability in the timekeeping.", "code_file": "kernel/time/timer.c", "fix_solution": "Modify the timer interrupt handler to be more resilient to delays, possibly by increasing the priority of the timer interrupt or by using a more stable time source."}, {"cause": "The NVIDIA driver or another driver is hogging interrupts, causing the timer interrupts to be missed.", "code_file": "drivers/char/nv.c", "fix_solution": "Investigate and modify the driver to ensure it releases interrupts more frequently, or adjust the interrupt handling to prevent it from blocking the timer interrupts."}, {"cause": "The default idle loop is not properly handling the CPU's power-saving states, leading to lost timer ticks.", "code_file": "arch/x86/kernel/process.c", "fix_solution": "Adjust the default idle loop to ensure it properly accounts for and compensates for any lost ticks when the CPU exits idle states."}], "input_tokens": 601, "output_tokens": 321}
{"id": "5093", "paths": ["drivers/net/wireless/atmel.c"], "predicts": ["drivers/pcmcia/cs.c", "drivers/pcmcia/ds.c", "drivers/pcmcia/pcmcia_ioctl.c", "kernel/power/swsusp.c", "drivers/base/firmware_class.c", "include/pcmcia/cs.h", "kernel/power/pm.c"], "input_tokens_sum": 92483, "output_tokens_sum": 1327, "description": "Distribution: Debian unstable\nHardware Environment: x86 laptop pentium M compaq nc4000\nSoftware Environment: pcmcia_cs (not udev)\nProblem Description: \n\nMachine hangs on swsusp suspend to disk if 3com 3CRSHPW196 (atmel_cs) is in use,\nafter printing these two lines\n\nYenta O2: res at 0x94/0xD4: 00/ea\nYenta O2: enabling read prefetch/write burst\n\nSome investigation with Magic Sysrq indicates that it stopped in the middle of\nswsusp_write -> device_resume ... -> request_firmware: presumably the pcmcia\ndevice got resumed before the disk it wants to load its firmware from\n\nSteps to reproduce \n# #  -- insert a 3com network card and wait for modules to load --\n# echo platform >/sys/power/disk\n# echo disk >/sys/power/state", "title": "atmel_cs needs to keep firmware", "Kernel Version": "2.6.12", "Product": "Drivers", "Component": "PCMCIA", "Hardware": "i386 Linux", "reranked_files": ["drivers/pcmcia/atmel_cs.c", "drivers/base/power/main.c", "drivers/base/firmware_class.c"], "causes": [{"cause": "The PCMCIA device is resumed before the disk, causing a failure in loading the firmware from the disk during suspend/resume operations.", "code_file": "drivers/pcmcia/atmel_cs.c", "fix_solution": "Ensure that the firmware is loaded and kept in memory before suspend, and modify the resume sequence to check if the firmware is already loaded."}, {"cause": "The suspend/resume sequence does not properly handle dependencies between devices, leading to a race condition where the network card attempts to access the disk before it is ready.", "code_file": "drivers/base/power/main.c", "fix_solution": "Modify the device resume sequence to ensure that storage devices are resumed before dependent devices like network cards."}, {"cause": "The request_firmware function is called during the resume process without checking if the firmware is already available, leading to a hang if the disk is not yet resumed.", "code_file": "drivers/base/firmware_class.c", "fix_solution": "Add a check in request_firmware to verify if the firmware is already loaded in memory before attempting to load it from disk."}], "input_tokens": 547, "output_tokens": 257}
{"id": "4781", "paths": ["drivers/cpufreq/cpufreq_conservative.c"], "predicts": ["drivers/cpufreq/cpufreq_conservative.c", "drivers/cpufreq/cpufreq.c", "arch/i386/kernel/cpu/cpufreq/powernow-k8.c", "include/linux/cpufreq.h", "drivers/acpi/processor_core.c", "kernel/power/pm.c", "arch/i386/kernel/process.c", "kernel/power/process.c", "include/asm-i386/processor.h", "kernel/power/console.c"], "input_tokens_sum": 92039, "output_tokens_sum": 1725, "description": "Distribution: Slackware-current \n \nHardware Environment: Bi-Opteron system with Tiger K8W board, Logitech USB \nkeyboard \n \nSoftware Environment: Self-compiled 2.6.12rc6 and 2.6.12 kernels with \nkernel.org sources without patches, GCC 3.4.2, KDE 3.4.1 using the Logitech \ndriver. \n \nProblem Description: \nWhen I set up \"conservative\" as scaling governor (using a simple 'echo \n\"conservative\" > /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor' for \nCPU0 and CPU1 at boot), I cannot type anything in consoles and applications \n(like Kword, for instance) anymore. The oly way I can get my keyboard back is \nrebooting. \nWhen I use \"ondemand\", I don't have such problem at all. \nMy keyboard is a Logitech Internet Navigator USB keyboard. I cannot test a PS/2 \nkeyboard on this system, the PS/2 connector doesn't work since I plugged a \nsecond CPU in it. Everything works find, though, on this system, with any \ngovernor except the \"conservative\" one, so my guess is that it still has some \nquirks. \n ", "title": "Conservative governor makes me lose my USB keyboard", "Kernel Version": "2.6.12", "Product": "Power Management", "Component": "cpufreq", "Hardware": "i386 Linux", "reranked_files": ["drivers/cpufreq/cpufreq_conservative.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "drivers/acpi/processor_perflib.c"], "causes": [{"cause": "The conservative governor may not be handling USB interrupt requests properly, leading to the loss of USB keyboard functionality.", "code_file": "drivers/cpufreq/cpufreq_conservative.c", "fix_solution": "Ensure that the conservative governor does not lower the CPU frequency too aggressively, which might be causing missed USB interrupts. Introduce a minimum frequency threshold or adjust the frequency scaling logic to be less aggressive."}, {"cause": "The conservative governor might not be correctly managing the CPU frequency transitions, causing timing issues with USB device polling.", "code_file": "drivers/usb/core/hcd.c", "fix_solution": "Add checks or synchronization mechanisms to ensure that USB polling is not affected by CPU frequency changes, possibly by prioritizing USB interrupts or adding a delay to frequency transitions."}, {"cause": "The conservative governor's logic might interfere with the USB driver's ability to handle power management events.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Modify the USB driver to better handle power state changes initiated by the CPU frequency governor, ensuring that USB devices remain responsive during frequency scaling."}, {"cause": "The conservative governor may not be properly interacting with the system's ACPI settings, affecting USB device power management.", "code_file": "drivers/acpi/processor_perflib.c", "fix_solution": "Review and adjust the ACPI performance management code to ensure compatibility with the conservative governor, possibly by refining the interaction between ACPI and CPU frequency scaling."}], "input_tokens": 621, "output_tokens": 340}
{"id": "4625", "paths": ["drivers/block/ub.c"], "predicts": ["drivers/usb/storage/usb.c", "drivers/usb/core/devio.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "include/linux/usb.h"], "input_tokens_sum": 90491, "output_tokens_sum": 1604, "description": "Distribution: mandrake 10.2 rc2 \n\nHardware Environment: desktop - Asus A7V133 motherboard - Athlon XP 1600 CPU \n\nProblem Description:\n\nI have a 128Mb usb key drive. Writing to it is very slow with ub driver.\nYesterday, I tried to copy 16Mb to this drive then I issued a sync command to\nunmount it. 11 (eleven) minutes later, I aborted it by rmmoding uhci_hcd. \n\nUsing usb-storage instead of ub worked well. \n\nSteps to reproduce:\n\n# modprobe ub \n(plug the usb key drive)\n# mount -orw,nosuid,nodev,iocharset=iso8859-15,umask=0 /dev/uba1 /mnt/disk\n# time sh -c \" dd if=/dev/urandom of=/mnt/disk/blah bs=1k count=512 ; sync;\" \n512+0 enregistrements lus.\n512+0 enregistrements", "title": "ub is much slower in writing than usb-storage", "Kernel Version": "2.6.13", "Product": "Drivers", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/block/ub.c"], "causes": [{"cause": "The ub driver may not be handling write caching efficiently, leading to slow write speeds.", "code_file": "drivers/block/ub.c", "fix_solution": "Implement a more efficient write caching mechanism or adjust the existing one to improve write performance."}, {"cause": "The ub driver might be using suboptimal block sizes for write operations, causing inefficiencies.", "code_file": "drivers/block/ub.c", "fix_solution": "Modify the block size used for write operations to better match the hardware capabilities of the USB key drive."}, {"cause": "The ub driver could be experiencing high overhead due to excessive locking or synchronization during write operations.", "code_file": "drivers/block/ub.c", "fix_solution": "Review and optimize the locking mechanisms to reduce overhead and improve write performance."}, {"cause": "The ub driver may not be fully utilizing the USB bandwidth, leading to slower write speeds compared to usb-storage.", "code_file": "drivers/block/ub.c", "fix_solution": "Enhance the driver to better utilize available USB bandwidth, possibly by increasing the number of concurrent write operations."}], "input_tokens": 562, "output_tokens": 262}
{"id": "4380", "paths": ["drivers/net/via-velocity.c"], "predicts": ["drivers/net/via-velocity.c", "drivers/net/via-velocity.h", "net/ethernet/eth.c", "net/core/dev.c", "include/linux/netdevice.h", "arch/i386/kernel/pci-dma.c", "include/asm-i386/pci.h", "net/ipv4/devinet.c", "net/ipv4/ip_output.c", "net/ipv6/addrconf.c"], "input_tokens_sum": 83916, "output_tokens_sum": 1009, "description": "Distribution: \n\nDebian testing\n\nHardware Environment:\n\nA normal PC with Pentium M and a VT6122 PCI board.\n\nlspci -vv:\n\n0000:02:04.0 Ethernet controller: VIA Technologies, Inc. VT6120/VT6121/VT6122\nGigabit Ethernet Adapter (rev 11)\n        Subsystem: VIA Technologies, Inc.: Unknown device 0110\n        Control: I/O+ Mem+ BusMaster- SpecCycle- MemWINV+ VGASnoop- ParErr-\nStepping- SERR+ FastB2B-\n        Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort-\n<TAbort- <MAbort- >SERR- <PERR-\n        Interrupt: pin A routed to IRQ 201\n        Region 0: I/O ports at 4000 [size=256]\n        Region 1: Memory at e0201000 (32-bit, non-prefetchable) [size=256]\n        Capabilities: [50] Power Management version 2\n                Flags: PMEClk- DSI- D1+ D2+ AuxCurrent=0mA\nPME(D0+,D1+,D2+,D3hot+,D3cold+)\n                Status: D3 PME-Enable- DSel=0 DScale=0 PME-\n\nSoftware Environment:\n\nDebian testing with 2.6.8 or 2.6.10 kernel.\n\nProblem Description:\n\nThe via velocity GE-driver isn't workin", "title": "(net via_velocity) receiver hang after setting mtu >1500", "Kernel Version": "2.6.8", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/via/via-velocity.c", "net/core/dev.c"], "causes": [{"cause": "The driver may not correctly handle MTU settings greater than 1500, leading to a receiver hang.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Modify the MTU setting logic to ensure proper buffer allocation and handling for MTU sizes greater than 1500."}, {"cause": "The network stack may not properly configure the hardware for jumbo frames, causing a hang when MTU is set above 1500.", "code_file": "net/core/dev.c", "fix_solution": "Ensure that the network stack correctly configures the hardware for jumbo frames by updating the device's MTU settings and verifying buffer sizes."}, {"cause": "The driver may not correctly handle interrupts or DMA operations for larger MTU sizes, leading to a receiver hang.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Review and update the interrupt handling and DMA configuration logic to accommodate larger MTU sizes."}, {"cause": "The driver may have a bug in the packet handling logic when MTU is set above 1500, causing a receiver hang.", "code_file": "drivers/net/ethernet/via/via-velocity.c", "fix_solution": "Inspect and correct the packet handling logic to ensure it can process packets correctly with larger MTU settings."}], "input_tokens": 682, "output_tokens": 316}
{"id": "4364", "paths": ["drivers/acpi/thermal.c"], "predicts": ["drivers/acpi/thermal.c", "drivers/acpi/ibm_acpi.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/power.c", "kernel/power/swsusp.c", "drivers/acpi/bus.c", "arch/i386/kernel/acpi/boot.c", "include/acpi/processor.h", "include/linux/acpi.h", "kernel/power/pm.c"], "input_tokens_sum": 91450, "output_tokens_sum": 1594, "description": "Distribution: Debian testing\n\nHardware Environment: Thinkpad 600X 650MHz Pentium III\n\nSoftware Environment: 2.6.11.4 + ACPI subsystem 20050309 + ibm_acpi 0.10f +\nXFree 4.3.0.1\n\nProblem Description: After entering S1 state, the screen goes blank but then\nstarts growing fine, rainbow-colored patterns near the middle of the screen and\na few horizontal lines.  The cruft grows until I hit the Fn key to wake it up. \nIt eventually comes back and the screen is just as it was before the sleep.  But\nvarious drivers are unhappy.  The uhci_hcd driver continuously reports error\nmessages such as \n\nhub 1-0:1.0: debounce: port 1: total 1500ms stable 0ms status 0x31f\nhub 1-0:1.0: connect-debounce failed, port 1 disabled\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nhub 1-0:1.0: over-current change on port 2\nhub 1-0:1.0: port 2, status 031f, change 000b, 1.5 Mb/s\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\nuhci_hcd 0000:00:07.2: port 2 portsc ffff,00\n\nThe mes", "title": "S1 suspend/resume resets thermal limits -- TP 600X", "Kernel Version": "2.6.16", "Product": "ACPI", "Component": "Power-Thermal", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/processor_thermal.c", "drivers/usb/host/uhci-hcd.c", "drivers/video/fbdev/core/fbmem.c", "drivers/acpi/sleep.c"], "causes": [{"cause": "The S1 suspend/resume cycle is not properly restoring thermal limits, leading to incorrect thermal management settings after wake-up.", "code_file": "drivers/acpi/processor_thermal.c", "fix_solution": "Ensure that thermal limits are saved before entering S1 state and restored upon resume by adding save and restore functions for thermal settings in the ACPI processor thermal management code."}, {"cause": "The USB subsystem is not correctly handling power state transitions, causing errors in the uhci_hcd driver after resume.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Implement proper power state handling in the UHCI driver by adding checks and reinitialization routines for USB ports during resume from S1 state."}, {"cause": "Graphics subsystem is not correctly handling the S1 suspend/resume cycle, leading to screen artifacts upon wake-up.", "code_file": "drivers/video/fbdev/core/fbmem.c", "fix_solution": "Add code to properly save and restore framebuffer state during suspend/resume cycles to prevent screen artifacts."}, {"cause": "ACPI subsystem is not correctly managing device states during S1 suspend/resume, leading to inconsistent device states.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Enhance the ACPI sleep code to ensure all device states are correctly saved and restored during S1 suspend/resume transitions."}], "input_tokens": 717, "output_tokens": 326}
{"id": "4359", "paths": ["arch/i386/kernel/smpboot.c"], "predicts": ["arch/i386/kernel/smp.c", "drivers/acpi/processor.c", "arch/i386/kernel/setup.c", "include/asm-i386/processor.h", "include/linux/topology.h"], "input_tokens_sum": 82715, "output_tokens_sum": 1502, "description": "Distribution: RHEL4 AS, Fedora Core 2\nHardware Environment: Dual Xeon (HP DL-360 or Sun Fire V60x)\nSoftware Environment: kernel-smp\nProblem Description: inconsistent sibling count when ht is disabled\n\nSteps to reproduce:\n\nOn an HP DL-360 or Sun Fire V60x (dual xeon systems)\n  1. disable HT in the bios\n  2. boot any smp kernel after 2.6.5 (didn't try UP kernel)\n  3. /proc/cpuinfo shows 2 processors (phys ID 0 and 3) with 2 siblings\n\nExpected behavior:\n /proc/cpuinfo should show 2 processors with 1 sibling each.\n\nI don't see this behavior on any of my other dual xeon systems (HP x4000,\nxw8000, or xw8200).\nI don't see this behavior on ANY systems running kernel 2.6.5 or earlier.\nI've tried updating the firmware and that didn't help.", "title": "With HT off in bios, /proc/cpuinfo shows2 processors, each with 2 siblings", "Kernel Version": "2.6.7", "Product": "ACPI", "Component": "BIOS", "Hardware": "i386 Linux", "reranked_files": ["arch/x86/kernel/cpu/topology.c", "drivers/acpi/processor_core.c", "arch/x86/kernel/smpboot.c"], "causes": [{"cause": "The kernel's CPU topology detection logic is not correctly accounting for the BIOS setting that disables Hyper-Threading, leading to an incorrect sibling count.", "code_file": "arch/x86/kernel/cpu/topology.c", "fix_solution": "Modify the CPU topology detection logic to correctly interpret the BIOS settings and adjust the sibling count accordingly when Hyper-Threading is disabled."}, {"cause": "The ACPI processor driver may not be correctly updating the CPU topology information when Hyper-Threading is disabled in the BIOS.", "code_file": "drivers/acpi/processor_core.c", "fix_solution": "Ensure that the ACPI processor driver correctly updates the CPU topology information by checking the BIOS settings and adjusting the sibling count when Hyper-Threading is disabled."}, {"cause": "The initialization code for the CPU may not be correctly handling the case where Hyper-Threading is disabled, leading to incorrect sibling information being reported.", "code_file": "arch/x86/kernel/smpboot.c", "fix_solution": "Update the CPU initialization code to correctly handle the scenario where Hyper-Threading is disabled, ensuring that the sibling count is set to 1 for each processor."}], "input_tokens": 576, "output_tokens": 269}
{"id": "4351", "paths": ["drivers/char/ipmi/ipmi_si_intf.c"], "predicts": ["drivers/acpi/tables/tbget.c", "drivers/acpi/tables/tbutils.c", "drivers/acpi/acpi_ksyms.c", "arch/i386/kernel/acpi/boot.c", "include/acpi/acpi.h"], "input_tokens_sum": 86094, "output_tokens_sum": 1670, "description": "I find this bug in IPMI driver but after root cause I think it is an ACPI \nrelated bug.So post it here and say sorry in advance if it is not the proper \nplace for it.\n\nDistribution:\nRed Hat Enterprise Linux AS release 4\n\nHardware Environment:\nHPCX 2600\n\nSoftware Environment:\n\n\nProblem Description:\n\nFail to load ipmi_si driver with oop.\n\nMore details can be found in PS2.\n\nAfter debugging with the driver, I found the OOP is caused by an invalid \naddress.In IPMI driver, we will call acpi_get_firmware_table in try_init_acpi \nfunction to get the information of SPMI table. In this information, there is a \nmemory pointered by spmi->addr.address and it is invalid. It seems acpi map a \nwrong memory and send itout to IPMI but from the boot log of system ACPI is \nenabled properly. I think in this case, an error code should be returned by \nacpi_get_firmware_table instead of AE_OK, just as what we see in IPMI driver\n(See PS1)\n\n\nSteps to reproduce:\n    modprobe ipmi_msghandler\n    modprobe ipmi_si k", "title": "acpi_get_firmware_table return an invalid block of memory", "Kernel Version": "2.6.9", "Product": "ACPI", "Component": "BIOS", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/acpica/tbxfroot.c", "drivers/acpi/acpica/tbutils.c", "drivers/char/ipmi/ipmi_si_intf.c"], "causes": [{"cause": "acpi_get_firmware_table may not correctly validate the memory address returned for the SPMI table, leading to an invalid memory address being used.", "code_file": "drivers/acpi/acpica/tbxfroot.c", "fix_solution": "Add validation checks for the memory address returned by acpi_get_firmware_table to ensure it is within a valid range before returning AE_OK."}, {"cause": "The ACPI table parsing logic might not correctly handle certain edge cases, resulting in incorrect memory mapping.", "code_file": "drivers/acpi/acpica/tbutils.c", "fix_solution": "Enhance the table parsing logic to include additional checks for table integrity and address validity, returning an error code if validation fails."}, {"cause": "The IPMI driver may not correctly handle the error codes returned by acpi_get_firmware_table, leading to an assumption of valid memory.", "code_file": "drivers/char/ipmi/ipmi_si_intf.c", "fix_solution": "Modify the IPMI driver to properly check the return value of acpi_get_firmware_table and handle error codes appropriately, avoiding the use of invalid memory addresses."}], "input_tokens": 609, "output_tokens": 264}
{"id": "4312", "paths": ["drivers/video/tridentfb.c"], "predicts": ["drivers/video/tridentfb.c", "include/video/trident.h", "drivers/video/console/fbcon.c", "drivers/video/fbmem.c", "sound/oss/trident.c", "sound/pci/trident/trident.c", "sound/pci/trident/trident_main.c", "sound/pci/trident/trident_memory.c", "sound/pci/trident/trident_synth.c"], "input_tokens_sum": 90856, "output_tokens_sum": 1703, "description": "Distribution: Debian/sarge\nHardware Environment: VIA Mini-ITX with onboard graphic\nlspci -v:\n0000:01:00.0 VGA compatible controller: Trident Microsystems CyberBlade/i1 (rev\n6a) (prog-if 00 [VGA])\n        Subsystem: Trident Microsystems CyberBlade/i1\n        Flags: bus master, 66MHz, medium devsel, latency 32, IRQ 11\n        Memory at e1800000 (32-bit, non-prefetchable) [size=8M]\n        Memory at e2000000 (32-bit, non-prefetchable) [size=128K]\n        Memory at e1000000 (32-bit, non-prefetchable) [size=8M]\n        Capabilities: [80] AGP version 2.0\n                Status: RQ=33 Iso- ArqSz=0 Cal=0 SBA+ ITACoh- GART64- HTrans-\n64bit- FW- AGP3- Rate=x1,x2,x4\n                Command: RQ=1 ArqSz=0 Cal=0 SBA- AGP- GART64- 64bit- FW-\nRate=<none>\n        Capabilities: [90] Power Management version 1\n                Flags: PMEClk- DSI+ D1+ D2+ AuxCurrent=0mA\nPME(D0-,D1-,D2-,D3hot-,D3cold-)\n                Status: D0 PME-Enable- DSel=0 DScale=0 PME-\n\nProblem Description:\nWhen there is disk I/O h", "title": "tridentfb: flicker when disk I/O is happening", "Kernel Version": "2.6.11", "Product": "Drivers", "Component": "Console/Framebuffers", "Hardware": "i386 Linux", "reranked_files": ["drivers/video/tridentfb.c", "drivers/video/fbmem.c", "drivers/char/agp/agp.c", "drivers/video/tridentfb_pm.c"], "causes": [{"cause": "The flickering issue may be due to improper handling of framebuffer updates during disk I/O operations, possibly due to inadequate synchronization between the framebuffer and disk I/O operations.", "code_file": "drivers/video/tridentfb.c", "fix_solution": "Introduce proper locking mechanisms or use double buffering to ensure framebuffer updates are synchronized with disk I/O operations."}, {"cause": "The flickering could be caused by the framebuffer driver not properly managing the graphics memory, leading to contention during disk I/O.", "code_file": "drivers/video/fbmem.c", "fix_solution": "Optimize memory management routines to ensure that framebuffer memory is not being accessed concurrently with disk I/O operations."}, {"cause": "The issue might be related to the AGP settings not being correctly configured, causing the graphics card to not handle concurrent operations efficiently.", "code_file": "drivers/char/agp/agp.c", "fix_solution": "Review and adjust AGP settings to ensure that the graphics card can handle concurrent operations without causing flickering."}, {"cause": "The flickering may be due to the power management settings interfering with the graphics card's operation during disk I/O.", "code_file": "drivers/video/tridentfb_pm.c", "fix_solution": "Ensure that power management settings do not throttle the graphics card during disk I/O operations, possibly by disabling certain power-saving features."}], "input_tokens": 700, "output_tokens": 315}
{"id": "4249", "paths": ["net/netlink/af_netlink.c"], "predicts": ["net/netlink/af_netlink.c", "include/net/sock.h", "include/linux/skbuff.h", "security/selinux/netlink.c"], "input_tokens_sum": 92675, "output_tokens_sum": 1333, "description": "Distribution: Slackware 10\nHardware Environment:\n# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 3\nmodel name      : Intel(R) Pentium(R) 4 CPU 2.80GHz\nstepping        : 4\ncpu MHz         : 2793.832\ncache size      : 1024 KB\nphysical id     : 0\nsiblings        : 2\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug        : no\ncoma_bug        : no\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 5\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov\npat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe pni monitor ds_cpl cid\nxtpr\nbogomips        : 5505.02\n\nprocessor       : 1\nvendor_id       : GenuineIntel\ncpu family      : 15\nmodel           : 3\nmodel name      : Intel(R) Pentium(R) 4 CPU 2.80GHz\nstepping        : 4\ncpu MHz         : 2793.832\ncache size      : 1024 KB\nphysical id     : 0\nsiblings        : 2\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug    ", "title": "KERNEL: assertion (!atomic_read(&sk->sk_rmem_alloc)) failed at net/netlink/af_netlink.c (122)", "Kernel Version": "2.6.11", "Product": "Networking", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["net/netlink/af_netlink.c", "net/core/sock.c", "net/core/dev.c"], "causes": [{"cause": "The assertion failure indicates that the socket's receive memory allocation counter is not zero when it is expected to be. This could be due to improper handling of socket memory allocation or deallocation.", "code_file": "net/netlink/af_netlink.c", "fix_solution": "Ensure that all paths leading to the socket closure properly decrement the sk_rmem_alloc counter. Add checks and balances to ensure that memory is correctly freed and the counter is decremented appropriately."}, {"cause": "A race condition might be causing the sk_rmem_alloc counter to be incremented or decremented incorrectly, leading to the assertion failure.", "code_file": "net/core/sock.c", "fix_solution": "Introduce locking mechanisms around the sk_rmem_alloc counter updates to prevent race conditions. Use spinlocks or other appropriate synchronization primitives to ensure atomicity."}, {"cause": "Improper handling of netlink messages that results in memory not being freed correctly, causing the sk_rmem_alloc counter to remain non-zero.", "code_file": "net/netlink/af_netlink.c", "fix_solution": "Review the netlink message handling code to ensure that all allocated memory is freed correctly. Add additional checks to ensure that memory is not leaked during message processing."}, {"cause": "A bug in the network stack that causes memory to be allocated but not properly accounted for, leading to discrepancies in the sk_rmem_alloc counter.", "code_file": "net/core/dev.c", "fix_solution": "Audit the network stack code to ensure that all memory allocations are properly tracked and accounted for. Implement additional logging to trace memory allocation and deallocation events."}], "input_tokens": 708, "output_tokens": 368}
{"id": "4219", "paths": ["drivers/net/pcnet32.c"], "predicts": ["drivers/net/pcnet32.c", "include/linux/netdevice.h", "net/core/dev.c", "net/core/ethtool.c", "include/linux/etherdevice.h"], "input_tokens_sum": 86512, "output_tokens_sum": 892, "description": "Problem Description:\n\n We have an Allied Telesyn 2701 FTX network cards. These cards has 2 interfaces:\na Fiberoptic 100 Mbit and a TP 10/100Mbit interface. These cards are based on\nAMD PCnet-PRO (AM79C976) chip. We coonnected two such cards using fiberoptic\ncables so diode on the cards indicates 100Mbit link. But Linux can't detect\nthis. It allways says \"link is down\". However, network works, but speed is very\nlow, about 1 Mbit.", "title": "pcnet32 fiberoptic do not works on Allied Telesyn 2701FTX", "Kernel Version": "2.6.16", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/amd/pcnet32.c"], "causes": [{"cause": "The pcnet32 driver does not correctly handle the fiberoptic interface detection for the AMD PCnet-PRO (AM79C976) chip.", "code_file": "drivers/net/ethernet/amd/pcnet32.c", "fix_solution": "Modify the link detection logic to correctly identify the fiberoptic interface and update the link status accordingly."}, {"cause": "The driver may not be correctly configuring the PHY settings for the fiberoptic interface, leading to incorrect speed and link status reporting.", "code_file": "drivers/net/ethernet/amd/pcnet32.c", "fix_solution": "Ensure that the PHY configuration is correctly set for fiberoptic operation, including speed and duplex settings."}, {"cause": "The driver might be using incorrect or outdated methods to check the link status, which does not account for fiberoptic connections.", "code_file": "drivers/net/ethernet/amd/pcnet32.c", "fix_solution": "Update the link status checking mechanism to include support for fiberoptic connections, possibly by adding specific checks for the AM79C976 chip."}], "input_tokens": 486, "output_tokens": 252}
{"id": "3518", "paths": ["drivers/acpi/sleep/proc.c"], "predicts": ["drivers/acpi/sleep/wakeup.c", "arch/i386/kernel/acpi/sleep.c", "include/acpi/acpi_bus.h", "drivers/acpi/events/evregion.c", "arch/i386/kernel/acpi/boot.c", "drivers/acpi/resources/rsmisc.c", "include/acpi/acevents.h", "drivers/acpi/resources/rsxface.c", "kernel/power/pm.c", "arch/i386/kernel/io_apic.c"], "input_tokens_sum": 87327, "output_tokens_sum": 1563, "description": "Distribution: Slackware 10\nHardware Environment: Notebook Aristo 2500, CPU Celeron 2.40Ghz\nProblem Description:\n\nWhen i go into S3 mode (echo mem >/sys/power/state), i can wakeup\nby pressing SLPB (Fn+ESC on my laptop) or opening LID.\nWhen i do that on a working system, kernel sends events\n\"button/sleep SLPB 00000080 00000000x\" when i'm pressing Fn+ESC\nand \"button/lid LID 000000080 00000000x\" when i'm openning or\nclosing LID.\nBut, when i disable LID (echo LID >/proc/acpi/wakeup) *or*\nSLPB (echo SLPB >/proc/acpi/wakeup), i do cat /proc/acpi/wakeup\nand i see that LID or SLPB is disabled, i can't go back\nfrom S3 state.\n\nSteps to reproduce:\necho LID >/proc/acpi/wakeup or echo SLPB >/proc/acpi/wakeup\nand echo mem >/sys/power/state", "title": "disable event LID blocks SLPB and vice versa on wakeup from S3", "Kernel Version": "2.6.9", "Product": "ACPI", "Component": "Power-Sleep-Wake", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/sleep.c", "drivers/acpi/button.c", "drivers/acpi/wakeup.c"], "causes": [{"cause": "The ACPI wakeup event handling does not correctly update the wakeup mask when disabling LID or SLPB, preventing wakeup from S3 state.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the wakeup mask is correctly updated when disabling LID or SLPB, allowing other wakeup sources to function properly."}, {"cause": "The ACPI subsystem does not correctly handle the wakeup event registration, leading to conflicts between LID and SLPB events.", "code_file": "drivers/acpi/button.c", "fix_solution": "Modify the event registration logic to ensure that disabling one event does not inadvertently disable other wakeup sources."}, {"cause": "The ACPI wakeup configuration does not correctly propagate changes to the system state, causing wakeup sources to be ignored.", "code_file": "drivers/acpi/wakeup.c", "fix_solution": "Add logic to refresh the wakeup configuration after changes to ensure all wakeup sources are correctly recognized."}], "input_tokens": 604, "output_tokens": 235}
{"id": "3108", "paths": ["drivers/usb/core/devio.c"], "predicts": ["drivers/usb/core/devices.c", "drivers/usb/core/devio.c", "fs/proc/base.c", "fs/proc/generic.c", "drivers/usb/core/file.c", "arch/i386/kernel/process.c", "kernel/fork.c", "drivers/usb/core/hub.c", "include/linux/usb.h", "include/linux/proc_fs.h"], "input_tokens_sum": 81391, "output_tokens_sum": 1632, "description": "Problem Description: \nWe have a setup where we use libusb to control 32 units throughout a test \nprocess.  Basically we detect when a board is plugged in and fork a process for \nit.  Starting with 2.6.7, we have been having hang problems where the fork \noccurs and then the process goes into disk wait.  Once the test completes on \nthe units already running, then the processes in disk wait will continue.  I'm \nbetting it has to do with some of the serialize changes that went into 2.6.7. \n \nSteps to reproduce: \nTransfer data over several devices and then try to cat /proc/bus/usb/devices.", "title": "/proc/bus/usb/devices stall", "Kernel Version": "2.6.7", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/devices.c", "drivers/usb/core/hub.c", "fs/proc/generic.c", "drivers/usb/core/usb.c"], "causes": [{"cause": "The serialization changes in kernel version 2.6.7 may have introduced a bottleneck in the USB subsystem, causing processes to hang when accessing /proc/bus/usb/devices.", "code_file": "drivers/usb/core/devices.c", "fix_solution": "Review and potentially adjust the locking mechanism around the USB device list to ensure that it does not cause unnecessary blocking when accessed concurrently."}, {"cause": "The USB device enumeration process might be holding locks for too long, causing other processes to wait when accessing /proc/bus/usb/devices.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Optimize the USB device enumeration process to release locks more quickly or use finer-grained locking to reduce contention."}, {"cause": "The process of reading from /proc/bus/usb/devices may be inefficient, leading to delays when multiple processes attempt to read simultaneously.", "code_file": "fs/proc/generic.c", "fix_solution": "Improve the efficiency of the proc file reading mechanism, possibly by implementing a more efficient data retrieval method or caching strategy."}, {"cause": "The USB subsystem might be experiencing a deadlock due to improper handling of concurrent access to USB devices.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Investigate and resolve potential deadlocks by ensuring that all locks are acquired and released in a consistent order and that no circular dependencies exist."}], "input_tokens": 499, "output_tokens": 333}
{"id": "3024", "paths": ["drivers/acpi/hardware/hwsleep.c"], "predicts": ["kernel/power/poweroff.c", "arch/i386/kernel/reboot.c", "drivers/acpi/power.c", "arch/i386/pci/acpi.c", "include/linux/acpi.h", "drivers/acpi/acpi_ksyms.c", "init/main.c", "arch/i386/kernel/smp.c", "kernel/power/pm.c", "kernel/sys.c"], "input_tokens_sum": 84667, "output_tokens_sum": 1676, "description": "Distribution: Debian Sid (unstable)\nHardware Environment: Tyan Thunder K7 (s2462 with latest 2.14 Bios), Dual Athlon\nMP 1200 MHz, Ati Radeon 9600, Sounblaster PCI 128 (ens1371)\n\nlspci\n\n0000:00:00.0 Host bridge: Advanced Micro Devices [AMD] AMD-760 MP [IGD4-2P]\nSystem Controller (rev 11)\n0000:00:01.0 PCI bridge: Advanced Micro Devices [AMD] AMD-760 MP [IGD4-2P] AGP\nBridge\n0000:00:07.0 ISA bridge: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] ISA\n(rev 02)\n0000:00:07.1 IDE interface: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] IDE\n(rev 01)\n0000:00:07.3 Bridge: Advanced Micro Devices [AMD] AMD-766 [ViperPlus] ACPI (rev 01)\n0000:00:07.4 USB Controller: Advanced Micro Devices [AMD] AMD-766 [ViperPlus]\nUSB (rev 07)\n0000:00:0b.0 Multimedia audio controller: Ensoniq ES1371 [AudioPCI-97] (rev 06)\n0000:00:0d.0 SCSI storage controller: Adaptec AIC-7899P U160/m (rev 01)\n0000:00:0d.1 SCSI storage controller: Adaptec AIC-7899P U160/m (rev 01)\n0000:00:0f.0 Ethernet controller: 3Com Corporation", "title": "Tyan Thunder K7 hangs on shutdown / reboot", "Kernel Version": "2.6.7", "Product": "ACPI", "Component": "Power-Off", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/sleep.c", "drivers/pci/pci.c", "arch/x86/kernel/process.c", "drivers/usb/core/hcd.c", "drivers/ide/ide.c"], "causes": [{"cause": "The ACPI subsystem may not be handling the power-off sequence correctly on the AMD-766 chipset, leading to a hang during shutdown.", "code_file": "drivers/acpi/sleep.c", "fix_solution": "Ensure that the ACPI power-off sequence is correctly implemented for the AMD-766 chipset by adding chipset-specific handling in the ACPI shutdown path."}, {"cause": "The system may not be properly handling the shutdown of the PCI devices, particularly the AMD-766 ACPI bridge, causing the system to hang.", "code_file": "drivers/pci/pci.c", "fix_solution": "Add a quirk or specific handling for the AMD-766 ACPI bridge to ensure it is properly shut down during the system power-off sequence."}, {"cause": "The kernel may not be correctly managing the power states of the dual Athlon MP processors during shutdown, leading to a hang.", "code_file": "arch/x86/kernel/process.c", "fix_solution": "Implement proper power state transitions for dual Athlon MP processors during shutdown to ensure they are correctly powered off."}, {"cause": "The USB controller on the AMD-766 chipset may not be properly disabled during shutdown, causing the system to hang.", "code_file": "drivers/usb/core/hcd.c", "fix_solution": "Ensure that the USB controller is properly disabled during the shutdown sequence by adding specific handling for the AMD-766 USB controller."}, {"cause": "The IDE interface on the AMD-766 chipset may not be correctly handling shutdown commands, leading to a system hang.", "code_file": "drivers/ide/ide.c", "fix_solution": "Add specific shutdown handling for the AMD-766 IDE interface to ensure it completes all pending operations and powers down correctly."}], "input_tokens": 723, "output_tokens": 401}
{"id": "2829", "paths": ["fs/locks.c"], "predicts": ["fs/locks.c", "fs/fcntl.c", "fs/file.c"], "input_tokens_sum": 84365, "output_tokens_sum": 1534, "description": "Distribution: debian\nHardware Environment:\nSoftware Environment:\nProblem Description: Using POSIX threads makes posix_locks_deadlock() loop\ninfinitely.\n\nSteps to reproduce:\n\nThere are 3 processes; \"A\", \"B\" and \"C\".\nEach process opens \"file1\", \"file2\" and \"file3\".\n\n\"A\" creates 3 POSIX threads; \"A1\", \"A2\" and \"A3\". (These threads' PIDs are the\nsame.)\n\"B\" creates 2 POSIX threads; \"B1\" and \"B2\". (These threads' PIDs are the same.)\n\"C\" creates 1 POSIX thread; \"C1\".\n\n\n1. \"A1\" locks \"file1\" exclusively.\n2. \"B1\" locks \"file2\" exclusively.\n3. \"C1\" locks \"file3\" exclusively.\n4. \"A2\" trys to lock \"file2\" and sleeps (blocked by \"B1\").\n5. \"A3\" trys to lock \"file3\" and sleeps (blocked by \"C1\").\n6. \"B2\" trys to lock \"file1\".\n   Here, posix_locks_deadlock() must detect deadlock, but\n   it does not. Then \"B2\" sleeps (blocked \"A1\").\n\n  \"A\"                                    \"B\"\n   |                                      |\n   +--A1(LOCK)---->(file1)<-B2(*deadlock)-+\n   |                                   ", "title": "posix_locks_deadlock() loops infinitely", "Kernel Version": "2.6.6", "Product": "File System", "Component": "VFS", "Hardware": "i386 Linux", "reranked_files": ["fs/locks.c"], "causes": [{"cause": "The posix_locks_deadlock() function fails to correctly detect a circular wait condition among the threads, leading to an infinite loop.", "code_file": "fs/locks.c", "fix_solution": "Enhance the deadlock detection logic in posix_locks_deadlock() to correctly identify circular dependencies among threads holding and requesting locks."}, {"cause": "The lock management logic does not properly account for the shared nature of thread PIDs within a process, causing incorrect deadlock detection.", "code_file": "fs/locks.c", "fix_solution": "Modify the lock management to correctly handle threads with the same PID by considering thread-specific identifiers in deadlock detection."}, {"cause": "The algorithm used for deadlock detection may not be considering all possible lock acquisition paths, leading to missed deadlock scenarios.", "code_file": "fs/locks.c", "fix_solution": "Implement a more comprehensive graph-based deadlock detection algorithm that considers all potential lock acquisition paths."}], "input_tokens": 669, "output_tokens": 229}
{"id": "2638", "paths": ["init/main.c"], "predicts": ["drivers/acpi/osl.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/utilities/utglobal.c", "include/acpi/acpi.h", "arch/i386/kernel/setup.c", "drivers/acpi/acpi_ksyms.c", "lib/cmdline.c", "init/main.c", "kernel/params.c"], "input_tokens_sum": 80068, "output_tokens_sum": 1449, "description": "Distribution: Debian unstable \nHardware Environment: Centrino Notebook Bullman V5Cen (= Compal  \nCL50) \nProblem Description: \n \nI am using the command line parameter acpi_os_name=\"Microsoft \nWindows XP\" to prevent the EHCI device from being disabled. However, \nthis does not work anymore with kernel 2.6.5 onwards. \n \nWith kernel 2.6.4, dmesg also showed a line containing: \n \nACPI: Overriding _OS definition \n \nWith kernel 2.6.5 and 2.6.6-rc1, acpi_os_name=\"Microsoft Windows XP\" \ndoes not have the desired effect (not disabling the EHCI device), and the \nabove line is not shown in dmesg. \n \nThis happens with both the kernels supplied by the Debian project and \nkernels compiled by myself from the original source.", "title": "kernel parameter acpi_os_name= does not work", "Kernel Version": "2.6.5", "Product": "ACPI", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/osl.c", "drivers/acpi/acpi_osi.c", "drivers/acpi/bus.c"], "causes": [{"cause": "The kernel parameter acpi_os_name is not being correctly parsed or applied in the ACPI subsystem, leading to the failure to override the _OS definition.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Ensure that the acpi_os_name parameter is correctly parsed and applied by adding checks and logging in the acpi_osl.c file to verify the parameter is being set and used."}, {"cause": "Changes in the ACPI subsystem between kernel versions 2.6.4 and 2.6.5 may have altered how the _OS definition is overridden, possibly due to refactoring or updates in the ACPI code.", "code_file": "drivers/acpi/acpi_osi.c", "fix_solution": "Review changes between kernel versions and restore or adjust the logic for overriding the _OS definition to ensure compatibility with the acpi_os_name parameter."}, {"cause": "The initialization sequence for ACPI may have changed, causing the acpi_os_name parameter to be ignored or not applied at the correct time during boot.", "code_file": "drivers/acpi/bus.c", "fix_solution": "Modify the initialization sequence to ensure that the acpi_os_name parameter is applied early enough in the boot process to affect the ACPI subsystem's behavior."}], "input_tokens": 541, "output_tokens": 294}
{"id": "2567", "paths": ["drivers/acpi/pci_link.c"], "predicts": ["arch/i386/kernel/irq.c", "arch/i386/kernel/pci-irq.c", "arch/i386/kernel/setup.c", "drivers/acpi/pci_irq.c", "drivers/acpi/pci_link.c", "drivers/pci/setup-irq.c", "include/asm-i386/irq.h", "include/asm-i386/io_apic.h", "arch/i386/kernel/io_apic.c", "kernel/resource.c"], "input_tokens_sum": 64765, "output_tokens_sum": 1263, "description": "Hardware Environment: some centrino laptop\nProblem Description:\n\n I'm trying to use Intel Wireless 2100 adapter on my centrino based\n notebook. I use ipw2100 drivers from ipw2100.sf.net. The thing is that\n hardware says that the device should generate irq11, but it really\n generates irq5. I tryed both 2.4.26 and 2.6.5. I also tryed to compile\n kernel with and without ACPI. I tryed to compile kernel with and\n without APIC support. I also tryed to pass some parameters to kernel\n (acpi=off, acpi=force, pci=biosirq). But anyway kernel says irq 11 and\n device generates irq5. Of course it is possible to be hardware\n problem, but it works under windows.", "title": "wrong irq rouing on centrino laptop - PIC", "Kernel Version": "2.4.26", "Product": "ACPI", "Component": "Config-Interrupts", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/pci_irq.c", "arch/x86/kernel/apic/io_apic.c", "drivers/pci/pci.c", "drivers/acpi/osl.c"], "causes": [{"cause": "The IRQ routing for the Intel Wireless 2100 adapter is incorrectly configured due to ACPI misconfiguration.", "code_file": "drivers/acpi/pci_irq.c", "fix_solution": "Modify the ACPI IRQ routing logic to correctly interpret and assign the IRQs as per the hardware configuration."}, {"cause": "The APIC (Advanced Programmable Interrupt Controller) is not correctly handling the IRQ assignments, leading to a mismatch.", "code_file": "arch/x86/kernel/apic/io_apic.c", "fix_solution": "Ensure that the IO-APIC initialization and configuration correctly map the IRQs as per the system's hardware table."}, {"cause": "The PCI subsystem is not correctly reading or applying the IRQ settings from the BIOS or ACPI tables.", "code_file": "drivers/pci/pci.c", "fix_solution": "Update the PCI IRQ assignment logic to ensure it correctly reads and applies the IRQ settings from the BIOS or ACPI tables."}, {"cause": "The kernel's ACPI implementation might not be fully compatible with the specific ACPI tables provided by the laptop's firmware.", "code_file": "drivers/acpi/osl.c", "fix_solution": "Enhance the ACPI OS Layer (OSL) to better handle the specific ACPI tables and configurations provided by the laptop's firmware."}], "input_tokens": 531, "output_tokens": 308}
{"id": "2443", "paths": ["drivers/acpi/events/evxfevnt.c"], "predicts": ["drivers/acpi/battery.c", "drivers/acpi/power.c", "kernel/power/pm.c", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "include/acpi/acpi.h", "include/linux/acpi.h"], "input_tokens_sum": 80164, "output_tokens_sum": 1473, "description": "Distribution: Slackware-based, mostly self-built \nHardware Environment: IBM ThinkPad 240 - Celeron Mendocino 300, 192MB RAM \nSoftware Environment: \nProblem Description: System \"pauses\" for up to a second at a time, \napproximately every 10-15 seconds when ACPI is enabled. This corresponds to a \nblock of anything up to 10 \"battery BAT1 00000080 00000001\" events being \ngenerated. Running top shows \"events/0\" clocking up a chunk of CPU time \ncorresponding to the pause duration each time it occurs. \n \nUnder 2.4.25, the battery events always appear in twos. \n \nSteps to reproduce: Simply boot the system with an ACPI-enabled kernel :) I \ndon't know whether it is ThinkPad 240-specific or whether other systems are \nalso affected. The pauses are most noticeable when playing audio or video, but \naffect everything - when typing, characters will briefly stop being echoed \"in \nreal time\", then the system will \"catch up\" when the pause ends.", "title": "Frequent short \"pauses\" corresponding to multiple battery events", "Kernel Version": "2.6.5", "Product": "ACPI", "Component": "Power-Battery", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/battery.c", "kernel/events/core.c", "drivers/acpi/ec.c", "drivers/acpi/acpi_bus.c"], "causes": [{"cause": "Excessive battery event generation due to inefficient polling mechanism in ACPI battery driver.", "code_file": "drivers/acpi/battery.c", "fix_solution": "Optimize the event polling mechanism to reduce the frequency of battery status checks, possibly by implementing a debounce mechanism or increasing the polling interval."}, {"cause": "High CPU usage by the events/0 kernel thread due to frequent ACPI event handling.", "code_file": "kernel/events/core.c", "fix_solution": "Introduce a rate-limiting mechanism for handling ACPI events to prevent the events/0 thread from consuming excessive CPU time."}, {"cause": "Inefficient handling of ACPI battery events leading to system pauses.", "code_file": "drivers/acpi/ec.c", "fix_solution": "Improve the efficiency of the ACPI Embedded Controller (EC) event handling to reduce the processing time for each event."}, {"cause": "Unnecessary wake-ups of the CPU due to frequent ACPI battery status checks.", "code_file": "drivers/acpi/acpi_bus.c", "fix_solution": "Modify the ACPI bus code to batch process battery events or defer non-critical events to reduce CPU wake-ups."}], "input_tokens": 587, "output_tokens": 278}
{"id": "2423", "paths": ["drivers/usb/core/message.c"], "predicts": ["drivers/usb/core/usb.c", "drivers/usb/core/devio.c", "drivers/usb/core/hub.c", "drivers/usb/host/uhci-hcd.c", "drivers/usb/host/uhci-hub.c", "include/linux/usb.h", "net/bluetooth/hci_core.c", "net/bluetooth/hci_event.c", "net/bluetooth/hci_conn.c", "net/bluetooth/af_bluetooth.c"], "input_tokens_sum": 84126, "output_tokens_sum": 1357, "description": "Distribution: debian unstable\nHardware Environment: Asus L7000 OEM laptop (Intel UHCI), bluetooth dongle\n(worked before)\nSoftware Environment: hotplug 0.0.20040329-2, bluez 1.5-2 (debian unstable)\nProblem Description:\nWhen I insert my USB/Bluetooth dongle, the kernel OOPSes on me, and the device\ndoesn't show up in /proc/usb/devices (it doesn't work at all):\n\nusb 1-1: new full speed USB device using address 3\nUnable to handle kernel NULL pointer dereference at virtual address 00000004\n printing eip:\nc0238fc4\n*pde = 00000000\nOops: 0000 [#1]\nCPU:    0\nEIP:    0060:[<c0238fc4>]    Not tainted\nEFLAGS: 00010296   (2.6.5-rc3) \nEIP is at usb_disable_interface+0x14/0x50\neax: cb6280e0   ebx: 00000000   ecx: 00000286   edx: cbfef0a0\nesi: 00000002   edi: 00000000   ebp: c98eb800   esp: cbd53d48\nds: 007b   es: 007b   ss: 0068\nProcess khubd (pid: 5, threadinfo=cbd52000 task=cbfb2040)\nStack: 00001388 0000007b 00000001 00000002 c4496c10 c98eb800 c0239248 c98eb800 \n       cb6280e0 0000000b 00000001 000", "title": "2.6.4-rc3 OOPSes on insertion/removal of bluetooth dongle", "Kernel Version": "2.6.5", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/message.c", "drivers/usb/core/hub.c", "drivers/usb/core/usb.c"], "causes": [{"cause": "The usb_disable_interface function is being called with a NULL pointer, leading to a NULL pointer dereference.", "code_file": "drivers/usb/core/message.c", "fix_solution": "Add a NULL check for the interface pointer before dereferencing it in the usb_disable_interface function."}, {"cause": "The khubd process is attempting to disable a USB interface that has already been removed or not properly initialized.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Ensure that the interface is valid and initialized before attempting to disable it in the hub_disconnect function."}, {"cause": "Improper handling of USB device removal leading to race conditions where the interface is accessed after being freed.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Implement proper locking mechanisms to prevent race conditions during USB device removal in the usb_disconnect function."}, {"cause": "The USB device structure might not be fully initialized before being used, leading to invalid memory access.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Add checks to ensure that the USB device structure is fully initialized before it is used in the usb_new_device function."}], "input_tokens": 745, "output_tokens": 283}
{"id": "2200", "paths": ["drivers/acpi/events/evgpeblk.c"], "predicts": ["drivers/acpi/events/evgpe.c", "drivers/acpi/hardware/hwgpe.c", "include/acpi/acpi.h", "arch/i386/kernel/acpi/boot.c", "arch/i386/kernel/acpi/sleep.c", "drivers/acpi/sleep/main.c", "drivers/acpi/power.c", "include/acpi/acglobal.h", "kernel/power/pm.c", "kernel/power/process.c"], "input_tokens_sum": 77038, "output_tokens_sum": 2108, "description": "Current ACPI implementation will enable a GPE if its corresponding _Lxx or \n_Exx method is found. But some GPEs the methods stand are wakeup GPEs. we \nshouldn't enable it before system enters sleep state.\nIn my P4 box, keyboard is such kind of devices. keyboard can generate 0x15 GPE \nto wakeup system, and DSDT has a method '_L15'. In 2.6.2, after boot, every \nhitting keyboard generates a SCI interrupt. if 0x15 is not enabled, keyboard \ndoesn't create SCI.", "title": "uncorrectly enabling GPEs", "Kernel Version": "2.6.2", "Product": "ACPI", "Component": "ACPICA-Core", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/acpica/evgpe.c", "drivers/acpi/acpica/hwgpe.c", "drivers/acpi/acpica/nsinit.c"], "causes": [{"cause": "The ACPI subsystem is enabling GPEs based solely on the presence of _Lxx or _Exx methods, without considering whether they are intended for wakeup purposes only.", "code_file": "drivers/acpi/acpica/evgpe.c", "fix_solution": "Modify the GPE enabling logic to check if the GPE is a wakeup GPE and defer enabling it until the system enters a sleep state."}, {"cause": "The ACPI GPE handling code does not differentiate between runtime and wakeup GPEs, leading to premature enabling of wakeup GPEs.", "code_file": "drivers/acpi/acpica/hwgpe.c", "fix_solution": "Introduce a mechanism to classify GPEs as wakeup or runtime and ensure wakeup GPEs are only enabled during sleep transitions."}, {"cause": "The ACPI initialization process does not correctly handle the distinction between GPEs that should be active during runtime and those that should only be active during sleep states.", "code_file": "drivers/acpi/acpica/nsinit.c", "fix_solution": "Adjust the initialization sequence to include checks for wakeup GPEs and prevent their activation until the system is preparing to enter a sleep state."}], "input_tokens": 483, "output_tokens": 286}
{"id": "1930", "paths": ["drivers/ide/ide-cd.c"], "predicts": ["drivers/ide/ide.c", "drivers/ide/ide-lib.c", "drivers/ide/ide-dma.c", "include/linux/ide.h", "drivers/scsi/ide-scsi.c", "fs/isofs/inode.c", "fs/isofs/util.c", "include/asm-i386/ide.h", "include/linux/fs.h", "init/do_mounts.c"], "input_tokens_sum": 80537, "output_tokens_sum": 1920, "description": "Distribution: Gentoo\n\nHardware Environment: \nAbit NF-7 (nforce2) Mobo, Athlon-XP 2500 (Barton), TDK Indi DVD+RW, Creative PC-DVD.\n\n################################################################################\n\nSoftware Environment: \nLinux gentoo 2.6.1 #3 Wed Jan 21 17:53:53 CST 2004 i686 AMD Athlon(tm) XP 2500+\nAuthenticAMD GNU/Linux\n \nGnu C                  3.2.3\nGnu make               3.80\nutil-linux             2.11z\nmount                  2.11z\nmodule-init-tools      0.9.15-pre4\ne2fsprogs              1.34\nnfs-utils              1.0.6\nLinux C Library        2.3.2\nDynamic linker (ldd)   2.3.2\nProcps                 3.1.12\nNet-tools              1.60\nKbd                    1.08\nSh-utils               5.0.91\nModules Loaded         nvnet nvidia\n################################################################################\n\nProblem Description:\nI've used growisofs (a mkisofs frontend) to write big (1.4 Gb) .avi's to my\nDVD+RW under both 2.4.xx and 2.6 kernels (atapi on the 2.6). Ho", "title": "2.6.1 fails to mount large iso9660 dvd discs with ATAPI drivers, succeeds with SCSI.", "Kernel Version": "2.6.1", "Product": "IO/Storage", "Component": "IDE", "Hardware": "i386 Linux", "reranked_files": ["drivers/ide/ide-cd.c", "drivers/ide/ide-disk.c", "drivers/ide/ide-probe.c", "fs/isofs/inode.c"], "causes": [{"cause": "The ATAPI driver may not handle large ISO9660 file systems correctly due to incorrect block size handling.", "code_file": "drivers/ide/ide-cd.c", "fix_solution": "Ensure that the block size is correctly set for large ISO9660 file systems by adjusting the logic in the block size determination code."}, {"cause": "The IDE driver might not properly support multi-session or large file systems on DVD media.", "code_file": "drivers/ide/ide-disk.c", "fix_solution": "Add support for multi-session handling and ensure that the driver can correctly interpret large file systems on DVD media."}, {"cause": "There could be an issue with the way the IDE driver handles DVD+RW media, leading to incorrect media type detection.", "code_file": "drivers/ide/ide-probe.c", "fix_solution": "Update the media detection logic to correctly identify and handle DVD+RW media, ensuring compatibility with large ISO9660 file systems."}, {"cause": "The ISO9660 file system code might not be optimized for handling large file systems when accessed via the IDE interface.", "code_file": "fs/isofs/inode.c", "fix_solution": "Optimize the file system code to better handle large ISO9660 file systems, especially when accessed through the IDE interface."}], "input_tokens": 667, "output_tokens": 305}
{"id": "1865", "paths": ["drivers/usb/host/uhci-hcd.c"], "predicts": ["drivers/usb/host/uhci-hcd.c", "drivers/usb/host/ehci-hcd.c", "drivers/usb/input/hid-core.c", "drivers/usb/core/hcd.c", "drivers/usb/core/usb.c", "kernel/module.c", "mm/init.c", "kernel/exit.c", "kernel/panic.c"], "input_tokens_sum": 80118, "output_tokens_sum": 1760, "description": "Distribution: Gentoo Linux\nHardware Environment: AMD Athlon XP 2200+ on Via KT400 based board, 1GB Memory\nSoftware Environment: Gentoo Linux 1.4, Kernel 2.6 (and 2.6.1)\nProblem Description: \n\nThe driver responsible for my Logitech USB Mouse (uhci/ehci-hcd or hid) crashes\nand prevents the mouse from working any more. While the mouse's internal LED\nstays lit, it's impossible to unload and reload any module any more, so only a\nreboot solves the problem.\n\nReboot itself does not complete because it freezes when unloading other modules,\nlike Alsa. Any attempt to rmmod hid even with \"the force\" results in another\nuseless shell. Force module unload is enabled in Kernel.\n\nThe problem occured with both Kernel 2.6.0 and 2.6.1. I have not yet figured\nout, what really provokes the crash, but it will occur sometime after system\nstart. Shortest period was 30 minutes, longest 90 minutes.\n\nSteps to reproduce:\n- Start system\n- Wait.\n\nThis are example outputs of /var/log/messages at module crash time:\n\nJ", "title": "uhci-hcd or hid modules stops working blocking usb mouse and module unloading", "Kernel Version": "2.6.1", "Product": "Drivers", "Component": "USB", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/core/hub.c", "drivers/usb/core/usb.c", "drivers/usb/core/driver.c", "drivers/hid/hid-core.c", "drivers/usb/host/uhci-hcd.c"], "causes": [{"cause": "Improper handling of USB device disconnection leading to resource lock.", "code_file": "drivers/usb/core/hub.c", "fix_solution": "Ensure proper cleanup and release of resources when a USB device is disconnected."}, {"cause": "Deadlock in the USB subsystem when attempting to unload modules.", "code_file": "drivers/usb/core/usb.c", "fix_solution": "Review and correct locking mechanisms to prevent deadlocks during module unload operations."}, {"cause": "Incorrect reference counting for USB devices causing inability to unload modules.", "code_file": "drivers/usb/core/driver.c", "fix_solution": "Fix reference counting logic to ensure modules can be unloaded correctly."}, {"cause": "Race condition in the HID driver leading to inconsistent state.", "code_file": "drivers/hid/hid-core.c", "fix_solution": "Implement proper synchronization mechanisms to handle concurrent access to HID devices."}, {"cause": "Faulty interaction between UHCI and EHCI drivers causing resource conflicts.", "code_file": "drivers/usb/host/uhci-hcd.c", "fix_solution": "Review and adjust resource allocation and management between UHCI and EHCI drivers."}], "input_tokens": 613, "output_tokens": 285}
{"id": "1822", "paths": ["drivers/usb/storage/transport.c"], "predicts": ["drivers/usb/storage/usb.c", "drivers/usb/storage/scsiglue.c", "drivers/usb/storage/transport.c", "drivers/usb/core/usb.c", "drivers/usb/core/config.c", "include/scsi/scsi.h", "include/scsi/scsi_device.h", "include/scsi/scsi_host.h", "include/scsi/scsi_request.h", "include/scsi/scsi_driver.h"], "input_tokens_sum": 80759, "output_tokens_sum": 1621, "description": "I get this, while plugin my FinePix2400Zom camera to me USB port (it does work\nwith the 2.4 kernel series):\n\nInitializing USB Mass Storage driver...\nscsi0 : SCSI emulation for USB Mass Storage devices\n  Vendor: Fujifilm  Model: FinePix 1400Zoom  Rev: 1000\n  Type:   Direct-Access                      ANSI SCSI revision: 02\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\nsda : READ CAPACITY failed.\nsda : status=0, message=00, host=7, driver=00\nsda : sense not available.\nsda: assuming Write Enabled\nsda: assuming drive cache: write through\n /dev/scsi/host0/bus0/target0/lun0:<3>Buffer I/O error on device sda, logical\nblock 0\nBuffer I/O error on device sda, logical block 0\n unable to read partition table\n", "title": "usb-storage borks out with my camera", "Kernel Version": "2.6.1", "Product": "IO/Storage", "Component": "SCSI", "Hardware": "i386 Linux", "reranked_files": ["drivers/usb/storage/transport.c", "drivers/scsi/scsi_lib.c", "drivers/usb/storage/usb.c", "drivers/scsi/sd.c"], "causes": [{"cause": "The USB Mass Storage driver is not correctly handling the READ CAPACITY command for the camera, leading to failures in detecting the storage capacity.", "code_file": "drivers/usb/storage/transport.c", "fix_solution": "Modify the handling of the READ CAPACITY command to correctly interpret the response from devices that do not fully comply with the SCSI standard."}, {"cause": "The SCSI layer is not properly interpreting the status and message codes returned by the USB Mass Storage device, resulting in incorrect assumptions about the device state.", "code_file": "drivers/scsi/scsi_lib.c", "fix_solution": "Enhance the error handling logic to better interpret non-standard responses from USB Mass Storage devices, ensuring that the device state is accurately determined."}, {"cause": "The USB Mass Storage driver is not correctly initializing or resetting the device, leading to communication issues.", "code_file": "drivers/usb/storage/usb.c", "fix_solution": "Implement additional initialization or reset sequences for devices that fail to respond correctly to standard commands, ensuring proper communication setup."}, {"cause": "The device is not being correctly recognized as a writable device, leading to incorrect assumptions about its capabilities.", "code_file": "drivers/scsi/sd.c", "fix_solution": "Adjust the logic that determines device write capabilities to account for devices that do not report their status in a standard manner."}], "input_tokens": 654, "output_tokens": 317}
{"id": "1696", "paths": ["arch/i386/kernel/cpu/cpufreq/acpi.c"], "predicts": ["arch/i386/kernel/cpu/cpufreq/speedstep-centrino.c", "drivers/acpi/processor.c", "drivers/cpufreq/cpufreq.c", "drivers/acpi/power.c", "include/acpi/processor.h", "arch/i386/kernel/acpi/boot.c"], "input_tokens_sum": 80979, "output_tokens_sum": 1904, "description": "I used to use /proc/acpi/processor/.../performance to set Centrino's 5 \nperformance states via userspace daemon. \n \nNow in linux 2.6.0, I configured the kernel ACPI to include \"processor\" and I \nconfigured SpeedStep to support the \"deprecated\" acpi performance interface as \nwell as anything else I think I have to turn on for cpufreq. \nBut after booting 2.6, I have /proc/acpi/processor/.../ but without \n\"performance\" in it. \"info\" says  \n+----- \n| processor id:            0 \n| acpi id:                 0 \n| bus mastering control:   yes \n| power management:        yes \n| throttling control:      no \n| performance management:  no \n| limit interface:         yes \n+----- \n \nSo it seems like \"performance\" is not supported even if I select it in kernel \nconfig. \n \nAdditionally, I do not find anything cpufreq-related in /sys/.  \n \ndmesg|grep \"cpufreq\" says: \n+----- \n| cpufreq: No CPUs supporting ACPI performance management found. \n+----- \n \nIn 2.4, everything is fine...", "title": "Centrino's Speedstep is not detected correctly", "Kernel Version": "2.6.0", "Product": "ACPI", "Component": "Power-Processor", "Hardware": "i386 Linux", "reranked_files": ["drivers/acpi/processor_perflib.c", "drivers/cpufreq/cpufreq.c", "arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.c", "drivers/acpi/processor_driver.c"], "causes": [{"cause": "The ACPI performance management interface is not correctly initialized or detected in the kernel configuration.", "code_file": "drivers/acpi/processor_perflib.c", "fix_solution": "Ensure that the ACPI performance management interface is properly initialized by checking the ACPI tables and enabling the performance states if available. Modify the initialization code to correctly detect and enable the performance management interface."}, {"cause": "The cpufreq subsystem is not properly linked with the ACPI performance management interface, leading to a failure in detecting supported CPUs.", "code_file": "drivers/cpufreq/cpufreq.c", "fix_solution": "Update the cpufreq initialization code to ensure it correctly interfaces with the ACPI performance management subsystem. This may involve adding checks or hooks to ensure compatibility with the ACPI interface."}, {"cause": "The kernel configuration options for ACPI and cpufreq are not correctly set, leading to missing performance management features.", "code_file": "arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.c", "fix_solution": "Review and update the kernel configuration options to ensure that all necessary options for ACPI and cpufreq are enabled. This may involve modifying the Kconfig files to ensure dependencies are correctly handled."}, {"cause": "The deprecated ACPI performance interface is not being correctly supported in the new kernel version.", "code_file": "drivers/acpi/processor_driver.c", "fix_solution": "Add support for the deprecated ACPI performance interface by ensuring backward compatibility in the processor driver code. This may involve adding legacy support code paths or compatibility layers."}], "input_tokens": 618, "output_tokens": 365}
{"id": "1321", "paths": ["drivers/net/8139cp.c"], "predicts": ["drivers/net/8139cp.c", "drivers/net/8139too.c", "net/core/dev.c", "net/ethernet/eth.c", "kernel/sched.c", "arch/i386/kernel/irq.c", "scripts/kconfig/mconf.c", "scripts/kconfig/menu.c", "mm/memory.c", "init/main.c"], "input_tokens_sum": 80422, "output_tokens_sum": 1729, "description": "Distribution: Red Hat 9.0 (both local and remote computers)\nHardware Environment:\nLocal: Athlon, ATI+ALi combo, 512 MB RAM, IDE HDD, RTL 8139 C+ (8139cp) Fast\nEthernet card\nRemote: Athlon, ALi, 512 MB RAN, IDE HDD, DEC Tulip Ethernet card\nSoftware Environment:\nLocal: 2.6.0-test6 (vesa driver for XFree86, KDE/Konsole)\nRemote: 2.4.23-pre6\nProblem Description: Kernel hangs while executing \"make menuconfig\" from a\nremote computer.\n\nSteps to reproduce:\n1. Consider 2 computers: laptop (local), desktop (remote)\n2. From laptop computer under KDE's Konsole ssh to desktop\n3. Execute make menuconfig (2.4.23-pre6 source tree in my case) on the remote\ncomputer.\n4. Exit and restart it few times (in my case it hangs within a dozen attempts)\n5. The local computer hangs. Remote computer is fine.\n\nIt doesn't happen if I try the same from Console terminals. And it doesn't\nhappen under 2.4.23-pre6 on the same local computer.\n\nThanks\nSrihari\nharisri@bigpond.com", "title": "[8139cp?] 2.6.0-test6 hangs while executing \"make menuconfig\" on a remote computer", "Kernel Version": "2.6.0", "Product": "Drivers", "Component": "Network", "Hardware": "i386 Linux", "reranked_files": ["drivers/net/ethernet/realtek/8139cp.c", "net/core/dev.c", "drivers/video/vesafb.c", "drivers/tty/tty_io.c"], "causes": [{"cause": "The 8139cp driver may have a race condition or improper handling of network packets when used in conjunction with the KDE Konsole over SSH, leading to a hang.", "code_file": "drivers/net/ethernet/realtek/8139cp.c", "fix_solution": "Review and add proper locking mechanisms around critical sections in the 8139cp driver to prevent race conditions."}, {"cause": "The network stack in the 2.6.0 kernel may have issues with handling certain network operations over SSH, causing a deadlock.", "code_file": "net/core/dev.c", "fix_solution": "Ensure that the network stack properly handles concurrent network operations by adding checks and balances to prevent deadlocks."}, {"cause": "The interaction between the VESA driver and the network stack might be causing resource contention, leading to a hang.", "code_file": "drivers/video/vesafb.c", "fix_solution": "Investigate and optimize resource allocation and usage between the VESA driver and network operations to prevent contention."}, {"cause": "The kernel's handling of terminal I/O over SSH in the presence of network driver issues might be flawed, causing a hang.", "code_file": "drivers/tty/tty_io.c", "fix_solution": "Improve the robustness of terminal I/O operations over network connections by adding error handling and recovery mechanisms."}], "input_tokens": 641, "output_tokens": 314}
{"id": "933", "paths": ["net/ipv4/netfilter/ip_nat_helper.c"], "predicts": ["net/ipv4/netfilter/ip_conntrack_ftp.c", "net/ipv4/netfilter/ip_nat_ftp.c", "include/linux/netfilter_ipv4/ip_conntrack_ftp.h", "include/linux/netfilter_ipv4/ip_nat.h", "include/linux/netfilter_ipv4/ip_nat_core.h"], "input_tokens_sum": 77257, "output_tokens_sum": 1507, "description": "Distribution: Red Hat 9\nHardware Environment: \nSoftware Environment: gcc-3.3\nProblem Description:\n\nBoth IP masquerading and SNAT do not work with FTP. When I issue dir command,\nftp connection gets stuck. In ethernet sniffer I see a lot of TCP ack packets\ngoing in both directions. Both FTP client and server are Win2k boxes. \n\nSteps to reproduce:\n\nSetup a NAT box\nmodprobe ip_nat_ftp\nmodprobe ip_conntrack_ftp\niptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE (assuming eth0 is an\nexternal interface)\n\nTry ftp connection.\n\nThis setup works fine with RedHat kernel 2.4.20-18.9.", "title": "FTP NAT doesn't work in 2.6.0-test1", "Kernel Version": "2.5.75", "Product": "Networking", "Component": "Netfilter/Iptables", "Hardware": "i386 Linux", "reranked_files": ["net/ipv4/netfilter/ip_nat_ftp.c", "net/ipv4/netfilter/ip_conntrack_core.c", "net/ipv4/netfilter/ip_tables.c"], "causes": [{"cause": "The FTP NAT helper modules ip_nat_ftp and ip_conntrack_ftp may not be correctly handling the FTP control and data connections, leading to the connection getting stuck.", "code_file": "net/ipv4/netfilter/ip_nat_ftp.c", "fix_solution": "Ensure that the helper modules correctly track and modify the FTP control and data connections, possibly by updating the connection tracking logic to handle new FTP commands or responses."}, {"cause": "Changes in the connection tracking mechanism between kernel versions may have introduced a regression affecting FTP traffic handling.", "code_file": "net/ipv4/netfilter/ip_conntrack_core.c", "fix_solution": "Review and update the connection tracking logic to ensure it correctly identifies and processes FTP connections, including handling of passive and active modes."}, {"cause": "The iptables rules for NAT may not be correctly applied or interpreted due to changes in the netfilter framework.", "code_file": "net/ipv4/netfilter/ip_tables.c", "fix_solution": "Verify and adjust the iptables rule processing to ensure that NAT rules are correctly applied, especially for FTP traffic, by checking the rule matching and application logic."}], "input_tokens": 517, "output_tokens": 266}
{"id": "640", "paths": ["arch/i386/mm/fault.c"], "predicts": ["mm/swapfile.c", "arch/i386/mm/init.c", "drivers/base/init.c", "init/main.c", "include/linux/swapops.h"], "input_tokens_sum": 74824, "output_tokens_sum": 1352, "description": "Distribution: RH 7.3\nHardware Environment: 8-way pIII-700\nSoftware Environment:\nProblem Description:\nOn boot, the boot stops progressing at \"Activating swap\"  The machine is not\ncompletely hung (magic sysrq works) but is useless of course.  I tried this with\n2.5.68-vanilla and it does not have the same problem, but mjb1 and mjb2 do have\nthe problem.\n\nSteps to reproduce:\nHere's what I suspect it is having problems with:\n(exerpt from /etc/fstab)\n/dev/sda5               swap                    swap    defaults        0 0\n/dev/sda6               swap                    swap    defaults        0 0\n/dev/sda7               swap                    swap    defaults        0 0\n/dev/sda8               swap                    swap    defaults        0 0\n/dev/sda9               swap                    swap    defaults        0 0\n/dev/sda10              swap                    swap    defaults        0 0\n/dev/sda11              swap                    swap    defaults        0 0\n/dev/sda12          ", "title": "2.5.68-mjb2 stops at activating swap", "Kernel Version": "2.5.68", "Product": "Alternate Trees", "Component": "mjb", "Hardware": "i386 Linux", "reranked_files": ["mm/swapfile.c", "kernel/sched.c", "mm/page_alloc.c", "block/blk-core.c"], "causes": [{"cause": "The mjb patch series may have introduced a regression in the swap activation code, possibly related to handling multiple swap partitions.", "code_file": "mm/swapfile.c", "fix_solution": "Review and adjust the logic in the swap activation code to ensure it correctly handles multiple swap partitions without hanging."}, {"cause": "A potential deadlock or race condition introduced by the mjb patch series during swap activation.", "code_file": "kernel/sched.c", "fix_solution": "Investigate and resolve any race conditions or deadlocks in the scheduling code that could affect swap activation."}, {"cause": "Improper handling of swap partition initialization in the mjb patch series, possibly due to changes in memory management.", "code_file": "mm/page_alloc.c", "fix_solution": "Ensure that memory allocation and initialization for swap partitions are correctly handled without causing a hang."}, {"cause": "Changes in the mjb patch series affecting block device handling, leading to issues with swap partition activation.", "code_file": "block/blk-core.c", "fix_solution": "Verify and correct any modifications in block device handling that could interfere with swap partition activation."}], "input_tokens": 597, "output_tokens": 272}
{"id": "583", "paths": ["fs/coda/psdev.c"], "predicts": ["fs/coda/coda_linux.c", "include/linux/coda.h", "include/linux/devfs_fs_kernel.h", "init/do_mounts_devfs.c", "lib/vsprintf.c", "fs/coda/sysctl.c", "fs/coda/file.c", "kernel/panic.c", "fs/coda/cache.c", "fs/coda/pioctl.c"], "input_tokens_sum": 76129, "output_tokens_sum": 1444, "description": "Distribution: Gentoo 1.4_rc \nHardware Environment: Micron Millenia Transport, P133 (i586) \nSoftware Environment: i586-pc-linux-gnu, posix threads, gcc 3.2.2 \nProblem Description: Compiling Devfs into kernel is fine. Compiling Coda into kernel is fine. \nCompiling Devfs and Coda together is not fine, causes a kernel panic. \n \nSorry, I don't have a console - here is what I can see of the error: \n \nCPU:     0 \nEIP:     0060:[<C020605F>]    Not tainted \nEFLAGS: 00010202 \nEIP is at vsnprintf+0x2f/0x460 \neax: c2fd3f43    ebx: c2fd3f44   ecx: c040776c   edx: 00000000 \nesi: c2fd3f44    edi: 00000000   ebp: c2fd3f24    esp: c2fd3f0c \nds: 007b    es: 007b    ss: 0068 \nProcess swapper (pid: 1, threadinfo=c2fd2000 task c2fd0040) \nStack: 000001f0 c2fd3f2c c2fd3f83 c2fd3f44 c2fd3fa0 00000000 c2fd3f8c c01a4a62 \n          c2fd3f44 00000040 00000000 c2fd3f98 c01360d1 00000000 00000246 00000043 \n          00000001 00000000 c2fd3f70 c0150e47 00000018 000000d0 00000000 00000001 \n \n[<c01a4a62>] devfs_mk_dir", "title": "Enabling Coda with Devfs causes Kernel Panic", "Kernel Version": "2.5.67", "Product": "File System", "Component": "Other", "Hardware": "i386 Linux", "reranked_files": ["fs/coda/coda_fs.c", "lib/vsprintf.c", "fs/devfs/base.c"], "causes": [{"cause": "The kernel panic occurs due to a conflict between Devfs and Coda when both are compiled into the kernel, possibly due to improper handling of device nodes or directories.", "code_file": "fs/coda/coda_fs.c", "fix_solution": "Ensure proper synchronization and error handling when creating or accessing device nodes in Coda when Devfs is enabled."}, {"cause": "The vsnprintf function is being called with invalid parameters or buffer overflow, leading to a kernel panic when both Devfs and Coda are enabled.", "code_file": "lib/vsprintf.c", "fix_solution": "Add checks to ensure that the parameters passed to vsnprintf are valid and prevent buffer overflow by validating buffer sizes."}, {"cause": "The devfs_mk_dir function is not handling errors correctly when creating directories for Coda, leading to a kernel panic.", "code_file": "fs/devfs/base.c", "fix_solution": "Improve error handling in devfs_mk_dir to ensure that directory creation failures are properly managed and do not lead to a kernel panic."}], "input_tokens": 769, "output_tokens": 246}
